{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":54,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":11,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":85,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":36,"com.graphhopper.reader.PrinctonReaderTest.testRead":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":17,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":82,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":88,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":91,"com.graphhopper.reader.OSMReaderTest.testFoot":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":86,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":98,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":75,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":34,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":59,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":48,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":106,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":51,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":37,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":81,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":96,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":84,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":103,"com.graphhopper.GraphHopperAPITest.testLoad":72,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":69,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":99},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"475e8781-7950-11e5-9a9a-0f2abb44f074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,73,74,75,5,76,77,78,79,80,81,82,83,14,84,85,86,87,88,89,90,91,92,23,93,94,95,96,97,98,99,100,101,32,102,103,104,105,106,107],"tindex":"475eae92-7950-11e5-9a9a-cb5b9fe974f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"475eae93-7950-11e5-9a9a-8b578fb77d46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:542","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"))"},"status":0},{"failures":[108],"tindex":"475eae94-7950-11e5-9a9a-8ddf061b7e55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:91","type":"CtIfImpl","sourcecode":"if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"475ed5a5-7950-11e5-9a9a-5fd3c114fe29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:315","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"475ed5a6-7950-11e5-9a9a-ad247647a32a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"475ed5a7-7950-11e5-9a9a-eb9303663282","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Node: \")"},"variableMap":{"txt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:123","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-2},{"failures":[],"tindex":"475ed5a8-7950-11e5-9a9a-a9760ecedfc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:85","type":"CtReturnImpl","sourcecode":"return java.lang.Long.parseLong(java.lang.String)"},"status":-2},{"failures":[],"tindex":"475ed5a9-7950-11e5-9a9a-1b2abefdf75b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean)"},"variableMap":{"tmpCalcPoints":"tmpCalcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean)"},"status":-2},{"failures":[],"tindex":"475ed5aa-7950-11e5-9a9a-1992bda455f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:555","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"yes\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"475efcbb-7950-11e5-9a9a-2ded05cac385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:281","type":"CtIfImpl","sourcecode":"if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"475efcbc-7950-11e5-9a9a-3b8c9bbcfd0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:338","type":"CtAssignmentImpl","sourcecode":"byte[][] = java.util.Arrays.copyOf(byte[][], int)"},"status":-2},{"failures":[],"tindex":"475efcbd-7950-11e5-9a9a-c145c8e0c0be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"status":-2},{"failures":[],"tindex":"475efcbe-7950-11e5-9a9a-132a0fbf8cae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"variableMap":{"sb":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"status":-2},{"failures":[],"tindex":"475efcbf-7950-11e5-9a9a-e1097b0ed701","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:66","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"variableMap":{"lat1":"toLat","lat2":"toLat","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"status":-2},{"failures":[],"tindex":"475efcc0-7950-11e5-9a9a-a9196f6b9c60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"475f23d1-7950-11e5-9a9a-dff55061bf2f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:250","type":"CtIfImpl","sourcecode":"if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n    int = int;\n    int = int + 1;\n} else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n    int = int;\n    int = int + (int);\n} "},"status":-2},{"failures":[],"tindex":"475f23d2-7950-11e5-9a9a-e7c853c5b885","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:394","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[],"tindex":"475f23d3-7950-11e5-9a9a-d1008e6c0e88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"use_sidepath\"))) || (\"parking_aisle\".equals(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"yes\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.REACH_DEST","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","pushingSections":"intendedValues","service":"highway","highway":"highway","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:532","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    if (double < (int)) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else {\n    if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"475f23d4-7950-11e5-9a9a-a71d285c0d1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:366","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}