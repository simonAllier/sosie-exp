{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":61,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":12,"com.graphhopper.GraphHopperAPITest.testNoLoad":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":47,"com.graphhopper.reader.OSMReaderTest.testFerry":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":103,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":130,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":18,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":94,"com.graphhopper.reader.OSMReaderTest.testWithBounds":125,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":13,"com.graphhopper.storage.MMapDataAccessTest.testSegments":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":109,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":87,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":144,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":29,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":128,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":77,"com.graphhopper.GraphHopperTest.testPrepare":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":78,"com.graphhopper.search.NameIndexTest.testFlush":1,"com.graphhopper.reader.OSMReaderTest.testFoot":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":143,"com.graphhopper.reader.OSMReaderTest.testOneWay":127,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":142,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":54,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":97,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":96,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":137,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":31,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":141,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":89,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":81,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":26,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":112,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":73,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":72,"com.graphhopper.reader.OSMReaderTest.testSort":118,"com.graphhopper.storage.RAMDataAccessTest.testSegments":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":88,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":124,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":59,"com.graphhopper.reader.OSMReaderTest.testMain":117,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":79,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":45,"com.graphhopper.storage.MMapDataAccessTest.testHeader":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":145,"com.graphhopper.storage.MMapDataAccessTest.testCopy":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":40,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":80,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":101,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":83,"com.graphhopper.util.SimpleIntDequeTest.testPush":0,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":100,"com.graphhopper.storage.StorablePropertiesTest.testStore":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":75,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":93,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":10,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":8,"com.graphhopper.GraphHopperTest.testFootAndCar":134,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":149,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":111,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":99,"com.graphhopper.GraphHopperTest.testPrepareOnly":129,"com.graphhopper.GraphHopperTest.testVia":131,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":84,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":95,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":123,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":135,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":7,"com.graphhopper.GraphHopperTest.testFootOnly":138,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":86,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":122,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":38,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":147,"com.graphhopper.reader.OSMReaderTest.testBarriers":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":71,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":98},"transformations":[{"failures":[],"tindex":"de8cf94e-82aa-11e5-a8bc-fd21dcac5b4c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName()"},"status":-2},{"failures":[0],"tindex":"de8d205f-82aa-11e5-a8bc-33c7352803ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:97","type":"CtIfImpl","sourcecode":"if ((int) >= (int[].int)) {\n    int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))));\n} "},"status":-1},{"failures":[],"tindex":"de8d2060-82aa-11e5-a8bc-5b823b105bd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"de8d2061-82aa-11e5-a8bc-95187d1134ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:195","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"de8d4772-82aa-11e5-a8bc-d37ee8ef5538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":0},{"failures":[],"tindex":"de8d4773-82aa-11e5-a8bc-630efc770fc5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"status":-2},{"failures":[],"tindex":"de8d4774-82aa-11e5-a8bc-a1329c8ddabb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:135","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-2},{"failures":[17,18,19,4,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,14,43,44,45,15,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,16,83,84],"tindex":"de8d4775-82aa-11e5-a8bc-d5618a02c118","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:197","type":"CtIfImpl","sourcecode":"if (java.nio.ByteBuffer == null) {\n    if (java.io.IOException == null) {\n        throw new java.lang.AssertionError(\"internal problem as the exception \\'ioex\\' shouldn\\'t be null\");\n    } \n    throw java.io.IOException;\n} "},"variableMap":{"buf":"buf","ioex":"ioex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:175","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1 ; ) {\n    try {\n        java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n        break;\n    } catch (java.io.IOException tmpex) {\n        java.io.IOException = java.io.IOException;\n        int++;\n        com.graphhopper.util.Helper.cleanHack();\n        try {\n            java.lang.Thread.sleep(5);\n        } catch (java.lang.InterruptedException iex) {\n        }\n    }\n}"},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,48,57,58,60,64,65,72,73,106,107,108,109,110,111,112,113],"tindex":"de8d6e86-82aa-11e5-a8bc-4bb2f23a0fa6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"guess","newSize":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:402","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"de8d6e87-82aa-11e5-a8bc-ada901fb86fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[114],"tindex":"de8d6e88-82aa-11e5-a8bc-b568a00ccf50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"allSegments","to":"allSegments","lonSize":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:274","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[115,116,117,118,119,120,17,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,2,136,137,3,138,139,140],"tindex":"de8d9599-82aa-11e5-a8bc-df5725b2497c","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:770","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n    return false;\n"},"variableMap":{"ghStorage":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.StorableProperties.loadExisting()) {\n    com.graphhopper.storage.StorableProperties.checkVersions(false);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\");\n    if ((com.graphhopper.routing.util.EncodingManager) == null) {\n        if (java.lang.String.isEmpty())\n            throw new java.lang.IllegalStateException((\"No EncodingManager was configured. And no one was found in the graph: \" + (com.graphhopper.storage.Directory.getLocation())));\n        \n        int int = 4;\n        if (\"8\".equals(com.graphhopper.storage.StorableProperties.get(\"graph.bytesForFlags\")))\n            int = 8;\n        \n        com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int);\n    } else if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n        throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n    } \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\");\n    if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.Directory.getByteOrder())))))\n        throw new java.lang.IllegalStateException(((((\"Configured byteOrder (\" + java.lang.String) + \") is not equal to byteOrder of loaded graph (\") + (com.graphhopper.storage.Directory.getByteOrder())) + \")\"));\n    \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\");\n    com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\");\n    java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString();\n    if (!(java.lang.String.equals(java.lang.String)))\n        throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n    \n    for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n        if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n            throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n        \n    }\n    return true;\n} "},"status":-1},{"failures":[136],"tindex":"de8d959a-82aa-11e5-a8bc-35dbea1fdd27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(((\"Option \\'\" + java.lang.String) + \"\\' must NOT be null\"))"},"variableMap":{"optionName":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:666","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"))"},"status":-1},{"failures":[],"tindex":"de8dbcab-82aa-11e5-a8bc-458c5e24ecd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:66","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Value cannot be null. Use remove instead.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Found existing DataAccess object \\'\" + java.lang.String) + \"\\' but types did not match. Requested:\") + com.graphhopper.storage.DAType) + \", was:\") + (com.graphhopper.storage.DataAccess.getType())))"},"status":0},{"failures":[],"tindex":"de8dbcac-82aa-11e5-a8bc-d993a32eada4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"edgeTo","segmentSizeIntsPower":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"de8dbcad-82aa-11e5-a8bc-09312058ea17","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:77","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"calcMean":"updatedInGraph","eleCalcMean":"updatedInGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:684","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[141,142,143,144],"tindex":"de8de3be-82aa-11e5-a8bc-ebc93dd2f800","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n        return long;\n    \n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[145,146,147,148,149,150],"tindex":"de8de3bf-82aa-11e5-a8bc-13d07e481093","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"exitNumber","retBucket":"exitNumber","i":"exitNumber","bucketSize":"exitNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"status":-1},{"failures":[140,151],"tindex":"de8de3c0-82aa-11e5-a8bc-798f951a656d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:945","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.GraphHopperStorage) == null) || (!(boolean)))\n    throw new java.lang.IllegalStateException(\"Call load or importOrLoad before routing\");\n"},"status":-1},{"failures":[],"tindex":"de8de3c1-82aa-11e5-a8bc-695dc993709f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:56","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"de8d4772-82aa-11e5-a8bc-d37ee8ef5538","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"de8dbcab-82aa-11e5-a8bc-458c5e24ecd4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getType"]},"type":"staticDiff"}]}]}