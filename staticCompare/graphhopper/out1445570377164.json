{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":305,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":46,"com.graphhopper.reader.OSMReaderTest.testFerry":227,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":217,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":218,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":269,"com.graphhopper.routing.QueryGraphTest.testOneWay":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":10,"com.graphhopper.reader.OSMReaderTest.testWithBounds":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":258,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":259,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":315,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":28,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":193,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":323,"com.graphhopper.GraphHopperTest.testPrepare":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":304,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":108,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":311,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":287,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":140,"com.graphhopper.util.InstructionListTest.testWayList":214,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":296,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":166,"com.graphhopper.GraphHopperAPITest.testDisconnected179":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":263,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":207,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":288,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":11,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":242,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":253,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":245,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":203,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":326,"com.graphhopper.GraphHopperTest.testLoadOSM":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":324,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":12,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":132,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":155,"com.graphhopper.reader.OSMReaderTest.testSort":230,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":299,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":172,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":320,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":66,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":309,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":243,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":244,"com.graphhopper.routing.PathTest.testWayList":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":9,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":169,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":74,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":42,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":192,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":301,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":252,"com.graphhopper.util.GHUtilityTest.testSort":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":16,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":102,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":111,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":57,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":186,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":64,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":65,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":78,"com.graphhopper.GraphHopperAPITest.testLoad":327,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":205,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":308,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":152,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":231,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":264,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":173,"com.graphhopper.routing.PathTest.testFound":246,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":25,"com.graphhopper.util.GHUtilityTest.testCopy":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":292,"com.graphhopper.routing.PathTest.testFindInstruction":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":69,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":80,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":61,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":117,"com.graphhopper.util.InstructionListTest.testEmptyList":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":295,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":45,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":95,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":127,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":317,"com.graphhopper.reader.PrinctonReaderTest.testRead":241,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":151,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":159,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":180,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":7,"com.graphhopper.util.InstructionListTest.testWayList2":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":34,"com.graphhopper.reader.OSMReaderTest.testFoot":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":17,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":190,"com.graphhopper.reader.OSMReaderTest.testOneWay":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":100,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":266,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":161,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":79,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":50,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":116,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":232,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":58,"com.graphhopper.routing.PathBidirRefTest.testExtract":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":314,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":200,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":224,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":198,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":197,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":24,"com.graphhopper.util.GHUtilityTest.testSort2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":302,"com.graphhopper.reader.OSMReaderTest.testMain":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":187,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":149,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":4,"com.graphhopper.routing.PathBidirRefTest.testExtract2":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":43,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":91,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":1,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":13,"com.graphhopper.storage.GraphHopperStorageTest.testClone":112,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":144,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":179,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":122,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":129,"com.graphhopper.GraphHopperTest.testFootAndCar":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":154,"com.graphhopper.routing.PathTest.testTime":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":178,"com.graphhopper.util.GHUtilityTest.testSortDirected":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":168,"com.graphhopper.GraphHopperTest.testPrepareOnly":194,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":48,"com.graphhopper.GraphHopperTest.testVia":201,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":297,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":150,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":274,"com.graphhopper.GraphHopperTest.testFootOnly":209,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":33,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":35,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":167,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":248,"com.graphhopper.util.InstructionListTest.testFind":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":158},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"e3cd9725-7934-11e5-9968-6f570c488ace","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:91","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"intVal":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[],"tindex":"e3cdbe36-7934-11e5-9968-51c903953c49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize((((int) * (int)) * 4))"},"status":-2},{"failures":[],"tindex":"e3cdbe37-7934-11e5-9968-4bb0a20fac4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:343","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return ;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    if (java.lang.Double.isInfinite(double)) {\n        java.lang.System.java.io.PrintStream.println((\"infinity distance? for way:\" + (com.graphhopper.reader.OSMWay.getId())));\n        return ;\n    } \n    if (double < 1)\n        return ;\n    \n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"e3cde548-7934-11e5-9968-03a133099394","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"e3cde549-7934-11e5-9968-737f38cbc547","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.poll()"},"status":-2},{"failures":[],"tindex":"e3cde54a-7934-11e5-9968-8b2e8c7e1d05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"variableMap":{"val":"dim","existing":"dim","key":"dim"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:273","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String)"},"status":-2},{"failures":[],"tindex":"e3cde54b-7934-11e5-9968-55c60d4ced2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int)"},"status":-2},{"failures":[],"tindex":"e3cde54c-7934-11e5-9968-179896caed35","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:218","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"e3cde54d-7934-11e5-9968-5daeb19d0fc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:504","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"e3cde54e-7934-11e5-9968-8fa6a3777e14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getDebugInfo\")"},"status":-2},{"failures":[],"tindex":"e3cde54f-7934-11e5-9968-d59013891273","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:461","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"e3ce0c60-7934-11e5-9968-e3ddf0386c11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:120","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"status":-2},{"failures":[],"tindex":"e3ce0c61-7934-11e5-9968-599f8b9e21d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:354","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"e3ce0c62-7934-11e5-9968-cd904c3d2ce2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"forwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:716","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"e3ce0c63-7934-11e5-9968-ef4ea310b1ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"r"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-2},{"failures":[],"tindex":"e3ce0c64-7934-11e5-9968-1923dff11bd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"location","location":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"status":-2},{"failures":[],"tindex":"e3ce0c65-7934-11e5-9968-a96f2f97217a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"variableMap":{"prepareAlgo":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"e3ce0c66-7934-11e5-9968-2b2f1dade3cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:376","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"e3ce3377-7934-11e5-9968-c5ea5bc68242","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"bitsForEdgeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"e3ce3378-7934-11e5-9968-ebc6beb36293","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"lazyTime","lat":"lazyTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:291","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}