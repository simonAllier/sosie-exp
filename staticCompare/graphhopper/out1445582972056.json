{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":206,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":85,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.reader.OSMReaderTest.testFerry":359,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":343,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":344,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":240,"com.graphhopper.routing.QueryGraphTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":304,"com.graphhopper.reader.OSMReaderTest.testWithBounds":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":118,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":212,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":211,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":285,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":326,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":223,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":48,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":170,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":67,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":185,"com.graphhopper.util.InstructionListTest.testWayList":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":76,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":327,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":253,"com.graphhopper.GraphHopperAPITest.testDisconnected179":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":198,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":73,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":305,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":100,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":376,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":143,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":226,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":158,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":135,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":288,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":176,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":306,"com.graphhopper.reader.OSMReaderTest.testSort":362,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":44,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":259,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":57,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":107,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":89,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":374,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":91,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":146,"com.graphhopper.routing.PathTest.testWayList":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":102,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":74,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":303,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":256,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":115,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":157,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":300,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":280,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":99,"com.graphhopper.util.GHUtilityTest.testSort":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":199,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":277,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":144,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":155,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":333,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":232,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":320,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":105,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":241,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":119,"com.graphhopper.GraphHopperAPITest.testLoad":341,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":125,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":237,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":154,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.reader.OSMReaderTest.testBarriers":363,"com.graphhopper.routing.PathTest.testFound":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":260,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":195,"com.graphhopper.util.GHUtilityTest.testCopy":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":338,"com.graphhopper.routing.PathTest.testFindInstruction":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":110,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":201,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":161,"com.graphhopper.util.InstructionListTest.testEmptyList":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":335,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":183,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":171,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":123,"com.graphhopper.reader.PrinctonReaderTest.testRead":375,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":236,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":59,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":268,"com.graphhopper.util.InstructionListTest.testWayList2":349,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":291,"com.graphhopper.reader.OSMReaderTest.testFoot":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":219,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":311,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":312,"com.graphhopper.reader.OSMReaderTest.testOneWay":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":37,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":257,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":248,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":120,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":328,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":208,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":364,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":269,"com.graphhopper.routing.PathBidirRefTest.testExtract":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":51,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":323,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":238,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":145,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":297,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":217,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":319,"com.graphhopper.util.GHUtilityTest.testSort2":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":204,"com.graphhopper.reader.OSMReaderTest.testMain":361,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":276,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":234,"com.graphhopper.routing.PathBidirRefTest.testExtract2":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":270,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":301,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":282,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":132,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":230,"com.graphhopper.storage.GraphHopperStorageTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":307,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":266,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":166,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":197,"com.graphhopper.routing.PathTest.testTime":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":250,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":265,"com.graphhopper.util.GHUtilityTest.testSortDirected":358,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":255,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":339,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":77,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":369,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":368,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":284,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":235,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":177,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":290,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":292,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":207,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":254,"com.graphhopper.util.InstructionListTest.testFind":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":318},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"36f31e7a-7952-11e5-9b8e-114cec383846","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:473","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.ensureNode(int)"},"variableMap":{"mainNodeAccess":"nodeAccess","nodeId":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[],"tindex":"36f393ab-7952-11e5-9b8e-d77f7fa057b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"variableMap":{"turnRestrictionBit":"flags","restricted":"backward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:303","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.AbstractFlagEncoder.int, boolean), com.graphhopper.routing.util.AbstractFlagEncoder.int, boolean)"},"status":-2},{"failures":[],"tindex":"36f393ac-7952-11e5-9b8e-2f9f4a28d2c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"y","tmp":"stepY","segmentSizeInBytes":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:78","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"36f393ad-7952-11e5-9b8e-6b8acdd50984","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"com.graphhopper.util.Constants.SNAPSHOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\")"},"status":-2},{"failures":[],"tindex":"36f3babe-7952-11e5-9b8e-37f2dc939c89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"i","backwardBit":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"status":-2},{"failures":[],"tindex":"36f3babf-7952-11e5-9b8e-3f85bad65a97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-2},{"failures":[],"tindex":"36f3bac0-7952-11e5-9b8e-f92bf6859ef4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:95","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"36f3bac1-7952-11e5-9b8e-2db75bdd54bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"36f3bac2-7952-11e5-9b8e-9f71af3b4e9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:37","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"prepared":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:138","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getBoolean(int, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"36f3e1d3-7952-11e5-9b8e-71593b26041f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:127","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"36f3e1d4-7952-11e5-9b8e-e974f16261ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:130","type":"CtLocalVariableImpl","sourcecode":"long long = long + (int * long)"},"status":-2},{"failures":[],"tindex":"36f3e1d5-7952-11e5-9b8e-93f6f83d0c78","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >>> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 48))"},"status":-2},{"failures":[],"tindex":"36f3e1d6-7952-11e5-9b8e-99b8318313ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:550","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"variableMap":{"this":"this","unknownSpeed":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"36f408e7-7952-11e5-9b8e-bdc0f182ce89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:92","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"variableMap":{"index":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:57","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess.loadExisting()) {\n    long = com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.combineIntsToLong(com.graphhopper.storage.DataAccess.getHeader(0), com.graphhopper.storage.DataAccess.getHeader(4));\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"36f408e8-7952-11e5-9b8e-c56171957cf4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"variableMap":{"res":"flags","maxBit":"flags","value":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[],"tindex":"36f408e9-7952-11e5-9b8e-f727d1911fde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"status":-2},{"failures":[],"tindex":"36f408ea-7952-11e5-9b8e-b50b99083e1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"status":-2},{"failures":[],"tindex":"36f42ffb-7952-11e5-9b8e-056e1290153b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:110","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"36f42ffc-7952-11e5-9b8e-ff5e97e4b203","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"variableMap":{"is3D":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:216","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.GPXEntry com.graphhopper.util.GPXEntry : com.graphhopper.util.InstructionList.createGPXList()) {\n    java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()));\n    java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon())).append(\"\\'>\");\n    if (boolean)\n        java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n    \n    java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime())))).append(\"<\/time>\");\n    java.lang.StringBuilder.append(\"<\/trkpt>\");\n}"},"status":-2},{"failures":[],"tindex":"36f42ffd-7952-11e5-9b8e-67d185e219c8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:183","type":"CtReturnImpl","sourcecode":"return ((((double) + \",\") + (double)) + \", radius:\") + (double)"},"variableMap":{"lon":"periodTime","radiusInKm":"periodTime","lat":"periodTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:416","type":"CtReturnImpl","sourcecode":"return ((((((\"t(dijk):\" + (com.graphhopper.util.Helper.round2(double))) + \", t(period):\") + (com.graphhopper.util.Helper.round2(double))) + \", t(lazy):\") + (com.graphhopper.util.Helper.round2(double))) + \", t(neighbor):\") + (com.graphhopper.util.Helper.round2(double))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}