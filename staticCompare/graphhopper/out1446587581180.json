{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":96,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":43,"com.graphhopper.reader.OSMReaderTest.testFerry":109,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":34,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":104,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":69,"com.graphhopper.reader.OSMReaderTest.testWithBounds":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":94,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":38,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":64,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":22,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":33,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":83,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":80,"com.graphhopper.util.InstructionListTest.testWayList2":91,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":61,"com.graphhopper.reader.OSMReaderTest.testFoot":110,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":45,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":106,"com.graphhopper.util.InstructionListTest.testWayList":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":86,"com.graphhopper.reader.OSMReaderTest.testOneWay":114,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":89,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":47,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":53,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":1,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":46,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":105,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":25,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":99,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":74,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":71,"com.graphhopper.reader.OSMReaderTest.testSort":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":79,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":111,"com.graphhopper.reader.OSMReaderTest.testMain":56,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":3,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":14,"com.graphhopper.storage.MMapDataAccessTest.testCopy":17,"com.graphhopper.routing.PathTest.testWayList":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":97,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":7,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":67,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":20,"com.graphhopper.reader.OSMNodeTest.testSetTags":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":98,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":62,"com.graphhopper.GraphHopperTest.testFootAndCar":101,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":5,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":92,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":42,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":66,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":39,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":48,"com.graphhopper.GraphHopperTest.testVia":100,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":54,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.GraphHopperAPITest.testLoad":102,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":29,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":37,"com.graphhopper.GraphHopperTest.testFootOnly":55,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":12,"com.graphhopper.reader.OSMReaderTest.testBarriers":58,"com.graphhopper.util.InstructionListTest.testFind":88,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":108,"com.graphhopper.util.GHUtilityTest.testCopy":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4},"transformations":[{"failures":[0],"tindex":"40a4e13e-8275-11e5-94aa-6dbb01188da5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"variableMap":{"val":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[],"tindex":"40a4e13f-8275-11e5-94aa-85d7521824d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"maxCount","edge2":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:170","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = gnu.trove.list.array.TIntArrayList.size();\n    gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n    continue;\n} "},"status":0},{"failures":[1,2,3,4,5],"tindex":"40a50850-8275-11e5-94aa-9b6eabcc2cab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double)"},"status":-1},{"failures":[],"tindex":"40a50851-8275-11e5-94aa-6fe941f4196c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:117","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll()"},"status":-2},{"failures":[],"tindex":"40a50852-8275-11e5-94aa-bfb09c89be96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"workerThreads"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:987","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[6,7],"tindex":"40a50853-8275-11e5-94aa-27357903f23f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:772","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[8,9],"tindex":"40a50854-8275-11e5-94aa-15a616dad6ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"nodeId","bytes":"nodeId","segmentSizeInBytes":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[10,1],"tindex":"40a50855-8275-11e5-94aa-59ca44988ca0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    java.lang.Object = null;\nelse if (java.lang.Object instanceof java.lang.String) {\n    java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n    java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n    if (java.lang.String.isEmpty())\n        java.lang.Object = null;\n    else\n        try {\n            java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n        } catch (java.lang.NumberFormatException ex) {\n            return ;\n        }\n    \n} else\n    java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n"},"status":-1},{"failures":[],"tindex":"40a52f66-8275-11e5-94aa-a1fffb1c56b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":0},{"failures":[11,12,13,14,15,16,17],"tindex":"40a52f67-8275-11e5-94aa-9fbe5cf32245","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"inner":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:174","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"40a52f68-8275-11e5-94aa-39e8cb303a9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"mmap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:68","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"40a52f69-8275-11e5-94aa-9f74fea84508","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"v","edge2":"v"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:533","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.findShortcuts(com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.setNode(int))"},"status":-1},{"failures":[31],"tindex":"40a52f6a-8275-11e5-94aa-e5049cf31219","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:97","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"variableMap":{"minLat":"speed","lat":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:207","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n        long |= long;\n    } else {\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n        long |= long;\n    }\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"40a5567b-8275-11e5-94aa-b56016a3d09f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,28,52,29,30,53,54,55,56,57,58,1,2,59,60,3,61,62,63,64,65,66,67,68,69,70,71,4,72,73,74,75,76,77,78,79,80,81,5,82,83,84,85,86,87,88,89,90,91],"tindex":"40a5567c-8275-11e5-94aa-4bc507da595c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"maxGeoRef","entrySize":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:954","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[92,93,94,95,96,97,98,99,100,28,52,101,29,30,54,102],"tindex":"40a5567d-8275-11e5-94aa-ddffe81dcdd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:113","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Boolean.parseBoolean(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-1},{"failures":[103],"tindex":"40a5567e-8275-11e5-94aa-9f04624b5fdc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-1},{"failures":[104,16,105,106],"tindex":"40a5567f-8275-11e5-94aa-6f96c8df32ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putByte((((long) + long) + int), byte[][int])"},"status":-1},{"failures":[50,51,100,28,52,101,29,30,107,54,55,108,109,110,56,57,58,1,2,103,59,60,111,112,113,114],"tindex":"40a57d90-8275-11e5-94aa-d188fda8d965","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:517","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"variableMap":{"osmFile":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:612","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(load(java.lang.String))) {\n    com.graphhopper.GraphHopper.printInfo();\n    com.graphhopper.GraphHopper.process(java.lang.String);\n} else {\n    com.graphhopper.GraphHopper.printInfo();\n}"},"status":-1},{"failures":[],"tindex":"40a57d91-8275-11e5-94aa-4545da794fa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:86","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} "},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"40a52f68-8275-11e5-94aa-39e8cb303a9e","diffs":[{"branches":{"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":["com.graphhopper.storage.GraphBuilder_com.graphhopper.storage.GraphHopperStorage_build().e1","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e1","com.graphhopper.storage.RAMIntDataAccess_int_getInt(long).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t4","com.graphhopper.storage.RAMIntDataAccess_void_setInt(long,int).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t7","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess(java.lang.String,java.lang.String,java.nio.ByteOrder,boolean).b","com.graphhopper.storage.GHDirectory_void_mkdirs().e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e6","com.graphhopper.storage.RAMIntDataAccess_boolean_ensureCapacity(long).e2","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e3","com.graphhopper.storage.RAMIntDataAccess_boolean_ensureCapacity(long).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.RAMIntDataAccess_void_close().b","com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t4","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e5","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.RAMDataAccess_create(long).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e3","com.graphhopper.storage.MMapDataAccess_void_close(boolean).t1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().b","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).b","com.graphhopper.storage.RAMIntDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.GraphBuilder_com.graphhopper.storage.GraphHopperStorage_build().t1","com.graphhopper.storage.DAType_boolean_isInteg().b","com.graphhopper.storage.RAMDataAccess_boolean_ensureCapacity(long).e1","com.graphhopper.storage.MMapDataAccess_int_getInt(long).b","com.graphhopper.storage.RAMIntDataAccess_boolean_ensureCapacity(long).l4","com.graphhopper.storage.RAMIntDataAccess_int_getSegments().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e3","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().b","com.graphhopper.storage.DAType_boolean_isMMap().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e6","com.graphhopper.storage.MMapDataAccess_void_setInt(long,int).b","com.graphhopper.storage.RAMIntDataAccess_boolean_ensureCapacity(long).t3","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.RAMDataAccess(java.lang.String,java.lang.String,boolean,java.nio.ByteOrder).b","com.graphhopper.storage.RAMIntDataAccess_boolean_ensureCapacity(long).t2","com.graphhopper.storage.RAMDataAccess_boolean_ensureCapacity(long).e2","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().e1","com.graphhopper.storage.RAMIntDataAccess_long_getCapacity().b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t2","com.graphhopper.storage.RAMDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).l1","com.graphhopper.storage.RAMIntDataAccess_com.graphhopper.storage.RAMIntDataAccess_create(long).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).b","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.RAMDataAccess_create(long).b","com.graphhopper.storage.RAMDataAccess_boolean_ensureCapacity(long).l4","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.Directory_put(java.lang.String,com.graphhopper.storage.DAType).b","com.graphhopper.storage.MMapDataAccess_void_close(boolean).b","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.RAMDataAccess_void_close().b","com.graphhopper.storage.MMapDataAccess_long_getCapacity().l1","com.graphhopper.storage.RAMIntDataAccess_com.graphhopper.storage.DataAccess_setSegmentSize(int).b","com.graphhopper.storage.RAMDataAccess_long_getCapacity().b","com.graphhopper.storage.RAMDirectory_com.graphhopper.storage.RAMDirectory(java.lang.String,boolean).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).l5","com.graphhopper.storage.RAMIntDataAccess_com.graphhopper.storage.RAMIntDataAccess_create(long).b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b","com.graphhopper.storage.MMapDirectory_com.graphhopper.storage.MMapDirectory(java.lang.String).b","com.graphhopper.storage.RAMDataAccess_boolean_ensureCapacity(long).t3","com.graphhopper.storage.RAMIntDataAccess_com.graphhopper.storage.RAMIntDataAccess(java.lang.String,java.lang.String,boolean,java.nio.ByteOrder).b","com.graphhopper.storage.MMapDataAccess_void_close().b","com.graphhopper.storage.RAMDataAccess_int_getSegments().b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).l7","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String).e1"]},"type":"branch"}]},{"transformation":"40a57d91-8275-11e5-94aa-4545da794fa5","diffs":[{"methodsDiff":{"delete":["gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"40a52f66-8275-11e5-94aa-a1fffb1c56b3","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"40a4e13f-8275-11e5-94aa-85d7521824d2","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.EdgeIterator$Edge_boolean_isValid(int).b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":["com.graphhopper.util.EdgeIterator$Edge_boolean_isValid(int).b"]},"type":"branch"}]}]}