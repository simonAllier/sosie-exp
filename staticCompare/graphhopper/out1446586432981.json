{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":171,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":134,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":98,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":248,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":254,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":51,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":338,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":53,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":378,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":83,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":255,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":146,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":337,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":75,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":228,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":46,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":394,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":294,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":351,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":379,"com.graphhopper.routing.DijkstraTest.initializationError":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":415,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":292,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":300,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":214,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":420,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":297,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":345,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":395,"com.graphhopper.GraphHopperAPITest.testLoad":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":261,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":339,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":123,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.util.GHUtilityTest.testCopy":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":256,"com.graphhopper.routing.PathTest.testFindInstruction":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":199,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":132,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":193,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":39,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":388,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":2,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":412,"com.graphhopper.util.InstructionListTest.testWayList2":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":175,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":307,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.AStarTest.initializationError":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":114,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":156,"com.graphhopper.routing.PathBidirRefTest.testExtract":68,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":231,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":390,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":324,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":374,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":84,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":180,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":396,"com.graphhopper.storage.GraphHopperStorageTest.testClone":124,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":411,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":283,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":403,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":244,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":280,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":105,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":250,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":315,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":104,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":115,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":167,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":58,"com.graphhopper.util.InstructionListTest.testWayList":102,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":361,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":316,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":191,"com.graphhopper.util.HelperTest.testUnzip":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":393,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":236,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":317,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":262,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":220,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":170,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":286,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":260,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":87,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":240,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":235,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":385,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":179,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":203,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":299,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":176,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":201,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":142,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":308,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":54,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":363,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":273,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":157,"com.graphhopper.reader.PrinctonReaderTest.testRead":59,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":189,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":253,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":226,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":242,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":151,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":350,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":140,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":336,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":89,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":88,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":245,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":366,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":416,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":386,"com.graphhopper.routing.PathBidirRefTest.testExtract2":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":108,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":213,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":383,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":287,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":136,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":410,"com.graphhopper.GraphHopperTest.testPrepareOnly":30,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":168,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":387,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":267,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":23,"com.graphhopper.routing.AStarBidirectionTest.initializationError":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":368,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":402,"com.graphhopper.util.InstructionListTest.testFind":4,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":47},"transformations":[{"failures":[],"tindex":"94452502-8272-11e5-8c8f-d1c7216cdac5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:173","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    try {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.IOException ex) {\n                com.graphhopper.reader.dem.HeightTile.setSeaLevel(true);\n                com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10).flush();\n                return 0;\n            }\n        }\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"variableMap":{"file":"ele","ex":"ele","heights":"ele","demProvider":"ele","zippedURL":"ele","downloader":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:79","type":"CtReturnImpl","sourcecode":"return ((java.lang.Double)(java.lang.Object))"},"status":-2},{"failures":[0,1,2],"tindex":"94454c13-8272-11e5-8c8f-65b70e703689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.clear()"},"status":-1},{"failures":[],"tindex":"94457324-8272-11e5-8c8f-8bca6462b333","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"nodeEntryBytes","NO_TURN_ENTRY":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:332","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs((long * (int)), long)"},"status":-2},{"failures":[3,4],"tindex":"94457325-8272-11e5-8c8f-b5c505cf0586","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > (java.lang.Math.double))\n    double -= 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"prevLon","angleXY":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:303","type":"CtIfImpl","sourcecode":"if (!((int == 0) && (int == 0))) {\n    double double;\n    int int = int;\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    } else {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    }\n    if (double < double) {\n        double = double;\n        int = int;\n    } \n} "},"status":-1},{"failures":[5,6],"tindex":"94457326-8272-11e5-8c8f-2d798df0b597","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"elevation","v":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16],"tindex":"94459a37-8272-11e5-8c8f-1954bfd1df60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"base","nextEdgeId":"maxNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"94459a38-8272-11e5-8c8f-b95f9007494e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:95","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[17,18,19,20,21,5,6,22,23,24,25,26,27,28,29,30,31,7,8,32,33,9,10,34,35,36,37],"tindex":"94459a39-8272-11e5-8c8f-3d49ddca6445","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:187","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int))"},"status":-1},{"failures":[38],"tindex":"9445c14a-8272-11e5-8c8f-e1894fbe3df3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:58","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    byte[] byte[] = new byte[8 * 1024];\n    while (java.util.zip.ZipEntry != null) {\n        if (java.util.zip.ZipEntry.isDirectory()) {\n            new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n        } else {\n            double double = 1;\n            if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n                double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n            \n            java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n            java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n            try {\n                int int;\n                while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                    java.io.FileOutputStream.write(byte[], 0, int);\n                    long += int * double;\n                    if (com.graphhopper.util.ProgressListener != null)\n                        com.graphhopper.util.ProgressListener.update(long);\n                    \n                }\n            } finally {\n                java.io.FileOutputStream.close();\n            }\n        }\n        java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    }\n    java.util.zip.ZipInputStream.closeEntry();\n} finally {\n    java.util.zip.ZipInputStream.close();\n}"},"status":-1},{"failures":[39],"tindex":"9445c14b-8272-11e5-8c8f-13090ed32eca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"9445c14c-8272-11e5-8c8f-4d301b38df5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"minOneWayNetworkSize","retBucket":"minOneWayNetworkSize","i":"minOneWayNetworkSize","bucketSize":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:237","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[40,41,42,43,0,1,2,44,45,46],"tindex":"9445e85d-8272-11e5-8c8f-ffc90e3aef25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"u_fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:586","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-1},{"failures":[47,48,49,50,51,52,53],"tindex":"9445e85e-8272-11e5-8c8f-6bb8f8c57daa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:902","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[19,7],"tindex":"9445e85f-8272-11e5-8c8f-c703af685683","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:744","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>"},"status":-1},{"failures":[],"tindex":"9445e860-8272-11e5-8c8f-87af32577b37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"locations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:576","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":0},{"failures":[22],"tindex":"94460f71-8272-11e5-8c8f-8b7d98c86075","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"fromOsmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:63","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[21,24],"tindex":"94460f72-8272-11e5-8c8f-2df956a1b4d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"createdEdges","newNodeId":"wayFlags","wayOsmId":"wayFlags","wayFlags":"wayFlags","this":"this","nodeFlags":"wayFlags","nodeId":"wayFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:428","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long))"},"status":-1},{"failures":[54,55,56,57,58],"tindex":"94460f73-8272-11e5-8c8f-93558927cf4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"offset","clockwise":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putByte((((long) + long) + int), byte[][int])"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,11,81,82,12,83,14,84,85,15,86,40,87,16,42,88,43,89,90,0,1,2,44,45,46,91,92,93,94,95,96,97,98,99,100,4,101,102,103,104,105,106,107,108,109,47,110,111,112,113,114,115,116,117,118,119,120,121,49,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,52,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"94460f74-8272-11e5-8c8f-9fe64201c255","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[17,18,19,20,21,5,6,22,23,24,25,26,27,28,33,37,160,161,162,163,164,165,76,166,167,77,78,79,80,11,81,82,12,83,168,169,170,13,14,84,85,15,171,172,86,40,87,16,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,104,106,108,109,47,292,293,294,295,296,297,298,299,300,110,111,301,112,113,302,303,304,114,305,306,307,308,309,310,115,311,116,312,313,48,314,315,117,316,118,317,318,119,319,120,320,321,322,323,121,324,325,49,326,327,328,329,330,331,332,122,123,333,124,125,334,335,336,126,337,338,339,340,341,342,127,343,128,344,345,50,346,347,129,348,130,349,350,131,351,132,352,353,354,355,133,356,357,134,135,358,136,137,359,360,361,138,362,363,364,365,366,367,139,368,140,369,370,51,371,372,141,373,142,374,375,143,376,144,377,378,379,380,145,381,146,382,383,384,147,385,386,387,388,389,390,52,391,392,393,394,395,396,148,149,397,150,151,398,399,400,152,401,402,403,404,405,406,153,407,154,408,409,53,410,411,155,412,156,413,414,157,415,158,416,417,418,419,159,420],"tindex":"94463685-8272-11e5-8c8f-61faea70bbec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"encoderList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}