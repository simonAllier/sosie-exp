{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":60,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":307,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":207,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":45,"com.graphhopper.reader.OSMReaderTest.testFerry":341,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":328,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":139,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":255,"com.graphhopper.routing.QueryGraphTest.testOneWay":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":162,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":367,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":203,"com.graphhopper.reader.OSMReaderTest.testWithBounds":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":247,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":66,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":65,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":184,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":359,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":76,"com.graphhopper.GraphHopperTest.testPrepare":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":306,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":6,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":270,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":289,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":39,"com.graphhopper.util.InstructionListTest.testWayList":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":298,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":233,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":152,"com.graphhopper.GraphHopperAPITest.testDisconnected179":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":52,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":290,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":204,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":324,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":358,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":251,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":80,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":370,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":285,"com.graphhopper.GraphHopperTest.testLoadOSM":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":187,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":30,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":205,"com.graphhopper.reader.OSMReaderTest.testSort":344,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":250,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":36,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":88,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":311,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":356,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":315,"com.graphhopper.routing.PathTest.testWayList":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":13,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":288,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":202,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":155,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":132,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":199,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":179,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":303,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":323,"com.graphhopper.util.GHUtilityTest.testSort":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":209,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":292,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":125,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":268,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":173,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":86,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":100,"com.graphhopper.GraphHopperAPITest.testLoad":240,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":310,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":136,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":253,"com.graphhopper.reader.OSMReaderTest.testBarriers":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":159,"com.graphhopper.routing.PathTest.testFound":317,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":377,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":294,"com.graphhopper.util.GHUtilityTest.testCopy":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":230,"com.graphhopper.routing.PathTest.testFindInstruction":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":91,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":102,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":55,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":15,"com.graphhopper.util.InstructionListTest.testEmptyList":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":227,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":37,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":302,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":118,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":276,"com.graphhopper.reader.PrinctonReaderTest.testRead":357,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":135,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":145,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":167,"com.graphhopper.util.InstructionListTest.testWayList2":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":190,"com.graphhopper.reader.OSMReaderTest.testFoot":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":213,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":210,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":211,"com.graphhopper.reader.OSMReaderTest.testOneWay":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":123,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":2,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":242,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":147,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":59,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":234,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":62,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":346,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":273,"com.graphhopper.routing.PathBidirRefTest.testExtract":313,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":325,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":196,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":363,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":218,"com.graphhopper.util.GHUtilityTest.testSort2":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":58,"com.graphhopper.reader.OSMReaderTest.testMain":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":174,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":259,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":175,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":133,"com.graphhopper.routing.PathBidirRefTest.testExtract2":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":214,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":200,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":181,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":113,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":129,"com.graphhopper.storage.GraphHopperStorageTest.testClone":10,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":206,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":165,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":27,"com.graphhopper.GraphHopperTest.testFootAndCar":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":51,"com.graphhopper.routing.PathTest.testTime":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":164,"com.graphhopper.util.GHUtilityTest.testSortDirected":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":154,"com.graphhopper.GraphHopperTest.testPrepareOnly":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":231,"com.graphhopper.GraphHopperTest.testVia":368,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":299,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":351,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":134,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":260,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":335,"com.graphhopper.GraphHopperTest.testFootOnly":376,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":189,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":349,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":61,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":319,"com.graphhopper.util.InstructionListTest.testFind":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":217},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"491af104-7913-11e5-b27d-7937787afb71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:236","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.inPlaceNodeRemove(int)"},"variableMap":{"delNodes":"N_ADDITIONAL","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:266","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[],"tindex":"491b1815-7913-11e5-b27d-ef191c0117b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:137","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"status":-2},{"failures":[219,220,221,222,224,225,236],"tindex":"491b1816-7913-11e5-b27d-33c5d508f516","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:194","type":"CtIfImpl","sourcecode":"if ((!(java.lang.Double.isNaN(double))) && (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)))\n    throw new java.lang.IllegalArgumentException(((\"Heading \" + double) + \" must be in range (0,360) or NaN\"));\n"},"variableMap":{"heading":"tmpLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:101","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    if (double <= 0)\n        break;\n    \n    com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n} "},"status":-1},{"failures":[191,209,258,264,269,294,297,303,306,378,379,368,369,370,371],"tindex":"491b1817-7913-11e5-b27d-d9d8e32902b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"delta_lon","dy":"delta_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:196","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-1},{"failures":[],"tindex":"491b3f28-7913-11e5-b27d-19145a5292d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"status":-2},{"failures":[],"tindex":"491b3f29-7913-11e5-b27d-df17703d2620","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat()))"},"variableMap":{"output":"output","instruction":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\").append(com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation))"},"status":-2},{"failures":[],"tindex":"491b3f2a-7913-11e5-b27d-811846597566","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:259","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"491b3f2b-7913-11e5-b27d-132d3172057d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-2},{"failures":[],"tindex":"491b3f2c-7913-11e5-b27d-a57e7d753b8b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.clone(false)"},"variableMap":{"pointList":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:920","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"491b3f2d-7913-11e5-b27d-13383feeafe9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"status":-2},{"failures":[],"tindex":"491b3f2e-7913-11e5-b27d-d5e44bef47f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:116","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n    int = -int;\n"},"status":-2},{"failures":[],"tindex":"491b663f-7913-11e5-b27d-c35319205757","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:456","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n    long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n    com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n    break;\n} "},"status":-2},{"failures":[],"tindex":"491b6640-7913-11e5-b27d-35438f275839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:47","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-2},{"failures":[],"tindex":"491b6641-7913-11e5-b27d-3fb1677e04d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"java.lang.Double.NaN","com.graphhopper.util.DistanceCalcEarth.C":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:402","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"491b6642-7913-11e5-b27d-c7a79582a7ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR","delta":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:107","type":"CtReturnImpl","sourcecode":"return int / (com.graphhopper.storage.EdgeAccess.double)"},"status":-2},{"failures":[],"tindex":"491b6643-7913-11e5-b27d-9fb7de2e3d3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:747","type":"CtIfImpl","sourcecode":"if (double < double)\n    return true;\n"},"variableMap":{"minDistance":"weight","rMin":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:210","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)) > (double)"},"status":-2},{"failures":[],"tindex":"491b6644-7913-11e5-b27d-01a002061861","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"491b8d55-7913-11e5-b27d-218be4a5b9f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"weightLimit","angleXY":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:64","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"491b8d56-7913-11e5-b27d-7ffe2cb0ca8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"size","segmentSizePower":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"491b8d57-7913-11e5-b27d-959a85d6f230","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}