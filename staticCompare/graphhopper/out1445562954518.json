{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":100,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":95,"com.graphhopper.reader.OSMReaderTest.testFerry":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":139,"com.graphhopper.reader.OSMReaderTest.testWithBounds":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":114,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":144,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":98,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":41,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":49,"com.graphhopper.reader.OSMReaderTest.testFoot":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":86,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":132,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":76,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":54,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":106,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":43,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":44,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":17,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":39,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":121,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":1,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":128,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":30,"com.graphhopper.routing.PathTest.testTime":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":93,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":81,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":110,"com.graphhopper.reader.OSMReaderTest.testRelation":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":16,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":2,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":3,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":125,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":145,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":102},"transformations":[{"failures":[0],"tindex":"9b915f89-7923-11e5-9d95-3973d284301c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:566","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long)((int + 1))) * 4))"},"variableMap":{"intIndex":"turnCostsEntryBytes","dataAccess":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"9b91869a-7923-11e5-9d95-fb44ae11b3d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[],"tindex":"9b91adab-7923-11e5-9d95-79053f2d9e96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:244","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"9b91adac-7923-11e5-9d95-27fb33cdf780","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[],"tindex":"9b91adad-7923-11e5-9d95-f9ce3cdab3c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:86","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true);\n"},"status":-2},{"failures":[],"tindex":"9b91adae-7923-11e5-9d95-25b4af663b2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:362","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"9b91d4bf-7923-11e5-9d95-9dd663cf23a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[], 0)"},"status":-2},{"failures":[],"tindex":"9b91d4c0-7923-11e5-9d95-0f171663524a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:102","type":"CtIfImpl","sourcecode":"if ((byte[].int) > 255) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n    com.graphhopper.search.NameIndex.com.graphhopper.search.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n    java.lang.String = java.lang.String;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"9b91d4c1-7923-11e5-9d95-e51bdc6cc1e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[],"tindex":"9b91d4c2-7923-11e5-9d95-0331bdabe045","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:175","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-2},{"failures":[],"tindex":"9b91fbd3-7923-11e5-9d95-8bc62d776537","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:96","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.close()"},"variableMap":{"zis":"zis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:64","type":"CtIfImpl","sourcecode":"if (java.util.zip.ZipEntry.isDirectory()) {\n    new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n} else {\n    double double = 1;\n    if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n        double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n    \n    java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n    java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n    try {\n        int int;\n        while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n            java.io.FileOutputStream.write(byte[], 0, int);\n            long += int * double;\n            if (com.graphhopper.util.ProgressListener != null)\n                com.graphhopper.util.ProgressListener.update(long);\n            \n        }\n    } finally {\n        java.io.FileOutputStream.close();\n    }\n}"},"status":-2},{"failures":[],"tindex":"9b91fbd4-7923-11e5-9d95-57c94c82651a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"tmp","com.graphhopper.util.AngleCalc.PI3_4":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:244","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"9b91fbd5-7923-11e5-9d95-c905ff149d88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"intVal","frontIndex":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:90","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9b9222e6-7923-11e5-9d95-f9b372a2a0fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetTo","ase":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:141","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-2},{"failures":[],"tindex":"9b9222e7-7923-11e5-9d95-475f30da38b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"tmp","x1":"deltaX","x2":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"status":-2},{"failures":[],"tindex":"9b9222e8-7923-11e5-9d95-57125ebf6ae1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:275","type":"CtReturnImpl","sourcecode":"return ((short)((int[][][int][int]) >> 16))"},"variableMap":{"index":"index","bufferIndex":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"status":-2},{"failures":[],"tindex":"9b9222e9-7923-11e5-9d95-fd1d357ccef0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"status":-2},{"failures":[],"tindex":"9b9222ea-7923-11e5-9d95-059110ebc244","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:132","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"9b9249fb-7923-11e5-9d95-67e7453a86f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:143","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('\\n')"},"status":-2},{"failures":[],"tindex":"9b9249fc-7923-11e5-9d95-0f2efe501499","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:602","type":"CtForImpl","sourcecode":"for (long long = long + 4 ; long < long ; long += 4) {\n    com.graphhopper.storage.index.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}