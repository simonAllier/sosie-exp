{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":215,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":144,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":204,"com.graphhopper.reader.OSMReaderTest.testFerry":44,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":317,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":318,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":126,"com.graphhopper.routing.QueryGraphTest.testOneWay":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":296,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":80,"com.graphhopper.reader.OSMReaderTest.testWithBounds":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":220,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":34,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":124,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":258,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":96,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":276,"com.graphhopper.GraphHopperTest.testPrepare":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":27,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":247,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.util.InstructionListTest.testWayList":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":142,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":333,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":316,"com.graphhopper.GraphHopperAPITest.testDisconnected179":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":332,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":171,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":310,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":229,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":195,"com.graphhopper.GraphHopperTest.testLoadOSM":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":82,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":251,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":279,"com.graphhopper.reader.OSMReaderTest.testSort":47,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":17,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":30,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":25,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":133,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":308,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":162,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":231,"com.graphhopper.routing.PathTest.testWayList":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":26,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":79,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":141,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":336,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":181,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":108,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":307,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":325,"com.graphhopper.util.GHUtilityTest.testSort":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":85,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":304,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":201,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":277,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":271,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":65,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":249,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":265,"com.graphhopper.GraphHopperAPITest.testLoad":111,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":188,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":155,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":235,"com.graphhopper.reader.OSMReaderTest.testBarriers":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":176,"com.graphhopper.routing.PathTest.testFound":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":293,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":208,"com.graphhopper.util.GHUtilityTest.testCopy":321,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":339,"com.graphhopper.routing.PathTest.testFindInstruction":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":177,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":184,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":256,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":248,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":186,"com.graphhopper.reader.PrinctonReaderTest.testRead":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":32,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":125,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":110,"com.graphhopper.util.InstructionListTest.testWayList2":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":2,"com.graphhopper.reader.OSMReaderTest.testFoot":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":87,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":37,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":38,"com.graphhopper.reader.OSMReaderTest.testOneWay":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":330,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":199,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":285,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":183,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":217,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":234,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":334,"com.graphhopper.routing.PathBidirRefTest.testExtract":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":274,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":278,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":223,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":92,"com.graphhopper.util.GHUtilityTest.testSort2":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":213,"com.graphhopper.reader.OSMReaderTest.testMain":46,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":71,"com.graphhopper.routing.PathBidirRefTest.testExtract2":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":154,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":109,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":294,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":193,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":145,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":29,"com.graphhopper.storage.StorablePropertiesTest.testStore":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":83,"com.graphhopper.storage.GraphHopperStorageTest.testClone":237,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":260,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":297,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":243,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":340,"com.graphhopper.GraphHopperTest.testFootAndCar":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":209,"com.graphhopper.routing.PathTest.testTime":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":179,"com.graphhopper.util.GHUtilityTest.testSortDirected":323,"com.graphhopper.GraphHopperTest.testPrepareOnly":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":288,"com.graphhopper.GraphHopperTest.testVia":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":269,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":205,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":39,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":130,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":78,"com.graphhopper.GraphHopperTest.testFootOnly":122,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":101,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":216,"com.graphhopper.util.InstructionListTest.testFind":311,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":282},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"b1d14679-828d-11e5-9989-412ce61d3d0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:477","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[],"tindex":"b1d16d8a-828d-11e5-9989-1b3364c0b751","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"status":0},{"failures":[],"tindex":"b1d16d8b-828d-11e5-9989-e5e909d3d969","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:346","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMWay.getId()"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:348","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"b1d16d8c-828d-11e5-9989-0f027313254a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:321","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    gnu.trove.list.TIntList.add(int);\n}"},"status":-1},{"failures":[],"tindex":"b1d16d8d-828d-11e5-9989-65417cc34a37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:121","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"variableMap":{"ret":"value","retBucket":"value","i":"value","storedKey":"size","bucketSize":"value","key":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"b1d16d8e-828d-11e5-9989-df9343f458aa","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:151","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPoint method.\"));\n"},"variableMap":{"possibleToAdd":"chEnabled"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:748","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.GraphHopper.initCHAlgoFactories();\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(new java.util.ArrayList<com.graphhopper.routing.util.Weighting>(java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.keySet()) , com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n} else\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,61,74,75,62],"tindex":"b1d1949f-828d-11e5-9989-c16cdac9e3b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"variableMap":{"pavementName":"ret","wayTypeName":"ret"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:104","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"b1d194a0-828d-11e5-9989-a940e77c04f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:723","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"))"},"variableMap":{"graphHopperFolder":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"status":-2},{"failures":[],"tindex":"b1d194a1-828d-11e5-9989-73813136b582","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.MAX_VALUE":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:292","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)"},"status":-2},{"failures":[],"tindex":"b1d194a2-828d-11e5-9989-8fa37b3344d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:126","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.trimToSize()"},"status":-2},{"failures":[16,18,19,22,64,76,77,66,78,35,79,80,81,82,83,84,36,85,37,38,86,87,88,89,90,91,92,93,94,95,39,96,97,98,99,100,101,40,102,41,42,103,104,105,106,107,108,109,72,110,111,112,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,73,113,114,115,116,117,118,119,120,121,59,60,61,74,75,62,122,63],"tindex":"b1d194a3-828d-11e5-9989-f1207da04077","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"orientation":"lat","java.lang.Math.PI":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[123,124,113,114,116,117,121,59,61,74,62],"tindex":"b1d1bbb4-828d-11e5-9989-9378dc99efb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:636","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[55],"tindex":"b1d1bbb5-828d-11e5-9989-bbc5518d8f70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"lastInBoundsPillarNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"status":-1},{"failures":[6,7,125,126,127,128,129,130,131,132,133,134,123,135,136,137,138,12,139,13,14,15,140,141,16,142,143,19,20,21,22,144,145,23,24,25,26,146,28,147,148,149,150,151,29,31,32,152,153,33,154,155,34,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,64,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,66,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,35,79,80,81,82,83,84,36,85,37,38,86,87,88,89,91,92,261,262,263,93,264,265,266,267,268,269,270,94,95,39,96,97,98,99,100,101,40,102,41,42,103,104,105,106,108,109,271,272,273,274,275,276,277,278,72,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,111,112,308,309,310,311,312,43,313,314,315,316,317,318,319,320,321,322,323,113,114,115,116,117,118],"tindex":"b1d1bbb6-828d-11e5-9989-99df4100b10c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:409","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int, double, boolean)"},"variableMap":{"a":"a","b":"b","distance":"distance","bothDirections":"bothDirection","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double).setFlags(com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,73,119,120,121,59,60,61,74,75,62,122,63],"tindex":"b1d1e2c7-828d-11e5-9989-fdcdfa516616","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:728","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[44,324],"tindex":"b1d1e2c8-828d-11e5-9989-d1c8c0fb4bd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:361","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"variableMap":{"this":"this","first":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int)"},"status":-1},{"failures":[325,326,327,328,3,329,330,5,331,332,333],"tindex":"b1d1e2c9-828d-11e5-9989-8709cd0f3148","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"b1d1e2ca-828d-11e5-9989-898fc25f72b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"variableMap":{"entry":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:354","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":0},{"failures":[142,26,146,28,147,148,149,150,29,31,32,152,334,33,335,336,337],"tindex":"b1d1e2cb-828d-11e5-9989-31e0ad517948","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-1},{"failures":[338,339,340,59],"tindex":"b1d209dc-828d-11e5-9989-01767d432b2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:138","type":"CtForImpl","sourcecode":"for (int int = int + 1 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    if (java.lang.Double.isNaN(double)) {\n        continue;\n    } \n    double double = com.graphhopper.util.PointList.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (double < double) {\n        int = int;\n        double = double;\n    } \n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b1d16d8a-828d-11e5-9989-1b3364c0b751","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}