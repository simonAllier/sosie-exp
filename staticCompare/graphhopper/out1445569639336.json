{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":13,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":8,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":10,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":17,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":16,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":15},"transformations":[{"failures":[],"tindex":"2c05f99c-7933-11e5-ac09-3bd220963cba","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:1002","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:130","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"2c0620ad-7933-11e5-ac09-05ce8e3a6889","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:416","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[],"tindex":"2c0620ae-7933-11e5-ac09-639fbc3af206","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:239","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.Set<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"variableMap":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","potentialBarriers":"intendedValues","restrictions":"restrictions","blockByDefault":"blockFords"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:259","type":"CtIfImpl","sourcecode":"if ((((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>)))) && (!(com.graphhopper.reader.OSMNode.hasTag(\"ford\", \"no\")))) {\n    return long;\n} "},"status":-2},{"failures":[],"tindex":"2c0647bf-7933-11e5-ac09-431ed8dea2e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"virtualEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:359","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"2c0647c0-7933-11e5-ac09-3dfb863bd09d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"sLon","segmentSizeIntsPower":"sLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"2c0647c1-7933-11e5-ac09-d38310b2842c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"segmentCount","tmpNode":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[] byte[] = new byte[int];\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    byte[][][int] = byte[];\n}"},"status":-2},{"failures":[],"tindex":"2c0647c2-7933-11e5-ac09-55ac69316777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1))"},"status":-2},{"failures":[],"tindex":"2c0647c3-7933-11e5-ac09-f7ca3579262a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:78","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"2c0647c4-7933-11e5-ac09-1f70c1c3cc75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:897","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int))"},"status":-2},{"failures":[],"tindex":"2c0647c5-7933-11e5-ac09-7bdfb9cbefc3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"adjNode","nextEdgeOther":"adjNode","nodeOther":"adjNode","nextEdge":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:884","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-2},{"failures":[],"tindex":"2c066ed6-7933-11e5-ac09-af82915d8bd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","dLat":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","tmpErr":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","x1":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","sLon":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:328","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean) {\n        long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    } \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"2c066ed7-7933-11e5-ac09-19f8b5d3e2e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:782","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException((\"Adj.node problem with edge \" + java.lang.String))"},"variableMap":{"str":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:176","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"2c066ed8-7933-11e5-ac09-835c958d58e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1028","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"pass_through\", false)"},"variableMap":{"request":"request"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1006","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false)"},"status":-2},{"failures":[],"tindex":"2c066ed9-7933-11e5-ac09-6901ecf8c78b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"status":-2},{"failures":[],"tindex":"2c066eda-7933-11e5-ac09-e3c446fd0105","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:281","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) == 0) {\n    return null;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:339","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.get(int)"},"status":-2},{"failures":[],"tindex":"2c0695eb-7933-11e5-ac09-89cf3a1da0e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:173","type":"CtIfImpl","sourcecode":"if ((byte[].int) > (int)) {\n    byte[] byte[] = new byte[int];\n    java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    byte[] = byte[];\n} "},"status":-2},{"failures":[],"tindex":"2c0695ec-7933-11e5-ac09-097b6089dd1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-2},{"failures":[],"tindex":"2c0695ed-7933-11e5-ac09-a55b95977335","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MotorcycleFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 5))), com.graphhopper.util.PMap.getDouble(\"speedFactor\", 5), (com.graphhopper.util.PMap.getBool(\"turnCosts\", false) ? 1 : 0))"},"status":-2},{"failures":[],"tindex":"2c0695ee-7933-11e5-ac09-19df5d994e25","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"elevation","hasRel":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:71","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"2c0695ef-7933-11e5-ac09-37e5fa13b8ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:722","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < (int) ; long += 4) {\n    com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}