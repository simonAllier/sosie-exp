{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":55,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":238,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":46,"com.graphhopper.reader.OSMReaderTest.testFerry":241,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":223,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":224,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":207,"com.graphhopper.routing.QueryGraphTest.testOneWay":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":81,"com.graphhopper.reader.OSMReaderTest.testWithBounds":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":53,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":216,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":217,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":165,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":65,"com.graphhopper.GraphHopperTest.testPrepare":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":193,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":114,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":161,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":178,"com.graphhopper.util.InstructionListTest.testWayList":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":186,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":226,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":51,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":82,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":205,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":66,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":70,"com.graphhopper.routing.util.EncodedValueTest.testSwap":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":174,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":21,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":128,"com.graphhopper.reader.OSMReaderTest.testSort":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":32,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":196,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":158,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":198,"com.graphhopper.routing.PathTest.testWayList":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":197,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":119,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":78,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":44,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":190,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":245,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":204,"com.graphhopper.util.GHUtilityTest.testSort":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":111,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":41,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":210,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":127,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":3,"com.graphhopper.GraphHopperAPITest.testLoad":246,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":195,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.reader.OSMReaderTest.testBarriers":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":60,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":183,"com.graphhopper.util.GHUtilityTest.testCopy":231,"com.graphhopper.routing.PathTest.testFindInstruction":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":175,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":98,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":185,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":133,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":108,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":167,"com.graphhopper.reader.PrinctonReaderTest.testRead":159,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":24,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":171,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":36,"com.graphhopper.util.InstructionListTest.testWayList2":228,"com.graphhopper.reader.OSMReaderTest.testFoot":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":63,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":59,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":84,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":85,"com.graphhopper.reader.OSMReaderTest.testOneWay":157,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":131,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":56,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":120,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":152,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":164,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":142,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":213,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":139,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":88,"com.graphhopper.util.GHUtilityTest.testSort2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":191,"com.graphhopper.reader.OSMReaderTest.testMain":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":6,"com.graphhopper.routing.PathBidirRefTest.testExtract2":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":79,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":33,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":104,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":235,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":5,"com.graphhopper.storage.GraphHopperStorageTest.testClone":117,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":43,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":243,"com.graphhopper.GraphHopperTest.testFootAndCar":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":93,"com.graphhopper.GraphHopperTest.testPrepareOnly":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":29,"com.graphhopper.GraphHopperTest.testVia":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":71,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":208,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":229,"com.graphhopper.GraphHopperTest.testFootOnly":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":200,"com.graphhopper.util.InstructionListTest.testFind":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":87},"transformations":[{"failures":[],"tindex":"26de062c-8299-11e5-83a0-ebec5fedc19d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1137","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"26de544d-8299-11e5-83a0-abf6c0144e9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"variableMap":{"nextTowerId":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:243","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"26de544e-8299-11e5-83a0-5fa0c75a1bfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[18,19,20,7,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,8,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,10,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,14,15,16,17,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"26de544f-8299-11e5-83a0-4dd0ad975695","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"variableMap":{"intIndex":"newOrExistingEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:175","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[235],"tindex":"26de7b60-8299-11e5-83a0-5339290abcf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.int[][] = new int[int[][].int][]"},"status":-1},{"failures":[236,138,139,141,143,144,145,146,14,15,17,237,238,209,211,239],"tindex":"26de7b61-8299-11e5-83a0-612120c4a59a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.clone(false)"},"status":-1},{"failures":[],"tindex":"26dea272-8299-11e5-83a0-afc57647b271","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"variableMap":{"this":"pillarNodes","newSize":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:885","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"26dea273-8299-11e5-83a0-2df53d7d8a5e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"com.graphhopper.util.Helper.MB","highKey":"com.graphhopper.util.Helper.MB","key":"com.graphhopper.util.Helper.MB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"status":-2},{"failures":[],"tindex":"26dea274-8299-11e5-83a0-318e890da8ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":-2},{"failures":[240],"tindex":"26dea275-8299-11e5-83a0-81ef0d8b6b2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:174","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.max(long, 100)"},"variableMap":{"byteCount":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"26dec986-8299-11e5-83a0-f73d79f969d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:623","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":0},{"failures":[],"tindex":"26dec987-8299-11e5-83a0-c59783e3aaee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:703","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"26dec988-8299-11e5-83a0-abddc1d7ce45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"26dec989-8299-11e5-83a0-17dbaed7f857","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:215","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(java.lang.Math.round(((java.lang.Math.log(int)) / (java.lang.Math.log(2))))))"},"status":-2},{"failures":[],"tindex":"26dec98a-8299-11e5-83a0-61bc1e83c4db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:193","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.abs(com.graphhopper.reader.dem.SRTMProvider.down(double))"},"status":-2},{"failures":[241,242,157,243],"tindex":"26def09b-8299-11e5-83a0-172fb0dad3d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"variableMap":{"entry":"motorcarTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[236,138,139,140,141,237,244,245],"tindex":"26def09c-8299-11e5-83a0-df9e8cee2064","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"26def09d-8299-11e5-83a0-bf1a6fc2bf13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"status":-2},{"failures":[246,143,144,145,146,14,15,17,247],"tindex":"26def09e-8299-11e5-83a0-7394ce06d30c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList)"},"status":-1},{"failures":[],"tindex":"26df17af-8299-11e5-83a0-ed2c0b613748","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"variableMap":{"store":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"26df17af-8299-11e5-83a0-ed2c0b613748","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}