{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":82,"com.graphhopper.util.BitUtilBigTest.testToDouble":5,"com.graphhopper.routing.PathTest.testFindInstruction":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":79,"com.graphhopper.reader.OSMReaderTest.testFerry":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":20,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":9,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":91,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":37,"com.graphhopper.reader.OSMReaderTest.testWithBounds":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":125,"com.graphhopper.reader.PrinctonReaderTest.testRead":52,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":78,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":129,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.util.InstructionListTest.testWayList2":67,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":88,"com.graphhopper.search.NameIndexTest.testFlush":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":23,"com.graphhopper.reader.OSMReaderTest.testFoot":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":83,"com.graphhopper.util.InstructionListTest.testWayList":16,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":96,"com.graphhopper.reader.OSMReaderTest.testOneWay":51,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":34,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":0,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":111,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":24,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":13,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":65,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":131,"com.graphhopper.GraphHopperTest.testLoadOSM":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":54,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":57,"com.graphhopper.reader.OSMReaderTest.testSort":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":102,"com.graphhopper.reader.OSMReaderTest.testMain":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":25,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":139,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":107,"com.graphhopper.routing.PathTest.testWayList":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":101,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":69,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":137,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":81,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":18,"com.graphhopper.coll.BigLongIntMapTest.testPut":142,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.util.BitUtilBigTest.testToLong":6,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":135,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":8,"com.graphhopper.GraphHopperAPITest.testLoad":12,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":61,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":138,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":113,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":47,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":90,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":109,"com.graphhopper.reader.OSMReaderTest.testBarriers":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":31,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":2,"com.graphhopper.util.GHUtilityTest.testCopy":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":100},"transformations":[{"failures":[],"tindex":"cbca79fe-828a-11e5-a1e7-bde466948547","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:219","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[0,1],"tindex":"cbcaa10f-828a-11e5-a1e7-a7686d71d902","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"variableMap":{"degree":"i","lon":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:769","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getElevation(int)"},"status":-1},{"failures":[2],"tindex":"cbcac820-828a-11e5-a1e7-fd3827084e49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long))\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[3,4],"tindex":"cbcac821-828a-11e5-a1e7-e5414172e826","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"variableMap":{"closestEdge":"edge","detach":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setName(java.lang.String)"},"status":-1},{"failures":[5,6],"tindex":"cbcac822-828a-11e5-a1e7-a155786e835e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 40))"},"status":-1},{"failures":[7,8,9,10,11],"tindex":"cbcac823-828a-11e5-a1e7-1d7d9ed338c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:273","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"status":-1},{"failures":[],"tindex":"cbcaef34-828a-11e5-a1e7-4ff709da3264","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:590","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"cbcaef35-828a-11e5-a1e7-c9909567a54e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:73","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>()"},"variableMap":{"fromMap":"bestWeightMapOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:154","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>"},"status":-1},{"failures":[12,13,4,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"cbcaef36-828a-11e5-a1e7-b155a25c31aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:535","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkAdjNodeBounds(int)"},"status":-1},{"failures":[],"tindex":"cbcb1647-828a-11e5-a1e7-b92d2d72eb85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:516","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long)"},"status":-2},{"failures":[],"tindex":"cbcb1648-828a-11e5-a1e7-2544aab2c2b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.checkOne()"},"status":0},{"failures":[41],"tindex":"cbcb1649-828a-11e5-a1e7-c3ece968367b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:95","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"cbcb164a-828a-11e5-a1e7-4be348633a2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"status":-1},{"failures":[],"tindex":"cbcb3d5b-828a-11e5-a1e7-cf64bb52ab6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\")"},"status":0},{"failures":[12,42,43,3,44,45,0,1,46,47,48,49,50,51,52,53,54,55,56,57,58,4,59,60,14,61,62,63,15,64,65,66,16,67,68,69,70,71,72,8,73,74,75,76,77,78,79,80,81,9,82,83,84,85,86,87,88,89,90,91,10,92,93,94,95,96,97,98,99,100,101,11,102,103,104,105,106,107,108,109,21,110,111,112,113,114,115,116,117,118,119,120,121,23,24,122,123,124,125,126,25,127,128,129,130,131,26,27,28,29,30,31,33,132,34,133,134,135,35,136,137,36,37,38,39,138,139,40,140,141],"tindex":"cbcb3d5c-828a-11e5-a1e7-2796095ef84b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:495","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"variableMap":{"edgePointer":"flags","edgeId":"i","shortcutEntryBytes":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"cbcb3d5d-828a-11e5-a1e7-377ce29b4dbb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"silent":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:101","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"cbcb646e-828a-11e5-a1e7-8b09ad305d6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"value","newBaseIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:79","type":"CtIfImpl","sourcecode":"if (gnu.trove.set.hash.TIntHashSet == null) {\n    java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.put(int, (gnu.trove.set.hash.TIntHashSet = new gnu.trove.set.hash.TIntHashSet(int)));\n} "},"status":-2},{"failures":[],"tindex":"cbcb646f-828a-11e5-a1e7-5fa7447354f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"variableMap":{"firstLon":"lat","lastLon":"prevLon","firstLat":"lat","distCalc":"distCalc","lastLat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:289","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[142],"tindex":"cbcb6470-828a-11e5-a1e7-c712a6aea635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:53","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.hash.TLongIntHashMap[][int] = new gnu.trove.map.hash.TLongIntHashMap(int , 1.4F , int , int)"},"status":-1},{"failures":[],"tindex":"cbcb6471-828a-11e5-a1e7-47bb7bc593c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:114","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    java.util.Set<java.lang.Integer>.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cbcb3d5b-828a-11e5-a1e7-cf64bb52ab6b","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"type":"staticDiff"}]},{"transformation":"cbcb1648-828a-11e5-a1e7-2544aab2c2b2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Instruction.checkOne"]},"type":"staticDiff"}]}]}