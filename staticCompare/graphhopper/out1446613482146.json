{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":78,"com.graphhopper.routing.PathTest.testFindInstruction":90,"com.graphhopper.reader.OSMReaderTest.testFerry":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":75,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":17,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":114,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":77,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":122,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.util.InstructionListTest.testWayList2":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":46,"com.graphhopper.search.NameIndexTest.testFlush":13,"com.graphhopper.reader.OSMReaderTest.testFoot":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":72,"com.graphhopper.util.InstructionListTest.testWayList":95,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":65,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":112,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":92,"com.graphhopper.util.HelperTest.testUnzip":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":54,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":123,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":124,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":107,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":106,"com.graphhopper.reader.OSMReaderTest.testSort":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":105,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":116,"com.graphhopper.reader.OSMReaderTest.testMain":26,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":104,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":56,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":86,"com.graphhopper.routing.PathTest.testWayList":89,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":85,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":14,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":39,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":1,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":115,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":59,"com.graphhopper.GraphHopperTest.testFootAndCar":21,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":84,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":61,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":41,"com.graphhopper.GraphHopperTest.testPrepareOnly":8,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":99,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":5,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":97,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":58,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":87,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.util.InstructionListTest.testFind":93,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":62,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4},"transformations":[{"failures":[],"tindex":"8ed4058b-82b1-11e5-8469-0fc3a49fd30b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"status":-2},{"failures":[0],"tindex":"8ed42c9c-82b1-11e5-8469-c928b5123357","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"toStr","name":"toStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Unzipper.unzip(new java.io.FileInputStream(java.io.File), new java.io.File(java.lang.String), null)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"8ed42c9d-82b1-11e5-8469-89f97eb7b37a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:57","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess.loadExisting()) {\n    long = com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.combineIntsToLong(com.graphhopper.storage.DataAccess.getHeader(0), com.graphhopper.storage.DataAccess.getHeader(4));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"8ed453ae-82b1-11e5-8469-d57087a62ad8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:59","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[4,14,15],"tindex":"8ed453af-82b1-11e5-8469-274876658400","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int)"},"status":-1},{"failures":[3,4,6,10,12],"tindex":"8ed453b0-82b1-11e5-8469-317ababd54b2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:228","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"variableMap":{"maxGeoRef":"nodeEntryBytes","wayGeometry":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:175","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-1},{"failures":[16,8,17,18,19,20,21,9,10,11,12,22,23,24,25,26,27,28,29,30,14,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"8ed47ac1-82b1-11e5-8469-7b0214d0d74a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:203","type":"CtIfImpl","sourcecode":"if ((this.com.graphhopper.storage.DAType.MemRef) != (com.graphhopper.storage.DAType.com.graphhopper.storage.DAType.MemRef))\n    return false;\n"},"variableMap":{"other":"osmValue","memRef":"osmValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"8ed47ac2-82b1-11e5-8469-e38578319386","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:154","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\")"},"status":-2},{"failures":[18,37,86,87,88,89,90,91,92,56,93,94,95,96,97],"tindex":"8ed47ac3-82b1-11e5-8469-ff458305a85d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[98],"tindex":"8ed47ac4-82b1-11e5-8469-9b14e2541c54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:85","type":"CtIfImpl","sourcecode":"if (int >= int)\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"8ed4a1d5-82b1-11e5-8469-11b9d5a3a27f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"8ed4a1d6-82b1-11e5-8469-d7fb2b1d38bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:842","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.NodeAccess.is3D()"},"status":-2},{"failures":[],"tindex":"8ed4a1d7-82b1-11e5-8469-653c139f6297","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[99],"tindex":"8ed4a1d8-82b1-11e5-8469-496cb4951aa2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:339","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return ;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    if (java.lang.Double.isInfinite(double)) {\n        java.lang.System.java.io.PrintStream.println((\"infinity distance? for way:\" + (com.graphhopper.reader.OSMWay.getId())));\n        return ;\n    } \n    if (double < 1)\n        return ;\n    \n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"8ed4c8e9-82b1-11e5-8469-77bc048663bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:235","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[3,100,101,4,102,6,103,29,30,104,99],"tindex":"8ed4c8ea-82b1-11e5-8469-476c9f2e2b2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-1},{"failures":[],"tindex":"8ed4effb-82b1-11e5-8469-459578234bdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:187","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(int)"},"status":0},{"failures":[105,106,107,21,108,109,110,111,112,113,114,115,116,117,118],"tindex":"8ed4effc-82b1-11e5-8469-75e3d575c7c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:260","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean)"},"status":-1},{"failures":[],"tindex":"8ed4effd-82b1-11e5-8469-a52c5d19c549","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:72","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"status":-2},{"failures":[119,120,108,109,121,122,123,124],"tindex":"8ed4effe-82b1-11e5-8469-15cb69140a3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:94","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8ed4a1d7-82b1-11e5-8469-653c139f6297","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.reader.PrinctonReaderTest.testRead":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.util.GHUtilityTest.testSort":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_initNodeRefs(long,long).l2","com.graphhopper.storage.BaseGraph_void_initNodeRefs(long,long).b","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3","com.graphhopper.storage.BaseGraph_void_initNodeRefs(long,long).e1"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.util.InstructionListTest.testWayList":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.util.BreadthFirstSearchTest.testBFS":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.routing.PathBidirRefTest.testExtract":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.GraphHopperAPITest.testDisconnected179":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"],"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":["com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).t3","com.graphhopper.storage.BaseGraph_void_ensureNodeIndex(int).e3"]},"type":"branch"}]}]}