{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":51,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":298,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.reader.OSMReaderTest.testFerry":307,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":248,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":249,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":342,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":167,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":339,"com.graphhopper.reader.OSMReaderTest.testWithBounds":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":269,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":124,"com.graphhopper.coll.CompressedArrayTest.testCompress":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":68,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":287,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":150,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":327,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":233,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":33,"com.graphhopper.util.InstructionListTest.testWayList":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":255,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":261,"com.graphhopper.GraphHopperAPITest.testDisconnected179":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":325,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":113,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":168,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":284,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":322,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":273,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":134,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":24,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":345,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":206,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":292,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":153,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":169,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":237,"com.graphhopper.reader.OSMReaderTest.testSort":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":90,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":60,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":159,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":55,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":302,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":320,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":276,"com.graphhopper.routing.PathTest.testWayList":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":99,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":224,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":166,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":244,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":192,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":105,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":47,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":334,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":283,"com.graphhopper.util.GHUtilityTest.testSort":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":214,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":221,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":203,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":100,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":301,"com.graphhopper.coll.CompressedArrayTest.testCompress2":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":136,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":195,"com.graphhopper.GraphHopperAPITest.testLoad":64,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":54,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":73,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":275,"com.graphhopper.reader.OSMReaderTest.testBarriers":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":3,"com.graphhopper.routing.PathTest.testFound":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":326,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":147,"com.graphhopper.util.GHUtilityTest.testCopy":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":110,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":335,"com.graphhopper.routing.PathTest.testFindInstruction":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":188,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":197,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":115,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":181,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":242,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":234,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":289,"com.graphhopper.reader.PrinctonReaderTest.testRead":321,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":111,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":329,"com.graphhopper.util.InstructionListTest.testWayList2":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":156,"com.graphhopper.reader.OSMReaderTest.testFoot":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":177,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":344,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":175,"com.graphhopper.reader.OSMReaderTest.testOneWay":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":88,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":80,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":239,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":196,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":121,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":225,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":312,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":288,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":293,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":286,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":21,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":266,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":180,"com.graphhopper.util.GHUtilityTest.testSort2":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":118,"com.graphhopper.reader.OSMReaderTest.testMain":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":101,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":71,"com.graphhopper.routing.PathBidirRefTest.testExtract2":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":164,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":148,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":314,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":205,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":59,"com.graphhopper.storage.GraphHopperStorageTest.testClone":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":170,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":129,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":230,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":336,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":112,"com.graphhopper.routing.PathTest.testTime":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":94,"com.graphhopper.util.GHUtilityTest.testSortDirected":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":86,"com.graphhopper.GraphHopperTest.testPrepareOnly":263,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":14,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":43,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":149,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":299,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":155,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":157,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":280,"com.graphhopper.util.InstructionListTest.testFind":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":183},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"f9c8cd23-82a1-11e5-ac9e-1dc6618a1ce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n"},"status":-1},{"failures":[9,10,11,12,13,14,15],"tindex":"f9c8f434-82a1-11e5-ac9e-e70912eb7e50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:62","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"f9c8f435-82a1-11e5-ac9e-9f9af06e7d0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:65","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":-1},{"failures":[],"tindex":"f9c8f436-82a1-11e5-ac9e-7928e97cbdac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:561","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"f9c8f437-82a1-11e5-ac9e-b1103fd8a809","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:85","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.poll_element()"},"status":-2},{"failures":[66],"tindex":"f9c8f438-82a1-11e5-ac9e-e39b54170f23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.CompressedArray.flush()"},"status":-1},{"failures":[],"tindex":"f9c91b49-82a1-11e5-ac9e-4b50299a6dab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"start","noOfStates":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:417","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"f9c91b4a-82a1-11e5-ac9e-8fe436c8d381","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"workerThreads","size":"workerThreads","lonSize":"com.graphhopper.reader.OSMElement.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:168","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    long long = 1;\n    long long = 1;\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n            boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n            if (boolean) {\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n                int int = gnu.trove.list.TLongList.size();\n                for (int int = 0 ; int < int ; int++) {\n                    com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n                }\n                if (((++long) % 5000000) == 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n                } \n            } \n        } \n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n            if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n                com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n            \n            if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n                com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n            \n            if (((++long) % 50000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(\"Problem while parsing file\" , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[67],"tindex":"f9c91b4b-82a1-11e5-ac9e-1bdf94f94128","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"deltaX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"f9c91b4c-82a1-11e5-ac9e-97ca5729449b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)))"},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,0,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,96,97,98,99,100,101,102,103,104,105,106,107,108,109,2,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,3,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,9,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,10,178,179,180,11,181,12,13,14,182,183,184,185,186,187,188,189,4,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,5,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,6,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,7,238,239,240,241,242,243,244,245,246,247,248,249,250,251,8,252,253,254,255,256,257,258,259,260,261,262,263,16,17,18,19,20,21,22,23,24,25,26,27,264,28,29,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,15,283,284,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,285,58,286,287,288,289,290,59,60,61,62,291,292,293,63,294,295,296,297,298,299,300,301,302,303,304,305,306,64,65,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"tindex":"f9c9425d-82a1-11e5-ac9e-993a97d9fd61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"f9c9425e-82a1-11e5-ac9e-d339020775b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.this(10, false)"},"variableMap":{"this":"pl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:65","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D())"},"status":-2},{"failures":[323,324,68,69,72,73,75,76,77,78,79,0,80,81,82,83,84,325,86,87,88,89,90,326,91,92,93,327,94,328,95,329,1,96,97,98,99,100,101,330,102,103,104,105,263,331,22,23,26,27,264,29],"tindex":"f9c9425f-82a1-11e5-ac9e-dff9d5e64423","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"nodesCH","index":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:670","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"f9c96970-82a1-11e5-ac9e-9fd08100259c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:171","type":"CtReturnImpl","sourcecode":"return !boolean"},"variableMap":{"obtained":"enforcementOccured"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:420","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[68,142,143,144,145,146,147,148,149,151,152,153,154,155,157,159,160,161,9,162,163,164,165,167,168,169,170,171,173,175,176,177,10,178,179,180,332,333,334,335,336,16,17,18,19,20,21,22,23,24,25,26,27,28,29,41,46,47,50,64,309,310,311],"tindex":"f9c96971-82a1-11e5-ac9e-9d9760c9fb1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:67","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"status":-1},{"failures":[66,337,338,149,151,156,158,159,165,167,172,174,175,22,23,24,25,26,27,28,29,50,339,340,341,342,343,344,345,346,347,64,309,310,311],"tindex":"f9c96972-82a1-11e5-ac9e-274ce43ab22a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"f9c96973-82a1-11e5-ac9e-096566920330","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:215","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"newName":"cp","name":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:137","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"status":-2},{"failures":[323,77,78,84,95,101,104,107,108,114,125,131,134,187,188,194,205,211,214,219,220,226,237,243,246,248,8,22,267,276,277,280,283,284,30,33,46,56,57,285,58,286,59,60,291,63,308,319,321,322],"tindex":"f9c96974-82a1-11e5-ac9e-1b14c7e1a3f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:128","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[],"tindex":"f9c99085-82a1-11e5-ac9e-df75ab2dd5e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:131","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"No encoding manager specified or loaded\");\n"},"variableMap":{"encodingManager":"em"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:120","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.needsTurnCostsSupport())\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f9c99085-82a1-11e5-ac9e-df75ab2dd5e7","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}