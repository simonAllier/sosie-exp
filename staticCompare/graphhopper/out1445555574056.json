{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"6c761bc7-7912-11e5-9b56-f90d25eaa789","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currEdge","currEdge":"currEdge","nEdge":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:64","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, 0)"},"status":-2},{"failures":[],"tindex":"6c7642d8-7912-11e5-9b56-d77e5f9c67a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:593","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"6c7642d9-7912-11e5-9b56-e7bcabce57dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"6c7642da-7912-11e5-9b56-832d84e069ca","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:55","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine())"},"status":-2},{"failures":[],"tindex":"6c7642db-7912-11e5-9b56-65ac4c889b15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"status":-2},{"failures":[],"tindex":"6c7642dc-7912-11e5-9b56-d57fbbb8e3ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeInBytes","edgeId":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int)"},"status":-2},{"failures":[],"tindex":"6c7669ed-7912-11e5-9b56-e1293d3c31b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:250","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"6c7669ee-7912-11e5-9b56-a754341a3ea9","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"6c7669ef-7912-11e5-9b56-9d10869803dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-2},{"failures":[],"tindex":"6c7669f0-7912-11e5-9b56-49881503473d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:729","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long);\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long);\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"6c7669f1-7912-11e5-9b56-2fdcfce820a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:111","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3))"},"status":-2},{"failures":[],"tindex":"6c7669f2-7912-11e5-9b56-c7c53beed1c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"6c7669f3-7912-11e5-9b56-8d34930d4b4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"status":-2},{"failures":[],"tindex":"6c7669f4-7912-11e5-9b56-3d9751b011d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap)"},"status":-2},{"failures":[],"tindex":"6c769105-7912-11e5-9b56-1be358ef7967","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:150","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return ;\n} "},"variableMap":{"size":"length","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"6c769106-7912-11e5-9b56-c7050d50b083","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6c769107-7912-11e5-9b56-e735baa62ff0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >>> 8))"},"variableMap":{"offset":"pointer","bytes":"bytes","value":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:72","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"6c769108-7912-11e5-9b56-a3e66a026ca0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-2},{"failures":[],"tindex":"6c769109-7912-11e5-9b56-21decad550a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:696","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n    com.graphhopper.util.PointList.clear();\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n} "},"status":-2},{"failures":[],"tindex":"6c76910a-7912-11e5-9b56-3108869f8b1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:582","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    double double = com.graphhopper.util.EdgeIterator.getDistance();\n    double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int);\n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode());\n    com.graphhopper.routing.DijkstraOneToMany.clear();\n    long++;\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n            continue;\n        \n        double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n        if (java.lang.Double.isNaN(double))\n            throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n        \n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n        com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n        com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n        com.graphhopper.util.StopWatch.start();\n        (long)++;\n        int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n            continue;\n        \n        com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}