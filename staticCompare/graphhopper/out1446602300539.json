{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":118,"com.graphhopper.routing.PathTest.testFindInstruction":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":6,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":85,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":98,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":103,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":21,"com.graphhopper.reader.PrinctonReaderTest.testRead":94,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":129,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":92,"com.graphhopper.GraphHopperTest.testPrepare":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":75,"com.graphhopper.util.InstructionListTest.testWayList2":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":27,"com.graphhopper.reader.OSMReaderTest.testFoot":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":74,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":121,"com.graphhopper.util.InstructionListTest.testWayList":3,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":70,"com.graphhopper.reader.OSMReaderTest.testOneWay":97,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":78,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":104,"com.graphhopper.GraphHopperAPITest.testDisconnected179":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":15,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":43,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":39,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":111,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":52,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":133,"com.graphhopper.routing.PathBidirRefTest.testExtract":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":88,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":33,"com.graphhopper.GraphHopperTest.testLoadOSM":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":108,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":117,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":113,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":25,"com.graphhopper.routing.PathBidirRefTest.testExtract2":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":36,"com.graphhopper.routing.PathTest.testWayList":40,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":127,"com.graphhopper.storage.MMapDataAccessTest.testCopy":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":106,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":87,"com.graphhopper.util.SimpleIntDequeTest.testPush":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.GraphHopperTest.testFootAndCar":53,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":107,"com.graphhopper.GraphHopperTest.testVia":50,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":112,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":54,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":24,"com.graphhopper.GraphHopperTest.testFootOnly":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":125,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":110,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":38,"com.graphhopper.util.InstructionListTest.testFind":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":11,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":14,"com.graphhopper.util.GHUtilityTest.testCopy":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":124},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"8612324f-8297-11e5-9821-7f3b4c1f49d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"fromNode","start":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:113","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"86128070-8297-11e5-9821-b10bd4028368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:141","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"86128071-8297-11e5-9821-ddcbe43da6da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:468","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadWayGeometryHeader()"},"status":-2},{"failures":[],"tindex":"86128072-8297-11e5-9821-e13532315d12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:172","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"calcRouteBBox\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getInstructions\")"},"status":0},{"failures":[59],"tindex":"8612a783-8297-11e5-9821-1f2661efd668","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:97","type":"CtIfImpl","sourcecode":"if ((int) >= (int[].int)) {\n    int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))));\n} "},"status":-1},{"failures":[],"tindex":"8612a784-8297-11e5-9821-f36741f1c9b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:527","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:538","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"8612a785-8297-11e5-9821-0b2e6e849252","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:233","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"variableMap":{"newName":"sacScale","name":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtReturnImpl","sourcecode":"return \"hiking\".equals(java.lang.String)"},"status":-2},{"failures":[],"tindex":"8612a786-8297-11e5-9821-c5fb61b9994e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"towerNodeDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"status":0},{"failures":[],"tindex":"8612a787-8297-11e5-9821-394fffea86e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":-2},{"failures":[60,61,62],"tindex":"8612ce98-8297-11e5-9821-77c425c0d658","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setSeaLevel(true)"},"variableMap":{"demProvider":"demProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:235","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1)"},"status":-1},{"failures":[],"tindex":"8612ce99-8297-11e5-9821-19fd656b5396","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:261","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"8612ce9a-8297-11e5-9821-731a28bc7b0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:352","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[60,61,62],"tindex":"8612ce9b-8297-11e5-9821-635e1eeca62b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:288","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int += 2) {\n    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n    if ((short < (-1000)) || (short > 12000))\n        short = java.lang.Short.short;\n    \n    com.graphhopper.storage.DataAccess.setShort(int, short);\n}"},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,6,9,18,26,27,90,28,91,29,30,92,33,93,36,37,38,42,43,94,95,96,97,50],"tindex":"8612f5ac-8297-11e5-9821-1b5f488bae7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"edgePointer","low":"flags","guess":"edgePointer","guessedKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:127","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long);\n"},"status":-1},{"failures":[98,99,100,101],"tindex":"8612f5ad-8297-11e5-9821-afcd317aba29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:85","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.poll_element()"},"status":-1},{"failures":[0,102,59,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,18,19,22,93,128,129,130,131,96,60,132,97,44,45,46,47,48,49,50,53,58],"tindex":"8612f5ae-8297-11e5-9821-87de16fd4609","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[133,134,125,126,127,135],"tindex":"86131cbf-8297-11e5-9821-c5c67f222c39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"freeIndex":"segSize","currentIndex":"segSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], int)"},"status":-1},{"failures":[8,9,10,13,22,23,24,26,29,31,32,33],"tindex":"86131cc0-8297-11e5-9821-1d722c16dc0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-1},{"failures":[],"tindex":"86131cc1-8297-11e5-9821-c1a516374bd5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:593","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"86131cc2-8297-11e5-9821-e16b376a761a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"queryLon","minLatTmp":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:745","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, gnu.trove.set.hash.TIntHashSet)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"86131cc2-8297-11e5-9821-e16b376a761a","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.calcMinDistance"]},"type":"staticDiff"}]},{"transformation":"86128072-8297-11e5-9821-e13532315d12","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.check"]},"type":"staticDiff"}]}]}