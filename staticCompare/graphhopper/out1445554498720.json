{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":317,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":49,"com.graphhopper.reader.OSMReaderTest.testFerry":239,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":229,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":230,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":281,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":6,"com.graphhopper.routing.QueryGraphTest.testOneWay":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":186,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":13,"com.graphhopper.reader.OSMReaderTest.testWithBounds":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":270,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":271,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":327,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":31,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":185,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":335,"com.graphhopper.GraphHopperTest.testPrepare":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":316,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":114,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":323,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":299,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":147,"com.graphhopper.util.InstructionListTest.testWayList":226,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":308,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":176,"com.graphhopper.GraphHopperAPITest.testDisconnected179":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":275,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":219,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":300,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":14,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":254,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":265,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":170,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":257,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":0,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":215,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":338,"com.graphhopper.GraphHopperTest.testLoadOSM":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":336,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":15,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":138,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":165,"com.graphhopper.reader.OSMReaderTest.testSort":242,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":311,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":182,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":144,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":70,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":321,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":5,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":255,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":109,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":256,"com.graphhopper.routing.PathTest.testWayList":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":196,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":12,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":148,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":179,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":78,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":45,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":203,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":313,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":264,"com.graphhopper.util.GHUtilityTest.testSort":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":19,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":107,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":117,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":294,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":60,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":197,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":288,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":67,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":82,"com.graphhopper.GraphHopperAPITest.testLoad":339,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":217,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":320,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":161,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":276,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":183,"com.graphhopper.routing.PathTest.testFound":258,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":28,"com.graphhopper.util.GHUtilityTest.testCopy":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":304,"com.graphhopper.routing.PathTest.testFindInstruction":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":73,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":64,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":123,"com.graphhopper.util.InstructionListTest.testEmptyList":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":307,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":48,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":145,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":100,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":133,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":329,"com.graphhopper.reader.PrinctonReaderTest.testRead":253,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":160,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":169,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":191,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":10,"com.graphhopper.util.InstructionListTest.testWayList2":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":37,"com.graphhopper.reader.OSMReaderTest.testFoot":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":23,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":20,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":201,"com.graphhopper.reader.OSMReaderTest.testOneWay":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":105,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":278,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":171,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":83,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":53,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":122,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":337,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":61,"com.graphhopper.routing.PathBidirRefTest.testExtract":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":326,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":211,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":209,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":27,"com.graphhopper.util.GHUtilityTest.testSort2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":314,"com.graphhopper.reader.OSMReaderTest.testMain":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":198,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":199,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":158,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":7,"com.graphhopper.routing.PathBidirRefTest.testExtract2":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":193,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":46,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":29,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":95,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":2,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":251,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":16,"com.graphhopper.storage.GraphHopperStorageTest.testClone":118,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":151,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":189,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":128,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":135,"com.graphhopper.GraphHopperTest.testFootAndCar":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":163,"com.graphhopper.routing.PathTest.testTime":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":188,"com.graphhopper.util.GHUtilityTest.testSortDirected":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":178,"com.graphhopper.GraphHopperTest.testPrepareOnly":205,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":51,"com.graphhopper.GraphHopperTest.testVia":213,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":309,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":159,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":286,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":139,"com.graphhopper.GraphHopperTest.testFootOnly":221,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":36,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":38,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":177,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":260,"com.graphhopper.util.InstructionListTest.testFind":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":168},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"eb837770-790f-11e5-8c35-a15e32e2e7e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"variableMap":{"edgeKey1":"segmentsToCreate","edgeKey2":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"eb839e81-790f-11e5-8c35-195da260dfc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:88","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.int) == (int)) {\n    (long)++;\n    if (((long) % 1000000) == 0)\n        com.graphhopper.coll.GHLongIntBTree.optimize();\n    \n} "},"status":-2},{"failures":[],"tindex":"eb839e82-790f-11e5-8c35-1bf5e0c4c92b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:129","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"eb839e83-790f-11e5-8c35-474779bde8fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"directionBitMask","flags":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:251","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"eb83c594-790f-11e5-8c35-c3b4784ab7fd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"variableMap":{"synched":"chEnabled"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:748","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.GraphHopper.initCHAlgoFactories();\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(new java.util.ArrayList<com.graphhopper.routing.util.Weighting>(java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.keySet()) , com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n} else\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n"},"status":-2},{"failures":[],"tindex":"eb83c595-790f-11e5-8c35-cb3ff6efc842","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:400","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"eb83c596-790f-11e5-8c35-fb06d7791636","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:223","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(int)"},"status":-2},{"failures":[],"tindex":"eb83c597-790f-11e5-8c35-134b6b3f538d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders().get(0)"},"variableMap":{"encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:222","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.getEncoder(java.lang.String, true)"},"status":-2},{"failures":[],"tindex":"eb83c598-790f-11e5-8c35-030d33ad9860","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:749","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:51","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"eb83c599-790f-11e5-8c35-b90184126ac8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:559","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"eb83ecaa-790f-11e5-8c35-01a914daad6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"doReverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-2},{"failures":[],"tindex":"eb83ecab-790f-11e5-8c35-13ba8bf55dd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:980","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"eb83ecac-790f-11e5-8c35-9936b514841a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:62","type":"CtAssignmentImpl","sourcecode":"this.float = float"},"variableMap":{"growFactor":"factor","factor":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:60","type":"CtAssignmentImpl","sourcecode":"float = 2"},"status":-2},{"failures":[],"tindex":"eb83ecad-790f-11e5-8c35-c108fb601f84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:338","type":"CtAssignmentImpl","sourcecode":"byte[][] = java.util.Arrays.copyOf(byte[][], int)"},"status":-2},{"failures":[],"tindex":"eb83ecae-790f-11e5-8c35-07ea46d5dea9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"queryLat","logMessagesPercentage":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:84","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n        continue;\n    \n    for (int int, int int = 0 ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            if (double <= 0)\n                break;\n            \n            com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"eb8413bf-790f-11e5-8c35-b596b65ec669","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:251","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-2},{"failures":[],"tindex":"eb8413c0-790f-11e5-8c35-bbe70ad88a7f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:150","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return \"\";\n} "},"variableMap":{"key":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"eb8413c1-790f-11e5-8c35-9f81622e10cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:315","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2},{"failures":[],"tindex":"eb8413c2-790f-11e5-8c35-83716a708519","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"node","tmpSize":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n    com.graphhopper.routing.util.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"eb8413c3-790f-11e5-8c35-db4133425a38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:276","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}