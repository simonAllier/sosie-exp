{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":188,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":302,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.reader.OSMReaderTest.testFerry":45,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":226,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":227,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":108,"com.graphhopper.routing.QueryGraphTest.testOneWay":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":293,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":8,"com.graphhopper.reader.OSMReaderTest.testWithBounds":56,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":42,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":313,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":130,"com.graphhopper.util.BitUtilBigTest.testReverse":320,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":132,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":258,"com.graphhopper.GraphHopperTest.testPrepare":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":145,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":102,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":38,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":303,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":94,"com.graphhopper.util.BitUtilLittleTest.testToBitString":321,"com.graphhopper.util.InstructionListTest.testWayList":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":98,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":225,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":89,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":232,"com.graphhopper.GraphHopperAPITest.testDisconnected179":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":184,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":9,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":265,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":205,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":197,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":260,"com.graphhopper.GraphHopperTest.testLoadOSM":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":10,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":172,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":202,"com.graphhopper.reader.OSMReaderTest.testSort":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":301,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":211,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":30,"com.graphhopper.util.PointListTest.testReverse":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":105,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":116,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":222,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":261,"com.graphhopper.routing.PathTest.testWayList":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":106,"com.graphhopper.util.PointListTest.testIterable":133,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":242,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":5,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":100,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":311,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":264,"com.graphhopper.util.BitUtilBigTest.testToBitString":318,"com.graphhopper.util.GHUtilityTest.testSort":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":13,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":244,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.search.NameIndexTest.testPut":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":154,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":162,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":200,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":92,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":276,"com.graphhopper.GraphHopperAPITest.testLoad":90,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":248,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":234,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":267,"com.graphhopper.reader.OSMReaderTest.testBarriers":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":192,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":96,"com.graphhopper.util.GHUtilityTest.testCopy":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":183,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":86,"com.graphhopper.routing.PathTest.testFindInstruction":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":143,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":277,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":176,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":151,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":254,"com.graphhopper.reader.PrinctonReaderTest.testRead":223,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":201,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":107,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":214,"com.graphhopper.util.InstructionListTest.testWayList2":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":317,"com.graphhopper.reader.OSMReaderTest.testFoot":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":16,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":121,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":273,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":14,"com.graphhopper.reader.OSMReaderTest.testOneWay":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":203,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":295,"com.graphhopper.util.PointListTest.testAddPL":83,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":206,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":256,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":189,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":50,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":251,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":283,"com.graphhopper.routing.PathBidirRefTest.testExtract":307,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":66,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":193,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":20,"com.graphhopper.util.GHUtilityTest.testSort2":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":247,"com.graphhopper.reader.OSMReaderTest.testMain":47,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":216,"com.graphhopper.routing.PathBidirRefTest.testExtract2":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":27,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":36,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":22,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":148,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":103,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":11,"com.graphhopper.storage.GraphHopperStorageTest.testClone":163,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":179,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":220,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":88,"com.graphhopper.GraphHopperTest.testFootAndCar":71,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":288,"com.graphhopper.util.InstructionListTest.testCreateGPX":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":24,"com.graphhopper.util.BitUtilLittleTest.testReverse":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":139,"com.graphhopper.util.GHUtilityTest.testSortDirected":294,"com.graphhopper.GraphHopperTest.testPrepareOnly":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":208,"com.graphhopper.GraphHopperTest.testVia":68,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":280,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":299,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":54,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":310,"com.graphhopper.util.DouglasPeuckerTest.testParse":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":23,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":113,"com.graphhopper.GraphHopperTest.testFootOnly":76,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":28,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":263,"com.graphhopper.util.InstructionListTest.testFind":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":243,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":269},"transformations":[{"failures":[0,1,2,3],"tindex":"cb363cfb-8272-11e5-9a0c-3509ae91c8cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:245","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[4],"tindex":"cb368b1c-8272-11e5-9a0c-5f6bd28f132d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:187","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"variableMap":{"strLen":"usedBits","res":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:574","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"cb38d50d-8272-11e5-9a0c-8972ee63b2ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:101","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"variableMap":{"width":"size","latSimilar":"size","lonSimilar":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"status":-1},{"failures":[],"tindex":"cb38fc1e-8272-11e5-9a0c-1daa2d49d7fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"com.graphhopper.routing.util.FootFlagEncoder.FERRY_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n} else {\n    long = long | com.graphhopper.routing.util.AbstractFlagEncoder.(handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"cb38fc1f-8272-11e5-9a0c-5f3848efd99b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"workerThreads"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:75","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[124],"tindex":"cb392330-8272-11e5-9a0c-e59e77ff23e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"latInt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[125,79,122],"tindex":"cb392331-8272-11e5-9a0c-3b69bd6828e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:126","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"cb392332-8272-11e5-9a0c-df2a987f8d8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"bytes","mask":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"status":0},{"failures":[126,5,127,8,13,15,17,18,19,20,22,24,29,31,33,34,35,36,128,38,129,40,130,42,131,43,132,47,50,51,53,56,61,62,63,64,65,66,68,69,70,71,76,78,79,80,81,82,133,134,85,86,87,88,89,90,96,97,99,100,102,104,106,107,108,109,110,111,113,115,116,117,119,120,121,122,123],"tindex":"cb392333-8272-11e5-9a0c-dff50f30c840","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:195","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-1},{"failures":[126,135,136,5,137,138,139,140,141,142,143,144,145,146,147,148,149,6,150,151,152,153,154,155,7,8,9,12,17,19,23,24,25,28,33,35,156,157,158,159,128,160,38,161,162,163,164,165,166,167,168,169,170,171,172,173,39,174,175,176,177,178,179,40,180,181,182,183,184,185,186,187,188,189,190,191,192,41,193,194,195,196,197,198,199,200,201,131,202,43,203,204,205,206,207,208,209,210,211,212,213,214,215,44,216,217,218,219,220,221,222,223,224,46,47,48,49,50,51,52,53,56,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,225,79,81,226,227,228,229,134,230,231,232,233,234,235,236,237,238,239,240,241,93,242,94,95,243,244,245,96,246,97,98,99,100,247,101,102,103,104,248,105,106,249,250,251,252,253,254,255,256,257,258,259,260,108,113,114,115,121,261,262,263,264,265],"tindex":"cb394a44-8272-11e5-9a0c-01d3e4d5cace","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-1},{"failures":[],"tindex":"cb397155-8272-11e5-9a0c-3776969934c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:755","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setSegmentSize(int)"},"status":0},{"failures":[266,143,144,147,6,150,267,167,168,171,39,174,268,186,187,190,41,193,269,209,210,213,44,216,58,238,239],"tindex":"cb397156-8272-11e5-9a0c-1994c92994b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:743","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[69,70,71,76,83,90],"tindex":"cb397157-8272-11e5-9a0c-4dbb400d9d69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"i","weights":"latitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:160","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[126,136,5,137,266,139,140,270,141,271,142,143,144,146,147,272,148,149,6,150,151,153,154,7,8,9,10,11,12,13,273,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,274,30,31,32,33,34,35,36,156,157,275,276,277,278,279,280,158,281,282,283,284,159,128,160,38,161,267,163,164,285,165,286,166,167,168,170,171,287,172,173,39,174,175,177,178,40,180,268,182,183,288,184,289,185,186,187,189,190,290,191,192,41,193,194,196,197,199,200,201,131,202,43,203,269,205,206,291,207,292,208,209,210,212,213,293,214,215,44,216,217,219,220,222,223,224,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,225,79,81,82,226,227,228,229,134,230,294,231,232,90,295,92,233,234,235,236,237,238,239,240,296,241,93,297,242,94,95,243,244,245,96,298,246,97,98,299,300,301,99,100,247,101,102,302,103,104,248,105,106,303,249,250,251,252,253,254,304,255,305,256,257,258,306,259,260,107,108,109,110,111,113,114,115,116,117,118,119,120,121,307,308,261,262,263,309,122,123,264,265],"tindex":"cb399868-8272-11e5-9a0c-2be7d125b635","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"E_DIST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[310,311],"tindex":"cb399869-8272-11e5-9a0c-fbfe0132366b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:539","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.provider\", \"noop\").toLowerCase()"},"variableMap":{"args":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:125","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"cb39bf7a-8272-11e5-9a0c-e15236f59fdb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:561","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:537","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[126,6,153,312,10,26,128,39,177,313,41,196,314,131,44,219,315,49,54,76,79,104,122],"tindex":"cb39bf7b-8272-11e5-9a0c-ad357c6c25ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"arrayLength","nextEdgeId":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"status":-1},{"failures":[122],"tindex":"cb39bf7c-8272-11e5-9a0c-4daf0660cea0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[316,317,318,319,320,321,322,323,324],"tindex":"cb39e68d-8272-11e5-9a0c-e7b6e3fcb4c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[54],"tindex":"cb39e68e-8272-11e5-9a0c-ab81bcbb2f8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:413","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.set(0, long)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cb397155-8272-11e5-9a0c-3776969934c8","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.search.NameIndex_void_setSegmentSize(int).b","com.graphhopper.storage.GraphHopperStorage_void_setSegmentSize(int).b","com.graphhopper.storage.BaseGraph_void_setSegmentSize(int).b","com.graphhopper.storage.GraphExtension$NoOpExtension_void_setSegmentSize(int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_setSegmentSize(int).e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.search.NameIndex_void_setSegmentSize(int).b","com.graphhopper.storage.GraphHopperStorage_void_setSegmentSize(int).b","com.graphhopper.storage.BaseGraph_void_setSegmentSize(int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_setSegmentSize(int).e1","com.graphhopper.storage.GraphExtension$NoOpExtension_void_setSegmentSize(int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.setSegmentSize"]},"type":"staticDiff"}]}]}