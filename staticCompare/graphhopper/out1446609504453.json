{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":61,"com.graphhopper.reader.OSMReaderTest.testMain":54,"com.graphhopper.reader.OSMReaderTest.testFerry":52,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":12,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":24,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":9,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":20,"com.graphhopper.reader.OSMReaderTest.testWithBounds":62,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":34,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":32,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":8,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":85,"com.graphhopper.GraphHopperTest.testPrepare":68,"com.graphhopper.GraphHopperTest.testFootAndCar":70,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":84,"com.graphhopper.reader.OSMReaderTest.testFoot":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.util.InstructionListTest.testCreateGPX":77,"com.graphhopper.reader.OSMReaderTest.testOneWay":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":41,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":73,"com.graphhopper.GraphHopperTest.testPrepareOnly":66,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":36,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":58,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":42,"com.graphhopper.GraphHopperTest.testFootOnly":75,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":39,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":31,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.GraphHopperTest.testLoadOSM":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":44,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":46,"com.graphhopper.reader.OSMReaderTest.testSort":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":80},"transformations":[{"failures":[],"tindex":"4beeb60e-82a8-11e5-a2b0-ef10acb47475","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"minLon","lat":"deltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:184","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / long"},"status":-2},{"failures":[],"tindex":"4beeb60f-82a8-11e5-a2b0-b59be59c6522","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:85","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException((((\"Distance cannot be empty: \" + double) + \", maybe overflow issue? integer: \") + int));\n"},"variableMap":{"distance":"java.lang.Double.NaN","integ":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"4beedd20-82a8-11e5-a2b0-970a6eb061a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:98","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"4beedd21-82a8-11e5-a2b0-994697cdbc6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:316","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDQuadtree.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-1},{"failures":[],"tindex":"4beedd22-82a8-11e5-a2b0-bf3e3d134847","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:555","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setCalcMean(boolean)"},"status":0},{"failures":[],"tindex":"4beedd23-82a8-11e5-a2b0-8d2987fd36dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:475","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"4beedd24-82a8-11e5-a2b0-777db7f431f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\")"},"status":0},{"failures":[5,6,7,8],"tindex":"4beedd25-82a8-11e5-a2b0-2753b0213d29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:251","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-1},{"failures":[9,10],"tindex":"4bef0436-82a8-11e5-a2b0-8febb85fb9ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"edgeIdFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:96","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n    int = com.graphhopper.util.EdgeIterator.getEdge();\n    break;\n} "},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"4bef0437-82a8-11e5-a2b0-79a342298d38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:410","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\nelse\n    double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,17,41,42,25],"tindex":"4bef0438-82a8-11e5-a2b0-0dbd01b6ade2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:520","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:165","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,15,18,19,21,25],"tindex":"4bef0439-82a8-11e5-a2b0-fba810384b5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.reset()"},"variableMap":{"changedNodes":"ignoreEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:704","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!(gnu.trove.list.array.TIntArrayList.contains(com.graphhopper.util.EdgeIterator.getEdge())))\n        com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false));\n    \n}"},"status":-1},{"failures":[52,53,54,55,56,57,58,10,59,60,61,62,63,64,65,66,67,11,68,69,70,71,72,73,74,75,76],"tindex":"4bef043a-82a8-11e5-a2b0-657a23fd09f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"variableMap":{"location":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:62","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String))"},"status":-1},{"failures":[52,53,54,55,56,57,58,10,59,60,61,62,63,64,65,66,67,11,68,69,70,71,72,73,74,75,76],"tindex":"4bef2b4b-82a8-11e5-a2b0-bb089371d184","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:166","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextPBF();\nelse\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML();\n"},"status":-1},{"failures":[77,78],"tindex":"4bef2b4c-82a8-11e5-a2b0-6d226f9a42c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:251","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double)).append(\"<\/gh:azimuth>\")"},"status":-1},{"failures":[],"tindex":"4bef2b4d-82a8-11e5-a2b0-f95de4d5127f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.fillEdges(com.graphhopper.routing.AStar.AStarEdge, java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>, gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>, com.graphhopper.util.EdgeExplorer, false)"},"status":-1},{"failures":[79,80,81,82,83,84,85,57,58],"tindex":"4bef2b4e-82a8-11e5-a2b0-810024a3220c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:349","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)]);\n}"},"status":-1},{"failures":[],"tindex":"4bef2b4f-82a8-11e5-a2b0-717ce18d9df6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"4bef2b50-82a8-11e5-a2b0-dfa805b202bf","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:889","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"variableMap":{"weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:887","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"status":-2},{"failures":[],"tindex":"4bef5261-82a8-11e5-a2b0-490c0c2caf79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"estimationFullDist","incDist2DSum":"weight","fwdSlower":"estimationFullDist","fullDist2D":"estimationFullDist","restDist2D":"estimationFullDist","speed":"estimationFullDist","decDist2DSum":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:273","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4beedd22-82a8-11e5-a2b0-bf3e3d134847","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.reader.dem.ElevationProvider$1_void_setCalcMean(boolean).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.setCalcMean"]},"type":"staticDiff"}]},{"transformation":"4beedd24-82a8-11e5-a2b0-777db7f431f7","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"type":"staticDiff"}]}]}