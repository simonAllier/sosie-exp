{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":2,"com.graphhopper.storage.SimpleFSLockFactoryTest.testForceDelete":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":14,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":3,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":7,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":5,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":23,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":20,"com.graphhopper.GraphHopperTest.testPrepare":17},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"d76973dc-7938-11e5-a230-0ff684b64b41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"skippedEdge1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n} else {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n}"},"status":-1},{"failures":[],"tindex":"d7699aed-7938-11e5-a230-236e2672b399","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"synched","finishedFrom":"synched"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:209","type":"CtIfImpl","sourcecode":"if ((this.boolean) != (com.graphhopper.storage.DAType.boolean))\n    return false;\n"},"status":0},{"failures":[],"tindex":"d7699aee-7938-11e5-a230-81601d34525f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"d7699aef-7938-11e5-a230-991bb12bbc8f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:732","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getBaseNode();\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && (!(com.graphhopper.coll.GHBitSet.contains(int))))\n        continue;\n    \n    int int = com.graphhopper.coll.SparseIntIntArray.get(int);\n    if (int < 0)\n        int = int;\n    \n    int int = com.graphhopper.coll.SparseIntIntArray.get(int);\n    if (int < 0)\n        int = int;\n    \n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n    int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long);\n    int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long);\n    long long = com.graphhopper.storage.EdgeAccess.getFlags_(long, false);\n    com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, int, int);\n    com.graphhopper.storage.EdgeAccess.setFlags_(long, (int > int), long);\n    if ((int < int) != (int < int))\n        com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false);\n    \n}"},"status":-2},{"failures":[15],"tindex":"d7699af0-7938-11e5-a230-694a0c195bfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:98","type":"CtIfImpl","sourcecode":"if ((java.io.File.exists()) && (!(java.io.File.isDirectory())))\n    throw new java.lang.IllegalArgumentException(\"Cache path has to be a directory\");\n"},"variableMap":{"cacheDir":"lockDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SimpleFSLockFactory:61","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String);\n    if ((java.io.File.exists()) && (!(java.io.File.delete())))\n        throw new java.lang.RuntimeException((\"Cannot delete \" + java.io.File));\n    \n} "},"status":-1},{"failures":[16,17,18,19,20,21,22,23,11,14],"tindex":"d7699af1-7938-11e5-a230-93b05acec516","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"maxNodes","id":"base"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"status":-1},{"failures":[24,25],"tindex":"d769c202-7938-11e5-a230-79511940d215","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[26,19,27,28],"tindex":"d769c203-7938-11e5-a230-03a51793760a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:380","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\":\")"},"variableMap":{"sb":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\")"},"status":-1},{"failures":[],"tindex":"d769c204-7938-11e5-a230-959f0a2be713","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double))"},"variableMap":{"toLat":"java.lang.Double.NaN","fromLon":"java.lang.Double.NaN","toLon":"java.lang.Double.NaN","fromLat":"java.lang.Double.NaN","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(com.graphhopper.util.shapes.GHPoint, com.graphhopper.util.shapes.GHPoint, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"d769c205-7938-11e5-a230-57a140a2737d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"status":-2},{"failures":[],"tindex":"d769c206-7938-11e5-a230-4dc758a1f845","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"key","resultOrientation":"key","baseOrientation":"key","java.lang.Math.PI":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[],"tindex":"d769e917-7938-11e5-a230-7b93cc3bd4ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int).setNeighborUpdates(int).setLogMessages(double)"},"status":-2},{"failures":[],"tindex":"d769e918-7938-11e5-a230-fd048e59568e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:68","type":"CtAssignmentImpl","sourcecode":"float = 1.7F"},"variableMap":{"factor":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:64","type":"CtAssignmentImpl","sourcecode":"float = 2"},"status":-2},{"failures":[],"tindex":"d769e919-7938-11e5-a230-e1effd770385","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"wayTypeName","key":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:455","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"d769e91a-7938-11e5-a230-09be7be47a59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:87","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(java.io.File) , 50000)"},"status":-2},{"failures":[],"tindex":"d769e91b-7938-11e5-a230-d9c74a3b0b02","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"java.lang.Double.NaN","azimuth":"java.lang.Double.NaN","java.lang.Math.PI":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:403","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"d76a102c-7938-11e5-a230-35bd6aa79126","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:231","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"status":-2},{"failures":[],"tindex":"d76a102d-7938-11e5-a230-eb16e03e8f61","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:183","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[],"tindex":"d76a102e-7938-11e5-a230-17d4affda46c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"status":-2},{"failures":[],"tindex":"d76a102f-7938-11e5-a230-150eb6f6cb91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:234","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}