{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":23,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":114,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":47,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":83,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":19,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":131,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":103,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":98,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.util.InstructionListTest.testWayList2":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":28,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":25,"com.graphhopper.util.InstructionListTest.testWayList":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":26,"com.graphhopper.reader.OSMReaderTest.testOneWay":134,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":80,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":89,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":113,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":107,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":41,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":118,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":35,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":132,"com.graphhopper.reader.OSMReaderTest.testMain":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":22,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":49,"com.graphhopper.GraphHopperTest.testFootAndCar":42,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":86,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":95,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":45,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":102,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":13,"com.graphhopper.GraphHopperAPITest.testLoad":51,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":3,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":59,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":9,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":62,"com.graphhopper.reader.OSMReaderTest.testBarriers":54,"com.graphhopper.util.InstructionListTest.testFind":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":93},"transformations":[{"failures":[],"tindex":"2c8363a3-8279-11e5-ad78-219185aa561f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"flags","tmpValue":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"2c838ab4-8279-11e5-ad78-d3efd95f4a2a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[0],"tindex":"2c838ab5-8279-11e5-ad78-f1ae8a017a4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:505","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot copy EMPTY PointList\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:310","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative or NaN: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"2c838ab6-8279-11e5-ad78-a9b35ee37309","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"keyPart","capacity":"keyPart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.fillIDs((long >>> (byte[][int])), int, gnu.trove.set.hash.TIntHashSet, (int + 1))"},"status":-1},{"failures":[],"tindex":"2c838ab7-8279-11e5-ad78-c1dba4533534","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"r_lat_deg","fullDist2D":"r_lat_deg","decDist2DSum":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:139","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[55,56,57,58,59,34,60,61,62,63,64,65,66],"tindex":"2c838ab8-8279-11e5-ad78-e75ecb16f756","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:63","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[67,68,69,70,71,72],"tindex":"2c83b1c9-8279-11e5-ad78-6567070b2f0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:51","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"2c83b1ca-8279-11e5-ad78-6389bcc0b182","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.max((10 * 4), long))"},"variableMap":{"bytes":"tmp","this":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:796","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 4))"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,83],"tindex":"2c83b1cb-8279-11e5-ad78-c9ee185db382","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"encoded","capacity":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[84,85,85,86,86,87,87],"tindex":"2c83b1cc-8279-11e5-ad78-c703f336fd49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:136","type":"CtReturnImpl","sourcecode":"return (((com.graphhopper.reader.dem.SRTMProvider.(down(double)) + 90) * 1000) + com.graphhopper.reader.dem.SRTMProvider.(down(double))) + 180"},"status":-1},{"failures":[88],"tindex":"2c83b1cd-8279-11e5-ad78-55f654f50817","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:139","type":"CtIfImpl","sourcecode":"if (gnu.trove.set.hash.TIntHashSet.isEmpty()) {\n    java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.remove(java.util.Map.Entry<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.getKey());\n} "},"status":-1},{"failures":[89,73,74,75,90,76,78,91,80,92,81,82,83],"tindex":"2c83b1ce-8279-11e5-ad78-393b5884e310","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:121","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"variableMap":{"intKey":"speed","str":"highwayTag","key":"highwayTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:373","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n    if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n        int = java.lang.Integer;\n    else\n        int = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"2c83d8df-8279-11e5-ad78-591efec8fa32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:664","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"2c83d8e0-8279-11e5-ad78-a34cceae4a58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:494","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"Cannot create edge if graph is already frozen\");\n"},"variableMap":{"this":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:103","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) != null) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n} "},"status":-2},{"failures":[43],"tindex":"2c83d8e1-8279-11e5-ad78-a72da700ddd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:137","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting());\n}"},"status":-1},{"failures":[],"tindex":"2c83d8e2-8279-11e5-ad78-610e7d23c242","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"id","dy":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:528","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    return com.graphhopper.storage.NodeAccess.getLatitude(int);\n} else if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"2c83d8e3-8279-11e5-ad78-47985c2293d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:837","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int, 0)"},"variableMap":{"len":"len","bitUtil":"com.graphhopper.reader.dem.SRTMProvider.BIT_UTIL","bytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:286","type":"CtWhileImpl","sourcecode":"while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n    for (int int = 0 ; int < int ; int += 2) {\n        short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n        if ((short < (-1000)) || (short > 12000))\n            short = java.lang.Short.short;\n        \n        com.graphhopper.storage.DataAccess.setShort(int, short);\n    }\n}"},"status":-2},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"2c83fff4-8279-11e5-ad78-a33a85ec3bd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"mKeys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[33,34,37,135],"tindex":"2c83fff5-8279-11e5-ad78-75d6fe215d4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"variableMap":{"edge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:410","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-1},{"failures":[],"tindex":"2c83fff6-8279-11e5-ad78-e577ac003295","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:683","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"acceptStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n    throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n} "},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}