{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":238,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":76,"com.graphhopper.GraphHopperAPITest.testNoLoad":223,"com.graphhopper.reader.OSMReaderTest.testFerry":170,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":155,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":80,"com.graphhopper.routing.QueryGraphTest.testOneWay":166,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":60,"com.graphhopper.reader.OSMReaderTest.testWithBounds":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":21,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":43,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":200,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":28,"com.graphhopper.GraphHopperTest.testPrepare":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":149,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":99,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":105,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":141,"com.graphhopper.util.InstructionListTest.testWayList":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":145,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":196,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":6,"com.graphhopper.GraphHopperAPITest.testDisconnected179":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":210,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":142,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":61,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":136,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":5,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":203,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":188,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":253,"com.graphhopper.util.AngleCalcTest.testAzimuthCompassPoint":254,"com.graphhopper.GraphHopperTest.testLoadOSM":131,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":62,"com.graphhopper.reader.OSMReaderTest.testSort":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":135,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":180,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":206,"com.graphhopper.storage.RAMDataAccessTest.testHeader":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":152,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":163,"com.graphhopper.storage.MMapDataAccessTest.testHeader":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":215,"com.graphhopper.routing.PathTest.testWayList":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":55,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":153,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":147,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":225,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":207,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":220,"com.graphhopper.util.GHUtilityTest.testSort":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":65,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":230,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":31,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":29,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":74,"com.graphhopper.GraphHopperAPITest.testLoad":169,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":130,"com.graphhopper.util.TranslationMapTest.testToString":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":239,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":189,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":227,"com.graphhopper.reader.OSMReaderTest.testBarriers":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":25,"com.graphhopper.routing.PathTest.testFound":217,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":40,"com.graphhopper.util.GHUtilityTest.testCopy":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":143,"com.graphhopper.routing.PathTest.testFindInstruction":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":90,"com.graphhopper.util.InstructionListTest.testEmptyList":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":146,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":245,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":16,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":91,"com.graphhopper.util.InstructionListTest.testWayList2":117,"com.graphhopper.reader.OSMReaderTest.testFoot":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":69,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":66,"com.graphhopper.util.HelperTest.testGetLocale":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":67,"com.graphhopper.reader.OSMReaderTest.testOneWay":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":204,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":104,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":175,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":192,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":242,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":125,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":122,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":73,"com.graphhopper.util.GHUtilityTest.testSort2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":237,"com.graphhopper.reader.OSMReaderTest.testMain":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":15,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":92,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":70,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":57,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":41,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":187,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":63,"com.graphhopper.storage.GraphHopperStorageTest.testClone":101,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":107,"com.graphhopper.GraphHopperTest.testFootAndCar":129,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":208,"com.graphhopper.routing.PathTest.testTime":218,"com.graphhopper.util.InstructionListTest.testCreateGPX":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":18,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":235,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":7,"com.graphhopper.GraphHopperTest.testPrepareOnly":119,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":78,"com.graphhopper.GraphHopperTest.testVia":126,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":17,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":234,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":42,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":160,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":118,"com.graphhopper.GraphHopperTest.testFootOnly":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":48,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":219,"com.graphhopper.util.InstructionListTest.testFind":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":84},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"12a2ce08-8297-11e5-b6cc-1977b1988dd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:383","type":"CtReturnImpl","sourcecode":"return ((double)(int)) / (com.graphhopper.util.Helper.float)"},"status":-1},{"failures":[119,129,134,184,185,186,187,188,170,171,176,177,182,183],"tindex":"12a31c29-8297-11e5-b6cc-ed7f478bda8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"variableMap":{"val":"highway","existing":"highway","key":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:367","type":"CtIfImpl","sourcecode":"if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"12a31c2a-8297-11e5-b6cc-35d4989ae229","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"status":-2},{"failures":[],"tindex":"12a31c2b-8297-11e5-b6cc-6b3cea868a91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:327","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"12a3433c-8297-11e5-b6cc-6b9938de58f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:261","type":"CtIfImpl","sourcecode":"if ((!(java.util.List<java.nio.ByteBuffer>.isEmpty())) && ((java.util.List<java.nio.ByteBuffer>.get(0)) instanceof java.nio.MappedByteBuffer)) {\n    for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n        ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force();\n    }\n} "},"status":0},{"failures":[],"tindex":"12a3433d-8297-11e5-b6cc-b5def12b6231","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:52","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flagsSizeIsLong":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:136","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"12a3433e-8297-11e5-b6cc-1394f13b03f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"status":-2},{"failures":[189,190],"tindex":"12a3433f-8297-11e5-b6cc-d1f5de90b084","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:64","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"variableMap":{"stateStack":"stateStack","firstNode":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:105","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[191,192,193,115,194,195,196,116,197,198,199,117,118,200,119,120,121,122,123,124,125,201,126,127,128,129,130,131,202,132,133,134,184,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,137,138,139,220,221,169,222,223,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"12a36a50-8297-11e5-b6cc-d1135f9b42b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:73","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return new java.util.Locale(java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"12a36a51-8297-11e5-b6cc-cbff7e787b7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"low","green":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:402","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[224,225,226],"tindex":"12a36a52-8297-11e5-b6cc-db820cbce682","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"12a36a53-8297-11e5-b6cc-27800f884e67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:274","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"variableMap":{"com.graphhopper.util.InstructionAnnotation.EMPTY":"annotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:71","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"status":0},{"failures":[],"tindex":"12a39164-8297-11e5-b6cc-cbe6fdc58900","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[200,119,201,126,127,128,129,130,131,132,133,134,184,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"12a39165-8297-11e5-b6cc-65f8d23ab54c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:96","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.close()"},"variableMap":{"zis":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:124","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"status":-1},{"failures":[],"tindex":"12a39166-8297-11e5-b6cc-c5890ea6533b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:65","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) == null) || ((com.graphhopper.storage.EdgeEntry) == null))\n    return this;\n"},"variableMap":{"edgeTo":"currEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:132","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.storage.EdgeEntry) == null) || com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded())) || (!com.graphhopper.routing.Dijkstra.(finished())))\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-2},{"failures":[227],"tindex":"12a39167-8297-11e5-b6cc-093c662c0866","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:289","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"0\" : \"\""},"variableMap":{"str":"minStr","lonInt":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"12a3b878-8297-11e5-b6cc-3749bef2c366","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1086","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":0},{"failures":[201,126,127,130,131,132,140,228,141,142,229,230,231,143,232,233,144,145,234,235,236,146,147,237,148,149,238,150,151,239,152,153,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"12a3b879-8297-11e5-b6cc-094d0ac06c23","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"w_toNode","edgeTo":"endNode","edgeFrom":"w_toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:628","type":"CtIfImpl","sourcecode":"if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n    continue;\n"},"status":-1},{"failures":[254,118,255],"tindex":"12a3df8a-8297-11e5-b6cc-595117f05947","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:144","type":"CtIfImpl","sourcecode":"if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"variableMap":{"slice":"slice","azimuth":"azimuth","cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:129","type":"CtIfImpl","sourcecode":"if (double < double) {\n    java.lang.String = \"N\";\n} else if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-1},{"failures":[120,121,122,123,124,126,127,128,129,130,131,133,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"12a3df8b-8297-11e5-b6cc-634b4ae38651","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"prevLon","angleXY":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:417","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"12a3433c-8297-11e5-b6cc-6b9938de58f1","diffs":[{"methodsDiff":{"delete":["java.nio.MappedByteBuffer.force"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]},{"transformation":"12a3b878-8297-11e5-b6cc-3749bef2c366","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.ensureWriteAccess"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.GraphHopper_void_ensureWriteAccess().b","com.graphhopper.GraphHopper_void_ensureWriteAccess().e1"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.GraphHopper_void_ensureWriteAccess().b","com.graphhopper.GraphHopper_void_ensureWriteAccess().e1"]},"type":"branch"}]}]}