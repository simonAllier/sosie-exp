{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":88,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":129,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":56,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":74,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":4,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":144,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":125,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.MMapDataAccessTest.testSegments":36,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":65,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":38,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":83,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":86,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":91,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":32,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":147,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.search.NameIndexTest.testFlush":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":134,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":131,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":95,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":58,"com.graphhopper.GraphHopperAPITest.testDisconnected179":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":28,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":124,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":39,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":126,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":118,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":70,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":41,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":143,"com.graphhopper.storage.RAMDataAccessTest.testCopy":60,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":120,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":141,"com.graphhopper.storage.RAMDataAccessTest.testSegments":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":140,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":138,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":79,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":104,"com.graphhopper.storage.RAMDataAccessTest.testHeader":62,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":54,"com.graphhopper.storage.MMapDataAccessTest.testHeader":35,"com.graphhopper.storage.MMapDataAccessTest.testCopy":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":42,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":113,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":123,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":47,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":108,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":93,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":111,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.storage.StorablePropertiesTest.testStore":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":128,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":30,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":146,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":50,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":43,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":110,"com.graphhopper.reader.OSMReaderTest.testRelation":85,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":80,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":119,"com.graphhopper.GraphHopperAPITest.testLoad":105,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":49,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":109,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":114,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":40,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":115,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":1,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":90,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":76,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":69,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":137},"transformations":[{"failures":[0,1],"tindex":"52d96f63-8289-11e5-8cf3-ab52a52a3254","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"52d99674-8289-11e5-8cf3-4b55452c91e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.CHEdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"52d99675-8289-11e5-8cf3-6b88514daa63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:89","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"52d99676-8289-11e5-8cf3-5796c51fc8be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:83","type":"CtIfImpl","sourcecode":"if (int > 0.0) {\n    if (int >= int)\n        boolean = true;\n    \n} else if (int <= int) {\n    boolean = true;\n} "},"variableMap":{"endX":"from","reachedX":"finishedTo","stepX":"adjNode","x":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"52d99677-8289-11e5-8cf3-0b080d4c08cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,0,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"52d99678-8289-11e5-8cf3-87aef758d00e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:728","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[28,29,30],"tindex":"52d9bd89-8289-11e5-8cf3-13f657bb7d14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return 0;\n"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,3,4,5,9,10,11,12,14,20,82,83,84],"tindex":"52d9bd8a-8289-11e5-8cf3-035d7ef71ded","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:295","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.io.RandomAccessFile)"},"variableMap":{"raFile":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"status":-1},{"failures":[85,86],"tindex":"52d9bd8b-8289-11e5-8cf3-3f1db4087588","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[87,88],"tindex":"52d9bd8c-8289-11e5-8cf3-8fb4c33cf591","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[89,90,91,92],"tindex":"52d9bd8d-8289-11e5-8cf3-6bc1bdee3ac1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"E_FLAGS","bytes":"E_FLAGS","segmentSizeInBytes":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((long + (int)) + 4), com.graphhopper.util.BitUtil.getIntHigh(long))"},"status":-1},{"failures":[],"tindex":"52d9e49e-8289-11e5-8cf3-f700fd5bb65f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"variableMap":{"pointer":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeEntry.int"},"status":-2},{"failures":[],"tindex":"52d9e49f-8289-11e5-8cf3-21d4a493195f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:249","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    byte[] byte[] = new byte[(2 * (int)) * (int)];\n    com.graphhopper.storage.DataAccess.create(byte[].int);\n    try {\n        java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n        java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n        java.io.InputStream java.io.InputStream;\n        if (!(java.io.File.exists())) {\n            for (int int = 0 ; int < 3 ; int++) {\n                try {\n                    com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                    break;\n                } catch (java.net.SocketTimeoutException ex) {\n                    java.lang.Thread.sleep(2000);\n                    continue;\n                } catch (java.io.FileNotFoundException ex) {\n                    java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                    continue;\n                }\n            }\n        } \n        java.io.InputStream = new java.io.FileInputStream(java.io.File);\n        java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n        java.util.zip.ZipInputStream.getNextEntry();\n        java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n        int int;\n        while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n            for (int int = 0 ; int < int ; int += 2) {\n                short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                if ((short < (-1000)) || (short > 12000))\n                    short = java.lang.Short.short;\n                \n                com.graphhopper.storage.DataAccess.setShort(int, short);\n            }\n        }\n        com.graphhopper.storage.DataAccess.flush();\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"status":-2},{"failures":[],"tindex":"52d9e4a0-8289-11e5-8cf3-778a85f0c544","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"finishedTo","hasRel":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"status":0},{"failures":[93],"tindex":"52d9e4a1-8289-11e5-8cf3-51ffdc5b585c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[94,95,96,97,98,99,100,101,102,103,104],"tindex":"52da0bb2-8289-11e5-8cf3-4d428ddf35e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"52da0bb3-8289-11e5-8cf3-45b444a55447","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"lon","angleXY":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[],"tindex":"52da0bb4-8289-11e5-8cf3-e5b1d97fa714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:395","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.Graph.getNodes())"},"status":0},{"failures":[],"tindex":"52da0bb5-8289-11e5-8cf3-a13a0c926357","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"oldValueIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"status":0},{"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,87,142,143,5,6,7,8,9,10,12,13,16,17,18,144,145,146,147],"tindex":"52da0bb6-8289-11e5-8cf3-41aaa65429f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"iteration","nodeThis":"iteration","edgeId":"iteration","nodeOther":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    \n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"52da0bb4-8289-11e5-8cf3-e5b1d97fa714","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader","com.graphhopper.storage.Graph.getNodes"]},"type":"staticDiff"}]},{"transformation":"52d9e4a0-8289-11e5-8cf3-778a85f0c544","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}