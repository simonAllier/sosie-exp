{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":130,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":48,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":196,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":197,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":45,"com.graphhopper.routing.QueryGraphTest.testOneWay":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":134,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":39,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":68,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":78,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":52,"com.graphhopper.util.InstructionListTest.testWayList":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":35,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":192,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":112,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":117,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":82,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":144,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":154,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":42,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":110,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":72,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":33,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":168,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":14,"com.graphhopper.util.GHUtilityTest.testSort":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":126,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":180,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":142,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":164,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":80,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":124,"com.graphhopper.util.GHUtilityTest.testCopy":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":170,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":174,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":97,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":87,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":202,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":207,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":24,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":44,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":159,"com.graphhopper.util.InstructionListTest.testWayList2":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":139,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":115,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":152,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":148,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":23,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":131,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":160,"com.graphhopper.routing.PathBidirRefTest.testExtract":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":18,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.util.GHUtilityTest.testSort2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":128,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":162,"com.graphhopper.routing.PathBidirRefTest.testExtract2":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":119,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":22,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":158,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":133,"com.graphhopper.GraphHopperTest.testVia":201,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":101,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":49,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":12,"com.graphhopper.util.InstructionListTest.testFind":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":166},"transformations":[{"failures":[],"tindex":"e3ebe138-794c-11e5-bf62-15eaf4c0e3c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:220","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[0],"tindex":"e3ebe139-794c-11e5-bf62-3b8cc8788b6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"variableMap":{"entry":"str","entryVal":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:96","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"e3ec084a-794c-11e5-bf62-a9a0844ddd45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"b","b":"a","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"status":-1},{"failures":[201,31,34,202,36,39,89,90,91,92,93,203,95,204,205,206,207,208],"tindex":"e3ec084b-794c-11e5-bf62-fbf3a1e9ac69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:644","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:45","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.DistanceCalcEarth.double) * java.lang.Math.(java.lang.Math.sqrt(double))"},"status":-1},{"failures":[],"tindex":"e3ec084c-794c-11e5-bf62-6f57784ffdec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"java.lang.Double.POSITIVE_INFINITY","dY":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"e3ec2f5d-794c-11e5-bf62-9f70cb253793","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"e3ec2f5e-794c-11e5-bf62-1db3bc9c7080","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"to","retBucket":"i","i":"i","bucketSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:254","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-2},{"failures":[],"tindex":"e3ec2f5f-794c-11e5-bf62-1d0ef62cce8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:174","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e3ec2f60-794c-11e5-bf62-1f1bfad04d16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":-2},{"failures":[],"tindex":"e3ec2f61-794c-11e5-bf62-a91bddb82bf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:163","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"e3ec2f62-794c-11e5-bf62-4d79bf7ee17d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-2},{"failures":[],"tindex":"e3ec5673-794c-11e5-bf62-cdc9e3c649d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e3ec5674-794c-11e5-bf62-851d1d370a1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:795","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"towerNodeDistance":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:240","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"e3ec5675-794c-11e5-bf62-7b6123dc9d84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:83","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.util.zip.GZIPInputStream(java.io.InputStream)"},"variableMap":{"is":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:44","type":"CtAssignmentImpl","sourcecode":"this.java.io.InputStream = java.io.InputStream"},"status":-2},{"failures":[],"tindex":"e3ec5676-794c-11e5-bf62-192716253eec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"id","guess":"id","low":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2},{"failures":[],"tindex":"e3ec5677-794c-11e5-bf62-57ee56643d0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"dataAccessType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:265","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"e3ec5678-794c-11e5-bf62-610cf10cef93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"e3ec5679-794c-11e5-bf62-e5a9cd7a204c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"variableMap":{"val":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"e3ec7d8a-794c-11e5-bf62-5b4959fbce91","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"this":"this","com.graphhopper.util.Constants.VERSION_NODE":"com.graphhopper.util.Constants.VERSION_GEOMETRY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"e3ec7d8b-794c-11e5-bf62-6dc51de67aab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}