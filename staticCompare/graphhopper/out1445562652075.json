{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWithBounds":17,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":13,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":2,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":14,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":18,"com.graphhopper.reader.OSMReaderTest.testOneWay":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":0,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":4,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":1,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":8,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.reader.OSMReaderTest.testSort":12},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"e74c3b95-7922-11e5-a803-f55c2ca32721","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"variableMap":{"wayTypeEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"e74c89b6-7922-11e5-a803-9fc686122d02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"e74c89b7-7922-11e5-a803-75b8af42e0be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:913","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"variableMap":{"pillarNodes":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:700","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.clear()"},"status":-2},{"failures":[],"tindex":"e74c89b8-7922-11e5-a803-15a483435542","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:635","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e74c89b9-7922-11e5-a803-ebf0c8bd47d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:81","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"variableMap":{"str":"wayTypeName","name":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":-2},{"failures":[],"tindex":"e74cb0ca-7922-11e5-a803-c7ae791f0248","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"length","newSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:102","type":"CtIfImpl","sourcecode":"if ((byte[].int) > 255) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n    com.graphhopper.search.NameIndex.com.graphhopper.search.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n    java.lang.String = java.lang.String;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"e74cb0cb-7922-11e5-a803-856afac64c14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:770","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n    return false;\n"},"variableMap":{"ghStorage":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.StorableProperties.loadExisting()) {\n    com.graphhopper.storage.StorableProperties.checkVersions(false);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\");\n    if ((com.graphhopper.routing.util.EncodingManager) == null) {\n        if (java.lang.String.isEmpty())\n            throw new java.lang.IllegalStateException((\"No EncodingManager was configured. And no one was found in the graph: \" + (com.graphhopper.storage.Directory.getLocation())));\n        \n        int int = 4;\n        if (\"8\".equals(com.graphhopper.storage.StorableProperties.get(\"graph.bytesForFlags\")))\n            int = 8;\n        \n        com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int);\n    } else if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n        throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n    } \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\");\n    if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.Directory.getByteOrder())))))\n        throw new java.lang.IllegalStateException(((((\"Configured byteOrder (\" + java.lang.String) + \") is not equal to byteOrder of loaded graph (\") + (com.graphhopper.storage.Directory.getByteOrder())) + \")\"));\n    \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\");\n    com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\");\n    java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString();\n    if (!(java.lang.String.equals(java.lang.String)))\n        throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n    \n    for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n        if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n            throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n        \n    }\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e74cd7dc-7922-11e5-a803-6f3112ebf09d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"variableMap":{"sacScale":"lastName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return long;\n} "},"status":-2},{"failures":[],"tindex":"e74cd7dd-7922-11e5-a803-0735258a4d28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:67","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"e74cd7de-7922-11e5-a803-cddbe8469165","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.TLongIntHashMap[][int].put(long, int)"},"status":-2},{"failures":[],"tindex":"e74cfeef-7922-11e5-a803-ddd14b63cfc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"speed","prevOrientation":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:70","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeIteratorState.getDistance()) / double) * (com.graphhopper.routing.util.FastestWeighting.double)"},"status":-2},{"failures":[],"tindex":"e74cfef0-7922-11e5-a803-a563073a96b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":-2},{"failures":[],"tindex":"e74cfef1-7922-11e5-a803-c5091e3ab00a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:182","type":"CtInvocationImpl","sourcecode":"java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"))"},"status":-2},{"failures":[],"tindex":"e74cfef2-7922-11e5-a803-27f102899935","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:127","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"status":-2},{"failures":[],"tindex":"e74cfef3-7922-11e5-a803-93ce2edce995","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:594","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadNodesHeader()"},"variableMap":{"clonedG":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:416","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setEdgesHeader()"},"status":-2},{"failures":[],"tindex":"e74d2604-7922-11e5-a803-3f96d314924e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:153","type":"CtIfImpl","sourcecode":"if (double >= 64) {\n    int = 64;\n} else if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"e74d2605-7922-11e5-a803-d301e2bac14a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"E_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"e74d2606-7922-11e5-a803-0153c1fd1950","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"status":-2},{"failures":[],"tindex":"e74d2607-7922-11e5-a803-f39678b970f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:122","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n    double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-2},{"failures":[],"tindex":"e74d4d18-7922-11e5-a803-37264205a4c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:182","type":"CtBreakImpl","sourcecode":"break"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}