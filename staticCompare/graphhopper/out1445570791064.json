{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":22,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":59,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":48,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":25,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":9,"com.graphhopper.routing.PathTest.testWayList":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":20,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":40,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":71,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":21,"com.graphhopper.util.InstructionListTest.testWayList2":82,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":37,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":63,"com.graphhopper.util.InstructionListTest.testWayList":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":17,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":43,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":55,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":50,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":66},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"da81b836-7935-11e5-83ca-6b4333c1ea84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mode","edgeTo":"adjNode","edgeFrom":"mode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:884","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[],"tindex":"da81df47-7935-11e5-83ca-3531acb611a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"variableMap":{"com.graphhopper.storage.DAType.MMAP":"type","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DAType.this(com.graphhopper.storage.DAType.getMemRef(), com.graphhopper.storage.DAType.isStoring(), com.graphhopper.storage.DAType.isInteg(), com.graphhopper.storage.DAType.isAllowWrites(), boolean)"},"status":-2},{"failures":[],"tindex":"da81df48-7935-11e5-83ca-c1ad27b79552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n}"},"status":-2},{"failures":[],"tindex":"da81df49-7935-11e5-83ca-19be70fcedb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"b","adjNode":"b","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double).setFlags(com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-2},{"failures":[],"tindex":"da81df4a-7935-11e5-83ca-0ba74d125849","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"status":-2},{"failures":[],"tindex":"da81df4b-7935-11e5-83ca-9f2fa9e5730a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"backwardBit","key":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"da82065c-7935-11e5-83ca-6fea67836964","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:142","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"da82065d-7935-11e5-83ca-e71298794b89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"to","hash":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"da82065e-7935-11e5-83ca-394042645b36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BreadthFirstSearch:40","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n    continue;\n"},"variableMap":{"current":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:43","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.util.TIntArrayStack.size()) > 0) {\n    int = com.graphhopper.util.TIntArrayStack.pop();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n            if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n                com.graphhopper.util.TIntArrayStack.push(int);\n            } \n        }\n        com.graphhopper.coll.GHBitSet.add(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"da82065f-7935-11e5-83ca-ab9bdc2684de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:262","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"status":-2},{"failures":[],"tindex":"da820660-7935-11e5-83ca-d7bfaf188dfb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"distance","dY":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:111","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"da820661-7935-11e5-83ca-b9a672050c59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:683","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"tt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-2},{"failures":[],"tindex":"da822d72-7935-11e5-83ca-e534b9d172aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:73","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"da822d73-7935-11e5-83ca-1793765dac02","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"shortTripsSpeed","java.lang.Math.PI":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:540","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"da822d74-7935-11e5-83ca-53a448cbc1f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"da822d75-7935-11e5-83ca-4fbe87745909","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"backwardBit","flags":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:182","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-2},{"failures":[],"tindex":"da822d76-7935-11e5-83ca-7b04d064889b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:66","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n    com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"da822d77-7935-11e5-83ca-bf861f13aed4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"da825488-7935-11e5-83ca-af9990cdd012","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"da825489-7935-11e5-83ca-adf3621b3783","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.trimToSize()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}