{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":55,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":70,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":29,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":43,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":65,"com.graphhopper.util.SimpleIntDequeTest.testPush":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":75,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":51,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":60,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":53,"com.graphhopper.GraphHopperAPITest.testDisconnected179":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":64,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":42,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":72,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":39,"com.graphhopper.GraphHopperAPITest.testLoad":40,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":63,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":68,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":57,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":54},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"3b2c33eb-7938-11e5-b125-9355119fd23c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:182","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"intVal":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"3b2c5afc-7938-11e5-b125-2350a9095a84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:217","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-2},{"failures":[],"tindex":"3b2c5afd-7938-11e5-b125-11a62fa1b120","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"shiftSum","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-2},{"failures":[],"tindex":"3b2c5afe-7938-11e5-b125-9f4fc420f68d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:159","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"variableMap":{"counts":"com.graphhopper.util.EdgeIteratorState.K_UNFAVORED_EDGE","counter":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:150","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIteratorState.int))\n    return boolean;\n"},"status":-2},{"failures":[],"tindex":"3b2c820f-7938-11e5-b125-1ba1b165a03d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3b2c8210-7938-11e5-b125-9d4b73b9323d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"status":-2},{"failures":[],"tindex":"3b2c8211-7938-11e5-b125-c118c72ab24b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"size":"segmentSizePower","i":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >> (int)))"},"status":-2},{"failures":[],"tindex":"3b2c8212-7938-11e5-b125-5d78d91ef145","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:254","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/extensions>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()))"},"status":-2},{"failures":[],"tindex":"3b2c8213-7938-11e5-b125-919a1ec7bbd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:770","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n    return false;\n"},"variableMap":{"ghStorage":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.StorableProperties.loadExisting()) {\n    com.graphhopper.storage.StorableProperties.checkVersions(false);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\");\n    if ((com.graphhopper.routing.util.EncodingManager) == null) {\n        if (java.lang.String.isEmpty())\n            throw new java.lang.IllegalStateException((\"No EncodingManager was configured. And no one was found in the graph: \" + (com.graphhopper.storage.Directory.getLocation())));\n        \n        int int = 4;\n        if (\"8\".equals(com.graphhopper.storage.StorableProperties.get(\"graph.bytesForFlags\")))\n            int = 8;\n        \n        com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int);\n    } else if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n        throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n    } \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\");\n    if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.Directory.getByteOrder())))))\n        throw new java.lang.IllegalStateException(((((\"Configured byteOrder (\" + java.lang.String) + \") is not equal to byteOrder of loaded graph (\") + (com.graphhopper.storage.Directory.getByteOrder())) + \")\"));\n    \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\");\n    com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\");\n    java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString();\n    if (!(java.lang.String.equals(java.lang.String)))\n        throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n    \n    for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n        if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n            throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n        \n    }\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"3b2ca824-7938-11e5-b125-774a9860d478","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:48","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3b2ca825-7938-11e5-b125-33bcaa466736","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"segmentSizeInBytes","tmpSize":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failures":[],"tindex":"3b2ca826-7938-11e5-b125-81ef4db4c856","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:370","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:547","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"3b2ca827-7938-11e5-b125-3333f7cccffe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:101","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    if (double <= 0)\n        break;\n    \n    com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n} "},"status":-2},{"failures":[],"tindex":"3b2ca828-7938-11e5-b125-3351522e3f0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:206","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"3b2ccf39-7938-11e5-b125-2dc596397a45","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"index","nextEdgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:80","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"3b2ccf3a-7938-11e5-b125-21f5b74d0a31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:330","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.(getSize()) != (com.graphhopper.util.PointList.getSize())) || (com.graphhopper.util.PointList.(is3D()) != (com.graphhopper.util.PointList.is3D())))\n    return false;\n"},"variableMap":{"other":"other","this":"other"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:327","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.isEmpty()) && (com.graphhopper.util.PointList.isEmpty()))\n    return true;\n"},"status":-2},{"failures":[],"tindex":"3b2ccf3b-7938-11e5-b125-5d70a7d98519","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int)"},"variableMap":{"ghStorage":"routingGraph","nodeIndex":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n} else {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n}"},"status":-2},{"failures":[],"tindex":"3b2ccf3c-7938-11e5-b125-194ae3437eb2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"lon","hash":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:117","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-2},{"failures":[],"tindex":"3b2ccf3d-7938-11e5-b125-85c23ec84ae6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"variableMap":{"lastIndex":"newEdgeId","fromIndex":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:147","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3b2cf64e-7938-11e5-b125-174ff056ec0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}