{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":6,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":2,"com.graphhopper.reader.OSMReaderTest.testFerry":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":97,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":141,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":5,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":130,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":149,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":110,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":41,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":139,"com.graphhopper.reader.OSMReaderTest.testWithBounds":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":89,"com.graphhopper.reader.PrinctonReaderTest.testRead":62,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":79,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":1,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":93,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":9,"com.graphhopper.GraphHopperTest.testPrepare":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":39,"com.graphhopper.util.InstructionListTest.testWayList2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":114,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":23,"com.graphhopper.reader.OSMReaderTest.testFoot":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":8,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":100,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":152,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":142,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":32,"com.graphhopper.util.InstructionListTest.testWayList":46,"com.graphhopper.reader.OSMReaderTest.testOneWay":76,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.GraphHopperAPITest.testDisconnected179":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":83,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":131,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":105,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":24,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":124,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":37,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":42,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":154,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":96,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":50,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":52,"com.graphhopper.reader.OSMReaderTest.testSort":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":109,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":17,"com.graphhopper.reader.OSMReaderTest.testMain":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":20,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":147,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":143,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":117,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":121,"com.graphhopper.routing.PathTest.testWayList":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":118,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":71,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":106,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":21,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":111,"com.graphhopper.GraphHopperTest.testFootAndCar":58,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":4,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":103,"com.graphhopper.util.InstructionListTest.testCreateGPX":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":43,"com.graphhopper.GraphHopperTest.testPrepareOnly":129,"com.graphhopper.GraphHopperTest.testVia":55,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":108,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":38,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":59,"com.graphhopper.util.BitUtilBigTest.testToShort":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":116,"com.graphhopper.GraphHopperTest.testFootOnly":132,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":159,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":138,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":78,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":72,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":145,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":35,"com.graphhopper.reader.OSMReaderTest.testBarriers":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":102,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":133,"com.graphhopper.util.GHUtilityTest.testCopy":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":33},"transformations":[{"failures":[],"tindex":"03ae00d1-828e-11e5-8f0e-493e60af4390","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:62","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"03ae00d2-828e-11e5-8f0e-ff0b1bde2f2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"03ae27e3-828e-11e5-8f0e-ed4d049e7a29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"variableMap":{"unpavedBit":"flags","shift":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[128,129,130,55,56,57,58,59,60,131,61,132,133,64,65,66,67,68,69,70,71,72,73,74,75,134,76],"tindex":"03ae27e4-828e-11e5-8f0e-81ffb806da38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:62","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String))"},"status":-1},{"failures":[135],"tindex":"03ae27e5-828e-11e5-8f0e-c50131119eba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:48","type":"CtAssignmentImpl","sourcecode":"long[] = new long[int]"},"variableMap":{"mKeys":"keys","cap":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:73","type":"CtAssignmentImpl","sourcecode":"long[] = java.util.Arrays.copyOf(long[], int)"},"status":-1},{"failures":[],"tindex":"03ae27e6-828e-11e5-8f0e-abe06b82cdc2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"variableMap":{"from":"edge","to":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setName(java.lang.String)"},"status":0},{"failures":[86,136,90,92,93,94,95,96],"tindex":"03ae4ef7-828e-11e5-8f0e-79fc45c54a55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"03ae4ef8-828e-11e5-8f0e-1375d9223450","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:50","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"variableMap":{"lockDir":"cacheDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:152","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"status":-2},{"failures":[],"tindex":"03ae4ef9-828e-11e5-8f0e-73f5c56ad34b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:88","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.int) == (int)) {\n    (long)++;\n    if (((long) % 1000000) == 0)\n        com.graphhopper.coll.GHLongIntBTree.optimize();\n    \n} "},"status":-2},{"failures":[137,138,139,140,141,142,143,144],"tindex":"03ae4efa-828e-11e5-8f0e-2bc1596c4878","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"bits","nodeA":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-1},{"failures":[145,146,147,148,55,56,57,58,132,104,149,111,114,150,151,152],"tindex":"03ae4efb-828e-11e5-8f0e-cfb5c3593628","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"delta_lat","incDist2DSum":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:209","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-1},{"failures":[],"tindex":"03ae4efc-828e-11e5-8f0e-3d0bd56deb6c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"size":"indexDivisor","i":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"03ae760d-828e-11e5-8f0e-0577be38eac0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1066","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-2},{"failures":[],"tindex":"03ae760e-828e-11e5-8f0e-39d5b0c8dd36","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:73","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>()"},"variableMap":{"fromMap":"bestWeightMapFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:154","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>"},"status":0},{"failures":[82],"tindex":"03ae760f-828e-11e5-8f0e-4bc6aa1d42b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"allRemoved"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:190","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"03ae7610-828e-11e5-8f0e-89e91a372eac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"unpavedBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:631","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[0,153,50,51,52,53,54,154,57,58,59,61],"tindex":"03ae7611-828e-11e5-8f0e-5bbc7eecdfa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:787","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.putAlgorithmFactory(com.graphhopper.routing.util.Weighting, (com.graphhopper.routing.RoutingAlgorithmFactory = new com.graphhopper.routing.RoutingAlgorithmFactorySimple()))"},"status":-1},{"failures":[155,70,156,157],"tindex":"03ae7612-828e-11e5-8f0e-59f96612e4c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][(int + 1)]) & 255) << 8) | ((byte[][int]) & 255)))"},"variableMap":{"b":"b","offset":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][int]) & 255) << 8) | ((byte[][(int + 1)]) & 255)))"},"status":-1},{"failures":[158,159],"tindex":"03ae9d23-828e-11e5-8f0e-61c2ddee6c72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"status":-1},{"failures":[],"tindex":"03ae9d24-828e-11e5-8f0e-23c529510afc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"lat","minLatTmp":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:652","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"03ae9d24-828e-11e5-8f0e-23c529510afc","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"]},"type":"branch"}]}]}