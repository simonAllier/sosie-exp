{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":372,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":145,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":279,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":194,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":316,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":185,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":165,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":347,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.util.EdgeWrapperTest.testPut":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":371,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":335,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":137,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":355,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":122,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":332,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":350,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":123,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":196,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":271,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":178,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":304,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":227,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":353,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":117,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":234,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":60,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":66,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":57,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":243,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":149,"com.graphhopper.util.GHUtilityTest.testCopy":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":359,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":88,"com.graphhopper.routing.PathTest.testFindInstruction":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":48,"com.graphhopper.util.HelperTest.testCountBitValue":383,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":85,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":272,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":75,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":150,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":222,"com.graphhopper.util.InstructionListTest.testWayList2":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":131,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":211,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":138,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":223,"com.graphhopper.routing.PathBidirRefTest.testExtract":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":192,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":114,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":171,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":136,"com.graphhopper.util.GHUtilityTest.testSort2":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":369,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":70,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":197,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":220,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":151,"com.graphhopper.routing.PathTest.testTime":326,"com.graphhopper.util.InstructionListTest.testCreateGPX":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":164,"com.graphhopper.util.GHUtilityTest.testSortDirected":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":209,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":382,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":301,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":139,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":160,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":125,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":296,"com.graphhopper.routing.QueryGraphTest.testOneWay":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":100,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":121,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":157,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":62,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":241,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":354,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":274,"com.graphhopper.util.InstructionListTest.testWayList":284,"com.graphhopper.GraphHopperAPITest.testDisconnected179":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":152,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":147,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":180,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":348,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":265,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":376,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":235,"com.graphhopper.routing.PathTest.testWayList":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":120,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":361,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":183,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":53,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":331,"com.graphhopper.util.GHUtilityTest.testSort":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":169,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":82,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":228,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":312,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":43,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":170,"com.graphhopper.routing.PathTest.testFound":325,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":351,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":59,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":155,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":250,"com.graphhopper.util.InstructionListTest.testEmptyList":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":367,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":226,"com.graphhopper.reader.PrinctonReaderTest.testRead":35,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":200,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":64,"com.graphhopper.util.EdgeWrapperTest.testClear":379,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":168,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":128,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":232,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":76,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":162,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":249,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":349,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":338,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":322,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":229,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":300,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":188,"com.graphhopper.routing.PathBidirRefTest.testExtract2":334,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":106,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":118,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":215,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":233,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":219,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":89,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":364,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":189,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":266,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":286,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":161,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":208,"com.graphhopper.util.InstructionListTest.testFind":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":39},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"177adaae-82a5-11e5-8e48-5d6618bbfcb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,30,31,33,34],"tindex":"177b28cf-82a5-11e5-8e48-2b0d4cb908e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"E_DIST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"177b4fe0-82a5-11e5-8e48-45db0b11cf51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"length","newSize":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            gnu.trove.list.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2},{"failures":[378,379],"tindex":"177b4fe1-82a5-11e5-8e48-17dede075bb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"ref","hash":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:68","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"status":-1},{"failures":[],"tindex":"177b4fe2-82a5-11e5-8e48-a5623750dbd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:829","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[2,3,4,5,6,7,9,10,11,12,13,14,16,17,37,335,337,343,344,345,346,350,351,352,353,354,355,356,357,358,359,360,361,362,363,366,367,368,369,370,371,374,375,376,377],"tindex":"177b76f3-82a5-11e5-8e48-bf6c67ec91ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:211","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"177b76f4-82a5-11e5-8e48-e9dde72d1601","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"i","size":"node","lonSize":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:101","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"status":-2},{"failures":[],"tindex":"177b76f5-82a5-11e5-8e48-fb247f047444","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"entriesPerSegment","newBaseIndex":"currentEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:88","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    com.graphhopper.coll.CompressedArray.flush();\n} "},"status":-2},{"failures":[],"tindex":"177b9e06-82a5-11e5-8e48-a364164729dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:45","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[380],"tindex":"177b9e07-82a5-11e5-8e48-f9b54b33f39c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"capacity","mask":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:275","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[85,87,89,114,132],"tindex":"177b9e08-82a5-11e5-8e48-59ab344298a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":-1},{"failures":[284,381,286],"tindex":"177b9e09-82a5-11e5-8e48-71e19a0a5a21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"variableMap":{"y1":"len","y2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:179","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"status":-1},{"failures":[2,3,4,5,6,9,10,11,12,13,14,16,185,296,297,298,299,301,302,303,304,305,306,307,310,359,362,367,368,371,377],"tindex":"177bc51a-82a5-11e5-8e48-2ba24deaac16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:678","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.VirtualEdgeIterator == null) {\n    com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(10);\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.put(int, com.graphhopper.routing.VirtualEdgeIterator);\n} "},"status":-1},{"failures":[],"tindex":"177bc51b-82a5-11e5-8e48-f95c0e4d97bb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.bresenham(int, int, int, int, com.graphhopper.storage.index.PointEmitter)"},"status":-2},{"failures":[382],"tindex":"177bc51c-82a5-11e5-8e48-037944f8f7ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:254","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/extensions>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\")"},"status":-1},{"failures":[],"tindex":"177bc51d-82a5-11e5-8e48-75784a50e348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[381,286],"tindex":"177bec2e-82a5-11e5-8e48-bfa2e29715a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Node: \")"},"variableMap":{"txt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:251","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:azimuth>\")"},"status":-1},{"failures":[383],"tindex":"177bec2f-82a5-11e5-8e48-375797fdc986","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:110","type":"CtReturnImpl","sourcecode":"return int * (int)"},"variableMap":{"retBucket":"intVal","bucketSize":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:90","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[25,384,385],"tindex":"177bec30-82a5-11e5-8e48-29e66d2b4f3c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10).flush()"},"variableMap":{"heights":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:168","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess)).close(boolean)"},"status":-1},{"failures":[],"tindex":"177bec31-82a5-11e5-8e48-9952cf552bcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:292","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}