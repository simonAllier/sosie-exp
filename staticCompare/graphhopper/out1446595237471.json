{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":156,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":149,"com.graphhopper.reader.OSMReaderTest.testFerry":197,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":181,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":23,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":217,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":31,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":253,"com.graphhopper.coll.CompressedArrayTest.testCompress":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":243,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":248,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":51,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":67,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":260,"com.graphhopper.util.InstructionListTest.testWayList":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":76,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":205,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":107,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":153,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":73,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":211,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":96,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":34,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":251,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":178,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":225,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":118,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":58,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":86,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":88,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":210,"com.graphhopper.routing.PathTest.testWayList":93,"com.graphhopper.storage.MMapDataAccessTest.testCopy":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":164,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":42,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":136,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":80,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":258,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":154,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":18,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":123,"com.graphhopper.coll.CompressedArrayTest.testCompress2":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":38,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":11,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":171,"com.graphhopper.GraphHopperAPITest.testLoad":190,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":109,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":152,"com.graphhopper.util.GHUtilityTest.testCopy":183,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":230,"com.graphhopper.routing.PathTest.testFindInstruction":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":166,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":224,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":257,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":155,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":75,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":145,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":56,"com.graphhopper.reader.PrinctonReaderTest.testRead":188,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":169,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":120,"com.graphhopper.util.InstructionListTest.testWayList2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":26,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":147,"com.graphhopper.reader.OSMReaderTest.testOneWay":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":27,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":214,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":13,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":133,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":157,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":121,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":53,"com.graphhopper.routing.PathBidirRefTest.testExtract":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":106,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":180,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":227,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":208,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":6,"com.graphhopper.routing.PathBidirRefTest.testExtract2":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":161,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":129,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":191,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":119,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":39,"com.graphhopper.util.SimpleIntDequeTest.testPush":192,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":57,"com.graphhopper.storage.StorablePropertiesTest.testStore":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":5,"com.graphhopper.storage.GraphHopperStorageTest.testClone":135,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":236,"com.graphhopper.routing.PathTest.testTime":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":151,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":167,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":77,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":91,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":240,"com.graphhopper.util.InstructionListTest.testFind":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":112},"transformations":[{"failures":[],"tindex":"142764e4-8287-11e5-b81e-db241b4fdfb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"1427b305-8287-11e5-b81e-4dd1b6a19cd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:143","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('\\n')"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:141","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('=')"},"status":-1},{"failures":[13,14,15,16,17,18],"tindex":"1427b306-8287-11e5-b81e-25ad70de7a8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:134","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = com.graphhopper.storage.index.Location2IDQuadtree.fillQuadtree(((int) * (int)))"},"status":-1},{"failures":[],"tindex":"1427b307-8287-11e5-b81e-211ba29de482","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1131","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[19,20,21,22,23,24,25,26],"tindex":"1427b308-8287-11e5-b81e-0b94ab05b395","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"1427da19-8287-11e5-b81e-27873e8c8702","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"flags","tmpValue":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:373","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"1427da1a-8287-11e5-b81e-f123445ff660","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"1427da1b-8287-11e5-b81e-e7a524f82481","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:84","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1427da1c-8287-11e5-b81e-8927345b5399","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:55","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":0},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,8,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,10,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"1428012d-8287-11e5-b81e-a72dfda3dbac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"forwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:716","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[191,192],"tindex":"1428012e-8287-11e5-b81e-6106a7d7c870","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:79","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.SimpleIntDeque.getSize()"},"status":-1},{"failures":[193,194,195,196,197,198,199,200],"tindex":"1428012f-8287-11e5-b81e-47257dfcf44a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:336","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[201,202,13,14,15,16,18],"tindex":"14282840-8287-11e5-b81e-5d298b979b58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"variableMap":{"N_LEVEL":"segSize","level":"segSize","nodeIndex":"segSize","nodeCHEntryBytes":"segSize","nodesCH":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], int)"},"status":-1},{"failures":[],"tindex":"14282841-8287-11e5-b81e-d554117e3b18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"status":-2},{"failures":[203,204,112,205,206,207,208,124,209,210,134,211,212,213,214,146,215,149,150,216,217,156,158,218,219,162,220,221,222,166,223,224,225,226,178,227],"tindex":"14282842-8287-11e5-b81e-4161ed0686f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"nodeEntryBytes","index":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:332","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs((long * (int)), long)"},"status":-1},{"failures":[6,7,228,229,230,13,14,15,16,17,18,231,232,233,8,9,148,149,150,234,151,152,235,236,153,154,216,237,217,238,239,156,240,157,241,242,243,244,245,158,246,159,218,219,160,247,161,162,248,249,250,163,220,10,221,11,251,252,253],"tindex":"14284f53-8287-11e5-b81e-edaf51ee74ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites())"},"status":-1},{"failures":[],"tindex":"14284f54-8287-11e5-b81e-bdc004b9ce9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"dataAccessType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:265","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":0},{"failures":[57,59,69,72,75,82,254,255,85,86,87,256,257,258,259,260],"tindex":"14284f55-8287-11e5-b81e-1df30c285a93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:110","type":"CtReturnImpl","sourcecode":"return int * (int)"},"variableMap":{"retBucket":"minElem","bucketSize":"minElem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[7,8,10],"tindex":"14284f56-8287-11e5-b81e-0f276db749f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:349","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)]);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"14284f54-8287-11e5-b81e-bdc004b9ce9e","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.SynchedDAWrapper_long_getCapacity().b","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t6","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t8","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.DataAccess_setSegmentSize(int).b","com.graphhopper.GraphHopper_boolean_isAllowWrites().b","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType$MemRef,boolean,boolean,boolean,boolean).b","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.storage.DAType_java.lang.String_toString().t5","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().t1","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t3","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e14","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e12","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e11","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e3","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e2","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).e1","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).e2","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).b","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t14","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().e3","com.graphhopper.storage.SynchedDAWrapper_boolean_loadExisting().b","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t11","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_boolean_removeDir(java.io.File).b","com.graphhopper.storage.SynchedDAWrapper_long_getCapacity().b","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t6","com.graphhopper.GraphHopper_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t8","com.graphhopper.storage.GHDirectory_void_mkdirs().e1","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.DAType_java.lang.String_toString().t5","com.graphhopper.storage.RAMDataAccess_void_flush().e2","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_lockExists().b","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e1","com.graphhopper.storage.SynchedDAWrapper_void_setBytes(long,byte[],int).b","com.graphhopper.storage.SynchedDAWrapper_boolean_ensureCapacity(long).b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e3","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e2","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).e1","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).e2","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t14","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().e3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.SynchedDAWrapper_boolean_loadExisting().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e6","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t11","com.graphhopper.storage.SynchedDAWrapper_boolean_isClosed().b","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.SynchedDAWrapper_void_flush().b","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess).b","com.graphhopper.storage.RAMIntDataAccess_void_flush().l3","com.graphhopper.storage.SynchedDAWrapper_int_getInt(long).b","com.graphhopper.storage.RAMDataAccess_void_flush().l3","com.graphhopper.storage.SynchedDAWrapper_void_setHeader(int,int).b","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.DataAccess_setSegmentSize(int).b","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.RAMIntDataAccess_void_flush().l4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_com.graphhopper.storage.NativeFSLockFactory$NativeLock(java.io.File,java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.SynchedDAWrapper_void_setInt(long,int).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().t1","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t2","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e14","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e12","com.graphhopper.storage.RAMIntDataAccess_void_flush().e2","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e11","com.graphhopper.storage.DAType_java.lang.String_toString().e5","com.graphhopper.storage.DAType_java.lang.String_toString().e4","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.DataAccess_create(long).b","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).t1","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).b","com.graphhopper.storage.SynchedDAWrapper_void_getBytes(long,byte[],int).b"]},"type":"branch"}]}]}