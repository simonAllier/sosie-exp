{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":250,"com.graphhopper.reader.OSMReaderTest.testFerry":336,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":357,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":291,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":144,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":112,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":94,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":190,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":315,"com.graphhopper.GraphHopperTest.testPrepare":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":90,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":75,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":356,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":72,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":105,"com.graphhopper.GraphHopperTest.testLoadOSM":378,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":236,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":230,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":293,"com.graphhopper.reader.OSMReaderTest.testSort":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":114,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":310,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":209,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":174,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":56,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":333,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":324,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":65,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":271,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":14,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":69,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":154,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":292,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":145,"com.graphhopper.GraphHopperAPITest.testLoad":331,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":191,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":135,"com.graphhopper.reader.OSMReaderTest.testBarriers":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":71,"com.graphhopper.util.GHUtilityTest.testCopy":361,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":38,"com.graphhopper.routing.PathTest.testFindInstruction":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":136,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":249,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":210,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":163,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":101,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":319,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":225,"com.graphhopper.util.InstructionListTest.testWayList2":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":237,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":107,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":308,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":243,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":3,"com.graphhopper.routing.PathBidirRefTest.testExtract":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":233,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":269,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":369,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":368,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":241,"com.graphhopper.util.GHUtilityTest.testSort2":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":81,"com.graphhopper.reader.OSMReaderTest.testMain":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":309,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":158,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":218,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":294,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":6,"com.graphhopper.storage.GraphHopperStorageTest.testClone":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":317,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":193,"com.graphhopper.routing.PathTest.testTime":121,"com.graphhopper.util.InstructionListTest.testCreateGPX":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":239,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":382,"com.graphhopper.reader.OSMReaderTest.testRelation":43,"com.graphhopper.util.GHUtilityTest.testSortDirected":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":306,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":53,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":384,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":122,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":296,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":232,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":49,"com.graphhopper.routing.QueryGraphTest.testOneWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":228,"com.graphhopper.reader.OSMReaderTest.testWithBounds":347,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":383,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":167,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":150,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":179,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":66,"com.graphhopper.util.InstructionListTest.testWayList":15,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":304,"com.graphhopper.GraphHopperAPITest.testDisconnected179":332,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":113,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":335,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":298,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":216,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":375,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":103,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":203,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":88,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":36,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":173,"com.graphhopper.routing.PathTest.testWayList":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":89,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":280,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":141,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":126,"com.graphhopper.util.GHUtilityTest.testSort":362,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":170,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":275,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":283,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":108,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":129,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":131,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":288,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":224,"com.graphhopper.routing.PathTest.testFound":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":172,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":381,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":63,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":147,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":171,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":188,"com.graphhopper.util.InstructionListTest.testEmptyList":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":79,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":323,"com.graphhopper.reader.PrinctonReaderTest.testRead":334,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":155,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":1,"com.graphhopper.reader.OSMReaderTest.testFoot":337,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":329,"com.graphhopper.reader.OSMReaderTest.testOneWay":349,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":192,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":100,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":201,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":187,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":276,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":106,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":326,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":285,"com.graphhopper.routing.PathBidirRefTest.testExtract2":47,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":272,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":255,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":231,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":330,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":200,"com.graphhopper.GraphHopperTest.testFootAndCar":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":316,"com.graphhopper.GraphHopperTest.testPrepareOnly":365,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":252,"com.graphhopper.GraphHopperTest.testVia":373,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":76,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":345,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":286,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":17,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":204,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":265,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":305,"com.graphhopper.util.InstructionListTest.testFind":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":128},"transformations":[{"failures":[0,1,2],"tindex":"2976ec5f-82b1-11e5-98b5-a12d1acfd7b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:353","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[3],"tindex":"29771370-82b1-11e5-98b5-6d930fc4cb0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"acceptBit","tmpValue":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:212","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"29771371-82b1-11e5-98b5-3161c5bf6ba0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"variableMap":{"elem":"header","i":"length","element":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:105","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    java.io.RandomAccessFile.writeInt(int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"29771372-82b1-11e5-98b5-d9e011704964","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"b_lon_deg","delta_lon":"shrinkFactor","a_lon":"b_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:137","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"29771373-82b1-11e5-98b5-d94e84eed52f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"29771374-82b1-11e5-98b5-f7fb3d160e09","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[15,16,17],"tindex":"29773a85-82b1-11e5-98b5-efa24fca3b7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"prevTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:175","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.util.List<com.graphhopper.util.GPXEntry>.add(new com.graphhopper.util.GPXEntry(double , double , double , long));\n    boolean boolean = (int + 1) == int;\n    double double = boolean ? com.graphhopper.util.Instruction.getFirstLat() : com.graphhopper.util.PointList.getLatitude((int + 1));\n    double double = boolean ? com.graphhopper.util.Instruction.getFirstLon() : com.graphhopper.util.PointList.getLongitude((int + 1));\n    double double = boolean ? boolean ? com.graphhopper.util.Instruction.getFirstEle() : com.graphhopper.util.PointList.getElevation((int + 1)) : java.lang.Double.double;\n    if (boolean)\n        long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double))) / (double))));\n    else\n        long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double))) / (double))));\n    \n    double = double;\n    double = double;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"29773a86-82b1-11e5-98b5-537a5c49df7a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:261","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.getName()"},"status":-2},{"failures":[18,0,19,20,21,22,23,24,1,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"29773a87-82b1-11e5-98b5-79fe38478579","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:596","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.CHGraphImpl.double)))) << 2"},"variableMap":{"weight":"factor","weightLong":"value","com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"29773a88-82b1-11e5-98b5-4d6ddd14f71f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:270","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"variableMap":{"periodSW":"sw"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1052","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":0},{"failures":[16,17],"tindex":"29773a89-82b1-11e5-98b5-23c241058881","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"status":-1},{"failures":[46,47,48,48,49,49,18,18,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,6,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,7,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,11,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,14,331,332,333,334,335,336,337,338,339,340,341,342,343,344,44,345,346,347,348,349,350,351,352,353,15,354,17,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,45,381],"tindex":"2977619a-82b1-11e5-98b5-9f52700ebe3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"variableMap":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"2977619b-82b1-11e5-98b5-31eff429cb0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"basePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"status":-2},{"failures":[],"tindex":"297788ac-82b1-11e5-98b5-55c980a3a248","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-2},{"failures":[],"tindex":"297788ad-82b1-11e5-98b5-dd16ff586aaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"costInSeconds","lat":"defaultUTurnCost"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:60","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[288],"tindex":"297788ae-82b1-11e5-98b5-4746412decdd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT","angle":"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[125,351],"tindex":"297788af-82b1-11e5-98b5-91b1d6d5e5fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:295","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n    com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n    for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        double double = com.graphhopper.util.PointList.getLongitude(int);\n        if (!((int == 0) && (int == 0))) {\n            double double;\n            int int = int;\n            if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            } else {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            }\n            if (double < double) {\n                double = double;\n                int = int;\n            } \n        } \n        double = double;\n        double = double;\n    }\n}"},"status":-1},{"failures":[108],"tindex":"297788b0-82b1-11e5-98b5-a10937e7b59d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[382,383,384],"tindex":"2977afc1-82b1-11e5-98b5-a75a290dfc37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:83","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry) != null) {\n    (int)++;\n    com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry;\n} "},"status":-1},{"failures":[],"tindex":"2977afc2-82b1-11e5-98b5-3906269c13fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:218","type":"CtReturnImpl","sourcecode":"return long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"29773a88-82b1-11e5-98b5-4d6ddd14f71f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}