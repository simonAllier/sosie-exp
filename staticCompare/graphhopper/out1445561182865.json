{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":28,"com.graphhopper.routing.PathTest.testTime":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":25,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":9},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"7b93a9a2-791f-11e5-9284-01af229cb8dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , int)"},"status":-1},{"failures":[],"tindex":"7b93d0b3-791f-11e5-9284-554d7c9d1b7e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"size","nodeId":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:616","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member = com.graphhopper.reader.OSMRelation.getMembers().get(int);\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) != (com.graphhopper.reader.OSMRelation.Member.int))\n        continue;\n    \n    long long = com.graphhopper.reader.OSMRelation.Member.ref();\n    long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long);\n    long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n    if (long != long)\n        com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n    \n}"},"status":-2},{"failures":[],"tindex":"7b93d0b4-791f-11e5-9284-650dc68a2d4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"7b93d0b5-791f-11e5-9284-994e260ac25e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"7b93d0b6-791f-11e5-9284-cfe7a6a64f17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:307","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.close()"},"status":-2},{"failures":[],"tindex":"7b93f7c7-791f-11e5-9284-5ba143531a3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"stepX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:74","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"7b93f7c8-791f-11e5-9284-7b8f2368417d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-2},{"failures":[],"tindex":"7b93f7c9-791f-11e5-9284-effed6929218","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"nodeB","tmpErr":"updatedB","y1":"updatedB","dLon":"nodeB","sLat":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"status":-2},{"failures":[],"tindex":"7b93f7ca-791f-11e5-9284-230446c4ec0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"7b93f7cb-791f-11e5-9284-6d1476342027","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:92","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"7b93f7cc-791f-11e5-9284-4f8b9b25727b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:380","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\":\")"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":-2},{"failures":[],"tindex":"7b93f7cd-791f-11e5-9284-b7475532b459","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:120","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    if ((byte & byte) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    byte <<= 1;\n}"},"status":-2},{"failures":[],"tindex":"7b941ede-791f-11e5-9284-4fbc60d064ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"speed","angleXY":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:103","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long))\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"7b941edf-791f-11e5-9284-4179adcdbf51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"status":-2},{"failures":[],"tindex":"7b941ee0-791f-11e5-9284-25484b7b0ddc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"variableMap":{"k":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:84","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"7b941ee1-791f-11e5-9284-5dc98414920d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n    com.graphhopper.routing.util.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"7b941ee2-791f-11e5-9284-7f669278b9a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:74","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"7b941ee3-791f-11e5-9284-8d28a7c198f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:157","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 49"},"status":-2},{"failures":[],"tindex":"7b9445f4-791f-11e5-9284-8bc51f759237","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.MMAP"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:475","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"7b9445f5-791f-11e5-9284-31691c08d2bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}