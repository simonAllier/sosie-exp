{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":80,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":90,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":229,"com.graphhopper.reader.OSMReaderTest.testFerry":113,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":104,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":249,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":145,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":299,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":45,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":72,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":400,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":70,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":213,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":379,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":60,"com.graphhopper.GraphHopperTest.testLoadOSM":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":214,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":277,"com.graphhopper.reader.OSMReaderTest.testSort":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":106,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":294,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":164,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":131,"com.graphhopper.util.PointListTest.testReverse":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":262,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":94,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":317,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":208,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":67,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":341,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":154,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":332,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":146,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":109,"com.graphhopper.reader.OSMReaderTest.testBarriers":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":233,"com.graphhopper.util.GHUtilityTest.testCopy":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":372,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":186,"com.graphhopper.routing.PathTest.testFindInstruction":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":323,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":183,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":165,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":350,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":56,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":303,"com.graphhopper.util.InstructionListTest.testWayList2":363,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":222,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":377,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":292,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":179,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":135,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":304,"com.graphhopper.routing.PathBidirRefTest.testExtract":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":275,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":358,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":205,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":396,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.util.GHUtilityTest.testSort2":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":78,"com.graphhopper.reader.OSMReaderTest.testMain":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":345,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":278,"com.graphhopper.storage.GraphHopperStorageTest.testClone":138,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":301,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":235,"com.graphhopper.routing.PathTest.testTime":38,"com.graphhopper.util.InstructionListTest.testCreateGPX":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":248,"com.graphhopper.util.GHUtilityTest.testSortDirected":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":290,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":5,"com.graphhopper.GraphHopperTest.testFootOnly":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":39,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":244,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":216,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":87,"com.graphhopper.routing.QueryGraphTest.testOneWay":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":212,"com.graphhopper.reader.OSMReaderTest.testWithBounds":124,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":250,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":394,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":401,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":344,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":337,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":134,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":64,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":167,"com.graphhopper.util.InstructionListTest.testWayList":362,"com.graphhopper.GraphHopperAPITest.testDisconnected179":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":236,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":231,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":264,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":27,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":158,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":384,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":130,"com.graphhopper.routing.PathTest.testWayList":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":71,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":382,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":328,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":369,"com.graphhopper.util.GHUtilityTest.testSort":15,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":312,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":357,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":387,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":172,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":319,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":338,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":274,"com.graphhopper.routing.PathTest.testFound":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":254,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":61,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":334,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":239,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":76,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":307,"com.graphhopper.reader.PrinctonReaderTest.testRead":127,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":228,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":385,"com.graphhopper.reader.OSMReaderTest.testFoot":114,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":219,"com.graphhopper.reader.OSMReaderTest.testOneWay":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":313,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":147,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":283,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":55,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":156,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":175,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":242,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":271,"com.graphhopper.routing.PathBidirRefTest.testExtract2":34,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":373,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":209,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":296,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":215,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":314,"com.graphhopper.GraphHopperTest.testFootAndCar":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":325,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":187,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":73,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":272,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":159,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":364,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":245,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":289,"com.graphhopper.util.InstructionListTest.testFind":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":316},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"b3a82be6-7947-11e5-bfe9-55956d97a48e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15],"tindex":"b3a852f7-7947-11e5-bfe9-179f1eea4a7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,0,26,27,1,28,29,30,31,2,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,3,72,73,74,75,76,77,78,79,4,80,81,82,83,84,85,86,87,88,89,90,91,5,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,7,8,9,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,10,11,360,361,362,363,364,12,13,365,14,366,15,367],"tindex":"b3a87a08-7947-11e5-bfe9-cdb42cdb798c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:273","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"b3a8a119-7947-11e5-bfe9-7f3174ea8969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:79","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n} "},"status":0},{"failures":[],"tindex":"b3a8a11a-7947-11e5-bfe9-7d2827df373f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:221","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-2},{"failures":[20,22,1,41,61,64,65,69,3,72,76,77,79,4,82,84,85,86,95,119,155,166,200,218,249,260,299,310,342,353,368,366],"tindex":"b3a8a11b-7947-11e5-bfe9-dbd7b4dd9862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:240","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"b3a8a11c-7947-11e5-bfe9-f39addf4d12d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:201","type":"CtInvocationImpl","sourcecode":"java.util.zip.Inflater.setInput(byte[])"},"status":-2},{"failures":[369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,113,115,116,118,120,121,124,125,126],"tindex":"b3a8a11d-7947-11e5-bfe9-f9254023aaa2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"variableMap":{"wayTypeEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"b3a8c82e-7947-11e5-bfe9-692a0cd097e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:58","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"tag\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"k\");\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\");\n        if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n            com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n        \n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2},{"failures":[402,364],"tindex":"b3a8c82f-7947-11e5-bfe9-f9568f2b5179","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\").append(java.lang.String).append(\"<\/gh:direction>\")"},"status":-1},{"failures":[],"tindex":"b3a8c830-7947-11e5-bfe9-e9813a3b9d97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"variableMap":{"bytePos":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"b3a8ef41-7947-11e5-bfe9-a3a6903d579b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:609","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"shift":"visitedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:141","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b3a8ef42-7947-11e5-bfe9-cfdc0006aab5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:67","type":"CtIfImpl","sourcecode":"if ((int) >= (byte[].int)) {\n    int int = java.lang.Math.max(10, ((int)((int) * 1.5F)));\n    byte[] = java.util.Arrays.copyOf(byte[], int);\n} "},"status":-2},{"failures":[],"tindex":"b3a8ef43-7947-11e5-bfe9-174f67f12248","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"status":-2},{"failures":[],"tindex":"b3a8ef44-7947-11e5-bfe9-7954b100c652","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1106","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (boolean) && (boolean)"},"status":-2},{"failures":[],"tindex":"b3a8ef45-7947-11e5-bfe9-cd73ce596b9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-2},{"failures":[],"tindex":"b3a91656-7947-11e5-bfe9-1fbf44d00bc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:79","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"b3a91657-7947-11e5-bfe9-b37e8288b84c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    java.lang.Object = null;\nelse if (java.lang.Object instanceof java.lang.String) {\n    java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n    java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n    if (java.lang.String.isEmpty())\n        java.lang.Object = null;\n    else\n        try {\n            java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n        } catch (java.lang.NumberFormatException ex) {\n            return ;\n        }\n    \n} else\n    java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:85","type":"CtIfImpl","sourcecode":"if (\"ele\".equals(java.lang.String)) {\n    if (java.lang.Object == null)\n        java.lang.Object = null;\n    else if (java.lang.Object instanceof java.lang.String) {\n        java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n        java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n        if (java.lang.String.isEmpty())\n            java.lang.Object = null;\n        else\n            try {\n                java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n            } catch (java.lang.NumberFormatException ex) {\n                return ;\n            }\n        \n    } else\n        java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n    \n} "},"status":-2},{"failures":[],"tindex":"b3a91658-7947-11e5-bfe9-3d3188ca15ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:235","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"variableMap":{"file":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:214","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b3a93d69-7947-11e5-bfe9-132c975b902f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:47","type":"CtReturnImpl","sourcecode":"return true"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}