{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":52,"com.graphhopper.reader.OSMReaderTest.testFerry":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":174,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":178,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":197,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":193,"com.graphhopper.reader.OSMReaderTest.testWithBounds":125,"com.graphhopper.storage.MMapDataAccessTest.testSegments":169,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":4,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":37,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":11,"com.graphhopper.GraphHopperTest.testPrepare":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":107,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":85,"com.graphhopper.search.NameIndexTest.testFlush":200,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":99,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":156,"com.graphhopper.util.InstructionListTest.testWayList":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":103,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":56,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":100,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":6,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":78,"com.graphhopper.GraphHopperTest.testLoadOSM":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":59,"com.graphhopper.reader.OSMReaderTest.testSort":117,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":124,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":183,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":109,"com.graphhopper.storage.RAMDataAccessTest.testHeader":187,"com.graphhopper.storage.MMapDataAccessTest.testHeader":168,"com.graphhopper.routing.PathTest.testWayList":112,"com.graphhopper.storage.MMapDataAccessTest.testCopy":166,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":47,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":110,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":48,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":105,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":186,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":162,"com.graphhopper.util.GHUtilityTest.testSort":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":61,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":31,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":179,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":29,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":50,"com.graphhopper.GraphHopperAPITest.testLoad":149,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":138,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":177,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":82,"com.graphhopper.reader.OSMReaderTest.testBarriers":118,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":180,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":8,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":101,"com.graphhopper.util.GHUtilityTest.testCopy":147,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":189,"com.graphhopper.routing.PathTest.testFindInstruction":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":104,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":106,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":91,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":74,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":165,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":181,"com.graphhopper.util.InstructionListTest.testWayList2":144,"com.graphhopper.reader.OSMReaderTest.testFoot":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":65,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":127,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":84,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":191,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":89,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":119,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":157,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":108,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":20,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":151,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":133,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":152,"com.graphhopper.storage.RAMDataAccessTest.testCopy":185,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":130,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":129,"com.graphhopper.storage.RAMDataAccessTest.testSegments":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":69,"com.graphhopper.util.GHUtilityTest.testSort2":146,"com.graphhopper.reader.OSMReaderTest.testMain":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":22,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":35,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":121,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":0,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":176,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":33,"com.graphhopper.storage.StorablePropertiesTest.testStore":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":60,"com.graphhopper.storage.GraphHopperStorageTest.testClone":83,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":87,"com.graphhopper.GraphHopperTest.testFootAndCar":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":72,"com.graphhopper.GraphHopperTest.testPrepareOnly":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":54,"com.graphhopper.GraphHopperTest.testVia":134,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":2,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":45,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":36,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":94,"com.graphhopper.GraphHopperTest.testFootOnly":141,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":145,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":122,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":41,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":163,"com.graphhopper.util.InstructionListTest.testFind":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":70},"transformations":[{"failures":[0],"tindex":"d0690883-7935-11e5-b807-db86dd3a4407","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"variableMap":{"is3D":"reachedX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:83","type":"CtIfImpl","sourcecode":"if (int > 0.0) {\n    if (int >= int)\n        boolean = true;\n    \n} else if (int <= int) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"d06956a4-7935-11e5-b807-8f774280a88b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:878","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"mode":"mode","com.graphhopper.util.PointList.EMPTY":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-2},{"failures":[1],"tindex":"d06956a5-7935-11e5-b807-c5d92663bc21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:251","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"variableMap":{"acceptBit":"acceptBit","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"d0697db6-7935-11e5-b807-a120a7abf26d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-1},{"failures":[150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,13,174,175,176,177,178,179,180,181,24,25,26,27,182,28,70,183,184,185,186,187,188,189,190,81,191,192,120,193,194,195,196,197,134,138,139,198,140,199,200],"tindex":"d0697db7-7935-11e5-b807-bdc603ef4afa","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"length","key":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:103","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeLong(long)"},"status":-1},{"failures":[],"tindex":"d069a4c8-7935-11e5-b807-f54e7bd0545e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"x1":"lazyTime","x2":"lazyTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:291","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":-2},{"failures":[],"tindex":"d069a4c9-7935-11e5-b807-65c2b1bdfa4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"indi"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:269","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"d069a4ca-7935-11e5-b807-7f17ff9243b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"d069cbdb-7935-11e5-b807-cd20e3e38809","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"favoredHeading","speed":"favoredHeading"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:383","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.convertAzimuth2xaxisAngle(double)"},"status":-2},{"failures":[],"tindex":"d069cbdc-7935-11e5-b807-27f53c725732","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"d069cbdd-7935-11e5-b807-9dae7d68a838","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"segmentSizePower","length":"segmentSizePower","index":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"d069cbde-7935-11e5-b807-5905dd21089d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:531","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Shortcut should not need to return raw flags!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())))"},"status":-2},{"failures":[],"tindex":"d069f2ef-7935-11e5-b807-396c3fdfd847","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:191","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1))"},"variableMap":{"mSize":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:254","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"d069f2f0-7935-11e5-b807-3f5bfb5aa50c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:141","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = com.graphhopper.storage.VLongStorage.getBytes()"},"status":-2},{"failures":[],"tindex":"d069f2f1-7935-11e5-b807-cb0884c69d4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"status":-2},{"failures":[],"tindex":"d069f2f2-7935-11e5-b807-4f8b0627a119","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:214","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(com.graphhopper.storage.AbstractDataAccess.byte[])"},"variableMap":{"buf":"bb","com.graphhopper.storage.AbstractDataAccess.EMPTY":"values"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"d069f2f3-7935-11e5-b807-41fa51a228fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:102","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long)"},"status":-2},{"failures":[],"tindex":"d06a1a04-7935-11e5-b807-ad5cd3c19feb","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"d06a1a05-7935-11e5-b807-bb4a48e9da42","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:570","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"variableMap":{"edgeId":"i","virtualEdges":"virtualEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-2},{"failures":[],"tindex":"d06a1a06-7935-11e5-b807-e5de6805afd1","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"queryLat","minLatTmp":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:733","type":"CtLocalVariableImpl","sourcecode":"double double = double - (int * (double))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}