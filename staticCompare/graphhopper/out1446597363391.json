{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":98,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":4,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":25,"com.graphhopper.GraphHopperTest.testPrepare":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":36,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":40,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":9,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":120,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":45,"com.graphhopper.GraphHopperTest.testLoadOSM":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":106,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":114,"com.graphhopper.reader.OSMReaderTest.testSort":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":111,"com.graphhopper.reader.OSMReaderTest.testMain":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":8,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":108,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":101,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":68,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":128,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":77,"com.graphhopper.GraphHopperTest.testFootAndCar":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":53,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":103,"com.graphhopper.routing.PathTest.testTime":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.GraphHopperTest.testVia":118,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":92,"com.graphhopper.GraphHopperAPITest.testLoad":79,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":82,"com.graphhopper.GraphHopperTest.testFootOnly":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":3,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":88,"com.graphhopper.reader.OSMReaderTest.testBarriers":125,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":80,"com.graphhopper.util.GHUtilityTest.testCopy":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":110},"transformations":[{"failures":[],"tindex":"074bab99-828c-11e5-aedd-5bc16232b0aa","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":0},{"failures":[],"tindex":"074bd2aa-828c-11e5-aedd-090d4ea5c810","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.CompressedArray.flush()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"074bd2ab-828c-11e5-aedd-4953169c9491","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"mSize":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:212","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"074bd2ac-828c-11e5-aedd-9d3837d1f39c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"074bd2ad-828c-11e5-aedd-bf7e66c702f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:508","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60],"tindex":"074bd2ae-828c-11e5-aedd-7d86a36a2236","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"paveType","child":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:421","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"074bf9bf-828c-11e5-aedd-5b52e032ed35","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"queryLat","speed":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:764","type":"CtWhileImpl","sourcecode":"while (gnu.trove.iterator.TIntIterator.hasNext()) {\n    int int = gnu.trove.iterator.TIntIterator.next();\n    double double = com.graphhopper.storage.NodeAccess.getLat(int);\n    double double = com.graphhopper.storage.NodeAccess.getLon(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < double) {\n        double = double;\n    } \n}"},"status":0},{"failures":[],"tindex":"074bf9c0-828c-11e5-aedd-3d1db01a7df3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"skippedEdge1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n} else {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n}"},"status":-2},{"failures":[],"tindex":"074bf9c1-828c-11e5-aedd-296fb769117b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:291","type":"CtIfImpl","sourcecode":"if ((short < (-1000)) || (short > 12000))\n    short = java.lang.Short.short;\n"},"status":-2},{"failures":[],"tindex":"074bf9c2-828c-11e5-aedd-f35205f0dd96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"allowWrites","finishedFrom":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:101","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[61,62,63],"tindex":"074c20d3-828c-11e5-aedd-8dd8be53c429","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"variableMap":{"flags":"flags","reverseSpeedEncoder":"reverseSpeedEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"074c20d4-828c-11e5-aedd-73c309d2c2fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"074c20d5-828c-11e5-aedd-9dc0176d1e8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:420","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.flush()"},"status":-1},{"failures":[],"tindex":"074c20d6-828c-11e5-aedd-b7087abb8bc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"074c20d7-828c-11e5-aedd-29f6e8c21f89","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"left","angle":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:67","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"status":-2},{"failures":[76,77],"tindex":"074c20d8-828c-11e5-aedd-99bcda8883c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:91","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-1},{"failures":[78],"tindex":"074c20d9-828c-11e5-aedd-635d827d6d33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"bytePos","low":"address","guess":"bytePos","guessedKey":"bytePos","key":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:230","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putShort(((long) + long), short)"},"status":-1},{"failures":[69],"tindex":"074c47ea-828c-11e5-aedd-b1fdf3cd9cc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:285","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField()) {\n    for (long long = long + (int) ; long < long ; long += int) {\n        com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n    }\n} "},"status":-1},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,72,73,75,122,123,124,125,126,127,128,129],"tindex":"074c47eb-828c-11e5-aedd-7bc5ea751008","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.fillIDs((long >>> (byte[][int])), int, gnu.trove.set.hash.TIntHashSet, (int + 1))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"074bd2ad-828c-11e5-aedd-bf7e66c702f3","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.warn"]},"type":"staticDiff"}]}]}