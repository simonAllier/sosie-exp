{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":22,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":37,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":34,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":35,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":38,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":26,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":33,"com.graphhopper.routing.QueryGraphTest.testOneWay":36,"com.graphhopper.routing.PathTest.testWayList":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":40,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":27,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":31,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":28,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":1,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":6,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":4,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":7,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":12,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":21,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":11,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":10},"transformations":[{"failures":[],"tindex":"2e7db9c7-793f-11e5-b049-c347604ec157","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:166","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.size()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"2e7de0d8-793f-11e5-b049-fb4bf0343ae1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:99","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"2e7de0d9-793f-11e5-b049-f78b021199a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"status":-1},{"failures":[],"tindex":"2e7e07ea-793f-11e5-b049-1ba83879c0e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"2e7e07eb-793f-11e5-b049-0d20fef43101","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"2e7e07ec-793f-11e5-b049-65ceef96c057","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:230","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"2e7e2efd-793f-11e5-b049-410ff4ae557a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:394","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\nelse\n    java.lang.String += \", \" + java.lang.String;\n"},"variableMap":{"name":"acceptStr","refName":"acceptStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:252","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null) {\n    if (java.lang.String.isEmpty())\n        throw new java.lang.IllegalStateException((\"No EncodingManager was configured. And no one was found in the graph: \" + (com.graphhopper.storage.Directory.getLocation())));\n    \n    int int = 4;\n    if (\"8\".equals(com.graphhopper.storage.StorableProperties.get(\"graph.bytesForFlags\")))\n        int = 8;\n    \n    com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int);\n} else if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n    throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n} "},"status":-2},{"failures":[],"tindex":"2e7e2efe-793f-11e5-b049-51e47eeb1e36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:63","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"2e7e2eff-793f-11e5-b049-177e40dd1724","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:599","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"2e7e2f00-793f-11e5-b049-ed4ca2f1dfcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry()"},"status":-2},{"failures":[],"tindex":"2e7e2f01-793f-11e5-b049-f954754ec066","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:147","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.Instruction == null"},"status":-2},{"failures":[],"tindex":"2e7e2f02-793f-11e5-b049-072ed584c524","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"current","i":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:84","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getAdjNode()"},"status":-2},{"failures":[],"tindex":"2e7e2f03-793f-11e5-b049-c7d3a0bd8d1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:284","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\")"},"status":-2},{"failures":[],"tindex":"2e7e5614-793f-11e5-b049-bfffd1eaea9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"lastInBoundsPillarNode","degree":"lastInBoundsPillarNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:704","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"2e7e5615-793f-11e5-b049-8d50fd5e6b45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"remainingSegNo","nodeA":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:424","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.clean(int, java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"2e7e5616-793f-11e5-b049-553bd6e4789c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:50","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"variableMap":{"min":"lat","time":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-2},{"failures":[],"tindex":"2e7e5617-793f-11e5-b049-e55e3397b938","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"sw2":"neighborSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:343","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[],"tindex":"2e7e5618-793f-11e5-b049-4317f7a8b2af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:84","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"2e7e5619-793f-11e5-b049-fdd13117601c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:132","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DataAccess.setInt(((long + (int)) + 4), com.graphhopper.util.BitUtil.getIntHigh(long));\n"},"status":-2},{"failures":[],"tindex":"2e7e561a-793f-11e5-b049-d9b0ec5e9810","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:494","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"Cannot create edge if graph is already frozen\");\n"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.BaseGraph.isFrozen()))\n    com.graphhopper.storage.BaseGraph.freeze();\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}