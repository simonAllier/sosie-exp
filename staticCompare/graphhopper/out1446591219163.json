{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":138,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":100,"com.graphhopper.routing.PathTest.testFindInstruction":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":132,"com.graphhopper.reader.OSMReaderTest.testFerry":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":45,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":108,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":137,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":177,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":60,"com.graphhopper.storage.VLongStorageTest.testWrite":0,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":150,"com.graphhopper.reader.OSMReaderTest.testWithBounds":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":74,"com.graphhopper.reader.PrinctonReaderTest.testRead":4,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":129,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":131,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":134,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":99,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":64,"com.graphhopper.util.InstructionListTest.testWayList2":97,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":119,"com.graphhopper.reader.OSMReaderTest.testFoot":7,"com.graphhopper.search.NameIndexTest.testFlush":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":140,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":139,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":161,"com.graphhopper.util.InstructionListTest.testWayList":96,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":130,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":57,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":183,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":54,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":123,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":87,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":142,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":80,"com.graphhopper.routing.PathBidirRefTest.testExtract":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":72,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":24,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":81,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":19,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":127,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":21,"com.graphhopper.reader.OSMReaderTest.testSort":172,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":182,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":59,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":154,"com.graphhopper.reader.OSMReaderTest.testMain":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":157,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":76,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":67,"com.graphhopper.routing.PathBidirRefTest.testExtract2":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":37,"com.graphhopper.routing.PathTest.testWayList":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":68,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":180,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":144,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":61,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":3,"com.graphhopper.GraphHopperTest.testFootAndCar":28,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":136,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":58,"com.graphhopper.GraphHopperTest.testPrepareOnly":176,"com.graphhopper.GraphHopperTest.testVia":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":82,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":133,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":112,"com.graphhopper.GraphHopperAPITest.testLoad":18,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":145,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":66,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":102,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":11,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":165,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":39,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":153,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":89,"com.graphhopper.util.InstructionListTest.testFind":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":50,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":70,"com.graphhopper.util.GHUtilityTest.testCopy":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":149},"transformations":[{"failures":[],"tindex":"b90e67cf-827d-11e5-9412-472e93ee2c19","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[0,1,2,3],"tindex":"b90eb5f0-827d-11e5-9412-d9dfe303d20c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:45","type":"CtAssignmentImpl","sourcecode":"int = ((int)(long))"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"b90eb5f1-827d-11e5-9412-990acb5d103f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:268","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[22,23,25,28,32,159,160,161,53,60,61,64,162,163,164,165,166],"tindex":"b90edd02-827d-11e5-9412-9da991bd635c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"a_lon_deg","tmp":"shrinkFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:177","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[167],"tindex":"b90edd03-827d-11e5-9412-47f6b8146613","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:248","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:168","type":"CtReturnImpl","sourcecode":"return ((int) + \"->\") + (int)"},"status":-1},{"failures":[],"tindex":"b90edd04-827d-11e5-9412-b9b40528ee8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"b90f0415-827d-11e5-9412-eff7d33ffbf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"value","backwardBit":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"b90f0416-827d-11e5-9412-676afc56ab0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:396","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"b90f0417-827d-11e5-9412-953bb53764d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:178","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.QueryResult.getQueryPoint().double"},"status":-2},{"failures":[9,12,168,169,170,171],"tindex":"b90f0418-827d-11e5-9412-939d007ff276","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:239","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"variableMap":{"allowedHighwayTags":"restrictedValues","highwayValue":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:250","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[6,7,8,172,9,173,174,10,11,12,13,14,15,16,175,176,177,25,26,27,28,29,30,178,31,32,179],"tindex":"b90f2b29-827d-11e5-9412-4bddfc73e7d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[180,181,182,183],"tindex":"b90f2b2a-827d-11e5-9412-0d5440275aed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"speed","segmentSizeIntsPower":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"b90f2b2b-827d-11e5-9412-9740218993c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"deltaLon","dMinLat":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:732","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":0},{"failures":[],"tindex":"b90f523c-827d-11e5-9412-3f9b154208b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:145","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-2},{"failures":[6,7,8,172,9,173,174,10,11,12,13,14,15,16,175,176,177,25,26,27,28,29,30,178,31,32,179],"tindex":"b90f523d-827d-11e5-9412-731fb64db5d1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"towerNodeDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":-1},{"failures":[],"tindex":"b90f523e-827d-11e5-9412-35484cb7a3a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:408","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.isClosed()"},"status":-2},{"failures":[98,184],"tindex":"b90f523f-827d-11e5-9412-a7e8bd8abfdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-1},{"failures":[],"tindex":"b90f7950-827d-11e5-9412-654c365748b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"edgeId","NO_TURN_ENTRY":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}