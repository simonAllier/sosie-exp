{"failureDictionary":{"com.graphhopper.routing.PathTest.testFindInstruction":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":93,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":17,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":36,"com.graphhopper.reader.OSMReaderTest.testWithBounds":104,"com.graphhopper.util.shapes.CircleTest.testContains":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":52,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":129,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":130,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":31,"com.graphhopper.reader.OSMReaderTest.testFoot":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":116,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":23,"com.graphhopper.reader.OSMReaderTest.testOneWay":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":45,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":84,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":117,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":78,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":54,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":120,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":72,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":125,"com.graphhopper.routing.util.EncodedValueTest.testSwap":47,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":133,"com.graphhopper.GraphHopperTest.testLoadOSM":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":74,"com.graphhopper.reader.OSMReaderTest.testSort":98,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":53,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":103,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":18,"com.graphhopper.reader.OSMReaderTest.testMain":97,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":94,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":76,"com.graphhopper.routing.PathTest.testWayList":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":9,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":91,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":48,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":81,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":118,"com.graphhopper.search.NameIndexTest.testPut":135,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":64,"com.graphhopper.reader.OSMReaderTest.testRelation":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":73,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":89,"com.graphhopper.GraphHopperTest.testPrepareOnly":107,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":12,"com.graphhopper.GraphHopperTest.testVia":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":57,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":67,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":83,"com.graphhopper.GraphHopperAPITest.testLoad":3,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":110,"com.graphhopper.util.TranslationMapTest.testToString":2,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":121,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":51,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":102,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":77,"com.graphhopper.util.InstructionListTest.testFind":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":56,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":25,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":21,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":87},"transformations":[{"failures":[0,1],"tindex":"dbf17e1d-8271-11e5-9932-89d9e531dc24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"i","start":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:166","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[2],"tindex":"dbf1a52e-8271-11e5-9932-05d644b135ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":-1},{"failures":[],"tindex":"dbf1cc3f-8271-11e5-9932-c31ddba43ff7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:370","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], int, int)"},"status":0},{"failures":[3,4,5,6,7],"tindex":"dbf1cc40-8271-11e5-9932-5131b20752e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"tmp","weights":"longitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:161","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"dbf1cc41-8271-11e5-9932-1ba8dfe37f85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18],"tindex":"dbf1cc42-8271-11e5-9932-6720153e5749","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"variableMap":{"toLat":"toLat","fromLat":"fromLat","this":"this","dLon":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:78","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-1},{"failures":[],"tindex":"dbf1f253-8271-11e5-9932-358963b5d0e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:367","type":"CtIfImpl","sourcecode":"if (double <= (-(java.lang.Double.double)))\n    return -(java.lang.Integer.int);\n"},"status":-2},{"failures":[19,20,21,22,23],"tindex":"dbf1f254-8271-11e5-9932-4b379003fe5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:187","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"dbf1f255-8271-11e5-9932-5b4e550a5a1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"status":-1},{"failures":[],"tindex":"dbf1f256-8271-11e5-9932-79e238476cc8","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"variableMap":{"degree":"prevOrNextEdgeId","lat":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:80","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int)"},"status":-2},{"failures":[],"tindex":"dbf1f257-8271-11e5-9932-7b3ca4bcb64d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"capacity","flags":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:255","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,4,5,6,110,111,112,113,7,114],"tindex":"dbf21968-8271-11e5-9932-3130ac10db85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:386","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"Cannot add edge or node after baseGraph.freeze was called\");\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:934","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHBitSet) == null)\n    com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.BaseGraph.getNodes());\n"},"status":-1},{"failures":[],"tindex":"dbf21969-8271-11e5-9932-3decce54a954","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getOsmWayIdSet().size()"},"status":-2},{"failures":[],"tindex":"dbf2196a-8271-11e5-9932-4b763e04e5b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"com.graphhopper.GraphHopper.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":-2},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"dbf2407b-8271-11e5-9932-4f324563bc66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:283","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"variableMap":{"eIter":"outgoingEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:600","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[101],"tindex":"dbf2407c-8271-11e5-9932-f780d3e86d22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:198","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader)"},"variableMap":{"parser":"parser","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:209","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"dbf2407d-8271-11e5-9932-a5d7be75c426","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[134,135],"tindex":"dbf2407e-8271-11e5-9932-29fed3c9b527","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"dbf1cc3f-8271-11e5-9932-c31ddba43ff7","diffs":[{"methodsDiff":{"delete":["java.nio.ByteBuffer.get"]},"type":"staticDiff"}]}]}