{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":132,"com.graphhopper.routing.PathTest.testFindInstruction":39,"com.graphhopper.reader.OSMReaderTest.testFerry":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":41,"com.graphhopper.routing.QueryGraphTest.testOneWay":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":43,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":83,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.util.InstructionListTest.testWayList2":139,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":57,"com.graphhopper.reader.OSMReaderTest.testFoot":145,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":19,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":112,"com.graphhopper.util.InstructionListTest.testWayList":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":113,"com.graphhopper.reader.OSMReaderTest.testOneWay":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":79,"com.graphhopper.GraphHopperAPITest.testDisconnected179":136,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":62,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":125,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":107,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":69,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":49,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":72,"com.graphhopper.reader.OSMReaderTest.testSort":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":119,"com.graphhopper.util.GHUtilityTest.testSort2":141,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":154,"com.graphhopper.reader.OSMReaderTest.testMain":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":87,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":85,"com.graphhopper.routing.PathTest.testWayList":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":104,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":89,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":92,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":124,"com.graphhopper.storage.GraphHopperStorageTest.testClone":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":76,"com.graphhopper.util.GHUtilityTest.testSort":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":117,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":42,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":134,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":64,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":153,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":100,"com.graphhopper.GraphHopperAPITest.testLoad":135,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":90,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":16,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":95,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":96,"com.graphhopper.util.InstructionListTest.testFind":137,"com.graphhopper.reader.OSMReaderTest.testBarriers":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.util.GHUtilityTest.testCopy":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":118},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"6a46f7d9-7918-11e5-92ec-ed4d6a85a1f4","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"nodeId","currentIndex":"nodeId","bucketSize":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"6a4745fa-7918-11e5-92ec-4b45b56b200e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"towerNodeDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":-2},{"failures":[],"tindex":"6a476d0b-7918-11e5-92ec-755a94b98f80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"left","delta":"dLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:67","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"6a476d0c-7918-11e5-92ec-ff844f86410b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:126","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-2},{"failures":[],"tindex":"6a476d0d-7918-11e5-92ec-1b31feaaabae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"adjNode","b":"adjNode","baseGraph":"mainGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"status":-2},{"failures":[],"tindex":"6a47941e-7918-11e5-92ec-4345b94b8a86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:78","type":"CtTryImpl","sourcecode":"try {\n    if ((com.graphhopper.storage.VLongStorage) == null)\n        com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)));\n    \n    long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(new com.graphhopper.util.shapes.GHPoint(double , double));\n    com.graphhopper.storage.VLongStorage.writeVLong(long);\n    (int)++;\n    if ((int) >= (int)) {\n        com.graphhopper.coll.CompressedArray.flush();\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"6a47941f-7918-11e5-92ec-37357748c715","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:58","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-2},{"failures":[],"tindex":"6a479420-7918-11e5-92ec-871cb5eba7b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:93","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.closeEntry()"},"status":-2},{"failures":[],"tindex":"6a479421-7918-11e5-92ec-1501945a2e59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"variableMap":{"closed":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:149","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.routing.AStar.AStarEdge.int, int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6a47bb32-7918-11e5-92ec-a522f1caad36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"queryDistance","x":"dist","absY":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:81","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"6a47bb33-7918-11e5-92ec-618a2b8293fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"6a47bb34-7918-11e5-92ec-0567c94a3908","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"maxLevel","edge2":"w_toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:602","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"6a47bb35-7918-11e5-92ec-3fd755ce6000","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:70","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6a47e246-7918-11e5-92ec-5ba5e7c5461e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-2},{"failures":[],"tindex":"6a47e247-7918-11e5-92ec-0550a76f4b51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"wayGeometry","da":"wayGeometry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:858","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int)"},"status":-2},{"failures":[],"tindex":"6a47e248-7918-11e5-92ec-f7512f35924d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"variableMap":{"minLat":"lonUnits","lat":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:103","type":"CtLocalVariableImpl","sourcecode":"double double = ((long / (int)) * (double)) + (com.graphhopper.util.shapes.BBox.double)"},"status":-2},{"failures":[],"tindex":"6a47e249-7918-11e5-92ec-3f92ddc92c3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"deltaX","x":"maxX","absY":"maxX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"6a48095a-7918-11e5-92ec-c105fb830447","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:174","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"6a48095b-7918-11e5-92ec-41aa145b39e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1052","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[],"tindex":"6a48095c-7918-11e5-92ec-fb2259a84e48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:496","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}