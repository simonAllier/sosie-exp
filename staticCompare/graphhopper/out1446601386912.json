{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":136,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":21,"com.graphhopper.util.BitUtilBigTest.testToDouble":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":88,"com.graphhopper.routing.PathTest.testFindInstruction":144,"com.graphhopper.reader.OSMReaderTest.testFerry":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":126,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":115,"com.graphhopper.routing.QueryGraphTest.testOneWay":124,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":13,"com.graphhopper.reader.OSMReaderTest.testWithBounds":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":134,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":8,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":120,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":82,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":19,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":11,"com.graphhopper.GraphHopperTest.testPrepare":31,"com.graphhopper.util.InstructionListTest.testWayList2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":135,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":80,"com.graphhopper.reader.OSMReaderTest.testFoot":40,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":92,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":127,"com.graphhopper.util.InstructionListTest.testWayList":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":18,"com.graphhopper.reader.OSMReaderTest.testOneWay":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":60,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":23,"com.graphhopper.GraphHopperAPITest.testDisconnected179":148,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":36,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":85,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":44,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":143,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":106,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":141,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":79,"com.graphhopper.GraphHopperTest.testLoadOSM":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":108,"com.graphhopper.reader.OSMReaderTest.testSort":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":96,"com.graphhopper.reader.OSMReaderTest.testMain":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":17,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":53,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":62,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":114,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":140,"com.graphhopper.routing.PathTest.testWayList":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":139,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":98,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":100,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":133,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":7,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":58,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":89,"com.graphhopper.util.InstructionListTest.testCreateGPX":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":14,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":121,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":24,"com.graphhopper.util.BitUtilBigTest.testToLong":27,"com.graphhopper.GraphHopperTest.testVia":30,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":37,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":116,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":107,"com.graphhopper.GraphHopperAPITest.testLoad":147,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":99,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":119,"com.graphhopper.GraphHopperTest.testFootOnly":1,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":103,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":142,"com.graphhopper.reader.OSMReaderTest.testBarriers":43,"com.graphhopper.util.InstructionListTest.testFind":69,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":97,"com.graphhopper.util.GHUtilityTest.testCopy":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":95},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"65804095-8295-11e5-8f18-4deb9628ef74","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:225","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"variableMap":{"bm":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:833","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[26,27],"tindex":"658067a6-8295-11e5-8f18-33eb0497e620","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"offset","hash":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:81","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[28,0,29,30,31,32,33,34,35,36,37,1,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"658067a7-8295-11e5-8f18-8b4e1cae0326","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:105","type":"CtIfImpl","sourcecode":"if (!(java.io.File.mkdirs()))\n    throw new java.lang.RuntimeException((((\"Directory \" + (java.io.File)) + \" does not exist and cannot created to place lock file there: \") + (java.io.File)));\n"},"variableMap":{"lockFile":"file","lockDir":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:85","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(java.io.File) , 50000);\n} catch (java.io.FileNotFoundException e) {\n    throw new java.lang.RuntimeException(java.io.FileNotFoundException);\n}"},"status":-1},{"failures":[],"tindex":"65808eb8-8295-11e5-8f18-f3c622a428d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:917","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"65808eb9-8295-11e5-8f18-91ad2d474cb3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"approx","v":"approx"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":0},{"failures":[],"tindex":"65808eba-8295-11e5-8f18-f556a82782f0","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:564","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(java.lang.String)"},"status":-2},{"failures":[],"tindex":"65808ebb-8295-11e5-8f18-9d8948fe9794","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"variableMap":{"str":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:713","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[2,3,6,7,10,15,16,53,24,44,45],"tindex":"65808ebc-8295-11e5-8f18-25711dbb62a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:393","type":"CtReturnImpl","sourcecode":"return ((int)(double * (com.graphhopper.util.Helper.float)))"},"status":-1},{"failures":[54,55,56,25],"tindex":"65808ebd-8295-11e5-8f18-d931f42fb065","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67],"tindex":"6580b5ce-8295-11e5-8f18-a92df2cc3f0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[68,69,70,54,71,56,72,73,74,75,76,77,30,31,32,33,34,35,37,1,2,78,3,79,4,5,6,80,7,81,8,9,82,10,83,11,12,84,13,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,14,100,101,102,103,104,105,106,107,108,109,110,111,112,15,113,16,114,17,18,19,115,116,117,118,53,119,120,121,122,123,20,124,21,125,126,127,128,129,130,131,132,133,134,135,136,137,22,138,139,23,24,140,141,142,143,25,144,145,146,147,148,41,42,43,44,45],"tindex":"6580b5cf-8295-11e5-8f18-116cb28d0b2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:345","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int)"},"variableMap":{"i":"mode","fullPL":"pillarNodes","basePoints":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:888","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[],"tindex":"6580b5d0-8295-11e5-8f18-1fc9aad27c6f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"status":0},{"failures":[],"tindex":"6580b5d1-8295-11e5-8f18-b7e82425d79a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:235","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"status":0},{"failures":[],"tindex":"6580dce2-8295-11e5-8f18-717ae45b39f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:86","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"variableMap":{"lastKey":"includeWay","key":"relationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:371","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleWayTags(com.graphhopper.reader.OSMWay, long, long)"},"status":-2},{"failures":[],"tindex":"6580dce3-8295-11e5-8f18-b7fad9f46968","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:72","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:84","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream = null"},"status":-2},{"failures":[],"tindex":"6580dce4-8295-11e5-8f18-91bfea0bb4db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"variableMap":{"pavementName":"debugInfo","wayTypeName":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:51","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[],"tindex":"6580dce5-8295-11e5-8f18-9b749f2f5fd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-2},{"failures":[],"tindex":"6580dce6-8295-11e5-8f18-05c515d92f12","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"variableMap":{"cap":"key","bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:66","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long)"},"status":-2},{"failures":[27],"tindex":"6580dce7-8295-11e5-8f18-b12c5f89d324","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:78","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 4)] = ((byte)(long >> 32))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 24))"},"status":-1},{"failures":[55,56],"tindex":"658103f8-8295-11e5-8f18-59cb2d71a8fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:245","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"variableMap":{"points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:168","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6580b5d1-8295-11e5-8f18-b7e82425d79a","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}