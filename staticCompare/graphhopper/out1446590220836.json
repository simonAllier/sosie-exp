{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":145,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":170,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":177,"com.graphhopper.reader.OSMReaderTest.testFerry":78,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":167,"com.graphhopper.routing.QueryGraphTest.testOneWay":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":72,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":192,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":19,"com.graphhopper.reader.OSMReaderTest.testWithBounds":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":118,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":119,"com.graphhopper.coll.CompressedArrayTest.testCompress":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":155,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":163,"com.graphhopper.GraphHopperTest.testPrepare":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":151,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":127,"com.graphhopper.util.InstructionListTest.testWayList":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":136,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":122,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":133,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":77,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":190,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":48,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":166,"com.graphhopper.GraphHopperTest.testLoadOSM":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":164,"com.graphhopper.reader.OSMReaderTest.testSort":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":139,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":120,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":199,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":149,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":173,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":184,"com.graphhopper.routing.PathTest.testWayList":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":134,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":57,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":28,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":141,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":189,"com.graphhopper.util.GHUtilityTest.testSort":112,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":130,"com.graphhopper.coll.IntIntBinHeapTest.testSize":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":56,"com.graphhopper.coll.CompressedArrayTest.testCompress2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":4,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":37,"com.graphhopper.GraphHopperAPITest.testLoad":115,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":148,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":61,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":29,"com.graphhopper.reader.OSMReaderTest.testBarriers":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":50,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":17,"com.graphhopper.util.GHUtilityTest.testCopy":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":132,"com.graphhopper.routing.PathTest.testFindInstruction":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":5,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":140,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":157,"com.graphhopper.reader.PrinctonReaderTest.testRead":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":43,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":162,"com.graphhopper.util.InstructionListTest.testWayList2":183,"com.graphhopper.reader.OSMReaderTest.testFoot":79,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":178,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":196,"com.graphhopper.reader.OSMReaderTest.testOneWay":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":206,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":69,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":154,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":98,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":94,"com.graphhopper.util.GHUtilityTest.testSort2":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":46,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":12,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":195,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":116,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":18,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":159,"com.graphhopper.storage.GraphHopperStorageTest.testClone":30,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":34,"com.graphhopper.GraphHopperTest.testFootAndCar":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":42,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":158,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":6,"com.graphhopper.util.GHUtilityTest.testSortDirected":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":67,"com.graphhopper.GraphHopperTest.testPrepareOnly":92,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":137,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":59,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":171,"com.graphhopper.GraphHopperTest.testFootOnly":107,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":205,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":186,"com.graphhopper.util.InstructionListTest.testFind":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":64},"transformations":[{"failures":[],"tindex":"66054d85-827b-11e5-a3ce-5192737be1b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:242","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1],"tindex":"66059ba6-827b-11e5-a3ce-a16fca2207bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:438","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":-1},{"failures":[],"tindex":"66059ba7-827b-11e5-a3ce-037f3f3dbe3b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:641","type":"CtAssignmentImpl","sourcecode":"double = (((double) * 2) + long) / 3"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,1,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"66059ba8-827b-11e5-a3ce-2b80201304dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:339","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"6605c2b9-827b-11e5-a3ce-e7fb7fc0adcb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:76","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>();\n    java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>);\n    com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation();\n    java.lang.String java.lang.String = com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation);\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = com.graphhopper.util.InstructionAnnotation.getMessage();\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"text\", com.graphhopper.util.Helper.firstBig(java.lang.String));\n    if (!(com.graphhopper.util.InstructionAnnotation.isEmpty())) {\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_text\", com.graphhopper.util.InstructionAnnotation.getMessage());\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_importance\", com.graphhopper.util.InstructionAnnotation.getImportance());\n    } \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime());\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3));\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign());\n    java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON());\n    int int = int + (com.graphhopper.util.Instruction.getPoints().size());\n    if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n        int--;\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int));\n    int = int;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"6605e9ca-827b-11e5-a3ce-e1e6d4bee8c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"status":-2},{"failures":[],"tindex":"6605e9cb-827b-11e5-a3ce-917ae27668f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:74","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"6605e9cc-827b-11e5-a3ce-b71c2aac2e86","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"edgeEntryBytes","hash":"edgeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:311","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[76,77],"tindex":"6605e9cd-827b-11e5-a3ce-91d2459a8d62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"j","maxGeoRef":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:79","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String[][int])"},"status":-1},{"failures":[191,192,193,194,195,196,197,198,199,200,201],"tindex":"660610de-827b-11e5-a3ce-8da267480739","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"maxLatTmp","incDist2DSum":"maxLatTmp","fwdSlower":"maxLatTmp","fullDist2D":"midLat","restDist2D":"midLat","speed":"maxLatTmp","decDist2DSum":"maxLatTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"660610df-827b-11e5-a3ce-3fb6f0b4add0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:317","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Directory) != null)\n    com.graphhopper.storage.Directory.clear();\n"},"status":0},{"failures":[],"tindex":"660610e0-827b-11e5-a3ce-dd574d575fca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"660610e1-827b-11e5-a3ce-bbc24947dfd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:542","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int"},"status":-2},{"failures":[95,96,202,140,144,203],"tindex":"660637f2-827b-11e5-a3ce-1bf708d4fe2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"delta_lat","speed":"delta_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:145","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double);\n"},"status":-1},{"failures":[204],"tindex":"660637f3-827b-11e5-a3ce-ef415d1fd385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:207","type":"CtIfImpl","sourcecode":"if ((int) > (int)) {\n    com.graphhopper.coll.IntIntBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntIntBinHeap.double))));\n} "},"status":-1},{"failures":[],"tindex":"660637f4-827b-11e5-a3ce-376057a58f75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:183","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[94,202,180,181,183,205,157,184,185,186,187,189,190],"tindex":"660637f5-827b-11e5-a3ce-7b99de1ee301","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"66065f06-827b-11e5-a3ce-8bc2997ba5fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-2},{"failures":[206,207],"tindex":"66065f07-827b-11e5-a3ce-cdacc4061eba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:85","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"66065f08-827b-11e5-a3ce-0bad2fe6553a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"66059ba7-827b-11e5-a3ce-037f3f3dbe3b","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e1","com.graphhopper.storage.CHGraphImpl$CHEdgeIteratorImpl_boolean_canBeOverwritten(long).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e4","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e2","com.graphhopper.routing.ch.PrepareEncoder_boolean_canBeOverwritten(long,long).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e3"]},"type":"branch"}]},{"transformation":"660610e0-827b-11e5-a3ce-dd574d575fca","diffs":[{"methodsDiff":{"delete":["java.nio.ByteBuffer.get"]},"type":"staticDiff"}]},{"transformation":"660610df-827b-11e5-a3ce-3fb6f0b4add0","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Directory.clear"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_boolean_removeDir(java.io.File).b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).l8","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).e2","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).e1","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).l9","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).l1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).b","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2","com.graphhopper.storage.MMapDataAccess_void_close(boolean).b","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).b","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e5","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e4","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t2","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t1","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e6","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_close(boolean).e1","com.graphhopper.storage.GHDirectory_void_clear().b","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b","com.graphhopper.util.BitUtilBig_short_toShort(byte[],int).b","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.GHDirectory_void_clear().l3","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).t4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).l3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).t6","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e4","com.graphhopper.storage.GHDirectory_void_clear().t1","com.graphhopper.storage.GHDirectory_void_clear().t2","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.storage.MMapDataAccess_void_setShort(long,short).b"]},"type":"branch"}]}]}