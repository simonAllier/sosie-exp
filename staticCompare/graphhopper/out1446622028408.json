{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.reader.OSMReaderTest.testFerry":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":173,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":122,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":69,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":63,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":131,"com.graphhopper.storage.VLongStorageTest.testWrite":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":84,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":11,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":37,"com.graphhopper.storage.MMapDataAccessTest.testSegments":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":78,"com.graphhopper.reader.PrinctonReaderTest.testRead":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":140,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":171,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":132,"com.graphhopper.coll.CompressedArrayTest.testCompress":92,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":134,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":168,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":114,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":81,"com.graphhopper.GraphHopperTest.testPrepare":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":152,"com.graphhopper.reader.OSMReaderTest.testFoot":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":50,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":70,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":97,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":3,"com.graphhopper.GraphHopperAPITest.testDisconnected179":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":30,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":136,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":128,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":176,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":164,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":142,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":13,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":125,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":165,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":178,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":14,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":87,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":94,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":119,"com.graphhopper.reader.OSMReaderTest.testSort":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":149,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":117,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":141,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":153,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":36,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":1,"com.graphhopper.storage.MMapDataAccessTest.testHeader":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":8,"com.graphhopper.storage.MMapDataAccessTest.testCopy":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":154,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":139,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":31,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":82,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":77,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":61,"com.graphhopper.storage.GraphHopperStorageTest.testClone":60,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":71,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":39,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":10,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":34,"com.graphhopper.GraphHopperTest.testFootAndCar":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":25,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":147,"com.graphhopper.routing.PathTest.testTime":98,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":181,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":76,"com.graphhopper.coll.CompressedArrayTest.testCompress2":91,"com.graphhopper.GraphHopperTest.testPrepareOnly":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":100,"com.graphhopper.GraphHopperTest.testVia":123,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":42,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":111,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":99,"com.graphhopper.GraphHopperAPITest.testLoad":104,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":127,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":80,"com.graphhopper.GraphHopperTest.testFootOnly":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":101,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":177,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":73,"com.graphhopper.reader.OSMReaderTest.testBarriers":109,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":148,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":103,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":72},"transformations":[{"failures":[],"tindex":"74cbf633-82c5-11e5-b3f6-39209bececb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer)"},"status":-2},{"failures":[],"tindex":"74cc4454-82c5-11e5-b3f6-dd106eced006","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getPoints\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getDebugInfo\")"},"status":0},{"failures":[],"tindex":"74cc4455-82c5-11e5-b3f6-2b70eb7fb573","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:844","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.calcSnappedPoint(com.graphhopper.util.DistanceCalc)"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"74cc4456-82c5-11e5-b3f6-b9686a18b833","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.shapes.BBox.isValid()))\n    throw new java.lang.IllegalStateException((\"Cannot create location index when graph has invalid bounds: \" + com.graphhopper.util.shapes.BBox));\n"},"variableMap":{"bounds":"bounds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((4 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[7],"tindex":"74cc6b67-82c5-11e5-b3f6-797b6a2219b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:204","type":"CtIfImpl","sourcecode":"if (null != com.graphhopper.util.Instruction)\n    com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction);\n"},"status":-1},{"failures":[],"tindex":"74cc6b68-82c5-11e5-b3f6-69c67859d677","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int)"},"status":0},{"failures":[],"tindex":"74cc6b69-82c5-11e5-b3f6-b3c6ba50fc60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:640","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return super.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"74cc6b6a-82c5-11e5-b3f6-13fb7bc827fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:130","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"variableMap":{"sizeBytes":"buf"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:205","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.zip.Inflater.inflate(byte[])"},"status":-2},{"failures":[8,9,10],"tindex":"74cc6b6b-82c5-11e5-b3f6-c109a96dcb0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"tt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"status":-1},{"failures":[11,12],"tindex":"74cc927c-82c5-11e5-b3f6-a57f4b4734b0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"variableMap":{"str":"str","edgeEncoders":"edgeEncoders"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:298","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion());\n}"},"status":-1},{"failures":[],"tindex":"74cc927d-82c5-11e5-b3f6-2176baead5c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,1,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"74cc927e-82c5-11e5-b3f6-47e0ba6444fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:95","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[17,88,89,90],"tindex":"74ccb98f-82c5-11e5-b3f6-cf5f7feb5cef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:750","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    throw new java.lang.AssertionError((((((\"to or from index is invalid for this edge \" + int) + \"->\") + int) + \", points:\") + com.graphhopper.util.PointList));\n"},"variableMap":{"toIndex":"i","pointList":"pillarNodes","fromIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:776","type":"CtIfImpl","sourcecode":"if ((int > 2) && (int < (int - 1))) {\n    if (com.graphhopper.util.PointList.is3D())\n        com.graphhopper.util.PointList.add(double, double, double);\n    else\n        com.graphhopper.util.PointList.add(double, double);\n    \n} "},"status":-1},{"failures":[],"tindex":"74ccb990-82c5-11e5-b3f6-dfb66ced3ad8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:52","type":"CtTryImpl","sourcecode":"try {\n    int++;\n    int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine());\n    int++;\n    int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine());\n    for (int int = 0 ; int < int ; int++) {\n        int++;\n        java.lang.String java.lang.String = java.io.BufferedReader.readLine();\n        java.lang.String[] java.lang.String[] = java.lang.String.split(\" \");\n        int int = -1;\n        int int = -1;\n        double double = -1;\n        int int = 0;\n        for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n            if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n                continue;\n            } \n            if (int == 0) {\n                int = java.lang.Integer.parseInt(java.lang.String[][int]);\n            } else if (int == 1) {\n                int = java.lang.Integer.parseInt(java.lang.String[][int]);\n            } else {\n                double = java.lang.Double.parseDouble(java.lang.String[][int]);\n            }\n            int++;\n        }\n        if (int != 3) {\n            throw new java.lang.RuntimeException((((((\"incorrect read!? from:\" + int) + \", to:\") + int) + \", dist:\") + double));\n        } \n        com.graphhopper.storage.Graph.edge(int, int, double, false);\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Problem in line \" + int) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(java.io.BufferedReader);\n}"},"status":-2},{"failures":[91,92,93,94],"tindex":"74ccdfa1-82c5-11e5-b3f6-abef623a7e5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"status":-1},{"failures":[95],"tindex":"74ccdfa2-82c5-11e5-b3f6-9518733874aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"segmentSizeInBytes","newSize":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:271","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"74ccdfa3-82c5-11e5-b3f6-87d1d9326f2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1023","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.GHRequest.getAlgorithm().isEmpty() ? com.graphhopper.routing.AlgorithmOptions.java.lang.String : com.graphhopper.GHRequest.getAlgorithm()"},"status":-2},{"failures":[96,97,98,99,100,101,102,103],"tindex":"74cd06b4-82c5-11e5-b3f6-bfb34fdfa435","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[104,105,106,107,17,108,109,88,89,110,18,111,112,19,113,20,114,115,116,117,118,119,120,121,122,123,124,125,126,127,12,128,129,90,130],"tindex":"74cd06b5-82c5-11e5-b3f6-7785d72d89c8","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1087","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareIndex()"},"variableMap":{"tmpIndex":"locationIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.index.LocationIndex = com.graphhopper.GraphHopper.createLocationIndex(com.graphhopper.storage.GraphHopperStorage.getDirectory())"},"status":-1},{"failures":[89,131,132,1,1,25,133,41,42,42,43,44,44,45,134,135,136,137,138,138,139,139,140,140,141,141,46,46,47,48,142,143,143,144,144,145,146,49,50,147,148,148,149,149,51,51,52,150,53,151,152,153,154,54,55,155,156,56,4,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,72,182,6],"tindex":"74cd06b6-82c5-11e5-b3f6-01debf41f446","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"74cc6b68-82c5-11e5-b3f6-69c67859d677","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath"]},"type":"staticDiff"}]},{"transformation":"74cc4454-82c5-11e5-b3f6-dd106eced006","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.check"]},"type":"staticDiff"}]}]}