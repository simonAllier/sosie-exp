{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":4,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":3},"transformations":[{"failures":[],"tindex":"2769ef68-791b-11e5-89a8-db96442bc20d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:75","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[0,1,2],"tindex":"276a1679-791b-11e5-89a8-2150fff4b1b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"turnCostIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"status":-1},{"failures":[3],"tindex":"276a3d8a-791b-11e5-89a8-0b7aac829d1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"variableMap":{"str":"str","edgeEncoders":"edgeEncoders"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:298","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion());\n}"},"status":-1},{"failures":[4],"tindex":"276a3d8b-791b-11e5-89a8-0b8d5219782c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"entry","key":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n    throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n} "},"status":-1},{"failures":[],"tindex":"276a3d8c-791b-11e5-89a8-51f0539ed762","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"slidingMeanValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:79","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.TIntHashSet == null) {\n    java.util.TreeMap<java.lang.Integer, com.graphhopper.coll.TIntHashSet>.put(int, (com.graphhopper.coll.TIntHashSet = new TIntHashSet(int)));\n} "},"status":-2},{"failures":[],"tindex":"276a649d-791b-11e5-89a8-d964b7be472a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle()))"},"status":-2},{"failures":[],"tindex":"276a649e-791b-11e5-89a8-33404bb0e9e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"276a649f-791b-11e5-89a8-0142964d9080","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"edgeOrientation","orientation":"edgeOrientation","java.lang.Math.PI":"edgeOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:397","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)))"},"status":-2},{"failures":[],"tindex":"276a64a0-791b-11e5-89a8-0d1088913731","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"lastElem","segmentSizePower":"lastElem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"276a64a1-791b-11e5-89a8-6fe6dd0c5926","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"variableMap":{"synched":"restricted"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[],"tindex":"276a8bb2-791b-11e5-89a8-475fdd9a4b4d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:582","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    double double = com.graphhopper.util.EdgeIterator.getDistance();\n    double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int);\n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode());\n    com.graphhopper.routing.DijkstraOneToMany.clear();\n    long++;\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n            continue;\n        \n        double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n        if (java.lang.Double.isNaN(double))\n            throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n        \n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n        com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n        com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n        com.graphhopper.util.StopWatch.start();\n        (long)++;\n        int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n            continue;\n        \n        com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"276a8bb3-791b-11e5-89a8-07a09a3f0466","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:201","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"276ab2c4-791b-11e5-89a8-393204bed428","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-2},{"failures":[],"tindex":"276ab2c5-791b-11e5-89a8-d52344e8fb14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:118","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    long += com.graphhopper.storage.VLongStorage.readVLong();\n    if (long == long) {\n        int = (int * (int)) + int;\n        break;\n    } else if (long > long) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"276ab2c6-791b-11e5-89a8-756e6de734ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:161","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.removeFromMap(com.graphhopper.storage.DataAccess.getName())"},"status":-2},{"failures":[],"tindex":"276ab2c7-791b-11e5-89a8-b1360094da37","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"variableMap":{"closestEdge":"edgeBase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-2},{"failures":[],"tindex":"276ad9d8-791b-11e5-89a8-e9bf3a8fb7f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"acceptStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n    throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n} "},"status":-2},{"failures":[],"tindex":"276ad9d9-791b-11e5-89a8-631796b3619f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"entry","configuredCHWeightings":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PMap.has(\"version\")) {\n    if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n        throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n    } \n} "},"status":-2},{"failures":[],"tindex":"276ad9da-791b-11e5-89a8-cbaac0f9d2e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:335","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"276ad9db-791b-11e5-89a8-154ce9744f73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}