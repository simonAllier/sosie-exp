{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":82,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":227,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":330,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":88,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":263,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":87,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":241,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":290,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":30,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":273,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":282,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":131,"com.graphhopper.GraphHopperAPITest.testDisconnected179":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":9,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":310,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":102,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":216,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":167,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":53,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":311,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":266,"com.graphhopper.reader.OSMReaderTest.testSort":326,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":59,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":188,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":295,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":150,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":37,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":272,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":195,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":254,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":178,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":157,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":287,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":276,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":187,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":185,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":120,"com.graphhopper.util.BitUtilLittleTest.testToShort":2,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":4,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":269,"com.graphhopper.GraphHopperAPITest.testLoad":323,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":206,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":113,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.reader.OSMReaderTest.testBarriers":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":137,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":192,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":202,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":11,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":0,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":39,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":281,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":60,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":233,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":204,"com.graphhopper.reader.PrinctonReaderTest.testRead":229,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":112,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":95,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":317,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":223,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":267,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":24,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":134,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":126,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":81,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":244,"com.graphhopper.routing.PathBidirRefTest.testExtract":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":255,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":301,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":175,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":299,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":298,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":80,"com.graphhopper.reader.OSMReaderTest.testMain":325,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":153,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":110,"com.graphhopper.routing.PathBidirRefTest.testExtract2":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":168,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":179,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":106,"com.graphhopper.storage.GraphHopperStorageTest.testClone":34,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":312,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":243,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":71,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":132,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":111,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":54,"com.graphhopper.GraphHopperTest.testFootOnly":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":170,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":320},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"f8ede9b2-791a-11e5-9409-511aa7a8c156","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:48","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(short))"},"status":-1},{"failures":[6,7,8,9],"tindex":"f8ee10c3-791a-11e5-9409-b9a89be206c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:546","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[10,11,12,13],"tindex":"f8ee37d4-791a-11e5-9409-351495f16ebf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"wayGeometry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"f8ee37d5-791a-11e5-9409-a3817898fc4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"bytes","bytes":"bytes","segmentSizeInBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setSegmentSize(int)"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,10,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,11,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,12,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,13,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"tindex":"f8ee37d6-791a-11e5-9409-bb7822171933","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:142","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap)"},"status":-1},{"failures":[34,55,71,92,125,146,194,215],"tindex":"f8ee5ee7-791a-11e5-9409-3785df4edfc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.QueryGraph"},"variableMap":{"baseGraph":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:573","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.copyTo(this, com.graphhopper.storage.Graph)"},"status":-1},{"failures":[297,298,299,300,301,302,14,15,16,17,18,19,20,303,304,305,306,160,161,163,165,166,167,168,307,170,172,173,174,175,176,178,179,308,309,310,311,312,313,314,315,316,317,318,319,320,180,321,322,323,324,325,326,327,328,329,330,331,332,281,286,287,290],"tindex":"f8ee5ee8-791a-11e5-9409-5b774f7b2380","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:40","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"f8ee85f9-791a-11e5-9409-5bb7b007ed9f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"status":-2},{"failures":[],"tindex":"f8ee85fa-791a-11e5-9409-618abda2b9b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:683","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"f8ee85fb-791a-11e5-9409-4b75e2c27c9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:403","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    java.nio.ByteBuffer java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get(int);\n    com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer);\n    java.util.List<java.nio.ByteBuffer>.set(int, null);\n}"},"status":-2},{"failures":[],"tindex":"f8ee85fc-791a-11e5-9409-992342f0b6f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"sw2":"allSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[],"tindex":"f8ee85fd-791a-11e5-9409-3f29712f2908","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:583","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"nodeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.BaseGraph.int)) + \" vs \") + (int)));\n"},"variableMap":{"clonedG":"that","nodeEntryBytes":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"f8ee85fe-791a-11e5-9409-49657f9b55de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"strLen","edgeId":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:96","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"status":-2},{"failures":[],"tindex":"f8eead0f-791a-11e5-9409-03c70daa1771","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"f8eead10-791a-11e5-9409-dde09ef4f014","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"status":-2},{"failures":[],"tindex":"f8eead11-791a-11e5-9409-27b407f4d2dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"tmpIndex","nodeCount":"com.graphhopper.reader.OSMReader.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:639","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-2},{"failures":[],"tindex":"f8eead12-791a-11e5-9409-d7bf6deeca51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:659","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"f8eead13-791a-11e5-9409-c76e7c7a0821","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:197","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((\"nodes:\" + (com.graphhopper.util.PointList.getSize())) + \"; \") + (com.graphhopper.util.PointList.toString())"},"status":-2},{"failures":[],"tindex":"f8eead14-791a-11e5-9409-dd35dbac460d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[],"tindex":"f8eead15-791a-11e5-9409-03b3713dfa48","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:78","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(int)"},"variableMap":{"nodeFrom":"adjNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}