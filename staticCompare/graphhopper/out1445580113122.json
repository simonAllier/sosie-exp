{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8ee30a5d-794b-11e5-871a-91b7beebffab","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n    return long;\n"},"status":0},{"failures":[],"tindex":"8ee3316e-794b-11e5-871a-47f2a642b0e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:576","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState.getAdjNode()) == int)\n    return com.graphhopper.util.EdgeIteratorState;\n"},"variableMap":{"adjNode":"java.lang.Integer.MIN_VALUE","eis2":"eis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:571","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.util.EdgeIteratorState.getAdjNode()) == int) || (int == (java.lang.Integer.int)))\n    return com.graphhopper.util.EdgeIteratorState;\n"},"status":-2},{"failures":[],"tindex":"8ee3316f-794b-11e5-871a-d943f0b2ab31","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:316","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDQuadtree.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-2},{"failures":[],"tindex":"8ee33170-794b-11e5-871a-518e030219ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:307","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(2000, ((int)(double * double)))"},"variableMap":{"dist":"deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:369","type":"CtReturnImpl","sourcecode":"return ((int)(double * (com.graphhopper.util.Helper.float)))"},"status":-2},{"failures":[],"tindex":"8ee33171-794b-11e5-871a-9dec127e349b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:131","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField()) && ((com.graphhopper.storage.BaseGraph.int) >= 0))\n    return com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int)));\nelse\n    throw new java.lang.AssertionError(\"This graph does not provide an additional node field\");\n"},"status":-2},{"failures":[],"tindex":"8ee33172-794b-11e5-871a-89f43f11301e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"virtNodeIDintern","index":"virtNodeIDintern"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"8ee35783-794b-11e5-871a-a324cf86339f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:450","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"8ee35784-794b-11e5-871a-1dbf2f4b05b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:78","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"8ee35785-794b-11e5-871a-73d209dd7175","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:68","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-2},{"failures":[],"tindex":"8ee35786-794b-11e5-871a-bf4655fe00c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"status":-2},{"failures":[],"tindex":"8ee35787-794b-11e5-871a-418ce164c40c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"8ee37e98-794b-11e5-871a-63c165a87ea8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","edge2":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:152","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"8ee37e99-794b-11e5-871a-c3453f425b14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:240","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(\"tmp.lock\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:68","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[],"tindex":"8ee37e9a-794b-11e5-871a-33bf26c123c9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:331","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"list should consist of lat,lon pairs!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-2},{"failures":[],"tindex":"8ee37e9b-794b-11e5-871a-d5cdb6543b91","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"8ee37e9c-794b-11e5-871a-a7e587bb8916","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-2},{"failures":[],"tindex":"8ee37e9d-794b-11e5-871a-43b3bd9bd408","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"status":-2},{"failures":[],"tindex":"8ee3a5ae-794b-11e5-871a-85b048675351","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:821","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-2},{"failures":[],"tindex":"8ee3a5af-794b-11e5-871a-c707e29f3bb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:591","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"8ee3a5b0-794b-11e5-871a-c9269ed87e46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}