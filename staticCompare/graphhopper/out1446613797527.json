{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":54,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":434,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":268,"com.graphhopper.GraphHopperAPITest.testNoLoad":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.reader.OSMReaderTest.testFerry":363,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":393,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":312,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":82,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":383,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":173,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":209,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":338,"com.graphhopper.GraphHopperTest.testPrepare":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":60,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":45,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":387,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":426,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":42,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":94,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":423,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":89,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":415,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":75,"com.graphhopper.GraphHopperTest.testLoadOSM":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":245,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":315,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":84,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":333,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":228,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":186,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":26,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":360,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":347,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":106,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":291,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":354,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":39,"com.graphhopper.coll.OSMIDMapTest.testGetLong":103,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":111,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":316,"com.graphhopper.GraphHopperAPITest.testLoad":358,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":210,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":200,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.reader.OSMReaderTest.testBarriers":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":157,"com.graphhopper.util.GHUtilityTest.testCopy":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":270,"com.graphhopper.routing.PathTest.testFindInstruction":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":116,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":267,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":229,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":143,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":158,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":342,"com.graphhopper.util.InstructionListTest.testWayList2":389,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":253,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":422,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":77,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":167,"com.graphhopper.storage.RAMDirectoryTest.testSynched":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":199,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":56,"com.graphhopper.coll.OSMIDMapTest.testGet":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":343,"com.graphhopper.routing.PathBidirRefTest.testExtract":16,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":403,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":310,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":288,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":402,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":258,"com.graphhopper.util.GHUtilityTest.testSort2":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":51,"com.graphhopper.reader.OSMReaderTest.testMain":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":138,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":317,"com.graphhopper.storage.StorablePropertiesTest.testStore":239,"com.graphhopper.storage.GraphHopperStorageTest.testClone":202,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":340,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":237,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":159,"com.graphhopper.routing.PathTest.testTime":91,"com.graphhopper.util.InstructionListTest.testCreateGPX":431,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":324,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":264,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":172,"com.graphhopper.reader.OSMReaderTest.testRelation":371,"com.graphhopper.util.GHUtilityTest.testSortDirected":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":329,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":15,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":429,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":356,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":23,"com.graphhopper.GraphHopperTest.testFootOnly":413,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":261,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":238,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":168,"com.graphhopper.search.NameIndexTest.testCreate":99,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":247,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":18,"com.graphhopper.routing.QueryGraphTest.testOneWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":275,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":243,"com.graphhopper.reader.OSMReaderTest.testWithBounds":375,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":4,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":130,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":198,"com.graphhopper.search.NameIndexTest.testFlush":97,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":231,"com.graphhopper.util.InstructionListTest.testWayList":388,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":327,"com.graphhopper.GraphHopperAPITest.testDisconnected179":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":160,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":155,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":188,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":73,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":222,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":58,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":197,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":190,"com.graphhopper.routing.PathTest.testWayList":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":326,"com.graphhopper.coll.OSMIDMapTest.testGet2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":59,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":3,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":121,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":203,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.util.GHUtilityTest.testSort":398,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":351,"com.graphhopper.search.NameIndexTest.testPut":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":150,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":201,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":265,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":304,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":107,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":109,"com.graphhopper.storage.MMapDirectoryTest.testSynched":355,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":380,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":131,"com.graphhopper.util.TranslationMapTest.testToString":432,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":309,"com.graphhopper.routing.PathTest.testFound":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":178,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":414,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":33,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":127,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":98,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":163,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":207,"com.graphhopper.util.InstructionListTest.testEmptyList":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":346,"com.graphhopper.reader.PrinctonReaderTest.testRead":361,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":122,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":152,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":132,"com.graphhopper.reader.OSMReaderTest.testFoot":364,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":176,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":381,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":352,"com.graphhopper.reader.OSMReaderTest.testOneWay":378,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":322,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":70,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":170,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":206,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":433,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":296,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":76,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":166,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":349,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":194,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":377,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":430,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":306,"com.graphhopper.routing.PathBidirRefTest.testExtract2":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":418,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":292,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":95,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":224,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":274,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":246,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":353,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":219,"com.graphhopper.GraphHopperTest.testFootAndCar":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":118,"com.graphhopper.storage.StorablePropertiesTest.testLoad":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":339,"com.graphhopper.GraphHopperTest.testPrepareOnly":401,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":271,"com.graphhopper.GraphHopperTest.testVia":405,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":46,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":373,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":372,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":307,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":223,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":390,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":169,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":328,"com.graphhopper.util.InstructionListTest.testFind":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":105},"transformations":[{"failures":[0,1,2,3,4],"tindex":"4acd835d-82b2-11e5-abf4-13f5a3b46176","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"nodeId","dy":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:111","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLongitude(int)"},"status":-1},{"failures":[5,6],"tindex":"4acdaa6e-82b2-11e5-abf4-17249c858778","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:477","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-1},{"failures":[7,8,9,10,11],"tindex":"4acdaa6f-82b2-11e5-abf4-c390be60d5b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:411","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[12,13],"tindex":"4acdaa70-82b2-11e5-abf4-597072628da1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:504","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[14,15],"tindex":"4acdd181-82b2-11e5-abf4-41127a2e07ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"keys","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"4acdd182-82b2-11e5-abf4-2ddcefcbfd23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"maxLeafEntries"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:62","type":"CtIfImpl","sourcecode":"if (int < 20) {\n    float = 2;\n    int = 4;\n} else {\n    float = 1.7F;\n    int = int / 10;\n}"},"status":0},{"failures":[],"tindex":"4acdd183-82b2-11e5-abf4-5ba9073698a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"from","mSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:272","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-2},{"failures":[],"tindex":"4acdd184-82b2-11e5-abf4-697458d1415f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":0},{"failures":[],"tindex":"4acdd185-82b2-11e5-abf4-d5fc37e19929","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:163","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getRouteWeight\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getInstructions\")"},"status":0},{"failures":[],"tindex":"4acdd186-82b2-11e5-abf4-25669f2664d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:231","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"variableMap":{"delNodes":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"status":0},{"failures":[],"tindex":"4acdf897-82b2-11e5-abf4-23e8b7bfea2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:139","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[16,17,7,7,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,1,92,93,2,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,3,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,4,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,5,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,382,383,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,8,9,10,402,11,403,404,405,406,6,407,408,409,410,411,412,413,414,415],"tindex":"4acdf898-82b2-11e5-abf4-0f1dc5ab9db3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"4ace1fa9-82b2-11e5-abf4-5dc43ffa0bd3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:51","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[416,417,418,419,420,421,422,423,424,425,426,88,89,90,91,0,1,92,93,2,94,358,359,427,363,364,365,5,366,367,368,369,370,373,374,375,376,378,385,386,428,387,388,429,430,431,389,390,432,433,400,401,8,9,10,402,11,403,404,405,406,6,407,408,409,410,411,412,413,414,415],"tindex":"4ace1faa-82b2-11e5-abf4-03df575e25e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation)"},"status":-1},{"failures":[],"tindex":"4ace1fab-82b2-11e5-abf4-2d36283a2af1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"bits","capacity":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"4ace1fac-82b2-11e5-abf4-870f77858dde","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:183","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[],"tindex":"4ace1fad-82b2-11e5-abf4-5d75b9fd2f17","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:356","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"4ace46be-82b2-11e5-abf4-610263d880a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:679","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long)"},"status":0},{"failures":[434],"tindex":"4ace46bf-82b2-11e5-abf4-0f9aef39bc40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:89","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[435],"tindex":"4ace46c0-82b2-11e5-abf4-635a36dde859","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:294","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4acdd185-82b2-11e5-abf4-d5fc37e19929","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.check"]},"type":"staticDiff"}]},{"transformation":"4ace46be-82b2-11e5-abf4-610263d880a6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.setFlags"]},"type":"staticDiff"}]},{"transformation":"4acdd182-82b2-11e5-abf4-2ddcefcbfd23","diffs":[{"branchesDiff":{"delete":["t0","e1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":["com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).e4","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).t4"]},"type":"branch"}]},{"transformation":"4acdf897-82b2-11e5-abf4-23e8b7bfea2e","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]},{"transformation":"4ace1fac-82b2-11e5-abf4-870f77858dde","diffs":[{"branches":{"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.util.InstructionListTest.testFind":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"]},"type":"branch"}]}]}