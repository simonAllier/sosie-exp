{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":225,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":252,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":301,"com.graphhopper.reader.OSMReaderTest.testFerry":261,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":68,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":208,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":156,"com.graphhopper.reader.OSMReaderTest.testWithBounds":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":241,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":299,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":308,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":138,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":129,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":313,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":44,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":81,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":22,"com.graphhopper.util.InstructionListTest.testWayList":61,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":60,"com.graphhopper.GraphHopperAPITest.testDisconnected179":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":305,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":154,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":28,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":157,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":239,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":197,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":231,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":191,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":335,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":111,"com.graphhopper.GraphHopperTest.testLoadOSM":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":158,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":195,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":281,"com.graphhopper.reader.OSMReaderTest.testSort":264,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":244,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":204,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":283,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":42,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":256,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":56,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":230,"com.graphhopper.routing.PathTest.testWayList":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":29,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":155,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":315,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":217,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":337,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":238,"com.graphhopper.util.GHUtilityTest.testSort":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":116,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":259,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":275,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":94,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":339,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":118,"com.graphhopper.GraphHopperAPITest.testLoad":57,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":105,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":317,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":274,"com.graphhopper.reader.OSMReaderTest.testBarriers":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":205,"com.graphhopper.routing.PathTest.testFound":232,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":135,"com.graphhopper.util.GHUtilityTest.testCopy":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":173,"com.graphhopper.routing.PathTest.testFindInstruction":237,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":101,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":119,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":89,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":227,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":52,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":70,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":327,"com.graphhopper.util.InstructionListTest.testWayList2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":144,"com.graphhopper.reader.OSMReaderTest.testFoot":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":166,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":163,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":164,"com.graphhopper.reader.OSMReaderTest.testOneWay":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":115,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":198,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":100,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":181,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":273,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":277,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":127,"com.graphhopper.routing.PathBidirRefTest.testExtract":247,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":161,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":117,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":220,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":219,"com.graphhopper.util.GHUtilityTest.testSort2":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":177,"com.graphhopper.reader.OSMReaderTest.testMain":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":142,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":153,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":136,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":295,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":49,"com.graphhopper.storage.GraphHopperStorageTest.testClone":72,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":159,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":209,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":77,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":3,"com.graphhopper.GraphHopperTest.testFootAndCar":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":174,"com.graphhopper.routing.PathTest.testTime":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":200,"com.graphhopper.GraphHopperTest.testPrepareOnly":333,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":122,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":31,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":13,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":253,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":63,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":143,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":180,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":234,"com.graphhopper.util.InstructionListTest.testFind":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":319},"transformations":[{"failures":[],"tindex":"d6ba2e73-7923-11e5-8a71-e9ba61bd8d40","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":0},{"failures":[],"tindex":"d6ba5584-7923-11e5-8a71-ff5966150a4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:376","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:152","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"d6ba5585-7923-11e5-8a71-d3d194a69a6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"variableMap":{"lastIndex":"nodeCHEntryBytes","fromIndex":"nodeCHEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:165","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"d6ba5586-7923-11e5-8a71-43b56fa6c1f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:851","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n    int += 4;\n} "},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"d6ba5587-7923-11e5-8a71-658713f957f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:665","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,9,67,68,69,2,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,11,193,14,194,7,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,20,23,24,26,27,29,224,30,32,35,36,37,38,225,39,40,41,42,43,45,46,47,48,226,227,228,49,51,52,53,229,54,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"d6ba5588-7923-11e5-8a71-83668336fece","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:278","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"variableMap":{"initialized":"backward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:316","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[261,262,263,264,265,0,1,266,267,268,269,270,271,272,70,71,273,274,275,72,73,276,74,277,278,279,75,76,77,78,79,80,81,82,83,3,280,84,281,282,85,86,87,88,283,89,284,285,90,286,91,92,93,95,96,287,288,289,97,98,290,99,291,292,293,100,101,102,103,104,105,106,107,108,5,294,109,295,296,110,111,112,113,297,114,298,299,115,300,116,117,171,301,302,303,172,173,304,174,305,306,307,175,176,177,178,179,180,181,182,183,6,308,184,309,310,185,186,187,188,311,189,312,313,190,314,191,192,11,315,316,193,14,317,195,196,318,319,320,197,198,321,199,322,323,324,200,201,202,203,204,205,206,207,208,8,325,209,326,327,210,211,212,213,328,214,329,330,215,331,216,217,332,333,334,15,16,335,336,17,18,337,338,339,19,340,341],"tindex":"d6ba7c99-7923-11e5-8a71-f1b343a29418","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"bytes","index":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:366","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"d6ba7c9a-7923-11e5-8a71-cf198990c24a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:119","type":"CtIfImpl","sourcecode":"if (T == null)\n    return T;\n"},"status":0},{"failures":[],"tindex":"d6ba7c9b-7923-11e5-8a71-a728afb54498","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"nodeFlags","lastKey":"nodeFlags","key":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:572","type":"CtIfImpl","sourcecode":"if (long != 0)\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n"},"status":-2},{"failures":[],"tindex":"d6baa3ac-7923-11e5-8a71-8f631928b6f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:73","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"d6baa3ad-7923-11e5-8a71-2352cb00ec67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:327","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"variableMap":{"values":"mKeys","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"d6baa3ae-7923-11e5-8a71-9d2950523bf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:177","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.finish()"},"status":-2},{"failures":[],"tindex":"d6baa3af-7923-11e5-8a71-7787e21eb30d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:624","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"d6baa3b0-7923-11e5-8a71-2979d6883ec5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:304","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"d6baa3b1-7923-11e5-8a71-d7c7ab679764","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:197","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-2},{"failures":[],"tindex":"d6baa3b2-7923-11e5-8a71-e9447a1c26fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:541","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"d6baa3b3-7923-11e5-8a71-5d757737940d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"weight","dist":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:664","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n    continue NEXT_SC;\n"},"status":-2},{"failures":[],"tindex":"d6bacac4-7923-11e5-8a71-21547b967a91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"capacity","mask":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-2},{"failures":[],"tindex":"d6bacac5-7923-11e5-8a71-5fdf9f7ea8d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"d6bacac6-7923-11e5-8a71-ef1725484e97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:416","type":"CtReturnImpl","sourcecode":"return int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}