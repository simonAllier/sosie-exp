{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":46,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":35,"com.graphhopper.reader.OSMReaderTest.testMain":52,"com.graphhopper.reader.OSMReaderTest.testFerry":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":44,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":0,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":26,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":34,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":82,"com.graphhopper.GraphHopperTest.testPrepare":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":49,"com.graphhopper.GraphHopperTest.testFootAndCar":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":18,"com.graphhopper.reader.OSMReaderTest.testFoot":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":39,"com.graphhopper.reader.OSMReaderTest.testOneWay":60,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":43,"com.graphhopper.GraphHopperAPITest.testDisconnected179":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":13,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":29,"com.graphhopper.GraphHopperTest.testPrepareOnly":62,"com.graphhopper.GraphHopperTest.testVia":70,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":23,"com.graphhopper.GraphHopperAPITest.testLoad":2,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":47,"com.graphhopper.GraphHopperTest.testFootOnly":78,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":17,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":55,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":54,"com.graphhopper.GraphHopperTest.testLoadOSM":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":63,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":66,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":64},"transformations":[{"failures":[],"tindex":"6ad5ba2c-7934-11e5-9b07-db5b68ecc72a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:142","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Translation com.graphhopper.util.Translation : java.util.Map<java.lang.String, com.graphhopper.util.Translation>.values()) {\n    java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.Translation.asMap();\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n            continue;\n        } \n        int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n        if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        } else {\n            java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n            java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n            try {\n                java.lang.String.format(java.lang.String, java.lang.Object[]);\n            } catch (java.lang.Exception ex) {\n                java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n            }\n        }\n    }\n}"},"status":0},{"failures":[0,1],"tindex":"6ad5e13d-7934-11e5-9b07-61262e9dcc83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:108","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"6ad5e13e-7934-11e5-9b07-41905c5030de","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[])"},"status":-2},{"failures":[],"tindex":"6ad5e13f-7934-11e5-9b07-3369c94dbb3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:55","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"6ad5e140-7934-11e5-9b07-8b5f52b6a3b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double)"},"status":-1},{"failures":[],"tindex":"6ad5e141-7934-11e5-9b07-b1195246bd70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1006","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false)"},"status":-2},{"failures":[],"tindex":"6ad60852-7934-11e5-9b07-c9090fe7e80e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"6ad60853-7934-11e5-9b07-fd05ae767c8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:202","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"factor":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":-2},{"failures":[],"tindex":"6ad60854-7934-11e5-9b07-8966565413d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:245","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n} else {\n    if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n        return ;\n    \n}"},"status":-2},{"failures":[],"tindex":"6ad60855-7934-11e5-9b07-85d30b4c34f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"variableMap":{"segNumber":"i","segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-2},{"failures":[],"tindex":"6ad60856-7934-11e5-9b07-a53f41ebbaa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"variableMap":{"highwayValue":"firstValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"6ad60857-7934-11e5-9b07-7bd58379a208","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"6ad60858-7934-11e5-9b07-dbe34bfac9fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"status":-2},{"failures":[],"tindex":"6ad60859-7934-11e5-9b07-f90c53c917dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"variableMap":{"lastIndex":"allRemoved","fromIndex":"allRemoved"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:195","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6ad62f6a-7934-11e5-9b07-49edd404c33b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:106","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6ad62f6b-7934-11e5-9b07-6fb2a05adaed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:668","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:375","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>()"},"status":-2},{"failures":[],"tindex":"6ad62f6c-7934-11e5-9b07-ebd4b568e2c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:913","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"variableMap":{"pillarNodes":"fullPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\nelse\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n"},"status":-2},{"failures":[],"tindex":"6ad62f6d-7934-11e5-9b07-298ed84c31db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:82","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"6ad62f6e-7934-11e5-9b07-4539124b5290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"6ad62f6f-7934-11e5-9b07-ada2e940044a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}