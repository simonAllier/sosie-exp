{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":68,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":55,"com.graphhopper.storage.VLongStorageTest.testWrite":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":38,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":9,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":13,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":66,"com.graphhopper.GraphHopperAPITest.testDisconnected179":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":54,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":8,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":49,"com.graphhopper.GraphHopperAPITest.testLoad":14,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":39,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":21,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":20,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":18,"com.graphhopper.reader.OSMReaderTest.testSort":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":67},"transformations":[{"failures":[],"tindex":"10aedfb6-8292-11e5-b7f5-fb1cbe38195a","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double), double, double)"},"variableMap":{"endHeading":"java.lang.Double.NaN","toLat":"java.lang.Double.NaN","fromLon":"java.lang.Double.NaN","startHeading":"java.lang.Double.NaN","toLon":"java.lang.Double.NaN","fromLat":"java.lang.Double.NaN","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(com.graphhopper.util.shapes.GHPoint, com.graphhopper.util.shapes.GHPoint, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"10af06c7-8292-11e5-b7f5-a1cf789da5e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"visitedCountTo","nextEdgeId":"visitedCountTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:235","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[0],"tindex":"10af06c8-8292-11e5-b7f5-858c62cc4f9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = null"},"status":-1},{"failures":[],"tindex":"10af2dd9-8292-11e5-b7f5-85c9984bff06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1146","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((\"flushing graph \" + (com.graphhopper.storage.GraphHopperStorage.toString())) + \", details:\") + (com.graphhopper.storage.GraphHopperStorage.toDetailsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())) + \")\"))"},"status":0},{"failures":[],"tindex":"10af2dda-8292-11e5-b7f5-4f3e695cb798","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:293","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"variableMap":{"seg":"bytes","values":"bytes","length":"length","delta":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:117","type":"CtForImpl","sourcecode":"for (int int = (byte[].int) - 1 ; int >= 0 ; int--) {\n    byte byte = byte[][int];\n    for (int int = 0 ; int < 8 ; int++) {\n        if ((byte & byte) == 0)\n            java.lang.StringBuilder.append('0');\n        else\n            java.lang.StringBuilder.append('1');\n        \n        byte <<= 1;\n    }\n}"},"status":-2},{"failures":[],"tindex":"10af2ddb-8292-11e5-b7f5-85095d93e01c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:709","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"variableMap":{"osmId":"geoRef","com.graphhopper.reader.OSMReader.TOWER_NODE":"length","tmpNode":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:836","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int)"},"status":-2},{"failures":[],"tindex":"10af54ec-8292-11e5-b7f5-9551c31bc6af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:39","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(1, ((int) / 3))"},"variableMap":{"counts":"y2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"10af54ed-8292-11e5-b7f5-b36a614ce47e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"updatedInGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:684","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"10af54ee-8292-11e5-b7f5-e5e922b81164","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:51","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode())"},"variableMap":{"opts":"this","g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:40","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.Dijkstra(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStarBidirection com.graphhopper.routing.AStarBidirection = new com.graphhopper.routing.AStarBidirection(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStarBidirection.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStarBidirection;\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[0,1],"tindex":"10af7bff-8292-11e5-b7f5-550dbd2ef82d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:150","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"10af7c00-8292-11e5-b7f5-9948586befb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:284","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (int))\n    throw new java.lang.IllegalStateException((\"incorrect location index version, expected:\" + (int)));\n"},"variableMap":{"dataAccess":"index","MAGIC_INT":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess);\n    com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet);\n    int = com.graphhopper.coll.GHBitSet.getCardinality();\n    for (int int = 0 ; int < int ; int++) {\n        int int = -1;\n        int int = -1;\n        if (com.graphhopper.coll.GHBitSet.contains(int)) {\n            if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n                int = int;\n                int = int + 1;\n            } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n                int = int;\n                int = int + (int);\n            } \n        } else {\n            if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n                int = int + 1;\n                int = int;\n            } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n                int = int + (int);\n                int = int;\n            } \n        }\n        if (int >= 0) {\n            if ((int[][int]) >= 0) {\n                if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                    continue;\n                } \n            } \n            com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n            int[][int] = int[][int];\n            com.graphhopper.coll.GHBitSet.add(int);\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"10afa211-8292-11e5-b7f5-7bbf591da0ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:688","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.loadEdgesHeader()"},"status":-2},{"failures":[],"tindex":"10afa212-8292-11e5-b7f5-cf89a164dd7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:361","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"variableMap":{"clonePL":"clonePL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:351","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n}"},"status":0},{"failures":[],"tindex":"10afa213-8292-11e5-b7f5-6d4cba54daa9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"variableMap":{"tmpNode":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"status":-2},{"failures":[4,8,9,10,11,12,13],"tindex":"10afa214-8292-11e5-b7f5-a115d7680e22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"freeIndex":"node","currentIndex":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:104","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"10afc925-8292-11e5-b7f5-61dff4dd670a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"subqueryLonA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:723","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":-1},{"failures":[69,70,0,1,71,72],"tindex":"10afc926-8292-11e5-b7f5-5f2e86ba7cc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:61","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[39,42,43,47,48,51,53,54,57,58,62,63,66,68],"tindex":"10afc927-8292-11e5-b7f5-236d223f3b87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:331","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"variableMap":{"speedVal":"subqueryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:735","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"10af54ed-8292-11e5-b7f5-b36a614ce47e","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e4"]},"type":"branch"}]},{"transformation":"10afa212-8292-11e5-b7f5-cf89a164dd7a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.add"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]},{"transformation":"10af2dd9-8292-11e5-b7f5-85c9984bff06","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.toString","com.graphhopper.util.Helper.getMemInfo","com.graphhopper.storage.GraphHopperStorage.toDetailsString","org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}