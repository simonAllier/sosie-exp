{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":323,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":60,"com.graphhopper.reader.OSMReaderTest.testFerry":365,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":246,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":18,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":9,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":80,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":219,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":341,"com.graphhopper.GraphHopperTest.testPrepare":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":322,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":329,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":391,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":306,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":135,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":301,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":385,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":344,"com.graphhopper.GraphHopperTest.testLoadOSM":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":118,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":136,"com.graphhopper.reader.OSMReaderTest.testSort":368,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":286,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":160,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":238,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":93,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":356,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":380,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":51,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":304,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":164,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":395,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":130,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":178,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":175,"com.graphhopper.GraphHopperAPITest.testLoad":363,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":220,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":289,"com.graphhopper.reader.OSMReaderTest.testBarriers":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":64,"com.graphhopper.util.GHUtilityTest.testCopy":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":154,"com.graphhopper.routing.PathTest.testFindInstruction":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":151,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":239,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":193,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":65,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":46,"com.graphhopper.util.InstructionListTest.testWayList2":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":144,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":35,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":105,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":47,"com.graphhopper.routing.PathBidirRefTest.testExtract":345,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":139,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":201,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":266,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":149,"com.graphhopper.util.GHUtilityTest.testSort2":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":320,"com.graphhopper.reader.OSMReaderTest.testMain":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":188,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":21,"com.graphhopper.storage.GraphHopperStorageTest.testClone":212,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":44,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":66,"com.graphhopper.routing.PathTest.testTime":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":79,"com.graphhopper.util.GHUtilityTest.testSortDirected":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":33,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":353,"com.graphhopper.GraphHopperTest.testFootOnly":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":106,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":75,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":138,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":348,"com.graphhopper.routing.QueryGraphTest.testOneWay":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":134,"com.graphhopper.reader.OSMReaderTest.testWithBounds":377,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":197,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":283,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":187,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":180,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":208,"com.graphhopper.search.NameIndexTest.testFlush":383,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":305,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":241,"com.graphhopper.util.InstructionListTest.testWayList":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":31,"com.graphhopper.GraphHopperAPITest.testDisconnected179":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":67,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":62,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":382,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":95,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":272,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":214,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":342,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":232,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":338,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":327,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":202,"com.graphhopper.routing.PathTest.testWayList":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":312,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":7,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":171,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":213,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":300,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.util.GHUtilityTest.testSort":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":140,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":200,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":211,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":10,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":52,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":355,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":159,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":161,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":85,"com.graphhopper.routing.PathTest.testFound":294,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":302,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":177,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":70,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":217,"com.graphhopper.util.InstructionListTest.testEmptyList":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":318,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":50,"com.graphhopper.reader.PrinctonReaderTest.testRead":381,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":24,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":182,"com.graphhopper.reader.OSMReaderTest.testFoot":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":83,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":142,"com.graphhopper.reader.OSMReaderTest.testOneWay":379,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":236,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":194,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":77,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":216,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":343,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":332,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":53,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":352,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":12,"com.graphhopper.routing.PathBidirRefTest.testExtract2":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":303,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":145,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":389,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":131,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":234,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":112,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":57,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":237,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":229,"com.graphhopper.GraphHopperTest.testFootAndCar":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":168,"com.graphhopper.GraphHopperTest.testPrepareOnly":263,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":155,"com.graphhopper.GraphHopperTest.testVia":270,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":315,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":375,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":13,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":233,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":258,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":373,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":122,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":76,"com.graphhopper.storage.EdgeTest.testCloneFull":5,"com.graphhopper.util.InstructionListTest.testFind":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":157},"transformations":[{"failures":[0,1,2,3],"tindex":"671617ef-8294-11e5-b29c-c37035e6be10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:272","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"67163f00-8294-11e5-b29c-05e9427f31fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:855","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.release()"},"status":0},{"failures":[4],"tindex":"67163f01-8294-11e5-b29c-958119d9fba2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-1},{"failures":[],"tindex":"67163f02-8294-11e5-b29c-ed645b9825d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[5],"tindex":"67163f03-8294-11e5-b29c-cb77adeb7d94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"tmpPrev","edgeEntry":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:54","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"67163f04-8294-11e5-b29c-edbe5c27a1ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:106","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.io.InputStream java.io.InputStream = java.lang.Object.getClass().getResourceAsStream((java.lang.String + \"_names.txt\"));\n    for (java.lang.String java.lang.String : com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(java.io.InputStream , com.graphhopper.util.Helper.java.nio.charset.Charset))) {\n        int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3));\n        if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n            int = -int;\n        \n        int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7));\n        if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n            int = -int;\n        \n        int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(int, int);\n        java.lang.String java.lang.String = gnu.trove.map.hash.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String);\n        if (java.lang.String != null)\n            throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n        \n    }\n}"},"status":0},{"failures":[],"tindex":"67163f05-8294-11e5-b29c-b346e6a5397f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"67166616-8294-11e5-b29c-9f2f7b84c609","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:563","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"level graph not yet frozen\""},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"67168d27-8294-11e5-b29c-63e56d45f174","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:984","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[],"tindex":"6716b438-8294-11e5-b29c-cb8f251d84c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"variableMap":{"val":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:551","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[32,70,175,219,383],"tindex":"6716b439-8294-11e5-b29c-ef653ccc49e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:273","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"status":-1},{"failures":[],"tindex":"6716b43a-8294-11e5-b29c-8799acd9db97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"mmapDA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":-2},{"failures":[384,385,386,387,388,389,390,391,392,393,394],"tindex":"6716b43b-8294-11e5-b29c-a9f647eed080","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:421","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[395,253,270,273,278,363,369],"tindex":"6716b43c-8294-11e5-b29c-9b6cda931322","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"shrinkFactor","dy":"b_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[270,271,272,273,274,275,277,278,363],"tindex":"6716b43d-8294-11e5-b29c-0bc281897192","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1073","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setDebugInfo(java.lang.String)"},"status":-1},{"failures":[],"tindex":"6716db4e-8294-11e5-b29c-8d668b71afb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:225","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"6716db4f-8294-11e5-b29c-15106bfef575","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"edge","tmpSize":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:86","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"6716db50-8294-11e5-b29c-c58895585323","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:110","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,396,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"6716db51-8294-11e5-b29c-9f1939c2d3d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"N_ADDITIONAL","index":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:266","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[6,10,11,13,17,21,22,23,25,26,27,29,30,32,37,39,45,47,50,52,53,57,59,60,61,63,64,65,67,68,70,75,77,83,85,88,90,91,95,103,120,131,138,149,156,157,164,165,166,168,169,170,172,173,175,180,182,188,190,193,195,196,200,203,208,209,210,212,213,214,216,217,219,224,226,232,234,237,239,240,244,246,247,250,253,255,256,257,258,259,262,263,264,265,266,267,268,269,396,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,343,344,345,346,356,358,363,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381,382],"tindex":"67170262-8294-11e5-b29c-45d7fd2cd3d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"E_FLAGS","green":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"67163f00-8294-11e5-b29c-05e9427f31fe","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.release"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.reader.dem.ElevationProvider$1_void_release().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.reader.dem.ElevationProvider$1_void_release().b"]},"type":"branch"}]}]}