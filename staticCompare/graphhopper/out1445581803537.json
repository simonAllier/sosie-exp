{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":80,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":47,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":18,"com.graphhopper.storage.MMapDataAccessTest.testSegments":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":42,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":43,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":85,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":75,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":66,"com.graphhopper.GraphHopperTest.testPrepare":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":111,"com.graphhopper.reader.OSMReaderTest.testFoot":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":24,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":67,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":17,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":120,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":96,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":114,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":58,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":55,"com.graphhopper.GraphHopperTest.testLoadOSM":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":53,"com.graphhopper.reader.OSMReaderTest.testSort":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":92,"com.graphhopper.reader.OSMReaderTest.testMain":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":112,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":65,"com.graphhopper.storage.MMapDataAccessTest.testHeader":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":33,"com.graphhopper.storage.MMapDataAccessTest.testCopy":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":14,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":2,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":48,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":122,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":98,"com.graphhopper.GraphHopperTest.testVia":56,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":12,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":3,"com.graphhopper.GraphHopperTest.testFootOnly":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":95,"com.graphhopper.reader.OSMReaderTest.testBarriers":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":104,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":29},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"7e75ba87-794f-11e5-bdfc-fd4bbd03bff7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:649","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n}"},"variableMap":{"delEdgesIter":"iter","toRemoveSet":"visited"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:44","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n        com.graphhopper.util.SimpleIntDeque.push(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"7e7608a8-794f-11e5-bdfc-a5e85d96cd47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"nodeEntryBytes","indexDivisor":"nodeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:310","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,31,32,33,121,122,123,40,124,125],"tindex":"7e7608a9-794f-11e5-bdfc-ade29cf107ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-1},{"failures":[],"tindex":"7e7608aa-794f-11e5-bdfc-99e146c6a89c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:101","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHLongIntBTree.BTreeEntry.get(long)"},"status":-2},{"failures":[],"tindex":"7e762fbb-794f-11e5-bdfc-5d0cd231b334","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:432","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"status":-2},{"failures":[],"tindex":"7e762fbc-794f-11e5-bdfc-e91d0c19c122","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:139","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting())"},"status":-2},{"failures":[],"tindex":"7e762fbd-794f-11e5-bdfc-0910dc6b4bf9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.REACH_DEST","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"7e762fbe-794f-11e5-bdfc-05b4413aa11d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"i","capacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"7e7656cf-794f-11e5-bdfc-079fd7c9fb3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"variableMap":{"location":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:733","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7e7656d0-794f-11e5-bdfc-93b885bae592","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"7e7656d1-794f-11e5-bdfc-9f407d9992a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:408","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (boolean)\n        double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n    else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n    \n} "},"status":-2},{"failures":[],"tindex":"7e7656d2-794f-11e5-bdfc-87cf39ac1f84","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:760","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.PointList.getSize()) - 2) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-2},{"failures":[],"tindex":"7e767de3-794f-11e5-bdfc-fb38b9d2d1f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:227","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"7e767de4-794f-11e5-bdfc-f7e7165e4c58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"N_LAT","maxLeafEntries":"N_LAT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:259","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-2},{"failures":[],"tindex":"7e767de5-794f-11e5-bdfc-bfe8d763c33f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"mSize":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:217","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-2},{"failures":[],"tindex":"7e767de6-794f-11e5-bdfc-bf0ac166ec0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"lonSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-2},{"failures":[],"tindex":"7e76a4f7-794f-11e5-bdfc-5d05aa361e04","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"7e76a4f8-794f-11e5-bdfc-4b237bd23b43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1015","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"variableMap":{"foundIndex":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:835","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-2},{"failures":[],"tindex":"7e76a4f9-794f-11e5-bdfc-0bb7aec4b2f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getPoints\")"},"status":-2},{"failures":[],"tindex":"7e76a4fa-794f-11e5-bdfc-49ea0e930f83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"variableMap":{"tt":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n        return 0;\n    \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}