{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":58,"com.graphhopper.reader.OSMReaderTest.testMain":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":49,"com.graphhopper.reader.OSMReaderTest.testFerry":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":7,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":50,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":39,"com.graphhopper.GraphHopperAPITest.testLoad":12,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":29,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":0,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":18,"com.graphhopper.reader.OSMReaderTest.testBarriers":11,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":32,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":40,"com.graphhopper.reader.OSMReaderTest.testSort":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":57},"transformations":[{"failures":[0,1,2],"tindex":"c71ce429-794d-11e5-9d59-f5ea7080618f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:137","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"variableMap":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[3,4],"tindex":"c71d0b3a-794d-11e5-9d59-cd01fe203387","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"variableMap":{"keys":"keys","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"c71d0b3b-794d-11e5-9d59-11a545553d35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"x1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"c71d0b3c-794d-11e5-9d59-617c31aba952","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:707","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false))"},"variableMap":{"iter":"edge","vIter":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:687","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"c71d324d-794d-11e5-9d59-7ddaf0d2b63b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"c71d324e-794d-11e5-9d59-b5c004031000","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:105","type":"CtIfImpl","sourcecode":"if (!(java.io.File.mkdirs()))\n    throw new java.lang.RuntimeException((((\"Directory \" + (java.io.File)) + \" does not exist and cannot created to place lock file there: \") + (java.io.File)));\n"},"variableMap":{"lockFile":"osmFile","lockDir":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:150","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.preProcess(java.io.File)"},"status":-2},{"failures":[],"tindex":"c71d324f-794d-11e5-9d59-730195e40c9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.insert(int, int)"},"status":-2},{"failures":[],"tindex":"c71d3250-794d-11e5-9d59-fdfec63a1aae","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"minLat","yend":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:103","type":"CtLocalVariableImpl","sourcecode":"double double = ((long / (int)) * (double)) + (com.graphhopper.util.shapes.BBox.double)"},"status":-2},{"failures":[],"tindex":"c71d3251-794d-11e5-9d59-517760d8b40c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"event","S_SKIP_EDGE2":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:70","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[],"tindex":"c71d3252-794d-11e5-9d59-45acbb01b63c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"angleXY","lat2":"angleXY","lon1":"angleXY","lon2":"angleXY","shrinkFactor":"angleXY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"c71d3253-794d-11e5-9d59-e11f7c19122e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:315","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"c71d5864-794d-11e5-9d59-f597036cdd60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"c71d5865-794d-11e5-9d59-61b28f80bff0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:286","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"c71d5866-794d-11e5-9d59-f58743a000ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:58","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-2},{"failures":[],"tindex":"c71d5867-794d-11e5-9d59-c3997cc718e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:414","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"c71d5868-794d-11e5-9d59-cb09c90db992","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"dLon","minLatTmp":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"status":-2},{"failures":[],"tindex":"c71d5869-794d-11e5-9d59-7d6c6f3e6361","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"c71d586a-794d-11e5-9d59-e1ebc7804da6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:201","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"c71d7f7b-794d-11e5-9d59-51b0f0c8621a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:290","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-2},{"failures":[],"tindex":"c71d7f7c-794d-11e5-9d59-8166c0cd4e25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"orientation","fwdSpeed":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}