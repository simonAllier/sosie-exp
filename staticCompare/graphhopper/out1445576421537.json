{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":169,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":39,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":60,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":45,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":156,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":116,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":88,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":147,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":123,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":170,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":99,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":30,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":90,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":62,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":65,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":139,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":155,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":81,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":117,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":40,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":140,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":115,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":175,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":132,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":53,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":142,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":93,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":52,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":165,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":159,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":179,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":104,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":127,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":162,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":106,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":113,"com.graphhopper.storage.GraphHopperStorageTest.testClone":34,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":66,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":186,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":43,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":183,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":171,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":161,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":69,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":49,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":148,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":83,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":166,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":152},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"f687b747-7942-11e5-a46e-51bc0634b9ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"bytes","edgeId":"bytes","com.graphhopper.storage.EdgeAccess.NO_NODE":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:366","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"f687de58-7942-11e5-a46e-8b77df5defa4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:598","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()) & (long)"},"status":-2},{"failures":[],"tindex":"f687de59-7942-11e5-a46e-6bfd047d7a30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:249","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"f687de5a-7942-11e5-a46e-a550caee6764","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"))"},"status":-2},{"failures":[],"tindex":"f687de5b-7942-11e5-a46e-55d8d77e5304","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:216","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"val":"wayTypeName","key":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:455","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"f687de5c-7942-11e5-a46e-11f78c55f847","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:151","type":"CtLocalVariableImpl","sourcecode":"int int = javax.xml.stream.XMLStreamReader.next()"},"status":-2},{"failures":[],"tindex":"f688056d-7942-11e5-a46e-b99626423e9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:137","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(float[], 0)"},"status":-2},{"failures":[],"tindex":"f688056e-7942-11e5-a46e-db5462601034","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.CHEdgeIteratorState.getDistance()"},"variableMap":{"mainEdgeState":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"f688056f-7942-11e5-a46e-c3011c799d6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:848","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int)"},"variableMap":{"tmpOffset":"tmpOffset","bitUtil":"bitUtil","bytes":"bytes","pillarNodes":"pillarNodes","i":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:851","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n    int += 4;\n} "},"status":-2},{"failures":[],"tindex":"f6880570-7942-11e5-a46e-9102677bf1e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"f6880571-7942-11e5-a46e-374364ae76d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:467","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f6882c82-7942-11e5-a46e-974df3ecf5a0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"variableMap":{"edge":"edge","flagEncoder":"flagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"f6882c83-7942-11e5-a46e-a1621a7aa499","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"radiusInMeter","incDist2DSum":"com.graphhopper.util.DistanceCalcEarth.C"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"status":-2},{"failures":[],"tindex":"f6882c84-7942-11e5-a46e-c5e59cb8d0d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"x","angle":"x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"f6882c85-7942-11e5-a46e-61e96fe2dae1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:526","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.NaN":"lon","com.graphhopper.reader.OSMReader.EMPTY":"length","id":"WIDTH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.dem.HeightTile == null) {\n    if (!(java.io.File.exists()))\n        java.io.File.mkdirs();\n    \n    java.lang.String java.lang.String = com.graphhopper.reader.dem.SRTMProvider.getFileString(double, double);\n    if (java.lang.String == null)\n        return 0;\n    \n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1);\n    com.graphhopper.reader.dem.HeightTile.setCalcMean(boolean);\n    com.graphhopper.reader.dem.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile);\n    com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int));\n    com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess);\n    boolean boolean = false;\n    try {\n        boolean = com.graphhopper.storage.DataAccess.loadExisting();\n    } catch (java.lang.Exception ex) {\n        com.graphhopper.reader.dem.Logger.warn((((\"cannot load dem\" + int) + \", error:\") + (java.lang.Exception.getMessage())));\n    }\n    if (!boolean) {\n        byte[] byte[] = new byte[(2 * (int)) * (int)];\n        com.graphhopper.storage.DataAccess.create(byte[].int);\n        try {\n            java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n            java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n            java.io.InputStream java.io.InputStream;\n            if (!(java.io.File.exists())) {\n                for (int int = 0 ; int < 3 ; int++) {\n                    try {\n                        com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                        break;\n                    } catch (java.net.SocketTimeoutException ex) {\n                        java.lang.Thread.sleep(2000);\n                        continue;\n                    } catch (java.io.FileNotFoundException ex) {\n                        java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                        continue;\n                    }\n                }\n            } \n            java.io.InputStream = new java.io.FileInputStream(java.io.File);\n            java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n            java.util.zip.ZipInputStream.getNextEntry();\n            java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n            int int;\n            while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n                for (int int = 0 ; int < int ; int += 2) {\n                    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                    if ((short < (-1000)) || (short > 12000))\n                        short = java.lang.Short.short;\n                    \n                    com.graphhopper.storage.DataAccess.setShort(int, short);\n                }\n            }\n            com.graphhopper.storage.DataAccess.flush();\n        } catch (java.lang.Exception ex) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"f6885396-7942-11e5-a46e-c1bc334f2270","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:64","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.TIntHashSet.isEmpty()) {\n    java.util.TreeMap<java.lang.Integer, com.graphhopper.coll.TIntHashSet>.remove(int);\n} "},"status":-2},{"failures":[],"tindex":"f6885397-7942-11e5-a46e-6dad568714d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"status":-2},{"failures":[],"tindex":"f6885398-7942-11e5-a46e-2fa06639c970","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:937","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type)"},"variableMap":{"viaNodeID":"fromWayID","fromWayID":"viaNodeID","toWayID":"viaNodeID","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:935","type":"CtIfImpl","sourcecode":"if (((long >= 0) && (long >= 0)) && (long >= 0)) {\n    return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type);\n} "},"status":-2},{"failures":[],"tindex":"f6885399-7942-11e5-a46e-65ca986ccc52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"variableMap":{"keys":"keys","i":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-2},{"failures":[],"tindex":"f688539a-7942-11e5-a46e-d3a90482e5ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:211","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"variableMap":{"type":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:637","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}