{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":48,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":49,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":64,"com.graphhopper.util.BitUtilBigTest.testToDouble":72,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":53,"com.graphhopper.routing.PathBidirRefTest.testExtract2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":42,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":3,"com.graphhopper.coll.OSMIDMapTest.testGet2":27,"com.graphhopper.storage.VLongStorageTest.testWrite":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":43,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":8,"com.graphhopper.coll.CompressedArrayTest.testCompress":68,"com.graphhopper.util.BitUtilLittleTest.testToDouble":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":39,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":4,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":63,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":65,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":56,"com.graphhopper.search.NameIndexTest.testFlush":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":47,"com.graphhopper.coll.OSMIDMapTest.testGetLong":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":61,"com.graphhopper.util.InstructionListTest.testWayList":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":59,"com.graphhopper.coll.CompressedArrayTest.testCompress2":67,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":45,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":66,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":55,"com.graphhopper.coll.OSMIDMapTest.testGet":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":52,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.PathBidirRefTest.testExtract":32,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":15,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":12},"transformations":[{"failures":[0],"tindex":"9b86ca8b-8298-11e5-a695-5974ca38c61e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:59","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.combineIntsToLong(com.graphhopper.storage.DataAccess.getHeader(0), com.graphhopper.storage.DataAccess.getHeader(4))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"9b86ca8c-8298-11e5-a695-af2df908aaf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:586","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"9b86ca8d-8298-11e5-a695-196cedbbe235","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:97","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-2},{"failures":[],"tindex":"9b86f19e-8298-11e5-a695-a7bdc7a4a1cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"ab_y","yend":"ab_y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[23,24,25],"tindex":"9b86f19f-8298-11e5-a695-db0b37a2c4d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[],"tindex":"9b86f1a0-8298-11e5-a695-31f01e4f313d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[26,27,28,29],"tindex":"9b86f1a1-8298-11e5-a695-73cc5db04be7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8)"},"status":-1},{"failures":[8,30],"tindex":"9b86f1a2-8298-11e5-a695-bd23941f74b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"variableMap":{"high":"nodeB","len":"edgeId","start":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:524","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,1,2,48,3,4,49,50,5,51,52,53,6,54,55,56,57,58,59,60,61,62],"tindex":"9b86f1a3-8298-11e5-a695-73742ccc55cc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.add(int)"},"variableMap":{"changedNodes":"res","currNode":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:323","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TIntList.add(int)"},"status":-1},{"failures":[],"tindex":"9b8718b4-8298-11e5-a695-cd4abd8d2721","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:352","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.isShortcut())\n    return (com.graphhopper.storage.BaseGraph.CommonEdgeIterator.(getDirectFlags()) & (com.graphhopper.routing.ch.PrepareEncoder.getScBwdDir())) != 0;\n"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:181","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.CHEdgeIteratorState) && (((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.util.EdgeIteratorState)).isShortcut())"},"status":-2},{"failures":[63,64,65],"tindex":"9b8718b5-8298-11e5-a695-3569a862aa47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:179","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(((int) + 1))"},"variableMap":{"wayIndex":"i","fullPL":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:140","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[66],"tindex":"9b8718b6-8298-11e5-a695-b559c8ddeb83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"status":-1},{"failures":[],"tindex":"9b8718b7-8298-11e5-a695-93a199883652","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"status":0},{"failures":[],"tindex":"9b8718b8-8298-11e5-a695-21a253bf181c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(0, byte[], int)"},"variableMap":{"len":"length","bytes":"bytes","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(0, byte[], byte[].int)"},"status":-2},{"failures":[],"tindex":"9b8718b9-8298-11e5-a695-9f4e6c6c80d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.max((10 * 4), long))"},"variableMap":{"bytes":"tmp","this":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:807","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 4))"},"status":-2},{"failures":[],"tindex":"9b873fca-8298-11e5-a695-f1b7848ff4be","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:444","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"variableMap":{"leafEntry":"from","nodeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:60","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<java.lang.Integer>.add(gnu.trove.list.TIntList.get(int))"},"status":-2},{"failures":[],"tindex":"9b873fcb-8298-11e5-a695-331aae0d3cfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":0},{"failures":[],"tindex":"9b873fcc-8298-11e5-a695-5dc2494efef7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:184","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n    if (java.lang.String != null) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n        long long = 0;\n        switch (java.lang.String.charAt(0)) {\n            case 'n' :\n                if (\"node\".equals(java.lang.String)) {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                } \n                break;\n            case 'w' :\n                {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                }\n            case 'r' :\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    } \n} "},"variableMap":{"javax.xml.stream.XMLStreamConstants.START_ELEMENT":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT","parser":"parser","event":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:182","type":"CtWhileImpl","sourcecode":"while (int != (javax.xml.stream.XMLStreamConstants.int)) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n        if (java.lang.String != null) {\n            java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n            long long = 0;\n            switch (java.lang.String.charAt(0)) {\n                case 'n' :\n                    if (\"node\".equals(java.lang.String)) {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                    } \n                    break;\n                case 'w' :\n                    {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                    }\n                case 'r' :\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        } \n    } \n    int = javax.xml.stream.XMLStreamReader.next();\n}"},"status":-2},{"failures":[67,68,69,70],"tindex":"9b873fcd-8298-11e5-a695-7789c20ef8c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:87","type":"CtWhileImpl","sourcecode":"while ((long & (~127L)) != 0L) {\n    com.graphhopper.storage.VLongStorage.writeByte(((byte)((long & 127L) | 128L)));\n    long >>>= 7;\n}"},"status":-1},{"failures":[71,72],"tindex":"9b8766de-8298-11e5-a695-2ff1e2cb1dec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromDouble(byte[], double, 0)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"9b8718b7-8298-11e5-a695-93a199883652","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.getProperties"]},"type":"staticDiff"}]},{"transformation":"9b873fcb-8298-11e5-a695-331aae0d3cfb","diffs":[{"branches":{"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":["com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).e2","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).e1","com.graphhopper.routing.util.AbstractFlagEncoder_double_applyMaxSpeed(com.graphhopper.reader.OSMWay,double,boolean).b","com.graphhopper.routing.util.AbstractFlagEncoder_double_applyMaxSpeed(com.graphhopper.reader.OSMWay,double,boolean).e1","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed"]},"type":"staticDiff"}]}]}