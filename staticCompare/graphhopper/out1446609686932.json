{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":138,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":295,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":394,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":373,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":87,"com.graphhopper.coll.CompressedArrayTest.testCompress":361,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":327,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":335,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":349,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":331,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":6,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":390,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":249,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":59,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":199,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":104,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":134,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":96,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":369,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":82,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":230,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":200,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":254,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":371,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":338,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":166,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":161,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":46,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":285,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":306,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":241,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":282,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":125,"com.graphhopper.coll.CompressedArrayTest.testCompress2":360,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":395,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":318,"com.graphhopper.GraphHopperAPITest.testLoad":283,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":382,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":176,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":170,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":142,"com.graphhopper.util.GHUtilityTest.testCopy":299,"com.graphhopper.routing.PathTest.testFindInstruction":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":111,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":219,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":191,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":131,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":2,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":397,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":389,"com.graphhopper.util.InstructionListTest.testWayList2":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":208,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":194,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":313,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":117,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":213,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":274,"com.graphhopper.routing.PathBidirRefTest.testExtract":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":302,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":252,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":239,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":157,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":212,"com.graphhopper.util.GHUtilityTest.testSort2":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":124,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":127,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":381,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":255,"com.graphhopper.storage.GraphHopperStorageTest.testClone":172,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":143,"com.graphhopper.routing.PathTest.testTime":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":261,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":153,"com.graphhopper.util.GHUtilityTest.testSortDirected":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":263,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":43,"com.graphhopper.GraphHopperTest.testFootOnly":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":214,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":149,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":202,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":39,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":385,"com.graphhopper.routing.QueryGraphTest.testOneWay":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":271,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":366,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":198,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":363,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":227,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":121,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":168,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.util.InstructionListTest.testWayList":290,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":340,"com.graphhopper.GraphHopperAPITest.testDisconnected179":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":325,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":140,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":152,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":163,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":81,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":186,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":236,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":70,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":384,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":165,"com.graphhopper.routing.PathTest.testWayList":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":71,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":392,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":115,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":103,"com.graphhopper.util.GHUtilityTest.testSort":300,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":135,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":171,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":217,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":250,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":387,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":314,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":315,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":345,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":388,"com.graphhopper.routing.PathTest.testFound":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":156,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":359,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":305,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":118,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":326,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":175,"com.graphhopper.util.InstructionListTest.testEmptyList":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":309,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":277,"com.graphhopper.reader.PrinctonReaderTest.testRead":286,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":137,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":123,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":205,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":368,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":280,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":260,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":151,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":334,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":76,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":237,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":246,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":147,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":352,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":376,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":401,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":343,"com.graphhopper.routing.PathBidirRefTest.testExtract2":37,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":386,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":242,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":269,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":201,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":281,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":350,"com.graphhopper.GraphHopperTest.testPrepareOnly":356,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":222,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":307,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":398,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":344,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":292,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":378,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":150,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":348,"com.graphhopper.util.InstructionListTest.testFind":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":105},"transformations":[{"failures":[],"tindex":"b8b38f21-82a8-11e5-9825-13aa40a0e0ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"fwdIncline","r_lat":"fwdIncline","a_lat":"fwdIncline","delta_lon":"fwdIncline","r_lon":"fwdIncline","a_lon":"fwdIncline","norm":"fwdIncline"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:229","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[0,1,2,3],"tindex":"b8b3b632-82a8-11e5-9825-478cffa1fb9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"nn"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:347","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.update(int, int, int)"},"status":-1},{"failures":[],"tindex":"b8b3b633-82a8-11e5-9825-19d6596891c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:145","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[4],"tindex":"b8b3dd44-82a8-11e5-9825-f5558ca541b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"b8b3dd45-82a8-11e5-9825-4bd096ede62c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"visitedCountFrom","mSize":"visitedCountFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:222","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"b8b3dd46-82a8-11e5-9825-33ad0ae2e88c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:258","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"variableMap":{"item":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n    return true;\n"},"status":-2},{"failures":[5,6,1,7,8,9,10,11,12,13],"tindex":"b8b3dd47-82a8-11e5-9825-1b22af1c001e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:77","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"b8b40458-82a8-11e5-9825-411e7bf47f00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:328","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,6,62,63,64,65,66,67,68,69,0,70,71,72,73,74,75,76,77,78,79,1,2,80,81,3,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,9,10,11,12,13,302],"tindex":"b8b40459-82a8-11e5-9825-81b0426f632d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[],"tindex":"b8b42b6a-82a8-11e5-9825-b52b56768f10","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:130","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"flags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"status":0},{"failures":[303],"tindex":"b8b42b6b-82a8-11e5-9825-3301feba31f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"trackType","destination":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:165","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"b8b42b6c-82a8-11e5-9825-afdf2ab7b601","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[36,37,38,39,40,41,42,304,43,44,45,46,47,48,49,50,51,52,305,53,306,5,54,55,56,57,58,59,60,61,6,307,62,308,309,63,64,65,66,67,68,69,0,70,71,310,72,73,74,75,76,77,78,79,311,1,2,80,81,3,82,312,313,314,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,315,108,109,110,111,112,113,114,316,115,317,116,318,117,118,119,120,121,122,123,124,125,319,320,126,127,128,129,130,131,321,132,322,323,133,134,135,136,137,138,139,140,141,142,324,143,325,144,326,145,146,147,148,149,150,151,152,153,327,328,154,155,156,157,158,159,329,160,330,331,161,162,163,164,165,166,332,167,168,169,170,171,172,173,333,174,334,175,335,176,177,178,179,180,181,182,183,184,336,337,185,186,187,188,189,190,338,191,339,340,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,341,250,342,343,344,251,345,252,253,254,255,256,257,258,259,260,346,261,347,262,348,263,264,265,266,267,268,269,270,271,349,350,272,273,274,275,276,277,351,278,352,353,279,280,281,282,283,284,285,286,287,14,15,16,17,18,19,20,21,22,23,24,25,26,27,354,288,289,290,291,292,293,294,295,296,297,298,299,300,301,355,356,9,10,11,12,13,302,357,28,29,30,31,32,33,358,34,35,359],"tindex":"b8b4527d-82a8-11e5-9825-a7f0013ff826","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:49","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"b8b4798e-82a8-11e5-9825-573234296b60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"status":-2},{"failures":[],"tindex":"b8b4798f-82a8-11e5-9825-578b28061cea","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"status":-2},{"failures":[],"tindex":"b8b47990-82a8-11e5-9825-47e3d13eeae8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:601","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[360,361,196,203,205,206,362,226,233,235,236,18,28,29,30,31,32,33,34,35,363,364,365,366,367,368,369,370],"tindex":"b8b47991-82a8-11e5-9825-61034dd64188","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[36,37,38,38,39,39,40,40,41,41,42,42,304,304,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,305,53,306,5,54,55,56,57,58,59,60,61,6,307,62,308,309,63,64,65,66,67,68,69,0,70,71,310,72,73,74,75,76,77,78,79,311,1,2,80,81,3,82,312,313,314,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,107,371,315,372,108,109,110,111,112,113,114,316,115,317,116,373,318,117,118,119,120,121,122,123,124,125,319,320,126,127,374,128,129,130,131,321,132,322,323,133,134,135,136,326,156,165,166,375,332,376,167,168,169,170,171,172,173,333,174,334,175,377,335,176,177,178,179,180,181,182,183,184,336,337,185,186,378,187,188,189,190,338,191,339,340,192,193,194,195,379,380,381,382,383,384,385,386,387,388,389,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,390,213,214,215,216,217,218,219,220,221,222,223,224,225,391,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,392,393,341,250,342,343,344,251,345,252,253,394,395,254,255,256,257,258,259,260,346,261,347,262,396,348,263,264,265,266,267,268,269,270,271,349,350,272,273,397,274,275,276,277,351,278,352,353,279,280,281,282,283,284,285,286,287,14,15,16,17,18,19,20,21,22,398,23,24,25,26,27,354,288,399,289,290,291,292,293,294,295,296,297,298,299,300,301,355,356,9,10,11,12,13,302,357,28,29,30,31,32,33,358,34,35,359],"tindex":"b8b4a0a2-82a8-11e5-9825-3d1ba9c6c994","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"variableMap":{"segNumber":"i","segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[95,96,99,100,103,104,400,401],"tindex":"b8b4c7b3-82a8-11e5-9825-834e632d86fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.util.Instruction.USE_ROUNDABOUT","nodeThis":"com.graphhopper.util.Instruction.USE_ROUNDABOUT","edgeId":"indi","nodeOther":"indi"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:134","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    if (!(boolean)) {\n        java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\");\n    } else {\n        java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String);\n    }\n} else {\n    throw new java.lang.IllegalStateException((int + \"no Roundabout indication\"));\n}"},"status":-1},{"failures":[293,294,295,296,298,300],"tindex":"b8b4c7b4-82a8-11e5-9825-15aedef36eb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b8b38f21-82a8-11e5-9825-13aa40a0e0ee","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.keepIn"]},"type":"staticDiff"}]}]}