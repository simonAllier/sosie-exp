{"failureDictionary":{"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":49,"com.graphhopper.routing.PathTest.testFindInstruction":90,"com.graphhopper.reader.OSMReaderTest.testFerry":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":4,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":55,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":48,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":59,"com.graphhopper.GraphHopperTest.testPrepare":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":31,"com.graphhopper.util.InstructionListTest.testWayList2":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":79,"com.graphhopper.reader.OSMReaderTest.testFoot":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":64,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":73,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":70,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":92,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":14,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":103,"com.graphhopper.routing.PathBidirRefTest.testExtract":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":60,"com.graphhopper.GraphHopperTest.testLoadOSM":106,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":57,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":82,"com.graphhopper.routing.PathBidirRefTest.testExtract2":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":84,"com.graphhopper.routing.PathTest.testWayList":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":83,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":35,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":13,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":56,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":18,"com.graphhopper.GraphHopperTest.testFootAndCar":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":30,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":68,"com.graphhopper.routing.PathTest.testTime":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":34,"com.graphhopper.GraphHopperTest.testVia":101,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":5,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":105,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":81,"com.graphhopper.GraphHopperTest.testFootOnly":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":17,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":87,"com.graphhopper.util.InstructionListTest.testFind":6,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":66,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":43},"transformations":[{"failures":[],"tindex":"c5ac0c75-7941-11e5-b1d6-a97c768c6d2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:75","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"c5ac3386-7941-11e5-b1d6-9d726f49d014","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[0],"tindex":"c5ac5a97-7941-11e5-b1d6-bd06284ab743","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.readTags(javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"c5ac5a98-7941-11e5-b1d6-0be229498252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:82","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"c5ac5a99-7941-11e5-b1d6-950ae7d0d553","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:255","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"variableMap":{"res":"encoded","value":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"long = long | com.graphhopper.routing.util.AbstractFlagEncoder.(handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int))"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"c5ac5a9a-7941-11e5-b1d6-b37fc665a06e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"tmpValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"c5ac81ab-7941-11e5-b1d6-c3e6845ba220","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"nextEdge","speed":"nextEdgeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"c5ac81ac-7941-11e5-b1d6-49410ef3ead6","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"status":-2},{"failures":[],"tindex":"c5ac81ad-7941-11e5-b1d6-01efd0e0eb8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.AStarEdge.double"},"status":-2},{"failures":[],"tindex":"c5aca8be-7941-11e5-b1d6-d13e58bb5cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(0, byte[], byte[].int)"},"status":-2},{"failures":[],"tindex":"c5aca8bf-7941-11e5-b1d6-e7e2a52bf0a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:152","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"c5aca8c0-7941-11e5-b1d6-a7c3dfe22d9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return \"\";\n"},"status":-2},{"failures":[],"tindex":"c5aca8c1-7941-11e5-b1d6-1115a1ed7728","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"c5aca8c2-7941-11e5-b1d6-2f3a3f6ccdfd","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"c5accfd3-7941-11e5-b1d6-11fa9102f6e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:160","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"status":-2},{"failures":[],"tindex":"c5accfd4-7941-11e5-b1d6-9bff9edeb5df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors()) {\n    throw new java.lang.RuntimeException(((((\"You cannot call \" + java.lang.String) + \" if response contains errors. Check this with ghResponse.hasErrors(). \") + \"Errors are: \") + com.graphhopper.GHResponse.(getErrors())));\n} "},"status":-2},{"failures":[],"tindex":"c5accfd5-7941-11e5-b1d6-b7222556ecaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"c5accfd6-7941-11e5-b1d6-49a0fc982dbd","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"swapIndex","weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:249","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-2},{"failures":[],"tindex":"c5acf6e7-7941-11e5-b1d6-bf5e83e05f9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:133","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-2},{"failures":[],"tindex":"c5acf6e8-7941-11e5-b1d6-b315949503e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}