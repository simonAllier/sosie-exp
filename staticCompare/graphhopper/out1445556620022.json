{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":47,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.reader.OSMReaderTest.testFerry":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":19,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":11,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":46,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":52,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":23,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":56,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":6,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":33,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":14,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":10,"com.graphhopper.reader.OSMReaderTest.testFoot":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":64,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":26,"com.graphhopper.reader.OSMReaderTest.testOneWay":53,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":65,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":18,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":57,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":41},"transformations":[{"failures":[],"tindex":"dbe85029-7914-11e5-96a1-998ac011adf3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"instructionIndex","tmpSize":"pointIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:303","type":"CtIfImpl","sourcecode":"if (!((int == 0) && (int == 0))) {\n    double double;\n    int int = int;\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    } else {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    }\n    if (double < double) {\n        double = double;\n        int = int;\n    } \n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"dbe8773a-7914-11e5-96a1-2b1eae411b4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"dbe8773b-7914-11e5-96a1-0b72aa73c930","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:155","type":"CtIfImpl","sourcecode":"if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n    java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n} else {\n    java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n    java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n    try {\n        java.lang.String.format(java.lang.String, java.lang.Object[]);\n    } catch (java.lang.Exception ex) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    }\n}"},"status":0},{"failures":[],"tindex":"dbe89e4c-7914-11e5-96a1-89ee1d8a3639","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:259","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"variableMap":{"res":"encoded","maxBits":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:304","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":0},{"failures":[],"tindex":"dbe89e4d-7914-11e5-96a1-1509d86d4d04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:102","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"dbe89e4e-7914-11e5-96a1-df96a2e53a44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, false)"},"status":-2},{"failures":[],"tindex":"dbe89e4f-7914-11e5-96a1-bbdf8eaf966a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"end"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:373","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double);\n    }\n"},"status":-2},{"failures":[],"tindex":"dbe89e50-7914-11e5-96a1-b7a7c493a3cc","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:45","type":"CtAssignmentImpl","sourcecode":"int = ((int)(long))"},"status":-2},{"failures":[],"tindex":"dbe89e51-7914-11e5-96a1-a3b071cae9d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:73","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"dbe89e52-7914-11e5-96a1-a350ed3f20a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:930","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"wayPointMaxDistance\", 1.0)"},"status":-2},{"failures":[],"tindex":"dbe8c563-7914-11e5-96a1-81be6f22161b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-2},{"failures":[],"tindex":"dbe8c564-7914-11e5-96a1-fd49982d0d16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:177","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess._getLinkPosInEdgeArea(int, int, long)"},"status":-2},{"failures":[],"tindex":"dbe8c565-7914-11e5-96a1-7b278d45cc9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:980","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"dbe8c566-7914-11e5-96a1-c156441d91c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"str","destination":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:109","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(java.io.InputStream , com.graphhopper.util.Helper.java.nio.charset.Charset))) {\n    int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3));\n    if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n        int = -int;\n    \n    int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7));\n    if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n        int = -int;\n    \n    int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(int, int);\n    java.lang.String java.lang.String = com.graphhopper.reader.dem.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String);\n    if (java.lang.String != null)\n        throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n    \n}"},"status":-2},{"failures":[],"tindex":"dbe8c567-7914-11e5-96a1-bd5e6c231b7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:256","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    int[][][int][int] = short;\nelse\n    int[][][int][int] = short << 16;\n"},"status":-2},{"failures":[],"tindex":"dbe8c568-7914-11e5-96a1-612e51a8d1b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"status":-2},{"failures":[],"tindex":"dbe8ec79-7914-11e5-96a1-292495dea2f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:996","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors())\n    return java.util.Collections.emptyList();\n"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:964","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String);\n} catch (java.lang.Exception ex) {\n    com.graphhopper.GHResponse.addError(java.lang.Exception);\n    return java.util.Collections.emptyList();\n}"},"status":-2},{"failures":[],"tindex":"dbe8ec7a-7914-11e5-96a1-edad2ac64375","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"variableMap":{"highwayValue":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:239","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"dbe8ec7b-7914-11e5-96a1-2361b67cb2ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"tmp","angle":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:58","type":"CtReturnImpl","sourcecode":"return double * double"},"status":-2},{"failures":[],"tindex":"dbe8ec7c-7914-11e5-96a1-5d11a2c21fee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:178","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.QueryResult.getQueryPoint().double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}