{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":389,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":395,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":112,"com.graphhopper.reader.OSMReaderTest.testFerry":343,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":313,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":163,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":373,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":361,"com.graphhopper.coll.CompressedArrayTest.testCompress":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":156,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":132,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":225,"com.graphhopper.util.BitUtilBigTest.testReverse":3,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":189,"com.graphhopper.GraphHopperTest.testPrepare":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":144,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":34,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":79,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":32,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":416,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":296,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":339,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.GraphHopperTest.testLoadOSM":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":97,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":166,"com.graphhopper.reader.OSMReaderTest.testSort":346,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":255,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":145,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":400,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":342,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":198,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":253,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":70,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":205,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":38,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":29,"com.graphhopper.coll.OSMIDMapTest.testGetLong":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":275,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":258,"com.graphhopper.coll.CompressedArrayTest.testCompress2":7,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":272,"com.graphhopper.GraphHopperAPITest.testLoad":49,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":226,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":262,"com.graphhopper.reader.OSMReaderTest.testBarriers":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":185,"com.graphhopper.util.GHUtilityTest.testCopy":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":116,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":76,"com.graphhopper.routing.PathTest.testFindInstruction":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":263,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":73,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":245,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":290,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":117,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":193,"com.graphhopper.util.InstructionListTest.testWayList2":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":105,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":267,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":182,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":80,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":42,"com.graphhopper.coll.OSMIDMapTest.testGet":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":194,"com.graphhopper.routing.PathBidirRefTest.testExtract":365,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":318,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":298,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":325,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":110,"com.graphhopper.util.GHUtilityTest.testSort2":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":39,"com.graphhopper.reader.OSMReaderTest.testMain":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":257,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":285,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":168,"com.graphhopper.storage.StorablePropertiesTest.testStore":149,"com.graphhopper.storage.GraphHopperStorageTest.testClone":218,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":191,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":299,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":118,"com.graphhopper.routing.PathTest.testTime":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":131,"com.graphhopper.reader.OSMReaderTest.testRelation":352,"com.graphhopper.util.GHUtilityTest.testSortDirected":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":180,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":152,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":397,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":60,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":81,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":300,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":127,"com.graphhopper.search.NameIndexTest.testCreate":421,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":99,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":392,"com.graphhopper.routing.QueryGraphTest.testOneWay":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":53,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":360,"com.graphhopper.storage.VLongStorageTest.testWrite":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":95,"com.graphhopper.reader.OSMReaderTest.testWithBounds":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":372,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":277,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":2,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":214,"com.graphhopper.search.NameIndexTest.testFlush":419,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":247,"com.graphhopper.util.InstructionListTest.testWayList":310,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":48,"com.graphhopper.GraphHopperAPITest.testDisconnected179":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":119,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":114,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":147,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":331,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":384,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":238,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":44,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":213,"com.graphhopper.coll.GHTBitSetTest.testClear":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":206,"com.graphhopper.routing.PathTest.testWayList":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":177,"com.graphhopper.coll.OSMIDMapTest.testGet2":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":94,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":394,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":154,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":268,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":415,"com.graphhopper.util.GHUtilityTest.testSort":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":136,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":202,"com.graphhopper.search.NameIndexTest.testPut":418,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":199,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":399,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":254,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":256,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":363,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":137,"com.graphhopper.routing.PathTest.testFound":409,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":338,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":385,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":274,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":420,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":122,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":223,"com.graphhopper.util.InstructionListTest.testEmptyList":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":197,"com.graphhopper.util.shapes.CircleTest.testContains":4,"com.graphhopper.reader.PrinctonReaderTest.testRead":340,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":121,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":171,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":279,"com.graphhopper.reader.OSMReaderTest.testFoot":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":135,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":364,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":203,"com.graphhopper.reader.OSMReaderTest.testOneWay":359,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":242,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":20,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":129,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":222,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":380,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":17,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":89,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":315,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":367,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":6,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":200,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":396,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":210,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":358,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":10,"com.graphhopper.routing.PathBidirRefTest.testExtract2":366,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":386,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":59,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":71,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":417,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":52,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":204,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":243,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":235,"com.graphhopper.GraphHopperTest.testFootAndCar":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":382,"com.graphhopper.util.BitUtilLittleTest.testReverse":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":388,"com.graphhopper.storage.StorablePropertiesTest.testLoad":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":265,"com.graphhopper.GraphHopperTest.testPrepareOnly":322,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":77,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":35,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":354,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":353,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":159,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":239,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":312,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":128,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":179,"com.graphhopper.util.InstructionListTest.testFind":307,"com.graphhopper.coll.GHTBitSetTest.testCopy":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":252},"transformations":[{"failures":[],"tindex":"236923be-8277-11e5-9caa-fb67a34aefe5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:80","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.write(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"23694acf-8277-11e5-9caa-359f09e4c140","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"variableMap":{"bytes":"tmpDegreeCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"status":0},{"failures":[],"tindex":"23694ad0-8277-11e5-9caa-7974d1b0ddd8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:146","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"variableMap":{"segSize":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[0,1,2,3],"tindex":"23694ad1-8277-11e5-9caa-83837d7d5394","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:185","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[4],"tindex":"23694ad2-8277-11e5-9caa-6deb165e819c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[5,6,7,8],"tindex":"23694ad3-8277-11e5-9caa-bff49ec25058","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:138","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[],"tindex":"236970e4-8277-11e5-9caa-0d7bc7b25e7f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:138","type":"CtIfImpl","sourcecode":"if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":0},{"failures":[],"tindex":"236970e5-8277-11e5-9caa-2bc3445b9593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"status":0},{"failures":[8],"tindex":"236970e6-8277-11e5-9caa-9381f3e47b94","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"variableMap":{"entry":"entry","latlon":"len","i":"entry","algo":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n    long long = com.graphhopper.storage.VLongStorage.readVLong();\n    if (int == int) {\n        com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n        com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n        return com.graphhopper.util.shapes.GHPoint;\n    } \n}"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"236970e7-8277-11e5-9caa-4b27068378b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.BaseGraph.isFrozen()))\n    com.graphhopper.storage.BaseGraph.freeze();\n"},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:280","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long))"},"status":-1},{"failures":[],"tindex":"236970e8-8277-11e5-9caa-c9194f4b262d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"variableMap":{"initialized":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:71","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(boolean))) {\n    if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    else\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n} else if (!(boolean)) {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n} else {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n}"},"status":-2},{"failures":[],"tindex":"236997f9-8277-11e5-9caa-5f719a31dbe9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:172","type":"CtIfImpl","sourcecode":"if (java.util.List<com.graphhopper.storage.index.QueryResult> == null) {\n    java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(5);\n    gnu.trove.map.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.put(int, java.util.List<com.graphhopper.storage.index.QueryResult>);\n} "},"status":0},{"failures":[],"tindex":"236997fa-8277-11e5-9caa-411522f5e743","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[46,47],"tindex":"236997fb-8277-11e5-9caa-6fb2d57f4c32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:74","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.clear()"},"status":-1},{"failures":[48],"tindex":"236997fc-8277-11e5-9caa-2fae603437e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"variableMap":{"cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:149","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"status":-1},{"failures":[],"tindex":"236997fd-8277-11e5-9caa-19f15795e35d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"236997fe-8277-11e5-9caa-71aa82ce8842","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:38","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || (java.lang.String.equals(java.lang.String)))\n    return false;\n"},"variableMap":{"toStr":"osmValue","fromStr":"osmValue","from":"osmValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:151","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.Object))\n        return true;\n    \n}"},"status":-2},{"failures":[],"tindex":"2369bf0f-8277-11e5-9caa-83522297dc98","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1135","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((\"start finding subnetworks, \" + (com.graphhopper.util.Helper.getMemInfo())))"},"variableMap":{"logger":"com.graphhopper.util.Helper.logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:104","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n        continue;\n    } \n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        continue;\n    } \n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0) {\n        com.graphhopper.util.Helper.org.slf4j.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n        continue;\n    } \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"2369bf10-8277-11e5-9caa-d5ff60885ba0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"id","guess":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":0},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,9,154,155,156,157,158,10,159,11,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,12,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,13,330,331,332,333,334,335,336,337,14,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,15,16,17,18,380,381,382,19,383,20,21,22,384,23,24,385,386,25,26,27,28,29,30,31,32,33,387,34,35,388,36,37,38,39,40,41,389,390,42,43,44,45,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421],"tindex":"2369bf11-8277-11e5-9caa-27b034d9decd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:128","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"daType":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"236970e5-8277-11e5-9caa-2bc3445b9593","diffs":[{"methodsDiff":{"delete":["java.lang.String.toUpperCase"]},"type":"staticDiff"}]},{"transformation":"236923be-8277-11e5-9caa-fb67a34aefe5","diffs":[{"methodsDiff":{"delete":["java.io.FileOutputStream.write"]},"type":"staticDiff"}]},{"transformation":"236997f9-8277-11e5-9caa-5f719a31dbe9","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).e11","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t15","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).t10","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).t14"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18"],"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18"]},"type":"branch"}]},{"transformation":"236997fa-8277-11e5-9caa-411522f5e743","diffs":[{"branches":{"com.graphhopper.routing.PathBidirRefTest.testExtract":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_start().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}