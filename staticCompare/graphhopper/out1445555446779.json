{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":38,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":126,"com.graphhopper.reader.OSMReaderTest.testFerry":66,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":13,"com.graphhopper.routing.QueryGraphTest.testOneWay":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":135,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":122,"com.graphhopper.reader.OSMReaderTest.testWithBounds":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":142,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":97,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":83,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":184,"com.graphhopper.GraphHopperTest.testPrepare":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":164,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":29,"com.graphhopper.util.InstructionListTest.testWayList":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":33,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":213,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":177,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":30,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":123,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":199,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":152,"com.graphhopper.GraphHopperTest.testLoadOSM":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":124,"com.graphhopper.reader.OSMReaderTest.testSort":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":43,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":76,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":92,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":2,"com.graphhopper.routing.PathTest.testWayList":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":139,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":190,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":10,"com.graphhopper.util.GHUtilityTest.testSort":210,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":201,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":145,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":109,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":107,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":63,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":100,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":160,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":157,"com.graphhopper.reader.OSMReaderTest.testBarriers":70,"com.graphhopper.routing.PathTest.testFound":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":202,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.util.GHUtilityTest.testCopy":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":104,"com.graphhopper.routing.PathTest.testFindInstruction":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":165,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":146,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":149,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":185,"com.graphhopper.util.InstructionListTest.testWayList2":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":219,"com.graphhopper.reader.OSMReaderTest.testFoot":67,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":129,"com.graphhopper.reader.OSMReaderTest.testOneWay":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":45,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":180,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":170,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":198,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":71,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":203,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":137,"com.graphhopper.util.GHUtilityTest.testSort2":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":196,"com.graphhopper.reader.OSMReaderTest.testMain":68,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":99,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":182,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":206,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":125,"com.graphhopper.storage.GraphHopperStorageTest.testClone":158,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":162,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":174,"com.graphhopper.routing.PathTest.testTime":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":141,"com.graphhopper.util.GHUtilityTest.testSortDirected":211,"com.graphhopper.GraphHopperTest.testPrepareOnly":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":178,"com.graphhopper.GraphHopperTest.testVia":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":105,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":191,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":82,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":18,"com.graphhopper.GraphHopperTest.testFootOnly":64,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":167,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":88,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":6,"com.graphhopper.util.InstructionListTest.testFind":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":175},"transformations":[{"failures":[],"tindex":"20992e74-7912-11e5-8719-15730b90cfe2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:129","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(0.1)"},"variableMap":{"distCalc":"calc","equalNormedDelta":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:413","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int])"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"20995585-7912-11e5-8719-21c3c340f74a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"N_LAT","segmentSizePower":"N_LAT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:259","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"20997c96-7912-11e5-8719-892769e45fcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:128","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"20997c97-7912-11e5-8719-ada8013eb8ff","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getElevation(int)"},"status":-2},{"failures":[],"tindex":"20997c98-7912-11e5-8719-e7dff119e5c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:57","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[217,218,219],"tindex":"20997c99-7912-11e5-8719-c9018820d25e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"priorityFromRelation","retBucket":"priorityFromRelation","i":"priorityFromRelation","bucketSize":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:353","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"20997c9a-7912-11e5-8719-3582117d2a5b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":0},{"failures":[],"tindex":"20997c9b-7912-11e5-8719-81dc9ff5c7f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"blockByDefault":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:82","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"20997c9c-7912-11e5-8719-8b21e3cf05e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:236","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[],"tindex":"2099a3ad-7912-11e5-8719-81d851b1c797","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"from","end":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)))"},"status":-2},{"failures":[],"tindex":"2099a3ae-7912-11e5-8719-a53d18a76669","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"variableMap":{"bb":"bb","values":"values","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:351","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"2099a3af-7912-11e5-8719-4326fc0c3f7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"nodes","da":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"2099a3b0-7912-11e5-8719-658603913266","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"speed","java.lang.Math.PI":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:317","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"2099a3b1-7912-11e5-8719-e996adca9495","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:358","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.close()"},"status":-2},{"failures":[],"tindex":"2099a3b2-7912-11e5-8719-9bda6788428c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathNative.setFromNode(int)"},"variableMap":{"p":"this","fromNode":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"2099a3b3-7912-11e5-8719-a54fad82a9c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode"},"status":-2},{"failures":[],"tindex":"2099cac4-7912-11e5-8719-91097b9f1c95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"address","lastKey":"address","key":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.freeMemory(long)"},"status":-2},{"failures":[],"tindex":"2099cac5-7912-11e5-8719-c136e751956f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"radiusInKm","yend":"radiusInKm"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:171","type":"CtLocalVariableImpl","sourcecode":"double double = (double) - (com.graphhopper.util.shapes.Circle.double)"},"status":-2},{"failures":[],"tindex":"2099cac6-7912-11e5-8719-efd895f3cae4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:189","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"2099cac7-7912-11e5-8719-8117b321f8a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:177","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((3 * 4)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}