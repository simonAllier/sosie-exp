{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":51,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":67,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":333,"com.graphhopper.reader.OSMReaderTest.testFerry":206,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":194,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":195,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":65,"com.graphhopper.routing.QueryGraphTest.testOneWay":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":123,"com.graphhopper.reader.OSMReaderTest.testWithBounds":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":35,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":346,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":147,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":247,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":261,"com.graphhopper.GraphHopperTest.testPrepare":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":353,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":161,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":235,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":42,"com.graphhopper.util.InstructionListTest.testWayList":79,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":78,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":15,"com.graphhopper.GraphHopperAPITest.testDisconnected179":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":339,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":43,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":124,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":63,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":145,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":355,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":96,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":176,"com.graphhopper.GraphHopperTest.testLoadOSM":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":125,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":238,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":280,"com.graphhopper.reader.OSMReaderTest.testSort":84,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":3,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":54,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":192,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":205,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":56,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":220,"com.graphhopper.routing.PathTest.testWayList":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":299,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":183,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":191,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":358,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":274,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":120,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":304,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":62,"com.graphhopper.util.GHUtilityTest.testSort":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":340,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":302,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":193,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":273,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":155,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":256,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":307,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":317,"com.graphhopper.GraphHopperAPITest.testLoad":150,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":98,"com.graphhopper.util.BitUtilBigTest.testToShort":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":320,"com.graphhopper.util.TranslationMapTest.testToString":359,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":278,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":309,"com.graphhopper.routing.PathTest.testFound":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":349,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":44,"com.graphhopper.util.GHUtilityTest.testCopy":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":336,"com.graphhopper.routing.PathTest.testFindInstruction":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":23,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":26,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":341,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":263,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":242,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":47,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":10,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":167,"com.graphhopper.reader.PrinctonReaderTest.testRead":203,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":277,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":172,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":296,"com.graphhopper.util.InstructionListTest.testWayList2":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":248,"com.graphhopper.reader.OSMReaderTest.testFoot":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":350,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":270,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":140,"com.graphhopper.reader.OSMReaderTest.testOneWay":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":330,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":171,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":345,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":86,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":297,"com.graphhopper.routing.PathBidirRefTest.testExtract":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":164,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":259,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":93,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":279,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":332,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":134,"com.graphhopper.util.GHUtilityTest.testSort2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":342,"com.graphhopper.reader.OSMReaderTest.testMain":83,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":275,"com.graphhopper.routing.PathBidirRefTest.testExtract2":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":121,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":108,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":324,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":126,"com.graphhopper.storage.GraphHopperStorageTest.testClone":225,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":246,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":295,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":232,"com.graphhopper.GraphHopperTest.testFootAndCar":97,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":338,"com.graphhopper.routing.PathTest.testTime":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":185,"com.graphhopper.util.GHUtilityTest.testSortDirected":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":216,"com.graphhopper.GraphHopperTest.testVia":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":266,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":184,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":109,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":276,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":81,"com.graphhopper.GraphHopperTest.testFootOnly":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":114,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":58,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":344,"com.graphhopper.util.InstructionListTest.testFind":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":141},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"07b380a4-7910-11e5-89bd-c30e376eb3e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"itemsToMove","lonSimilar":"itemsToMove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:644","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n    }\n    int--;\n    for ( ; int >= 0 ; int--) {\n        if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n            break;\n        \n    }\n    if (int >= int)\n        com.graphhopper.coll.SparseIntIntArray.put(int, int);\n    \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"07b3a7b5-7910-11e5-89bd-a933f2c01a69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:94","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,12,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,21,139,140,141,142,143,30,144,145,146,147,39,148,149,150,151],"tindex":"07b3a7b6-7910-11e5-89bd-7d52548d729f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"mode","from":"baseNode","end":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:882","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n} else {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[],"tindex":"07b3cec7-7910-11e5-89bd-35c5349ad9db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"07b3cec8-7910-11e5-89bd-3b75bf99ab7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:98","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[152,153,154,155,0,1,156,2,157,3,4,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,41,177,178,42,43,179,180,181,44,182,183,45,46,184,185,186,47,48,187,49,50,51,52,53,188,54,55,56,57,189,190,58,59,60,61,62,63,64,65,66,191,67,68,69,70,71,192,72,73,74,75,193,76,194,195,196,197,198,77,78,79,80,81,199,200,82,201,202,203,204,205,206,207,83,84,85,86,87,208,209,210,211,212,213,214,215,216,88,89,90,91,92,93,217,94,95,96,97,98,99,218,100,101,219,220,102,221,222,103,223,5,224,225,226,227,228,229,230,231,7,8,232,9,233,234,235,10,11,104,236,237,238,239,12,13,240,241,242,105,243,244,106,245,246,107,108,109,247,110,111,112,113,114,248,115,249,250,116,117,118,119,120,121,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,122,268,123,124,125,126,127,269,128,270,271,129,130,131,132,133,134,272,135,273,274,275,276,277,278,279,136,280,137,281,14,282,283,284,285,286,287,288,289,16,17,290,18,291,292,293,19,20,138,294,295,296,297,21,22,298,299,300,139,301,302,140,303,304,141,305,306,307,308,142,309,23,310,311,312,313,314,315,316,317,25,26,318,27,319,320,321,28,29,143,322,323,324,325,30,31,326,327,328,144,329,330,145,331,332,146,333,32,334,335,336,337,338,339,340,341,34,35,342,36,343,344,345,37,38,147,346,347,348,349,39,40,350,351,352,148,353,354,149,355,356,150,151],"tindex":"07b3cec9-7910-11e5-89bd-bdbc34a77977","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:297","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[357],"tindex":"07b3f5da-7910-11e5-89bd-e7fdee4d70d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:47","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(short >> 8))"},"status":-1},{"failures":[162,163,164,165,166,167,169,171,172,173,175,176,178,42,43,179,180,181,44,182,183,45,46,184,186,47,48,187,49,50,53,188,54,55,82,94,95,98,99,101,272,358,135,275,277],"tindex":"07b3f5db-7910-11e5-89bd-2bcf69db4306","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:250","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getNodes()"},"status":-1},{"failures":[359],"tindex":"07b41cec-7910-11e5-89bd-19c47290a611","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"status":-1},{"failures":[],"tindex":"07b41ced-7910-11e5-89bd-55a1951b6d4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:628","type":"CtIfImpl","sourcecode":"if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"07b41cee-7910-11e5-89bd-5342d3cfd858","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"status":-2},{"failures":[],"tindex":"07b41cef-7910-11e5-89bd-995fa3f42bc4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getInt(((long) + long))"},"status":-2},{"failures":[],"tindex":"07b41cf0-7910-11e5-89bd-4b2e4984469e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"lat","r_lat":"maxLat","a_lat":"lat","delta_lon":"lat","r_lon":"maxLat","a_lon":"lat","norm":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:658","type":"CtLocalVariableImpl","sourcecode":"double double = double - (com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"07b41cf1-7910-11e5-89bd-8dfb831ab1df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:634","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"variableMap":{"maxTurnCosts":"maxTurnCosts","turnRestrictionBit":"flags","flags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"07b44402-7910-11e5-89bd-3ddc94266645","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-2},{"failures":[],"tindex":"07b44403-7910-11e5-89bd-af27fe73541d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"07b44404-7910-11e5-89bd-9b5dbe34a09f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"status":-2},{"failures":[],"tindex":"07b44405-7910-11e5-89bd-ad34571e5ca9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"wayStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:301","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"07b44406-7910-11e5-89bd-694ab0e434fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:120","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"07b44407-7910-11e5-89bd-f5a7ed8f2dac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.clone(false)"},"variableMap":{"pointList":"copyPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:384","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}