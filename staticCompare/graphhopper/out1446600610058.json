{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":112,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":40,"com.graphhopper.routing.PathTest.testFindInstruction":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":103,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":83,"com.graphhopper.routing.QueryGraphTest.testOneWay":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":12,"com.graphhopper.reader.PrinctonReaderTest.testRead":8,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":71,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":24,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":5,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":67,"com.graphhopper.GraphHopperTest.testPrepare":123,"com.graphhopper.util.InstructionListTest.testWayList2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":23,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":10,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":44,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":104,"com.graphhopper.util.InstructionListTest.testWayList":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":77,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":27,"com.graphhopper.GraphHopperAPITest.testDisconnected179":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":37,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":14,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":124,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":80,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":79,"com.graphhopper.GraphHopperTest.testLoadOSM":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":118,"com.graphhopper.reader.OSMReaderTest.testSort":132,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":48,"com.graphhopper.reader.OSMReaderTest.testMain":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":75,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":96,"com.graphhopper.routing.PathTest.testWayList":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":50,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":63,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":109,"com.graphhopper.GraphHopperTest.testFootAndCar":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":41,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":52,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":89,"com.graphhopper.GraphHopperTest.testVia":122,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":60,"com.graphhopper.GraphHopperAPITest.testLoad":130,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":51,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":87,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":33,"com.graphhopper.GraphHopperTest.testFootOnly":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":98,"com.graphhopper.util.InstructionListTest.testFind":18,"com.graphhopper.reader.OSMReaderTest.testBarriers":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":49,"com.graphhopper.util.GHUtilityTest.testCopy":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":47},"transformations":[{"failures":[],"tindex":"96782e06-8293-11e5-9fb2-8bcee315565c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"to","b":"from","this":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Graph.edge(int, int, double, false)"},"status":-2},{"failures":[0],"tindex":"96785517-8293-11e5-9fb2-7789d3016b8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:86","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.Throwable>.add(java.lang.Throwable)"},"status":-1},{"failures":[1,2],"tindex":"96785518-8293-11e5-9fb2-e1c16f80cdb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-1},{"failures":[],"tindex":"96785519-8293-11e5-9fb2-03405b66cada","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"indexCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"96787c2a-8293-11e5-9fb2-13fc82cb8905","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[8,9],"tindex":"96787c2b-8293-11e5-9fb2-37158baafc68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPoint:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"variableMap":{"str":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"status":-1},{"failures":[],"tindex":"96787c2c-8293-11e5-9fb2-c7698a5af59a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:117","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField()) && ((com.graphhopper.storage.BaseGraph.int) >= 0)) {\n    com.graphhopper.storage.BaseGraph.ensureNodeIndex(int);\n    long long = ((long)(int)) * (com.graphhopper.storage.BaseGraph.int);\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), int);\n} else {\n    throw new java.lang.AssertionError(\"This graph does not provide an additional node field\");\n}"},"status":-2},{"failures":[],"tindex":"96787c2d-8293-11e5-9fb2-8f6231064973","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"9678a33e-8293-11e5-9fb2-2f122b0d01a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"variableMap":{"basePoints":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"status":-2},{"failures":[10,11,12,13],"tindex":"9678a33f-8293-11e5-9fb2-05bb04ca54e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:534","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"))"},"status":-1},{"failures":[],"tindex":"9678a340-8293-11e5-9fb2-efd7a62ff311","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1061","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.clearUnfavoredStatus()"},"status":-2},{"failures":[8,9],"tindex":"9678a341-8293-11e5-9fb2-f3556acbfb1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"dist","speed":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:82","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Double.parseDouble(java.lang.String[][int])"},"status":-1},{"failures":[],"tindex":"9678ca52-8293-11e5-9fb2-87673e50113c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"variableMap":{"nodeCount":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:107","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-2},{"failures":[14,15,3,4,5,16,6,17],"tindex":"9678ca53-8293-11e5-9fb2-37fea7578fcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:346","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n"},"variableMap":{"nn":"node","oldPrio":"priority","sortedNodes":"sortedNodes","priority":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[18,19],"tindex":"9678ca54-8293-11e5-9fb2-63dc4761a1f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:323","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9678ca55-8293-11e5-9fb2-9743083dbbee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29],"tindex":"9678f166-8293-11e5-9fb2-d3ee728d8a11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"highway","configuredCHWeightings":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:607","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[18,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,19,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,0,131,132,133],"tindex":"9678f167-8293-11e5-9fb2-fd618b152bc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:348","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , true)"},"variableMap":{"max":"mode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:881","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList((int + int) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-1},{"failures":[100],"tindex":"96793f88-8293-11e5-9fb2-7572784e6d44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:278","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\")"},"variableMap":{"dir":"dir","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:272","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}