{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":178,"com.graphhopper.reader.OSMReaderTest.testFerry":353,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":375,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":332,"com.graphhopper.coll.CompressedArrayTest.testCompress":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":39,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":198,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":232,"com.graphhopper.util.BitUtilBigTest.testReverse":401,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":289,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":210,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":304,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":381,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":170,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":297,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":326,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":131,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":292,"com.graphhopper.GraphHopperTest.testLoadOSM":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":145,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":160,"com.graphhopper.reader.OSMReaderTest.testSort":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":334,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":92,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":251,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":211,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":270,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":368,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":81,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":35,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":295,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":101,"com.graphhopper.reader.OSMNodeTest.testSetTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":153,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":110,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":116,"com.graphhopper.coll.CompressedArrayTest.testCompress2":386,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":107,"com.graphhopper.GraphHopperAPITest.testLoad":259,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":233,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":337,"com.graphhopper.reader.OSMReaderTest.testBarriers":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":301,"com.graphhopper.util.GHUtilityTest.testCopy":372,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":156,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":31,"com.graphhopper.routing.PathTest.testFindInstruction":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":98,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":8,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":252,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":125,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":183,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":76,"com.graphhopper.util.InstructionListTest.testWayList2":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":16,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":65,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":77,"com.graphhopper.routing.PathBidirRefTest.testExtract":327,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":163,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":347,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":345,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.util.GHUtilityTest.testSort2":371,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":309,"com.graphhopper.reader.OSMReaderTest.testMain":28,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":120,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageTest.testClone":225,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":74,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":32,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":184,"com.graphhopper.routing.PathTest.testTime":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":197,"com.graphhopper.util.GHUtilityTest.testSortDirected":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":63,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":267,"com.graphhopper.GraphHopperTest.testFootOnly":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":172,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":193,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":162,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":262,"com.graphhopper.routing.QueryGraphTest.testOneWay":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":71,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":392,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":12,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":389,"com.graphhopper.reader.OSMReaderTest.testWithBounds":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":190,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":144,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":112,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":400,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":221,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":296,"com.graphhopper.util.BitUtilLittleTest.testToBitString":402,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":254,"com.graphhopper.util.InstructionListTest.testWayList":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":61,"com.graphhopper.GraphHopperAPITest.testDisconnected179":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":185,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":180,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":367,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":213,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":23,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":290,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":315,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":215,"com.graphhopper.routing.PathTest.testWayList":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":159,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":303,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":37,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":103,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":226,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":325,"com.graphhopper.util.BitUtilBigTest.testToBitString":399,"com.graphhopper.util.GHUtilityTest.testSort":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":202,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":132,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":82,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":339,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":93,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":203,"com.graphhopper.routing.PathTest.testFound":319,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":293,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":109,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":188,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.util.InstructionListTest.testEmptyList":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":308,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":80,"com.graphhopper.reader.PrinctonReaderTest.testRead":366,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":114,"com.graphhopper.reader.OSMReaderTest.testFoot":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":201,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":276,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":165,"com.graphhopper.reader.OSMReaderTest.testOneWay":365,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":56,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":126,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":195,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":282,"com.graphhopper.util.shapes.GHPointTest.testIsValid":385,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":388,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":291,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":280,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":83,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":266,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":42,"com.graphhopper.routing.PathBidirRefTest.testExtract2":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":146,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":403,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":154,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":142,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":214,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":87,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.GraphHopperTest.testFootAndCar":24,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":2,"com.graphhopper.util.BitUtilLittleTest.testReverse":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":100,"com.graphhopper.GraphHopperTest.testPrepareOnly":342,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":157,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":305,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":361,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":360,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":43,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":246,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":384,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":359,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":4,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":194,"com.graphhopper.util.InstructionListTest.testFind":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":89},"transformations":[{"failures":[0],"tindex":"be373ae0-7916-11e5-921f-519b07e2bb80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:105","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue()"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:88","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-1},{"failures":[],"tindex":"be373ae1-7916-11e5-921f-99d9f0c8ba2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:98","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"be373ae2-7916-11e5-921f-79b2944347bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"r_lat_deg","shrinkFactor":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:139","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,1,144,2,3,145,146,147,148,4,149,150,5,6,151,7,152,153,154,155,8,9,10,156,157,158,11,159,12,13,160,161,162,163,14,164,165,15,16,166,17,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,18,304,305,306,307,308,19,309,310,20,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,21,22,23,24,25,26,350,27,351,352,353,354,28,29,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"be3761f3-7916-11e5-921f-875a2d529d8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.byteOrder\", com.graphhopper.storage.Directory.getByteOrder())"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,1,144,2,3,145,146,147,148,4,149,150,5,6,151,7,152,153,154,155,8,9,10,156,157,158,11,159,12,13,160,161,162,163,14,164,165,15,16,166,17,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,18,304,305,306,307,308,19,309,310,20,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,21,22,23,24,25,26,350,27,351,352,353,354,28,29,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"be378904-7916-11e5-921f-4bac61f81ef3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:136","type":"CtInvocationImpl","sourcecode":"java.util.Collection<com.graphhopper.storage.CHGraphImpl>.size()"},"status":-1},{"failures":[],"tindex":"be378905-7916-11e5-921f-89931a422a82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"status":0},{"failures":[385],"tindex":"be378906-7916-11e5-921f-3b974077b10d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:181","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"variableMap":{"minLon":"lat","maxLat":"lat","minLat":"lon","maxLon":"lon","lon":"lat","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:52","type":"CtReturnImpl","sourcecode":"return (!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))"},"status":-1},{"failures":[],"tindex":"be378907-7916-11e5-921f-5f4bbb0ec021","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"status":0},{"failures":[47,51,72,78,83,89,96,117,123,128,2,145,12,160,177,198,204,209,216,221,242,248,253,261,264,265,268,270,271,272,274,276,313,323,28,356,357,382,383],"tindex":"be37b018-7916-11e5-921f-abd9c4be95d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"maxGeoRef","hash":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:399","type":"CtAssignmentImpl","sourcecode":"int = 4"},"status":-1},{"failures":[],"tindex":"be37b019-7916-11e5-921f-fd602bbda6f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.NumHelper:39","type":"CtReturnImpl","sourcecode":"return (java.lang.Double.compare(double, double)) == 0"},"variableMap":{"d1":"ab_ar","d2":"ab_rb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:242","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"status":-2},{"failures":[386,387,388,1,148,149,150,11,163,164,165,389,390,391,392,393,394,395,396,397],"tindex":"be37b01a-7916-11e5-921f-8343b32628d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"variableMap":{"bytes":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"be37b01b-7916-11e5-921f-87d33d5fb1a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:114","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(4)"},"status":0},{"failures":[],"tindex":"be37b01c-7916-11e5-921f-1d2aad6c0f05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"lat","java.lang.Math.PI":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[39,47,53,55,61,63,64,65,66,69,70,72,76,77,78,79,83,88,89,90,98,100,106,108,109,110,111,114,115,117,121,122,123,124,128,133,134,135,136,137,138,139,140,141,142,1,144,2,3,145,146,147,148,4,149,150,5,6,151,7,152,153,154,155,8,9,10,156,157,158,11,159,12,13,160,161,162,163,14,164,165,15,16,166,17,167,168,169,171,172,173,174,175,176,179,181,187,189,190,191,192,195,196,198,202,203,204,205,209,214,216,223,225,231,233,234,235,236,239,240,242,246,247,248,249,253,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,293,296,297,301,18,304,308,19,310,20,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,338,339,341,342,343,344,345,346,347,348,21,22,23,24,25,26,350,27,351,352,353,354,28,29,355,356,357,358,359,361,362,363,364,365,370,371,372,373,374,379,381,382,383,384],"tindex":"be37b01d-7916-11e5-921f-4d5c5042d029","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"nodeId","index":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[148,163,398,399,400,401,402,403,404],"tindex":"be37d72e-7916-11e5-921f-977b0edeaf67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:235","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"be37d72f-7916-11e5-921f-895cd3e7af03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:133","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:264","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"be37d730-7916-11e5-921f-29dd99828670","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-2},{"failures":[],"tindex":"be37d731-7916-11e5-921f-8775f9675fe1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:943","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"variableMap":{"enableIfAssert":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"be37d732-7916-11e5-921f-07cb517b5bc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:774","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"be37d733-7916-11e5-921f-533525e3d6c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"variableMap":{"em":"this","encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}