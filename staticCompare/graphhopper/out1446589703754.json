{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":308,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":333,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":392,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":402,"com.graphhopper.GraphHopperAPITest.testNoLoad":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.reader.OSMReaderTest.testFerry":494,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":44,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":351,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":520,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":357,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":168,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":120,"com.graphhopper.util.BitUtilBigTest.testReverse":17,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":512,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":324,"com.graphhopper.GraphHopperTest.testPrepare":522,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":307,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":416,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":358,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":185,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":291,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":86,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":491,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":483,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":532,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":327,"com.graphhopper.GraphHopperTest.testLoadOSM":526,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":87,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":200,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":409,"com.graphhopper.reader.OSMReaderTest.testSort":497,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":437,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":506,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":243,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":139,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":102,"com.graphhopper.util.PointListTest.testReverse":535,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":181,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":338,"com.graphhopper.routing.DijkstraTest.initializationError":476,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":511,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":232,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":289,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":472,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":81,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":239,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":304,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":400,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":527,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":263,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":269,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":246,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":362,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":260,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":388,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":121,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.reader.OSMReaderTest.testBarriers":498,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":372,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":376,"com.graphhopper.util.GHUtilityTest.testCopy":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":467,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":354,"com.graphhopper.routing.PathTest.testFindInstruction":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":370,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":140,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":125,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":381,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":407,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":477,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":193,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":227,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":94,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":417,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":283,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":415,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":422,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":7,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":499,"com.graphhopper.routing.AStarTest.initializationError":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":24,"com.graphhopper.routing.PathBidirRefTest.testExtract":480,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":423,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":286,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":518,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":517,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":346,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":516,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":413,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":515,"com.graphhopper.util.GHUtilityTest.testSort2":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":305,"com.graphhopper.reader.OSMReaderTest.testMain":496,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":444,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":424,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":430,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":25,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":533,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":368,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":508,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":202,"com.graphhopper.storage.GraphHopperStorageTest.testClone":113,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":451,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":225,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":154,"com.graphhopper.routing.PathTest.testTime":485,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":466,"com.graphhopper.util.InstructionListTest.testCreateGPX":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":457,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":11,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":167,"com.graphhopper.reader.OSMReaderTest.testRelation":503,"com.graphhopper.util.GHUtilityTest.testSortDirected":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":214,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":41,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":335,"com.graphhopper.GraphHopperTest.testFootOnly":530,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":446,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":486,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":163,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":89,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":330,"com.graphhopper.routing.QueryGraphTest.testOneWay":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":353,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":85,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":403,"com.graphhopper.reader.OSMReaderTest.testWithBounds":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":282,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":336,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":434,"com.graphhopper.geohash.LinearKeyAlgoTest.testEncode":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":169,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":398,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":406,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":360,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":265,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":16,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":109,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":290,"com.graphhopper.util.BitUtilLittleTest.testToBitString":18,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":411,"com.graphhopper.GraphHopperAPITest.testDisconnected179":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":155,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":528,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":433,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":379,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":493,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":438,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":428,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":523,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":115,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":276,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":325,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":412,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":302,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":452,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":75,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":475,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":247,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":432,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":101,"com.graphhopper.routing.PathTest.testWayList":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":464,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":445,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":297,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":427,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":390,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":367,"com.graphhopper.util.BitUtilBigTest.testToBitString":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":461,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":490,"com.graphhopper.util.GHUtilityTest.testSort":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":172,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":426,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":233,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":337,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":242,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":529,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":401,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":525,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":173,"com.graphhopper.routing.PathTest.testFound":484,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":410,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":531,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":287,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":262,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":158,"com.graphhopper.util.InstructionListTest.testEmptyList":39,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":456,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":441,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":439,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":231,"com.graphhopper.reader.PrinctonReaderTest.testRead":492,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":205,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":473,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":418,"com.graphhopper.reader.OSMReaderTest.testFoot":495,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":171,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":237,"com.graphhopper.reader.OSMReaderTest.testOneWay":510,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":355,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":365,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":165,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":450,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":317,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":46,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":348,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":161,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":234,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":334,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":105,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":509,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":191,"com.graphhopper.routing.PathBidirRefTest.testExtract2":481,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":288,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":469,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":82,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":471,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":64,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":393,"com.graphhopper.util.SimpleIntDequeTest.testPush":534,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":380,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":88,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":238,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":37,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":453,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":130,"com.graphhopper.GraphHopperTest.testFootAndCar":524,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":151,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":454,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":319,"com.graphhopper.util.BitUtilLittleTest.testReverse":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":253,"com.graphhopper.GraphHopperTest.testPrepareOnly":513,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":54,"com.graphhopper.GraphHopperTest.testVia":521,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":300,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":505,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":504,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":192,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":394,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":502,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":164,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":213,"com.graphhopper.routing.AStarBidirectionTest.initializationError":328,"com.graphhopper.util.InstructionListTest.testFind":0,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":240},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"31cd7ef9-827a-11e5-8e69-65422ef25081","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:189","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[7,8,9,10,11,12,13,14],"tindex":"31cdcd1a-827a-11e5-8e69-59967dcdeb9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"latDelta","speed":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:57","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-1},{"failures":[],"tindex":"31cdcd1b-827a-11e5-8e69-9d55927e4d00","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:168","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"31cdcd1c-827a-11e5-8e69-e3c006402997","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:146","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess : java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.values()) {\n    if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n        com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n    \n    com.graphhopper.storage.GHDirectory.removeDA(com.graphhopper.storage.DataAccess, com.graphhopper.storage.DataAccess.getName(), false);\n}"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23],"tindex":"31cdcd1d-827a-11e5-8e69-fb44438f2083","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:235","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[24],"tindex":"31cdf42e-827a-11e5-8e69-779743ebade1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"31cdf42f-827a-11e5-8e69-93ccfa75615a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"com.graphhopper.storage.EdgeAccess.NO_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.int)"},"status":-2},{"failures":[],"tindex":"31cdf430-827a-11e5-8e69-4de611ee5249","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:274","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"variableMap":{"com.graphhopper.util.InstructionAnnotation.EMPTY":"annotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:71","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"status":0},{"failures":[],"tindex":"31cdf431-827a-11e5-8e69-49bef378bc8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:552","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLon(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[25,26,27,28],"tindex":"31cdf432-827a-11e5-8e69-a7746d776078","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[29],"tindex":"31ce1b43-827a-11e5-8e69-7570d5e0c8be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:283","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs((int - double))) < ((double) / (int)))\n    int--;\n"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,0,39,40,1,2,41,42,43,3,4,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,21,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,22,90,91,92,93,94,95,96,97,98,99,100,7,8,9,10,11,12,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,23,316,317,318,5,6,319,320,321,322,323,324,325,326,327,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,24,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,25,26,434,435,436,437,438,27,28,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532],"tindex":"31ce1b44-827a-11e5-8e69-83a72b962fd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:131","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"No encoding manager specified or loaded\");\n"},"variableMap":{"encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[329,515,516,518],"tindex":"31ce6965-827a-11e5-8e69-f74048d0e631","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:87","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"variableMap":{"alreadyRun":"incoming"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.util.PointList.getSize();\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n} else {\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n}"},"status":-1},{"failures":[],"tindex":"31ce6966-827a-11e5-8e69-ed879f5b6209","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"ghStorage","newGraph":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:449","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":0},{"failures":[7,8,9,10,12],"tindex":"31ce6967-827a-11e5-8e69-1fd87a3f0982","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:258","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[533,534],"tindex":"31ce9078-827a-11e5-8e69-9fed05570034","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:84","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"31ce9079-827a-11e5-8e69-b3fbffbc780c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"31ce907a-827a-11e5-8e69-09955447c11f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:145","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[288,362,475],"tindex":"31ce907b-827a-11e5-8e69-079489d9f9bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:314","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false)"},"status":-1},{"failures":[35,535,73,90,130,141,168,179,223,234,270,281,287,290,291,295,298,299,303,304,306,307,312,313,488,500,515,516,524],"tindex":"31ceb78c-827a-11e5-8e69-756d181b9213","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:238","type":"CtLocalVariableImpl","sourcecode":"double double = double[][int]"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"31cdcd1c-827a-11e5-8e69-e3c006402997","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getName","com.graphhopper.storage.GHDirectory.removeDA"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_boolean_removeDir(java.io.File).b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).l8","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).e2","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).e1","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).l9","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).l1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).b","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2","com.graphhopper.storage.MMapDataAccess_void_close(boolean).b","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).b","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e5","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e4","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t2","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t1","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e6","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_close(boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b","com.graphhopper.util.BitUtilBig_short_toShort(byte[],int).b","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).t4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).l3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).t6","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e4","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.storage.MMapDataAccess_void_setShort(long,short).b"]},"type":"branch"}]}]}