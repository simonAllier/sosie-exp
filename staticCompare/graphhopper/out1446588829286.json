{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":7,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.routing.PathTest.testFindInstruction":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":45,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":29,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":47,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":31,"com.graphhopper.GraphHopperTest.testFootAndCar":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":16,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":5,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":51,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":43,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":26,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":40,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":8,"com.graphhopper.GraphHopperTest.testVia":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":10,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":56,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":35,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":28,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":39,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":25,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":57,"com.graphhopper.reader.OSMReaderTest.testBarriers":1,"com.graphhopper.util.InstructionListTest.testFind":4,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":34,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":6},"transformations":[{"failures":[],"tindex":"28941d3b-8278-11e5-998b-9f063419dbf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"status":-2},{"failures":[],"tindex":"28946b5c-8278-11e5-998b-d1c38f8af8f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:74","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"28946b5d-8278-11e5-998b-d5d84321aa76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"r_lat","shrinkFactor":"r_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:229","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[20],"tindex":"2894926e-8278-11e5-998b-db9f70d43175","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:170","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29],"tindex":"2894926f-8278-11e5-998b-5ff4b740d5d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n}"},"status":-1},{"failures":[30,23,24,31,25],"tindex":"28949270-8278-11e5-998b-e9da0f29a3c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:231","type":"CtAssignmentImpl","sourcecode":"double = (com.graphhopper.storage.CHGraphImpl.getAllEdges().getMaxId()) / (com.graphhopper.storage.CHGraphImpl.getNodes())"},"status":-1},{"failures":[21,22],"tindex":"28949271-8278-11e5-998b-cbacf7cfe4db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[],"tindex":"2894b982-8278-11e5-998b-7d98ac4563f6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"variableMap":{"motorcarTag":"classBicycleSpecific","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:565","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\");\n    if (java.lang.String != null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n    \n}"},"status":0},{"failures":[32],"tindex":"2894b983-8278-11e5-998b-438a972bdb33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:154","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[33,34,35,36],"tindex":"2894b984-8278-11e5-998b-3d1cff7d5445","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:113","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"variableMap":{"raFile":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:190","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-1},{"failures":[],"tindex":"2894b985-8278-11e5-998b-251cc067b75f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.isFrozen())\n    throw new java.lang.IllegalStateException(\"do not optimize after graph was frozen\");\n"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-2},{"failures":[37,38],"tindex":"2894e096-8278-11e5-998b-99354592ac99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"variableMap":{"reverseSpeedEncoder":"speedEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[39],"tindex":"2894e097-8278-11e5-998b-1521c963c4bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:795","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"towerNodeDistance":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:238","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0)"},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,20,50,51],"tindex":"2894e098-8278-11e5-998b-7df7d800efac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:542","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[52,53],"tindex":"289507a9-8278-11e5-998b-cb65fa2754a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:357","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>)) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        else\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"289507aa-8278-11e5-998b-59561b9849ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[],"tindex":"289507ab-8278-11e5-998b-ef87ed30d6ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:250","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"heights":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:105","type":"CtWhileImpl","sourcecode":"while ((long - long) > 1) {\n    long = (long + long) >>> 1;\n    long long = long << 3;\n    com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8);\n    long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[]);\n    if (long < long)\n        long = long;\n    else\n        long = long;\n    \n}"},"status":0},{"failures":[54,55,1,56,57,58,59,60,61,62],"tindex":"28952ebc-8278-11e5-998b-b56e668b8b6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.printInfo(\"way\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:639","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-1},{"failures":[],"tindex":"28952ebd-8278-11e5-998b-2190a994497d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:88","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"28952ebe-8278-11e5-998b-2fef77fdb7ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"289507ab-8278-11e5-998b-ef87ed30d6ef","diffs":[{"branches":{"com.graphhopper.coll.OSMIDMapTest.testGetLong":["com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"]},"type":"branch"}]}]}