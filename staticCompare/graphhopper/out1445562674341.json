{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":157,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":158,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":96,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":119,"com.graphhopper.reader.OSMReaderTest.testWithBounds":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":175,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":192,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":199,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":220,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":32,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":188,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":205,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":235,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":233,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":120,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":166,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":232,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":86,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":76,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":201,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":46,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":82,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":93,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":223,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":171,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":225,"com.graphhopper.routing.PathTest.testWayList":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":224,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":129,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":105,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":217,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":231,"com.graphhopper.util.GHUtilityTest.testSort":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":208,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":102,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":185,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":45,"com.graphhopper.GraphHopperAPITest.testLoad":15,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":23,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":174,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":70,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":59,"com.graphhopper.util.GHUtilityTest.testCopy":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":210,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":13,"com.graphhopper.routing.PathTest.testFindInstruction":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":202,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":212,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":51,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":216,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":194,"com.graphhopper.reader.PrinctonReaderTest.testRead":165,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":80,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":97,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.reader.OSMReaderTest.testFoot":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":69,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":122,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":123,"com.graphhopper.reader.OSMReaderTest.testOneWay":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":84,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":40,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":87,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":197,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":191,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":28,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":164,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":115,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":126,"com.graphhopper.util.GHUtilityTest.testSort2":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":218,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":100,"com.graphhopper.routing.PathBidirRefTest.testExtract2":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":117,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":94,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":195,"com.graphhopper.storage.GraphHopperStorageTest.testClone":35,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":54,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":104,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":14,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":132,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":90,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":109,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":183,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":112,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":106,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":227,"com.graphhopper.util.InstructionListTest.testFind":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":127},"transformations":[{"failures":[],"tindex":"f4901477-7922-11e5-ba84-6500b69dcad2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"classBicycleSpecific"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:565","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\");\n    if (java.lang.String != null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n    \n}"},"status":-2},{"failures":[],"tindex":"f4903b88-7922-11e5-ba84-b37313af30ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"f4903b89-7922-11e5-ba84-7d1caf931f50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"lastTime","nodeFlags":"lastTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"f4903b8a-7922-11e5-ba84-9fd880e0c966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[23],"tindex":"f4903b8b-7922-11e5-ba84-19976a2263f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:113","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger)"},"variableMap":{"daPointer":"daPointer","this":"this","counter":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-1},{"failures":[],"tindex":"f490629c-7922-11e5-ba84-7f2ec2cea9aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"newEdgeId","i":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:147","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,24,25,26,27,28,3,4,5,6,7,8,9,10,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,16,17,18,19,20,168,21,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"tindex":"f490629d-7922-11e5-ba84-2561ffb11d42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:194","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"key":"newOrExistingEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:175","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[233,234,235],"tindex":"f490629e-7922-11e5-ba84-3b0d11bfa046","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"highway","key":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:150","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"f49089af-7922-11e5-ba84-5b6b574455e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:101","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"status":-2},{"failures":[],"tindex":"f49089b0-7922-11e5-ba84-1b53016a7c51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:524","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"status":-2},{"failures":[],"tindex":"f49089b1-7922-11e5-ba84-7b058e3da43d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxGeoRef","nextEdgeId":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:228","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-2},{"failures":[],"tindex":"f49089b2-7922-11e5-ba84-a7ba80f5b91c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:47","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"f49089b3-7922-11e5-ba84-b392c88225c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:248","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:137","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"f49089b4-7922-11e5-ba84-bfac920fbe1c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"type","defaultType":"com.graphhopper.storage.DAType.RAM_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"f490afc5-7922-11e5-ba84-4fa79252164f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:179","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"f490afc6-7922-11e5-ba84-7b7b4cbf2d3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"indicesCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-2},{"failures":[],"tindex":"f490afc7-7922-11e5-ba84-9941622ef0ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:46","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"f490afc8-7922-11e5-ba84-4de067d31039","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"current","green":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:40","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"f490afc9-7922-11e5-ba84-47e5c9d8259a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"adjNode","tmpNode":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:885","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"f490afca-7922-11e5-ba84-77bcc7960f7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:272","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.initStorage()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}