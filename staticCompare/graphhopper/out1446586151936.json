{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":131,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":141,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":241,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":254,"com.graphhopper.reader.OSMReaderTest.testFerry":3,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":162,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":163,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":138,"com.graphhopper.routing.QueryGraphTest.testOneWay":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":63,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":237,"com.graphhopper.reader.OSMReaderTest.testWithBounds":14,"com.graphhopper.storage.MMapDataAccessTest.testSegments":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":87,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":272,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":98,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":32,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":17,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":296,"com.graphhopper.GraphHopperTest.testPrepare":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":130,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":94,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":328,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":113,"com.graphhopper.util.InstructionListTest.testWayList":167,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":122,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":258,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":58,"com.graphhopper.GraphHopperAPITest.testDisconnected179":154,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":270,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":114,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":238,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":84,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":172,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":214,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":44,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":22,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":320,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":109,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":239,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":280,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":332,"com.graphhopper.reader.OSMReaderTest.testSort":6,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":125,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":293,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":135,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":146,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":314,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":75,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":311,"com.graphhopper.routing.PathTest.testWayList":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":233,"com.graphhopper.util.BitUtilBigTest.testFromBitString":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":120,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":140,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":271,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":194,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":310,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":127,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":181,"com.graphhopper.util.BitUtilBigTest.testToBitString":30,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":83,"com.graphhopper.util.GHUtilityTest.testSort":158,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":307,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":215,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":317,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":263,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":273,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":264,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":281,"com.graphhopper.GraphHopperAPITest.testLoad":153,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":200,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":277,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":66,"com.graphhopper.reader.OSMReaderTest.testBarriers":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":189,"com.graphhopper.routing.PathTest.testFound":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":294,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":118,"com.graphhopper.util.GHUtilityTest.testCopy":157,"com.graphhopper.routing.PathTest.testFindInstruction":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":48,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":51,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":182,"com.graphhopper.util.InstructionListTest.testEmptyList":165,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":253,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":337,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":71,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":100,"com.graphhopper.reader.PrinctonReaderTest.testRead":171,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":105,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":284,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":313,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":300,"com.graphhopper.util.InstructionListTest.testWayList2":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":226,"com.graphhopper.reader.OSMReaderTest.testFoot":4,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":244,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":342,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":213,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":292,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":104,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":259,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":316,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":322,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":301,"com.graphhopper.routing.PathBidirRefTest.testExtract":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":97,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":267,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":170,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":180,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":91,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":278,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":216,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":176,"com.graphhopper.util.GHUtilityTest.testSort2":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":128,"com.graphhopper.reader.OSMReaderTest.testMain":5,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":306,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":65,"com.graphhopper.routing.PathBidirRefTest.testExtract2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":248,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":235,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":295,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":205,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":132,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":240,"com.graphhopper.storage.GraphHopperStorageTest.testClone":318,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":309,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":298,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":325,"com.graphhopper.GraphHopperTest.testFootAndCar":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":329,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":0,"com.graphhopper.routing.PathTest.testTime":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":124,"com.graphhopper.util.GHUtilityTest.testSortDirected":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":297,"com.graphhopper.GraphHopperTest.testPrepareOnly":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":59,"com.graphhopper.GraphHopperTest.testVia":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":256,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":123,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":220,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":275,"com.graphhopper.GraphHopperTest.testFootOnly":28,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":169,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":333,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":225,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":227,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":79,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":291,"com.graphhopper.util.InstructionListTest.testFind":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":250},"transformations":[{"failures":[],"tindex":"ecbfb514-8271-11e5-8487-5f11f94cf562","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"variableMap":{"usedBits":"usedBits","nextWayBit":"nextRelBit","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[0],"tindex":"ecbfdc25-8271-11e5-8487-19c5ff908fa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:65","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[1,2],"tindex":"ecbfdc26-8271-11e5-8487-0fb64a14ba81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:391","type":"CtReturnImpl","sourcecode":"return java.util.List<java.nio.ByteBuffer>.size()"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"ecc00337-8271-11e5-8487-891b60ed0a0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"variableMap":{"bytePos":"locations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:280","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    com.graphhopper.coll.LongIntMap com.graphhopper.coll.LongIntMap = com.graphhopper.reader.OSMReader.getNodeMap();\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        switch (com.graphhopper.reader.OSMElement.getType()) {\n            case com.graphhopper.reader.OSMElement.int :\n                if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                    com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n                } \n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n                break;\n        }\n        if (((++long) % 100000000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((((\"Couldn\\'t process file \" + java.io.File) + \", error: \") + (java.lang.Exception.getMessage())) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-1},{"failures":[10],"tindex":"ecc00338-8271-11e5-8487-f9421c123162","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:450","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n    com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n    java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n        com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n    }\n} "},"status":-1},{"failures":[],"tindex":"ecc00339-8271-11e5-8487-57b5671836fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"status":0},{"failures":[30,31],"tindex":"ecc0033a-8271-11e5-8487-b3131c317166","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:121","type":"CtIfImpl","sourcecode":"if ((byte & byte) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":-1},{"failures":[],"tindex":"ecc02a4b-8271-11e5-8487-610425512e9e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:84","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.String>"},"status":-2},{"failures":[],"tindex":"ecc02a4c-8271-11e5-8487-b1d25799e892","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:397","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-2},{"failures":[32,33],"tindex":"ecc02a4d-8271-11e5-8487-3719d3794241","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"min"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:772","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ecc02a4e-8271-11e5-8487-45fad44205a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:78","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.index.Location2IDFullIndex.isClosed())\n    throw new java.lang.IllegalStateException(\"You need to create a new LocationIndex instance as it is already closed\");\n"},"variableMap":{"this":"locationIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1162","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndex.close()"},"status":-2},{"failures":[34,35,36,37,38,16,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"ecc02a4f-8271-11e5-8487-338f847fbd8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"toRemoveSet"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-1},{"failures":[],"tindex":"ecc02a50-8271-11e5-8487-3f0223f6ca29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:242","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (com.graphhopper.routing.util.EncodingManager.getBytesForFlags()) == 8"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,34,35,87,36,88,37,38,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,3,4,5,6,7,8,9,10,11,173,12,13,14,15,16,174,18,175,176,177,178,179,180,19,20,21,21,22,22,23,23,24,25,181,181,26,28,28,182,183,184,185,186,187,188,189,48,190,191,192,193,194,195,196,49,197,50,51,198,52,199,200,201,53,54,202,203,204,205,206,207,55,56,208,209,210,211,212,213,214,215,216,217,218,219,220,32,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,33,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,57,284,285,286,287,288,289,290,58,291,59,60,292,61,293,294,295,62,63,296,297,298,299,300,301,64,65,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,66,317,318,319,320,321,322,323,67,324,68,69,325,70,326,327,328,71,72,329,330,331,332,333,334,73,74,335,336,337,338,339,340,341,342,343],"tindex":"ecc05161-8271-11e5-8487-9fd7d16c3f30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"ecc05162-8271-11e5-8487-45378a3ec4c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"flags","flags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true)"},"status":0},{"failures":[118,121,126,127,130,136,138,139,140,141,143,144,145,146,147,148,149,152,175,176,177,178,179,20,21,22,23,24,25,27,272],"tindex":"ecc05163-8271-11e5-8487-b7347903c274","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:597","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(-(int + 1))"},"variableMap":{"set":"towerNodesToChange","value":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:631","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(int)"},"status":-1},{"failures":[],"tindex":"ecc07874-8271-11e5-8487-e3bf85da7216","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:262","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"ecc07875-8271-11e5-8487-6d7367286c9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:246","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    int int = gnu.trove.list.TIntList.get(int);\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    int int = gnu.trove.list.TIntList.get(int);\n    if ((int < 0) || (int < 0))\n        continue;\n    \n    com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int));\n}"},"status":-2},{"failures":[],"tindex":"ecc07876-8271-11e5-8487-6f1dfd998dab","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1131","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"ecc07877-8271-11e5-8487-715218ea4da9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:283","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.util.EdgeIterator.int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ecc05162-8271-11e5-8487-45378a3ec4c1","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed"]},"type":"staticDiff"}]},{"transformation":"ecc07874-8271-11e5-8487-e3bf85da7216","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t6","com.graphhopper.GraphHopper_boolean_isAllowWrites().b","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_com.graphhopper.storage.NativeFSLockFactory$NativeLock(java.io.File,java.lang.String,boolean).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t3","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e14","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_lockExists().b","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e12","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e11","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e3","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e2","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t14","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().e3","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t11"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_boolean_removeDir(java.io.File).b","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t6","com.graphhopper.GraphHopper_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_void_mkdirs().e1","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.RAMDataAccess_void_flush().e2","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_lockExists().b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e1","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e3","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e2","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t14","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().e3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e6","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t11","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.RAMIntDataAccess_void_flush().l3","com.graphhopper.storage.RAMDataAccess_void_flush().l3","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.RAMIntDataAccess_void_flush().l4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_com.graphhopper.storage.NativeFSLockFactory$NativeLock(java.io.File,java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().t1","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t2","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e14","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e12","com.graphhopper.storage.RAMIntDataAccess_void_flush().e2","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e11","com.graphhopper.storage.DAType_java.lang.String_toString().e4","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).t1"]},"type":"branch"},{"branchesDiff":{"delete":["t0","e1"]},"type":"staticDiff"}]}]}