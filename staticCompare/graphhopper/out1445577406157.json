{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":63,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":19,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":49,"com.graphhopper.reader.OSMReaderTest.testMain":12,"com.graphhopper.routing.PathTest.testFindInstruction":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":27,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":38,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":47,"com.graphhopper.routing.PathTest.testWayList":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":39,"com.graphhopper.util.PointListTest.testIterable":17,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":70,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":18,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":21,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":73,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":59,"com.graphhopper.util.InstructionListTest.testWayList":23,"com.graphhopper.util.InstructionListTest.testCreateGPX":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":32,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":64,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":46,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":57,"com.graphhopper.util.DouglasPeuckerTest.testParse":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":67,"com.graphhopper.GraphHopperAPITest.testLoad":53,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":37,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":45,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":26,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":66,"com.graphhopper.reader.OSMReaderTest.testBarriers":13,"com.graphhopper.util.InstructionListTest.testFind":22,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":68,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":62},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"4168a71f-7945-11e5-8910-9be57f9946e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"variableMap":{"degree":"size","lon":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:128","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"4168ce30-7945-11e5-8910-23e8706f595c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess);\n    com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet);\n    int = com.graphhopper.coll.GHBitSet.getCardinality();\n    for (int int = 0 ; int < int ; int++) {\n        int int = -1;\n        int int = -1;\n        if (com.graphhopper.coll.GHBitSet.contains(int)) {\n            if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n                int = int;\n                int = int + 1;\n            } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n                int = int;\n                int = int + (int);\n            } \n        } else {\n            if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n                int = int + 1;\n                int = int;\n            } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n                int = int + (int);\n                int = int;\n            } \n        }\n        if (int >= 0) {\n            if ((int[][int]) >= 0) {\n                if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                    continue;\n                } \n            } \n            com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n            int[][int] = int[][int];\n            com.graphhopper.coll.GHBitSet.add(int);\n            int++;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"4168ce31-7945-11e5-8910-816237802965","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:463","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot access EMPTY PointList\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"))"},"status":-2},{"failures":[],"tindex":"4168f542-7945-11e5-8910-e7982a6b654d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"midLon","speed":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-2},{"failures":[],"tindex":"4168f543-7945-11e5-8910-9d9607383256","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"4168f544-7945-11e5-8910-799c427fd746","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Use setDoubleValue instead\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Distance cannot be empty: \" + double) + \", maybe overflow issue? integer: \") + int))"},"status":-2},{"failures":[],"tindex":"4168f545-7945-11e5-8910-8b258e3bcf39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:610","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[],"tindex":"4168f546-7945-11e5-8910-e13aea5f6698","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"avoidSpeedLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"4168f547-7945-11e5-8910-29f48c68f581","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:284","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"variableMap":{"maxBits":"viaNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:134","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.NodeAccess.getAdditionalNodeField(int)"},"status":-2},{"failures":[],"tindex":"41691c58-7945-11e5-8910-4559350eea92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"edgeId","speed":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"status":-2},{"failures":[],"tindex":"41691c59-7945-11e5-8910-9feb99b1b6d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:637","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    com.graphhopper.routing.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, false, int, int);\n} "},"status":-2},{"failures":[],"tindex":"41691c5a-7945-11e5-8910-cbb5794b3c30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.MAX_VALUE","clockwise":"java.lang.Integer.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE","radian":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:379","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"41691c5b-7945-11e5-8910-3fe14a9b6a7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"indexDivisor","delta":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"41691c5c-7945-11e5-8910-2fcc71cd03d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:109","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc)"},"variableMap":{"tmpLon":"lat","dist":"lat","calc":"com.graphhopper.util.Helper.DIST_EARTH","circle":"this","tmpLat":"radiusInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.Circle.this(double, double, double, com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc)"},"status":-2},{"failures":[],"tindex":"4169436d-7945-11e5-8910-67b568659c40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"turnCostsEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:70","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"4169436e-7945-11e5-8910-63b73b187ee4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D())"},"variableMap":{"tmpPoints":"this","fullPoints":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.this(10, false)"},"status":-2},{"failures":[],"tindex":"4169436f-7945-11e5-8910-1705c0ee3962","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"41694370-7945-11e5-8910-cf9f4474b2b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"variableMap":{"str":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:209","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"41694371-7945-11e5-8910-05b334a88975","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"err","delta":"err"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"41694372-7945-11e5-8910-e3cf03f87871","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:118","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.reader.PillarInfo.(is3D()))\n    return java.lang.Double.double;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}