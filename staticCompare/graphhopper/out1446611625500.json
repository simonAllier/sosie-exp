{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":85,"com.graphhopper.routing.PathTest.testFindInstruction":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":64,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":80,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":16,"com.graphhopper.coll.CompressedArrayTest.testCompress":2,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":49,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":62,"com.graphhopper.GraphHopperTest.testPrepare":32,"com.graphhopper.util.InstructionListTest.testWayList2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":84,"com.graphhopper.search.NameIndexTest.testFlush":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":67,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.util.InstructionListTest.testWayList":19,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":46,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":42,"com.graphhopper.GraphHopperAPITest.testDisconnected179":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":15,"com.graphhopper.util.HelperTest.testUnzip":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":11,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.GraphHopperTest.testLoadOSM":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":96,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":95,"com.graphhopper.reader.OSMReaderTest.testSort":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":82,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":89,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":10,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":65,"com.graphhopper.geohash.LinearKeyAlgoTest.testInstantiation":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":66,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":81,"com.graphhopper.GraphHopperTest.testFootAndCar":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":70,"com.graphhopper.search.NameIndexTest.testPut":25,"com.graphhopper.util.InstructionListTest.testCreateGPX":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":78,"com.graphhopper.coll.CompressedArrayTest.testCompress2":1,"com.graphhopper.GraphHopperTest.testVia":31,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":37,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":77,"com.graphhopper.GraphHopperAPITest.testLoad":91,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":35,"com.graphhopper.GHRequestTest.testGetHint":54,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":21,"com.graphhopper.GraphHopperTest.testFootOnly":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":12,"com.graphhopper.util.InstructionListTest.testFind":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":41},"transformations":[{"failures":[],"tindex":"3c2d8f6f-82ad-11e5-a677-5d187845a6cd","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"variableMap":{"start":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:360","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"3c2db680-82ad-11e5-a677-b5c370b76711","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"3c2db681-82ad-11e5-a677-6fa44f3c119b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:352","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(com.graphhopper.reader.OSMWay.getId())"},"status":-2},{"failures":[0],"tindex":"3c2db682-82ad-11e5-a677-0dc5ab16817c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Unzipper.unzip(new java.io.FileInputStream(java.io.File), new java.io.File(java.lang.String), null)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"3c2db683-82ad-11e5-a677-fd7f5498a9b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"status":-1},{"failures":[],"tindex":"3c2ddd94-82ad-11e5-a677-b3e3c7a09ed6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"width"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:116","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"3c2ddd95-82ad-11e5-a677-7936c8d0b0c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:76","type":"CtWhileImpl","sourcecode":"while (true) {\n    (int)++;\n    if (com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded()) || com.graphhopper.routing.Dijkstra.(finished()))\n        break;\n    \n    int int = com.graphhopper.storage.EdgeEntry.int;\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n            continue;\n        \n        int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n        double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n        if (com.graphhopper.storage.EdgeEntry == null) {\n            com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n            com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n            gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n        } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n            com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.storage.EdgeEntry.double = double;\n            com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n        } else\n            continue;\n        \n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    }\n    if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n        break;\n    \n    com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll();\n    if ((com.graphhopper.storage.EdgeEntry) == null)\n        throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n    \n}"},"status":-1},{"failures":[10,11,12,13,23,24,14,15,25,26,27,28,17,18,19,20,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"3c2e04a6-82ad-11e5-a677-d3627bdf3c1c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], 8)"},"variableMap":{"longBytes":"sizeBytes","keys":"names","doubleSize":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 1)"},"status":-1},{"failures":[],"tindex":"3c2e04a7-82ad-11e5-a677-2b079e8938ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:212","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":0},{"failures":[],"tindex":"3c2e04a8-82ad-11e5-a677-a55e14e433af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:605","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()"},"status":-2},{"failures":[50,51,52,53],"tindex":"3c2e04a9-82ad-11e5-a677-d58790a57392","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(-180, 180, -90, 90)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double)"},"status":-1},{"failures":[54,36],"tindex":"3c2e04aa-82ad-11e5-a677-ad0be3e671f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:472","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:96","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"3c2e04ab-82ad-11e5-a677-cb29c22e7a71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:137","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{"sw":"lazySW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:305","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":0},{"failures":[],"tindex":"3c2e2bbc-82ad-11e5-a677-b3bac2db9d56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:231","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"variableMap":{"delNodes":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.routing.AStar.AStarEdge.int) != (com.graphhopper.routing.AStar.AStarEdge.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.AStarBidirection.(getName())));\n    \n    if ((com.graphhopper.routing.AStar.AStarEdge.int) != (com.graphhopper.routing.AStar.AStarEdge.int)) {\n        com.graphhopper.routing.AStar.AStarEdge = ((com.graphhopper.routing.AStar.AStarEdge)(com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry));\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-2},{"failures":[],"tindex":"3c2e2bbd-82ad-11e5-a677-d3f9b28099e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:461","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":0},{"failures":[],"tindex":"3c2e2bbe-82ad-11e5-a677-2bb7f3201953","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":0},{"failures":[55,56,21],"tindex":"3c2e2bbf-82ad-11e5-a677-4fb3c0b4da41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,22,94,95,96,97,31,32,33,34,35,36,37,38],"tindex":"3c2e2bc0-82ad-11e5-a677-37b7011dec83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:156","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>"},"variableMap":{"bestWeightMapTo":"bestWeightMapFrom","bestWeightMapOther":"bestWeightMapFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:63","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":-1},{"failures":[],"tindex":"3c2e52d1-82ad-11e5-a677-59ece9c68dd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:109","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"status":-2},{"failures":[],"tindex":"3c2e52d2-82ad-11e5-a677-bf5f34a2a2a3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:191","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.RAMDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    for (int int = 0 ; int < (byte[][].int) ; int++) {\n        byte[] byte[] = byte[][][int];\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3c2e2bbe-82ad-11e5-a677-2bb7f3201953","diffs":[{"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]},{"transformation":"3c2e04a7-82ad-11e5-a677-2b079e8938ee","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getHeader"]},"type":"staticDiff"}]}]}