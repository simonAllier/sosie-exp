{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":93,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":122,"com.graphhopper.reader.OSMReaderTest.testFerry":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":58,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":4,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":91,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":49,"com.graphhopper.util.InstructionListTest.testWayList2":7,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":115,"com.graphhopper.reader.OSMReaderTest.testFoot":136,"com.graphhopper.util.InstructionListTest.testWayList":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":79,"com.graphhopper.reader.OSMReaderTest.testOneWay":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":134,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":140,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":120,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":99,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":109,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":80,"com.graphhopper.reader.OSMReaderTest.testSort":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":110,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":146,"com.graphhopper.reader.OSMReaderTest.testMain":137,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":55,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":22,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":56,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":72,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":54,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":46,"com.graphhopper.routing.PathTest.testTime":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":123,"com.graphhopper.util.InstructionListTest.testCreateGPX":155,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":76,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":103,"com.graphhopper.reader.OSMReaderTest.testRelation":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":128,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":154,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":2,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":44,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":153,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":96,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":156,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":81,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":139,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":26,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":95},"transformations":[{"failures":[],"tindex":"f8c550bf-82aa-11e5-a610-05d496e5bdd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:296","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":0},{"failures":[],"tindex":"f8c577d0-82aa-11e5-a610-8552ffcd9e68","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"swapIndex","weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:249","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":0},{"failures":[],"tindex":"f8c577d1-82aa-11e5-a610-d9ff3f1800e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:318","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[0],"tindex":"f8c577d2-82aa-11e5-a610-ab54d8d00621","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:216","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[1,2],"tindex":"f8c59ee3-82aa-11e5-a610-795be09065e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:415","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\":rural\")) || (java.lang.String.endsWith(\":trunk\")))\n    return 80;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[],"tindex":"f8c59ee4-82aa-11e5-a610-1d8d6a62382e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"skippedEdge2","nextEdgeOther":"skippedEdge1","nodeOther":"skippedEdge2","nextEdge":"skippedEdge2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"f8c59ee5-82aa-11e5-a610-1bd8d7ec1042","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"guess","to":"high","lonSize":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:407","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f8c59ee6-82aa-11e5-a610-6308d40434a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:377","type":"CtLocalVariableImpl","sourcecode":"final int int = gnu.trove.list.TLongList.size()"},"status":-2},{"failures":[],"tindex":"f8c5c5f7-82aa-11e5-a610-956767375a5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:157","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"f8c5c5f8-82aa-11e5-a610-33f06f0b5c5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getSkippedEdge1()"},"variableMap":{"mainEdgeState":"edgeIterState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:44","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"f8c5c5f9-82aa-11e5-a610-a7584894b2e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[3,4],"tindex":"f8c5c5fa-82aa-11e5-a610-55a7ddf2a742","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:237","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile)"},"status":-1},{"failures":[],"tindex":"f8c5c5fb-82aa-11e5-a610-d51d991f0467","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"status":-2},{"failures":[],"tindex":"f8c5c5fc-82aa-11e5-a610-a3b3128a2c1e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:111","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[5,6,7,8],"tindex":"f8c5c5fd-82aa-11e5-a610-856e774f6c7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"orientation","shortTripsSpeed":"resultOrientation","durationInHours":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:105","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,3,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"f8c5ed0e-82aa-11e5-a610-1950882788cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[],"tindex":"f8c5ed0f-82aa-11e5-a610-1f79456eae18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"maxCount","guess":"maxCount","low":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:183","type":"CtAssignmentImpl","sourcecode":"int = gnu.trove.list.array.TIntArrayList.size()"},"status":0},{"failures":[],"tindex":"f8c5ed10-82aa-11e5-a610-816dd151ed54","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((9 * 4), (com.graphhopper.storage.BaseGraph.isFrozen() ? 1 : 0))"},"status":0},{"failures":[154,155,156],"tindex":"f8c5ed11-82aa-11e5-a610-7feb41df2231","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()))"},"status":-1},{"failures":[141],"tindex":"f8c5ed12-82aa-11e5-a610-8f6e87f8d0f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f8c5ed0f-82aa-11e5-a610-1f79456eae18","diffs":[{"methodsDiff":{"delete":["gnu.trove.list.array.TIntArrayList.size"]},"type":"staticDiff"}]},{"transformation":"f8c550bf-82aa-11e5-a610-05d496e5bdd0","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]},{"transformation":"f8c577d1-82aa-11e5-a610-d9ff3f1800e5","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.GHTreeMapComposed.insert"]},"type":"staticDiff"}]}]}