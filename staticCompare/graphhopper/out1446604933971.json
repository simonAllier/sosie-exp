{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":67,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":77,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":388,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":143,"com.graphhopper.reader.OSMReaderTest.testFerry":109,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":98,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":414,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":197,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":22,"com.graphhopper.coll.CompressedArrayTest.testCompress":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":287,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":163,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":354,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":320,"com.graphhopper.GraphHopperTest.testPrepare":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":30,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":58,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":55,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":249,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":17,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":415,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":45,"com.graphhopper.GraphHopperTest.testLoadOSM":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":250,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":298,"com.graphhopper.reader.OSMReaderTest.testSort":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":24,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":315,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":373,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":176,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":82,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":123,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":329,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":181,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":336,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":52,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":433,"com.graphhopper.coll.CompressedArrayTest.testCompress2":2,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":383,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":198,"com.graphhopper.GraphHopperAPITest.testLoad":89,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":355,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":345,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":1,"com.graphhopper.reader.OSMReaderTest.testBarriers":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":54,"com.graphhopper.util.GHUtilityTest.testCopy":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":426,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":431,"com.graphhopper.routing.PathTest.testFindInstruction":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":411,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":265,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":374,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":359,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":423,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":148,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":324,"com.graphhopper.util.InstructionListTest.testWayList2":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":258,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":436,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":221,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":313,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":199,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":271,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":344,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":325,"com.graphhopper.routing.PathBidirRefTest.testExtract":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":434,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":294,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":224,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":404,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":127,"com.graphhopper.util.GHUtilityTest.testSort2":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.reader.OSMReaderTest.testMain":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":384,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":299,"com.graphhopper.storage.GraphHopperStorageTest.testClone":347,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":322,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":149,"com.graphhopper.routing.PathTest.testTime":11,"com.graphhopper.util.InstructionListTest.testCreateGPX":419,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":162,"com.graphhopper.util.GHUtilityTest.testSortDirected":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":311,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":418,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":79,"com.graphhopper.GraphHopperTest.testFootOnly":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":272,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":399,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":158,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":252,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":74,"com.graphhopper.routing.QueryGraphTest.testOneWay":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":227,"com.graphhopper.storage.VLongStorageTest.testWrite":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":248,"com.graphhopper.reader.OSMReaderTest.testWithBounds":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":424,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":21,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":164,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":412,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":425,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":203,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":343,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":49,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":440,"com.graphhopper.util.InstructionListTest.testWayList":103,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":435,"com.graphhopper.GraphHopperAPITest.testDisconnected179":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":150,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":145,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":178,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":134,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":349,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":214,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":43,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":367,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":238,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":337,"com.graphhopper.routing.PathTest.testWayList":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":428,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":56,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":437,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":194,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":348,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":16,"com.graphhopper.util.GHUtilityTest.testSort":94,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":254,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":223,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":346,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":277,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":184,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":293,"com.graphhopper.routing.PathTest.testFound":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":168,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":141,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":382,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":46,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":200,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":153,"com.graphhopper.util.InstructionListTest.testEmptyList":101,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":62,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":328,"com.graphhopper.reader.PrinctonReaderTest.testRead":107,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":142,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":392,"com.graphhopper.reader.OSMReaderTest.testFoot":110,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":429,"com.graphhopper.reader.OSMReaderTest.testOneWay":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":334,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":371,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":40,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":160,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":351,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":239,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":416,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":33,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":280,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":27,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":156,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":331,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":290,"com.graphhopper.routing.PathBidirRefTest.testExtract2":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":259,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":245,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":317,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":335,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":372,"com.graphhopper.GraphHopperTest.testFootAndCar":135,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":364,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":422,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":321,"com.graphhopper.GraphHopperTest.testPrepareOnly":125,"com.graphhopper.GraphHopperTest.testVia":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":269,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":59,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":291,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":105,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":368,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":410,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":159,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":310,"com.graphhopper.util.InstructionListTest.testFind":100,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":180},"transformations":[{"failures":[0,1],"tindex":"a7b659ed-829d-11e5-9738-e70edab1ca6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.markNodesRemovedIfUnreachable()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n}"},"status":-1},{"failures":[],"tindex":"a7b680fe-829d-11e5-9738-eb9559f98559","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:397","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"a7b680ff-829d-11e5-9738-db2895c3e9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"a7b68100-829d-11e5-9738-ad96015407f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"length","edgeFrom":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:55","type":"CtReturnImpl","sourcecode":"return byte[].int"},"status":-2},{"failures":[],"tindex":"a7b6a811-829d-11e5-9738-9f195a510d9c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:634","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"variableMap":{"maxTurnCosts":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD","turnRestrictionBit":"flags","flags":"roundaboutBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:729","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long);\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long);\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"a7b6a812-829d-11e5-9738-2f86365142d1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,0,21,22,23,24,25,26,1,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380],"tindex":"a7b6a813-829d-11e5-9738-25bb21548545","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:308","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.close()"},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:397","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":-1},{"failures":[32,34,38,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,125,381,132,133,136,137,138,140],"tindex":"a7b6cf24-829d-11e5-9738-4f5f7c67c719","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"v","edgeTo":"v","edgeFrom":"v"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.findShortcuts(com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler.setNode(int))"},"status":-1},{"failures":[],"tindex":"a7b6cf25-829d-11e5-9738-7df228e801bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"shortcutEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:623","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":0},{"failures":[271,272,273,274,276],"tindex":"a7b6cf26-829d-11e5-9738-19b09642f402","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"len","nodeThis":"from","edgeId":"to","nodeOther":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-1},{"failures":[8,9,11,12,13,14,16,17,382,383,19,384,385,386,387,388,389,390,391,392,393,394,395,22,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,30,39,40,41,46,47,48,49,58,61,62,72,100,102,103,104,105,109,110,121,132,135,140,153,198,310,354],"tindex":"a7b6f637-829d-11e5-9738-99b8f306d03e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[418,419,105],"tindex":"a7b6f638-829d-11e5-9738-8386e2f5e279","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trk>\")"},"status":-1},{"failures":[],"tindex":"a7b6f639-829d-11e5-9738-b5d1059e9664","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"edge","y2":"edge","x1":"edge","x2":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:247","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n    continue;\n"},"status":-2},{"failures":[109],"tindex":"a7b6f63a-829d-11e5-9738-8b8b09bd3a19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[420,421,385,422,423,424,425,426,427,396,428,429,430,431,432,409,433,411,434,435,436,414,416,437,438,110,115,116,125,135,140],"tindex":"a7b6f63b-829d-11e5-9738-ab4d050db4cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a7b6f63c-829d-11e5-9738-4968eebcfc52","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:289","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[271,272,273,274,275,276],"tindex":"a7b71d4d-829d-11e5-9738-0f0f368699b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"key","nodeCount":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:212","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-1},{"failures":[],"tindex":"a7b71d4e-829d-11e5-9738-9d70b2128d38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:621","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"i":"adjNode","mainNodes":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:99","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.AStar.AStarEdge.int"},"status":-2},{"failures":[],"tindex":"a7b71d4f-829d-11e5-9738-63da02938132","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\")"},"status":-2},{"failures":[439,440],"tindex":"a7b71d50-829d-11e5-9738-f7e28bb8a3c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a7b6cf25-829d-11e5-9738-7df228e801bc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader"]},"type":"staticDiff"}]}]}