{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":72,"com.graphhopper.routing.PathTest.testFindInstruction":50,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":91,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":75,"com.graphhopper.reader.OSMReaderTest.testFoot":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":102,"com.graphhopper.reader.OSMReaderTest.testOneWay":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":23,"com.graphhopper.GraphHopperAPITest.testDisconnected179":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":7,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":96,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":92,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":17,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":14,"com.graphhopper.reader.OSMReaderTest.testSort":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":104,"com.graphhopper.reader.OSMReaderTest.testMain":51,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":86,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":36,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":68,"com.graphhopper.util.SimpleIntDequeTest.testPush":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":1,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":60,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":62,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":29,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":77,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":74,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":42,"com.graphhopper.GraphHopperAPITest.testLoad":24,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":40,"com.graphhopper.util.InstructionListTest.testFind":63,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":34},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"1a8bd231-7930-11e5-91d3-350f7594e64a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"variableMap":{"dLat":"frontIndex","dLon":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[49,0,1,2,50,51,52,12,13,14,15,16,53,54,55,56,57,58,59,60,61,62,63,64,26,65,27,66,29,30,31,32,33,34,36,67,37,68,38,69,40,41,42,43,44,45,70,71,72,73,74],"tindex":"1a8c2052-7930-11e5-91d3-71619170ead8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"b_lon","dy":"a_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:142","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,10],"tindex":"1a8c2053-7930-11e5-91d3-c1a2382362e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:356","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[99,100,101,102,103,49,0,1,104,2,105,13,15,16,19],"tindex":"1a8c2054-7930-11e5-91d3-abcc99a23b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:72","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n} "},"status":-1},{"failures":[],"tindex":"1a8c2055-7930-11e5-91d3-991e8eb67148","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:176","type":"CtOperatorAssignmentImpl","sourcecode":"long *= int[][int]"},"status":-2},{"failures":[],"tindex":"1a8c4766-7930-11e5-91d3-ab6100813469","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"len","tmpSize":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:80","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"1a8c4767-7930-11e5-91d3-110284e50e32","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"segmentSizeIntsPower","delta":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"1a8c4768-7930-11e5-91d3-6decae1a1eef","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"status":-2},{"failures":[],"tindex":"1a8c4769-7930-11e5-91d3-813cdb264e13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1a8c476a-7930-11e5-91d3-4f98a1c4704a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:143","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n    int = int;\n    if ((int++) > 1000) {\n        throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n    } \n}"},"variableMap":{"turnCosts":"da","tmp":"segSize","previousEntryIndex":"segSize","i":"segSize","turnCostsEntryBytes":"segSize","TC_NEXT":"segSize","NO_TURN_ENTRY":"segSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], int)"},"status":-2},{"failures":[],"tindex":"1a8c6e7b-7930-11e5-91d3-1d1fc3ec2469","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:253","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"1a8c6e7c-7930-11e5-91d3-ebfb901dec01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"paveType","hash":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:421","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"1a8c6e7d-7930-11e5-91d3-65c44eb754bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:949","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + int))"},"status":-2},{"failures":[],"tindex":"1a8c6e7e-7930-11e5-91d3-19fda8f8b509","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:310","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"1a8c6e7f-7930-11e5-91d3-2bc973b4ae95","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.readTags(javax.xml.stream.XMLStreamReader)"},"status":-2},{"failures":[],"tindex":"1a8c6e80-7930-11e5-91d3-4b211e80627d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"nodeId","size":"nodeId","lonSize":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"1a8c9591-7930-11e5-91d3-a1eeec3fe57a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:137","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"variableMap":{"cp":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:405","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"1a8c9592-7930-11e5-91d3-850798adf363","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"variableMap":{"byteCount":"bytePointer","this":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long) + 1) + (byte[].int)))"},"status":-2},{"failures":[],"tindex":"1a8c9593-7930-11e5-91d3-9fa39be9ed29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"store","hasRel":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"1a8c9594-7930-11e5-91d3-a3937e7156de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            TLongList TLongList = new TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            com.graphhopper.reader.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}