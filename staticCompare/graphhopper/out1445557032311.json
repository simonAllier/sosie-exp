{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d1a87431-7915-11e5-b433-7d8df4cceb06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:167","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.String>"},"status":-2},{"failures":[],"tindex":"d1a89b42-7915-11e5-b433-e187c2f80567","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"d1a89b43-7915-11e5-b433-9bdb1a837e09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"prevLat","speed":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:413","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int])"},"status":-2},{"failures":[],"tindex":"d1a8c254-7915-11e5-b433-01d0f486d8c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:242","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(long) : com.graphhopper.routing.util.FlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"d1a8c255-7915-11e5-b433-efcbd68051e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"status":-2},{"failures":[],"tindex":"d1a8c256-7915-11e5-b433-bf378cf77423","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n    com.graphhopper.routing.util.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"d1a8e967-7915-11e5-b433-594fd887fbe2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"variableMap":{"extStorage":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":-2},{"failures":[],"tindex":"d1a8e968-7915-11e5-b433-cd0a40da99b9","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"key","id":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"d1a8e969-7915-11e5-b433-ef9d75308cc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:304","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"b":"fullyLoaded","updateBestPath":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:107","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"d1a8e96a-7915-11e5-b433-dd83701ce390","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:104","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"variableMap":{"val":"edgeId","java.lang.Double.POSITIVE_INFINITY":"weight","java.lang.Integer.MAX_VALUE":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"status":-2},{"failures":[],"tindex":"d1a9107b-7915-11e5-b433-236a3a6884ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:53","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    if ((double > 90) || (double < (-90)))\n        java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n    \n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if ((double > 180) || (double < (-180)))\n        java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n            java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n        } \n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n            java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"d1a9107c-7915-11e5-b433-5b0b3301ad89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:756","type":"CtIfImpl","sourcecode":"if ((int < int) != (int < int))\n    com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false);\n"},"status":-2},{"failures":[],"tindex":"d1a9107d-7915-11e5-b433-61c0d317ac79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:132","type":"CtReturnImpl","sourcecode":"return short"},"status":-2},{"failures":[],"tindex":"d1a9378e-7915-11e5-b433-7f03aa6a5a4b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"encoded","nodeFlags":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:304","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-2},{"failures":[],"tindex":"d1a9378f-7915-11e5-b433-fd1f2b9600d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"d1a93790-7915-11e5-b433-9b95c6510181","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":-2},{"failures":[],"tindex":"d1a93791-7915-11e5-b433-33e8e7bc9c7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.freeMemory(long)"},"status":-2},{"failures":[],"tindex":"d1a93792-7915-11e5-b433-ddf72767970a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nodeIndex","nodeThis":"nodeIndex","edgeId":"nodeIndex","nodeOther":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:53","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    if ((double > 90) || (double < (-90)))\n        java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n    \n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if ((double > 180) || (double < (-180)))\n        java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n            java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n        } \n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n            java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"d1a95ea3-7915-11e5-b433-d11b050d4ef7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:379","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"variableMap":{"a":"mKeys","high":"i","guess":"mSize","low":"i","key":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"d1a95ea4-7915-11e5-b433-5f5012f1c4d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:176","type":"CtOperatorAssignmentImpl","sourcecode":"long *= int[][int]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}