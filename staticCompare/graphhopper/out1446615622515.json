{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":54,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":387,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.reader.OSMReaderTest.testFerry":328,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":352,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":282,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":67,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":149,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":183,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":306,"com.graphhopper.GraphHopperTest.testPrepare":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":7,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":228,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":5,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":213,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":28,"com.graphhopper.GraphHopperTest.testLoadOSM":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":214,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":284,"com.graphhopper.reader.OSMReaderTest.testSort":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":69,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":202,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":162,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":40,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":325,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":84,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":261,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":322,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":49,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":110,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":380,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":101,"com.graphhopper.GraphHopperAPITest.testLoad":323,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":184,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.reader.OSMReaderTest.testBarriers":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":133,"com.graphhopper.util.GHUtilityTest.testCopy":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":239,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":386,"com.graphhopper.routing.PathTest.testFindInstruction":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":92,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":236,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":203,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":119,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":134,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":171,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":310,"com.graphhopper.util.InstructionListTest.testWayList2":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":222,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":62,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":229,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":378,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":311,"com.graphhopper.routing.PathBidirRefTest.testExtract":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":217,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":258,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":363,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":227,"com.graphhopper.util.GHUtilityTest.testSort2":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":11,"com.graphhopper.reader.OSMReaderTest.testMain":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":285,"com.graphhopper.storage.GraphHopperStorageTest.testClone":176,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":308,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":135,"com.graphhopper.routing.PathTest.testTime":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":292,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":148,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":385,"com.graphhopper.util.GHUtilityTest.testSortDirected":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":297,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":37,"com.graphhopper.GraphHopperTest.testFootOnly":376,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":230,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":144,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":216,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":32,"com.graphhopper.routing.QueryGraphTest.testOneWay":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":212,"com.graphhopper.reader.OSMReaderTest.testWithBounds":340,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":106,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":172,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":205,"com.graphhopper.util.InstructionListTest.testWayList":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":295,"com.graphhopper.GraphHopperAPITest.testDisconnected179":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":136,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":381,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":327,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":164,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":370,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":60,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":196,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":255,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":56,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":166,"com.graphhopper.routing.PathTest.testWayList":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":294,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":6,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":271,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":97,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":177,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":384,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":81,"com.graphhopper.util.GHUtilityTest.testSort":357,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":126,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":238,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":234,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":274,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":87,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":279,"com.graphhopper.routing.PathTest.testFound":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":154,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":377,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":47,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":139,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":181,"com.graphhopper.util.InstructionListTest.testEmptyList":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":10,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":314,"com.graphhopper.reader.PrinctonReaderTest.testRead":326,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":128,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":108,"com.graphhopper.reader.OSMReaderTest.testFoot":329,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":320,"com.graphhopper.reader.OSMReaderTest.testOneWay":342,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":24,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":146,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":180,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":388,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":266,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":142,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":317,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":276,"com.graphhopper.routing.PathBidirRefTest.testExtract2":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":262,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":303,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":243,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":215,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":321,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":193,"com.graphhopper.GraphHopperTest.testFootAndCar":371,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":132,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":307,"com.graphhopper.GraphHopperTest.testPrepareOnly":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":240,"com.graphhopper.GraphHopperTest.testVia":368,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":8,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":338,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":277,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":197,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":349,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":145,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":296,"com.graphhopper.util.InstructionListTest.testFind":344,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":83},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"8a94e2ec-82b6-11e5-bdba-4b861eb4336a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-1},{"failures":[],"tindex":"8a9509fd-82b6-11e5-bdba-536053eb2fa1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"allowWrites","finishedFrom":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:101","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[29,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,48,0,1,2,3,49,4,50,5,6,51,7,8,9,52,10,53,11,12,13,54,55,14,15,56,16,57,17,18,19,20,21,22,58,23,59,24,25,26,60,27,28,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"8a95310e-82b6-11e5-bdba-35f32a86ee71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[378],"tindex":"8a95310f-82b6-11e5-bdba-09b6d9b26817","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:408","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[330,368],"tindex":"8a955820-82b6-11e5-bdba-83ff7958a4ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:140","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"variableMap":{"encodingManager":"encodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:436","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState : java.util.List<com.graphhopper.util.EdgeIteratorState>) {\n    com.graphhopper.routing.util.EncodingManager.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState);\n}"},"status":-1},{"failures":[379,380,381],"tindex":"8a955821-82b6-11e5-bdba-ab76e1e31c0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false);\n"},"status":-1},{"failures":[],"tindex":"8a955822-82b6-11e5-bdba-25e5798e82a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:56","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"nd\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n        gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2},{"failures":[],"tindex":"8a955823-82b6-11e5-bdba-73f97fccaf16","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:310","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.close();\n}"},"status":0},{"failures":[],"tindex":"8a955824-82b6-11e5-bdba-199a86765e4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"closestNode","nextEdgeId":"closestNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"status":-2},{"failures":[],"tindex":"8a955825-82b6-11e5-bdba-93ad2d7b7e2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:173","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.BBox com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.createInverse(com.graphhopper.util.shapes.BBox.hasElevation())"},"variableMap":{"_fallback":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:221","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.BBox com.graphhopper.util.shapes.BBox = ((com.graphhopper.util.shapes.BBox)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"8a957f36-82b6-11e5-bdba-e111c647c95d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:290","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[382],"tindex":"8a957f37-82b6-11e5-bdba-51999f7f58c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:189","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"));\n    if ((double > 0) && (double < double))\n        double = double * 0.9;\n    \n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(0, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n            long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n            long |= long;\n        } else {\n            long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n            long |= long;\n        }\n    } else {\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n        long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n        long |= long;\n    }\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-1},{"failures":[378,383,384,385],"tindex":"8a957f38-82b6-11e5-bdba-b166ef4b71ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:417","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"8a957f39-82b6-11e5-bdba-21d9499c7a22","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:624","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[386],"tindex":"8a95a64a-82b6-11e5-bdba-dd565f0a6c83","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\")"},"variableMap":{"track":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[387,388,389],"tindex":"8a95a64b-82b6-11e5-bdba-ef28a5de5aba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:642","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[390,391,130,138,140,141,143,147,148,155,156],"tindex":"8a95a64c-82b6-11e5-bdba-2f57e9eb5a7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"capacity","pointer":"capacity","maxCapacity":"capacity","baseCapacity":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:419","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"status":-1},{"failures":[63],"tindex":"8a95a64d-82b6-11e5-bdba-4df4c81e9e44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:176","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"nodesContracted":"fwdSlower","nodesContractedPercentage":"fwdSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:230","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[64,65,67,69,70,92,102,103,109,117,118,130,140,141,147,155,156,174,184,185,191,199,200,287,297,298,304,312,313],"tindex":"8a95a64e-82b6-11e5-bdba-85ade7d9881d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:764","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"8a95a64f-82b6-11e5-bdba-a9a39e3291b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:349","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8a95a64f-82b6-11e5-bdba-a9a39e3291b4","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"8a955823-82b6-11e5-bdba-73f97fccaf16","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]}]}