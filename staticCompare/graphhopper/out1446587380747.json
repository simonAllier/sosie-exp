{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":247,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":239,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":208,"com.graphhopper.routing.QueryGraphTest.testOneWay":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":235,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":120,"com.graphhopper.reader.OSMReaderTest.testWithBounds":71,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":229,"com.graphhopper.storage.MMapDataAccessTest.testSegments":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":205,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":160,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":92,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":197,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":180,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":257,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":216,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":27,"com.graphhopper.util.InstructionListTest.testWayList":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":191,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":206,"com.graphhopper.GraphHopperAPITest.testDisconnected179":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":244,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":118,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":28,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":224,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":11,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":260,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":51,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":219,"com.graphhopper.GraphHopperTest.testLoadOSM":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":122,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":70,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":258,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":39,"com.graphhopper.storage.MMapDataAccessTest.testHeader":271,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":4,"com.graphhopper.routing.PathTest.testWayList":8,"com.graphhopper.storage.MMapDataAccessTest.testCopy":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":259,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":159,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":220,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":105,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":228,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":10,"com.graphhopper.util.GHUtilityTest.testSort":188,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":245,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":222,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":111,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":202,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":112,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":237,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":134,"com.graphhopper.GraphHopperAPITest.testLoad":59,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":227,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":165,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":29,"com.graphhopper.util.GHUtilityTest.testCopy":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":198,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":214,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":236,"com.graphhopper.routing.PathTest.testFindInstruction":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":147,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":87,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":238,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":148,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":213,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":272,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":264,"com.graphhopper.util.InstructionListTest.testWayList2":193,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":254,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":212,"com.graphhopper.reader.OSMReaderTest.testOneWay":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":207,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":162,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":217,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":115,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":167,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":133,"com.graphhopper.util.GHUtilityTest.testSort2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":246,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":183,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":130,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":106,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":178,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":169,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":37,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":116,"com.graphhopper.storage.GraphHopperStorageTest.testClone":76,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":255,"com.graphhopper.GraphHopperTest.testFootAndCar":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":83,"com.graphhopper.util.BitUtilBigTest.testToFloat":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":243,"com.graphhopper.util.BitUtilLittleTest.testToFloat":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":157,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":266,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":143,"com.graphhopper.util.GHUtilityTest.testSortDirected":189,"com.graphhopper.GraphHopperTest.testPrepareOnly":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":175,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":138,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":156,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":91,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":17,"com.graphhopper.GraphHopperTest.testFootOnly":57,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":97,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":248,"com.graphhopper.util.InstructionListTest.testFind":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":172},"transformations":[{"failures":[0,1,2,3],"tindex":"c92ced5f-8274-11e5-a1a8-1d4fc5bf5805","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:209","type":"CtIfImpl","sourcecode":"if (int < 10)\n    java.lang.String += \"0\";\n"},"status":-1},{"failures":[],"tindex":"c92ced60-8274-11e5-a1a8-f98bdfec78b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"firstLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:363","type":"CtIfImpl","sourcecode":"if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n} "},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,0,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"c92d1471-8274-11e5-a1a8-d902d30670e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"N_LAT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:259","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[195,196],"tindex":"c92d1472-8274-11e5-a1a8-f38340a19034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromFloat(byte[], float, 0)"},"status":-1},{"failures":[],"tindex":"c92d1473-8274-11e5-a1a8-5d21aca7e9b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:248","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"c92d1474-8274-11e5-a1a8-7558e67d48ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","dY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:424","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n    return -1;\n}"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,67],"tindex":"c92d3b85-8274-11e5-a1a8-7d52c0334d08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:239","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[216,217,218,219,26,220,27,28,221,222,223,29,224,225,31,32,33,226,34,35,38,227,40,43,44,45,46,47,48,49,50,51,53,54,56,59],"tindex":"c92d3b86-8274-11e5-a1a8-e3e0cbc9b2d6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"edgeTo","cl":"edgeTo","tmpPrev":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:55","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[228,229],"tindex":"c92d3b87-8274-11e5-a1a8-0fa9f31b5b7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:133","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-1},{"failures":[],"tindex":"c92d3b88-8274-11e5-a1a8-71d333f389ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"c92d3b89-8274-11e5-a1a8-f7c79ed3f264","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:61","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[],"tindex":"c92d629a-8274-11e5-a1a8-57420234acd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:233","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":0},{"failures":[230],"tindex":"c92d629b-8274-11e5-a1a8-c163530eaf7b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:344","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"c92d629c-8274-11e5-a1a8-6f85db8f84be","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"newOrExistingEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-2},{"failures":[],"tindex":"c92d629d-8274-11e5-a1a8-5f1c2fbbf7c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:247","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n    continue;\n"},"status":0},{"failures":[],"tindex":"c92d629e-8274-11e5-a1a8-cda8bc12f776","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:177","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((3 * 4)))"},"status":-2},{"failures":[4,5,6,7,10,11,192],"tindex":"c92d629f-8274-11e5-a1a8-8ff123744fb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"variableMap":{"p":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[107,108,109,110,111],"tindex":"c92d62a0-8274-11e5-a1a8-0363117dd9b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:78","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"variableMap":{"bs":"filledIndices","index":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:276","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    if ((int[][int]) >= 0) {\n        if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n            continue;\n        } \n    } \n    com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n    int[][int] = int[][int];\n    com.graphhopper.coll.GHBitSet.add(int);\n    int++;\n} "},"status":-1},{"failures":[0,1,3,74,231,232,107,108,109,110,233,111,234,235,236,140,141,237,238,239,156,240,157,241,242,243,244,245,158,159,160,246,161,247,248,162,163,249,164,250,251,252,253,165,166,167,254,255,256,168,257,258,259,260,169,261,171,262,263,264,265,266,230,267,268,269,270,271,272,273,274,275],"tindex":"c92d89b1-8274-11e5-a1a8-5944aaad2008","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:175","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1 ; ) {\n    try {\n        java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n        break;\n    } catch (java.io.IOException tmpex) {\n        java.io.IOException = java.io.IOException;\n        int++;\n        com.graphhopper.util.Helper.cleanHack();\n        try {\n            java.lang.Thread.sleep(5);\n        } catch (java.lang.InterruptedException iex) {\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"c92d89b2-8274-11e5-a1a8-c7a693c7ce9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:137","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c92d629d-8274-11e5-a1a8-5f1c2fbbf7c2","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}