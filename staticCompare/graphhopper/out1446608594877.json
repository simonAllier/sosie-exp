{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":55,"com.graphhopper.search.NameIndexTest.testCreate":130,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":19,"com.graphhopper.routing.PathTest.testFindInstruction":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":67,"com.graphhopper.routing.QueryGraphTest.testOneWay":62,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":75,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":45,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":46,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":51,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":42,"com.graphhopper.GraphHopperTest.testPrepare":87,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":76,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":107,"com.graphhopper.search.NameIndexTest.testFlush":128,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":22,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":68,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":72,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":117,"com.graphhopper.GraphHopperAPITest.testDisconnected179":95,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":108,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":16,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":126,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":124,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":122,"com.graphhopper.coll.OSMIDMapTest.testGet":133,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":88,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.GraphHopperTest.testLoadOSM":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":83,"com.graphhopper.reader.OSMReaderTest.testSort":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":26,"com.graphhopper.reader.OSMReaderTest.testMain":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":49,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":56,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":79,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":121,"com.graphhopper.routing.PathTest.testWayList":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":40,"com.graphhopper.coll.OSMIDMapTest.testGet2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":28,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":109,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.storage.StorablePropertiesTest.testStore":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":110,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":74,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":44,"com.graphhopper.GraphHopperTest.testFootAndCar":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":47,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":20,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":114,"com.graphhopper.coll.OSMIDMapTest.testGetLong":136,"com.graphhopper.search.NameIndexTest.testPut":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":104,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":59,"com.graphhopper.GraphHopperTest.testPrepareOnly":131,"com.graphhopper.GraphHopperTest.testVia":86,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":54,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":92,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":36,"com.graphhopper.GraphHopperAPITest.testLoad":94,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":29,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":57,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.GraphHopperTest.testFootOnly":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":123,"com.graphhopper.util.InstructionListTest.testFind":11,"com.graphhopper.reader.OSMReaderTest.testBarriers":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":70,"com.graphhopper.util.GHUtilityTest.testCopy":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":50},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"2dcb05c5-82a6-11e5-9c3f-47d4307eda43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"variableMap":{"com.graphhopper.util.Constants.VERSION":"wayTypeName","tmp":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"2dcbc916-82a6-11e5-9c3f-bb79c8e3cf29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:273","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[],"tindex":"2dcbf027-82a6-11e5-9c3f-070c30faa38c","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"tmpOsmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:511","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"status":0},{"failures":[],"tindex":"2dcbf028-82a6-11e5-9c3f-5b7e124d645b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:198","type":"CtLocalVariableImpl","sourcecode":"int int = int[][0]"},"status":-2},{"failures":[],"tindex":"2dcbf029-82a6-11e5-9c3f-51c4e58d514b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"inner":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:105","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"2dcbf02a-82a6-11e5-9c3f-6bcfddd27a41","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"variableMap":{"index":"edgeFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int"},"status":-2},{"failures":[],"tindex":"2dcc173b-82a6-11e5-9c3f-b59bcc256658","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"2dcc173c-82a6-11e5-9c3f-f1644d61c401","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:882","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n} else {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[],"tindex":"2dcc173d-82a6-11e5-9c3f-113b8e99bb43","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge1","b":"skippedEdge1","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:84","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"2dcc3e4e-82a6-11e5-9c3f-4355b189fbdf","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:110","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.toLowerCase(), java.lang.String)"},"variableMap":{"map":"map","value":"s","key":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":0},{"failures":[],"tindex":"2dcc3e4f-82a6-11e5-9c3f-b59e12fc19e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.freeze()"},"status":-2},{"failures":[],"tindex":"2dcc3e50-82a6-11e5-9c3f-7f57b9238488","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:105","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Not supported for virtual edge. Set when creating it.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:278","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String))"},"status":-2},{"failures":[],"tindex":"2dcc3e51-82a6-11e5-9c3f-f36e934e0cdb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:579","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"2dcc6562-82a6-11e5-9c3f-ab3a9f894c25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:136","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"variableMap":{"lat":"a_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:149","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double);\n"},"status":0},{"failures":[],"tindex":"2dcc6563-82a6-11e5-9c3f-c323f99fa26d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.checkOne()"},"status":-2},{"failures":[11,101,12,13,14,102,103,17,104,31,105,106,43,107,44,108,45,109,110,111,47,112,48,113,49,114,50,115,51,116,52,117,118,53,119,55,120,60,63,64,121,122,123,124,65,66,125,126,78,127,128,129,130,131,86,90,91,132,92,93,133,134,135,136,137,96,99,100],"tindex":"2dcc6564-82a6-11e5-9c3f-bfc14908f6d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:288","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"2dcc8c75-82a6-11e5-9c3f-5901f6e2f083","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"variableMap":{"intIndex":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-2},{"failures":[],"tindex":"2dcc8c76-82a6-11e5-9c3f-a3a06e3a503b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:704","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!(gnu.trove.list.array.TIntArrayList.contains(com.graphhopper.util.EdgeIterator.getEdge())))\n        com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false));\n    \n}"},"status":0},{"failures":[138,139,140,141],"tindex":"2dcc8c77-82a6-11e5-9c3f-ab9cf0dbfd51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"highwayTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    int = java.lang.Integer;\n    if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n        if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n            int = java.lang.Integer;\n        else\n            int = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"2dcc8c78-82a6-11e5-9c3f-772b8ce153eb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"variableMap":{"segmentCount":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.int[][] = new int[int[][].int][]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2dcc8c76-82a6-11e5-9c3f-a3a06e3a503b","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]},{"transformation":"2dcc6562-82a6-11e5-9c3f-ab3a9f894c25","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.util.InstructionListTest.testFind":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e2","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e3","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"],"com.graphhopper.routing.PathTest.testFindInstruction":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e2","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e3","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"]},"type":"branch"}]},{"transformation":"2dcc3e4e-82a6-11e5-9c3f-4355b189fbdf","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).t2","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).t2","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":["com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l3","com.graphhopper.util.PMap_com.graphhopper.util.PMap(java.lang.String).l2"]},"type":"branch"}]}]}