{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"635f4275-7950-11e5-825b-830df40de713","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:570","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"variableMap":{"edgeId":"i","virtualEdges":"virtualEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-2},{"failures":[],"tindex":"635f6986-7950-11e5-825b-33c9d9e9c967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:132","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DouglasPeucker = com.graphhopper.util.DouglasPeucker"},"status":-2},{"failures":[],"tindex":"635f6987-7950-11e5-825b-6df087b1501e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    if (java.lang.Double.isInfinite(double)) {\n        java.lang.System.java.io.PrintStream.println((\"infinity distance? for way:\" + (com.graphhopper.reader.OSMWay.getId())));\n        return ;\n    } \n    if (double < 1)\n        return ;\n    \n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"635f9098-7950-11e5-825b-05b662ba4d1d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:147","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.Instruction == null"},"status":-2},{"failures":[],"tindex":"635f9099-7950-11e5-825b-e1cc273855fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"status":-2},{"failures":[],"tindex":"635f909a-7950-11e5-825b-5976998b4f74","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","edgeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)])"},"status":-2},{"failures":[],"tindex":"635f909b-7950-11e5-825b-9b3b8a51e860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:51","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-2},{"failures":[],"tindex":"635f909c-7950-11e5-825b-bf3ab4e95135","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.MMAP"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:475","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"635f909d-7950-11e5-825b-df961eff2311","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:257","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"635f909e-7950-11e5-825b-67fa6a24db13","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"silent":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:57","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"635fb7af-7950-11e5-825b-ebbd647a72e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"variableMap":{"defaultUTurnCost":"weight2goal","weight":"weight2goal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:47","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"635fb7b0-7950-11e5-825b-8b4e57b5708c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nodes","edgeId":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:762","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    double = com.graphhopper.util.PointList.getLatitude(int);\n    double = com.graphhopper.util.PointList.getLongitude(int);\n    if (com.graphhopper.util.PointList.is3D()) {\n        double = com.graphhopper.util.PointList.getElevation(int);\n        double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n        double = double;\n    } else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    \n    double = double;\n    double = double;\n    if ((int > 2) && (int < (int - 1))) {\n        if (com.graphhopper.util.PointList.is3D())\n            com.graphhopper.util.PointList.add(double, double, double);\n        else\n            com.graphhopper.util.PointList.add(double, double);\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"635fb7b1-7950-11e5-825b-1b3319a23895","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:862","type":"CtReturnImpl","sourcecode":"return \"true\".equals(com.graphhopper.storage.GraphHopperStorage.getProperties().get(\"prepare.done\"))"},"status":-2},{"failures":[],"tindex":"635fb7b2-7950-11e5-825b-09a7520fbcf1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:190","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"635fb7b3-7950-11e5-825b-1fd58d3c823b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"distance","shortTripsSpeed":"foundMinDistance","durationInHours":"foundMinDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:322","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"635fb7b4-7950-11e5-825b-f57d66ca7d8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:621","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"status":-2},{"failures":[],"tindex":"635fdec5-7950-11e5-825b-030bf662fabb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:109","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n"},"status":-2},{"failures":[],"tindex":"635fdec6-7950-11e5-825b-1912840469b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"id","nextEdgeId":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-2},{"failures":[],"tindex":"635fdec7-7950-11e5-825b-c9612c13b7b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"variableMap":{"bufferIndex":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:346","type":"CtAssignmentImpl","sourcecode":"java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1))"},"status":-2},{"failures":[],"tindex":"635fdec8-7950-11e5-825b-e57928927a61","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:176","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"nodesContracted":"lat","nodesContractedPercentage":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}