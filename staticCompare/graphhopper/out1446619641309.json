{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":155,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":143,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":163,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":11,"com.graphhopper.routing.PathTest.testFindInstruction":169,"com.graphhopper.reader.OSMReaderTest.testFerry":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":107,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":152,"com.graphhopper.routing.QueryGraphTest.testOneWay":162,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":7,"com.graphhopper.storage.VLongStorageTest.testWrite":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":88,"com.graphhopper.reader.OSMReaderTest.testWithBounds":121,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":113,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":158,"com.graphhopper.coll.CompressedArrayTest.testCompress":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":75,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":94,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":124,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":106,"com.graphhopper.GraphHopperTest.testPrepare":49,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.util.InstructionListTest.testWayList2":140,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":71,"com.graphhopper.search.NameIndexTest.testFlush":95,"com.graphhopper.reader.OSMReaderTest.testFoot":149,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":16,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":13,"com.graphhopper.util.InstructionListTest.testWayList":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":14,"com.graphhopper.reader.OSMReaderTest.testOneWay":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":84,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":60,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":146,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":105,"com.graphhopper.GraphHopperAPITest.testDisconnected179":136,"com.graphhopper.util.PointListTest.testAddPL":147,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":103,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":6,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":8,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":116,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":89,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":129,"com.graphhopper.GraphHopperTest.testLoadOSM":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":46,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":45,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":43,"com.graphhopper.storage.RAMDataAccessTest.testSegments":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":20,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":87,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":104,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":31,"com.graphhopper.util.PointListTest.testReverse":148,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":59,"com.graphhopper.storage.RAMDataAccessTest.testHeader":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":134,"com.graphhopper.routing.PathTest.testWayList":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":90,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":22,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":25,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.storage.StorablePropertiesTest.testStore":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":58,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":101,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":92,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":110,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":142,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":145,"com.graphhopper.GraphHopperTest.testFootAndCar":51,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":12,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":80,"com.graphhopper.util.InstructionListTest.testCreateGPX":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":18,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":24,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":93,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":159,"com.graphhopper.GraphHopperTest.testPrepareOnly":65,"com.graphhopper.coll.CompressedArrayTest.testCompress2":68,"com.graphhopper.GraphHopperTest.testVia":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":151,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":54,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":85,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":119,"com.graphhopper.util.DouglasPeuckerTest.testParse":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":33,"com.graphhopper.GraphHopperAPITest.testLoad":38,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":52,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":23,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":61,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":4,"com.graphhopper.GraphHopperTest.testFootOnly":55,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":28,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":29,"com.graphhopper.reader.OSMReaderTest.testBarriers":41,"com.graphhopper.util.InstructionListTest.testFind":137,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":79,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":21,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":19},"transformations":[{"failures":[0,1,2,3,4],"tindex":"e5f82fa3-82bf-11e5-b0b8-992acbb2113f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"S_SKIP_EDGE2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:660","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[5],"tindex":"e5f856b4-82bf-11e5-b0b8-29d07219256a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"e5f856b5-82bf-11e5-b0b8-81cb17f7f3de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:278","type":"CtReturnImpl","sourcecode":"return ((java.lang.String + \"(\") + (java.lang.String)) + \")\""},"variableMap":{"res":"str","algo":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:358","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,3],"tindex":"e5f87dc6-82bf-11e5-b0b8-ab3358eebfb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:781","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.fillIDs(long, com.graphhopper.storage.index.LocationIndexTree.int, gnu.trove.set.hash.TIntHashSet, 0)"},"status":-1},{"failures":[],"tindex":"e5f87dc7-82bf-11e5-b0b8-5d75782b4336","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"java.lang.Double.NaN","lat2":"java.lang.Double.NaN","lon1":"java.lang.Double.NaN","lon2":"java.lang.Double.NaN","shrinkFactor":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:540","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"e5f87dc8-82bf-11e5-b0b8-97387dbbb2cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"status":0},{"failures":[59],"tindex":"e5f87dc9-82bf-11e5-b0b8-95b850bf936d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:145","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIteratorState.getAdjNode())) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(0);\n    if ((com.graphhopper.util.PointList.size()) > 1)\n        boolean = (com.graphhopper.util.PointList.getLatitude(0)) > (com.graphhopper.util.PointList.getLatitude(((com.graphhopper.util.PointList.size()) - 1)));\n    \n} "},"status":-1},{"failures":[60],"tindex":"e5f87dca-82bf-11e5-b0b8-c3fce55564eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"variableMap":{"size":"lonSize","i":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:301","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"status":-1},{"failures":[61,62,63,64,65,53,54],"tindex":"e5f87dcb-82bf-11e5-b0b8-a392fff6dfc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:293","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"variableMap":{"seg":"bytes","values":"bytes","length":"read","delta":"read"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:168","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n}"},"status":-1},{"failures":[],"tindex":"e5f8a4dc-82bf-11e5-b0b8-779d00a90fdd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"variableMap":{"indicesCopy":"removedNodes","filledIndices":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"status":0},{"failures":[66,67,68,69],"tindex":"e5f8a4dd-82bf-11e5-b0b8-3b38e4acab9a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:151","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 42"},"variableMap":{"b":"b","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:127","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 14"},"status":-1},{"failures":[70],"tindex":"e5f8a4de-82bf-11e5-b0b8-450b2b9bf1b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:153","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.StorableProperties.(check(\"nodes\", com.graphhopper.util.Constants.int, boolean)))\n    return false;\n"},"status":-1},{"failures":[38,42,43,44,45,46,47,48,50,52,54,55,71,72,73,74,75,76,77,1,2,78,79,80,81,82,83,84,85,86,58,87,88,3,89,4,90],"tindex":"e5f8a4df-82bf-11e5-b0b8-03912488d6ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:73","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[91,92,93],"tindex":"e5f8a4e0-82bf-11e5-b0b8-7f416d6dfff6","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[42,43,44,46,94],"tindex":"e5f8a4e1-82bf-11e5-b0b8-6be9c663324c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"edgeOrientation","speed":"favoredHeading"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:405","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double)"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,65,52,53,103,54],"tindex":"e5f8cbf2-82bf-11e5-b0b8-93107f2af257","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"segmentCount","entityType":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:156","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"e5f8cbf3-82bf-11e5-b0b8-17ec187a0acb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT_STORE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[95,104,105,106,96,97,107,98,108,99,109,110,100,101,111,102,112,113,65,52,53,54,114],"tindex":"e5f8cbf4-82bf-11e5-b0b8-65bd789b5d54","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:204","type":"CtReturnImpl","sourcecode":"return (int) == (int)"},"variableMap":{"currNode":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","to":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:143","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        byte[][] = new byte[int][];\n        for (int int = 0 ; int < int ; int++) {\n            byte[] byte[] = new byte[int];\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            byte[][][int] = byte[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-1},{"failures":[115,39,40,41,116,117,118,119,120,121,122,123,124,125,49,50,52,53,103,54],"tindex":"e5f8cbf5-82bf-11e5-b0b8-e7a5ae0810d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:599","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[126,127,128,129,130,131,132,133,134,6,7,8,9,10,11,12,14,15,16,17,18,19,20,135,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,136,137,138,139,140,141,142,143,144,145,146,147,148,115,149,39,40,41,116,150,117,118,119,120,121,122,123,124,65,42,43,44,45,46,47,125,48,49,50,51,52,53,103,54,55,114,151,94,152,153,154,155,156,157,158,159,59,160,161,162,163,164,77,2,78,165,56,84,57,58,88,3,166,89,167,90,168,169],"tindex":"e5f8f306-82bf-11e5-b0b8-e1c12320c24e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"size","mainNodes":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e5f87dc8-82bf-11e5-b0b8-97387dbbb2cb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.TranslationMap.postImportHook"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_void_postImportHook().l4"]},"type":"branch"}]}]}