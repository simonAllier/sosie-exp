{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":136,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":257,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.reader.OSMReaderTest.testFerry":278,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":234,"com.graphhopper.routing.QueryGraphTest.testOneWay":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":157,"com.graphhopper.reader.OSMReaderTest.testWithBounds":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":84,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":141,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":140,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":101,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":218,"com.graphhopper.GraphHopperTest.testPrepare":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":256,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":91,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":106,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":248,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":252,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":210,"com.graphhopper.GraphHopperAPITest.testDisconnected179":265,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":130,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":156,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":249,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":153,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":47,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":6,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":176,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":159,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":200,"com.graphhopper.reader.OSMReaderTest.testSort":269,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":29,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":214,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":115,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":260,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":209,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":225,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":247,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":119,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":193,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":63,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":232,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":254,"com.graphhopper.util.GHUtilityTest.testSort":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":131,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":87,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":93,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":226,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":263,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":52,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":67,"com.graphhopper.GraphHopperAPITest.testLoad":264,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":71,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":58,"com.graphhopper.reader.OSMReaderTest.testBarriers":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":215,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":4,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":116,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":253,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":69,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":197,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":203,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":222,"com.graphhopper.reader.OSMReaderTest.testFoot":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":165,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":244,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":279,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":230,"com.graphhopper.reader.OSMReaderTest.testOneWay":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":85,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":262,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":3,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":138,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":223,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":40,"com.graphhopper.util.GHUtilityTest.testSort2":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":134,"com.graphhopper.reader.OSMReaderTest.testMain":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":186,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":172,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":258,"com.graphhopper.storage.GraphHopperStorageTest.testClone":94,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":160,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":220,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":102,"com.graphhopper.GraphHopperTest.testFootAndCar":48,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":139,"com.graphhopper.util.GHUtilityTest.testSortDirected":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":21,"com.graphhopper.GraphHopperTest.testPrepareOnly":38,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":173,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":237,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":178,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":274,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":137,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168},"transformations":[{"failures":[0,1],"tindex":"c88645be-829c-11e5-914c-4f93c2d0d3e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:78","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getBaseNode()"},"status":-1},{"failures":[],"tindex":"c8866ccf-829c-11e5-914c-cdc52f2127e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:240","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.DijkstraBidirectionRef.(getName())));\n    \n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n        com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-1},{"failures":[],"tindex":"c8866cd0-829c-11e5-914c-9719c7a45502","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"c8866cd1-829c-11e5-914c-b32b36f95510","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"c8866cd2-829c-11e5-914c-11dce2e74407","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLongitude(int)"},"variableMap":{"this":"pointList","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:769","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getElevation(int)"},"status":0},{"failures":[],"tindex":"c88693e3-829c-11e5-914c-a5a721fc5dc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[],"tindex":"c88693e4-829c-11e5-914c-ad69dafd9835","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"delta","newBaseIndex":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:272","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"c88693e5-829c-11e5-914c-839a076474bd","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:119","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDFullIndex.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-2},{"failures":[26,27,31],"tindex":"c88693e6-829c-11e5-914c-55e57eac81a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,2,59,60,61,62,63,64,65,66,67,3,4,68,69,70,71,72,5,73,74,75,76,77,78,79,6,7,80,81,82,83,84,85,86,87,88,89,90,91,92,8,93,94,95,96,97,98,99,100,101,9,10,102,103,104,105,106,11,107,108,109,110,111,112,113,12,13,114,115,116,117,118,119,120,121,122,123,124,14,125,126,127,128,129,130,131,132,133,15,16,134,135,136,137,138,17,139,140,141,142,143,144,145,18,19,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,20,203,204,205,206,207,208,209,210,211,21,22,212,213,214,215,216,23,217,218,219,220,221,222,223,24,25,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,0,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,1,26,27,28,261,29,30,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"c88693e7-829c-11e5-914c-0fb66d72e48a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:433","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer()"},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-1},{"failures":[],"tindex":"c886baf8-829c-11e5-914c-89e214efa049","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:90","type":"CtReturnImpl","sourcecode":"return java.io.InputStream"},"variableMap":{"is":"java.io.InputStream.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:122","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[278,277],"tindex":"c886baf9-829c-11e5-914c-974c32599d0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"encoded","weightLong":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"c886bafa-829c-11e5-914c-c7937ef6b7c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1146","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((\"flushing graph \" + (com.graphhopper.storage.GraphHopperStorage.toString())) + \", details:\") + (com.graphhopper.storage.GraphHopperStorage.toDetailsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())) + \")\"))"},"status":0},{"failures":[50,52,55,89,199],"tindex":"c886bafb-829c-11e5-914c-0d8b6396446c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"nodeEntryBytes","to":"nodeEntryBytes","lonSize":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:175","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-1},{"failures":[],"tindex":"c886e20c-829c-11e5-914c-a17e2eefc2c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":0},{"failures":[279],"tindex":"c886e20d-829c-11e5-914c-d7e8505cd2b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[280],"tindex":"c886e20e-829c-11e5-914c-edf07fcb5a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:439","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"c886e20f-829c-11e5-914c-a92a9b4c4ae0","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-2},{"failures":[],"tindex":"c886e210-829c-11e5-914c-4dfc8a332295","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:56","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.signum((double - double))))"},"status":-2},{"failures":[],"tindex":"c8870921-829c-11e5-914c-218ff8a35050","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:240","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c886bafa-829c-11e5-914c-c7937ef6b7c2","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.toString","com.graphhopper.util.Helper.getMemInfo","com.graphhopper.storage.GraphHopperStorage.toDetailsString","org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}