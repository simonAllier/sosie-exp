{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8a80db57-7916-11e5-b846-2f9f882cdb15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"8a80db58-7916-11e5-b846-a3c8f21c603f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"variableMap":{"lastInBoundsPillarNode":"nodes","convertToTowerNode":"doSimplify","tmpNode":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:800","type":"CtIfImpl","sourcecode":"if (int > 2) {\n    if (boolean)\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    \n    com.graphhopper.util.EdgeIteratorState.setWayGeometry(com.graphhopper.util.PointList);\n} "},"status":-2},{"failures":[],"tindex":"8a80db59-7916-11e5-b846-bb7d0e57393e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"variableMap":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:65","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"8a80db5a-7916-11e5-b846-cbea8ca59929","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:685","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n        int = int;\n        int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n        int = (-int) - 3;\n        if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n            com.graphhopper.util.PointList.clear();\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n        } \n        int = int;\n        int = -1;\n    } \n    continue;\n} "},"status":-2},{"failures":[],"tindex":"8a81026b-7916-11e5-b846-e95ae1cac48d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:38","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || (java.lang.String.equals(java.lang.String)))\n    return false;\n"},"variableMap":{"toStr":"val","fromStr":"osmValue","from":"osmValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.Object))\n    return true;\n"},"status":-2},{"failures":[],"tindex":"8a81026c-7916-11e5-b846-05f2a84477a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:154","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.PointList.is3D()))\n    throw new java.lang.IllegalStateException(\"To support speed calculation based on elevation data it is necessary to enable import of it.\");\n"},"variableMap":{"pl":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:113","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        int = int;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"8a81026d-7916-11e5-b846-85a12dc9a6ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:243","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay);\n}"},"status":-2},{"failures":[],"tindex":"8a81026e-7916-11e5-b846-796886b47d37","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:171","type":"CtReturnImpl","sourcecode":"return !boolean"},"variableMap":{"obtained":"unfavored"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"8a81026f-7916-11e5-b846-e1d43e2e5a8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.int[][] = new int[int[][].int][]"},"status":-2},{"failures":[],"tindex":"8a810270-7916-11e5-b846-7dc245b86ed7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"offset","factor":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"8a810271-7916-11e5-b846-e741d760c5b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lat=\")"},"variableMap":{"txt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLon()))"},"status":-2},{"failures":[],"tindex":"8a812982-7916-11e5-b846-e34e69258118","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:502","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer, com.graphhopper.util.EdgeExplorer, this)"},"status":-2},{"failures":[],"tindex":"8a812983-7916-11e5-b846-d1cd31f8305a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:143","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    throw new java.lang.IllegalStateException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:209","type":"CtTryImpl","sourcecode":"try {\n    if (!(java.io.File.renameTo(new java.io.File(((java.lang.String) + java.lang.String))))) {\n        throw new java.lang.IllegalStateException((((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object to \") + java.lang.String));\n    } \n    java.lang.String = java.lang.String;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object!\") , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"8a812984-7916-11e5-b846-3d05914e629d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:127","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-2},{"failures":[],"tindex":"8a812985-7916-11e5-b846-9bc90c8d6990","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (com.graphhopper.storage.index.Location2IDQuadtree.int))\n    throw new java.lang.IllegalStateException(\"incorrect loc2id index version\");\n"},"variableMap":{"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT":"segSize","index":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], int)"},"status":-2},{"failures":[],"tindex":"8a812986-7916-11e5-b846-b1317ddb385c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"8a812987-7916-11e5-b846-8ba272cb3a23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:224","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"tmpNode","adjNode":"i","graph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:273","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.routing.TIntList.get(int), int)"},"status":-2},{"failures":[],"tindex":"8a815098-7916-11e5-b846-276394965aac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"debugInfo","key":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:51","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"8a815099-7916-11e5-b846-7925d75aecf3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"baseUrl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"8a81509a-7916-11e5-b846-07ee974dc771","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"radian","java.lang.Math.PI":"radian"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:108","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}