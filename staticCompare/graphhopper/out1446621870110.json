{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":86,"com.graphhopper.util.BitUtilBigTest.testToDouble":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":33,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.reader.OSMReaderTest.testFerry":5,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":53,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":49,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":82,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":91,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":84,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":78,"com.graphhopper.coll.CompressedArrayTest.testCompress":45,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":35,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":68,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":37,"com.graphhopper.reader.OSMReaderTest.testFoot":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":76,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":48,"com.graphhopper.reader.OSMReaderTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":80,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":81,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.GraphHopperTest.testPrepareOnly":17,"com.graphhopper.coll.CompressedArrayTest.testCompress2":44,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.util.BitUtilBigTest.testToLong":43,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":75,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":11,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":3,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.GraphHopperTest.testFootOnly":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":89,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":94,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":70,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":71,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":2,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":77,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":32},"transformations":[{"failures":[],"tindex":"16703a14-82c5-11e5-9f71-d71f88a290b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:830","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies)"},"variableMap":{"tmpPrepareCH":"algoFactory","algoFactories":"algoFactories","weighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:799","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"16706125-82c5-11e5-9f71-1b103ceeb6ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[5,6,7,28,8,29,30,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41],"tindex":"16706126-82c5-11e5-9f71-a9062edf720e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"originalEdges":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":-1},{"failures":[42,43],"tindex":"16706127-82c5-11e5-9f71-2bb771f67623","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:75","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long >> 56))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,7,28,8,19,20,21,22,23,24,26,54,55,56,57,58,59,60,61,62,63],"tindex":"16706128-82c5-11e5-9f71-157ef45a90de","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"hash","nanoTime":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"16706129-82c5-11e5-9f71-671d9dadb2c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"searchIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:117","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"1670883a-82c5-11e5-9f71-ff86ea69ef08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"maxLevel","lonSimilar":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:338","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"1670883b-82c5-11e5-9f71-3de5ad73fd51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"1670883c-82c5-11e5-9f71-7bacfb734fbc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.MAX_VALUE","clockwise":"storedInt","java.lang.Math.PI":"java.lang.Double.MAX_VALUE","radian":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:381","type":"CtIfImpl","sourcecode":"if (int == (-(java.lang.Integer.int)))\n    return -(java.lang.Double.double);\n"},"status":-2},{"failures":[],"tindex":"1670883d-82c5-11e5-9f71-0183ccae42d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:401","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((long[][int]) < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":0},{"failures":[17,19,20],"tindex":"1670883e-82c5-11e5-9f71-c9be4d35e14d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:720","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"variableMap":{"graphHopperFolder":"chWeightingStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:298","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"1670883f-82c5-11e5-9f71-57d1670a4c2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, com.graphhopper.storage.index.Location2IDQuadtree.int)"},"status":-2},{"failures":[],"tindex":"1670af50-82c5-11e5-9f71-7bba491caa58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"dim"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:273","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String)"},"status":-2},{"failures":[],"tindex":"1670af51-82c5-11e5-9f71-adf9bbbb35bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:494","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeExplorer == null) || (com.graphhopper.util.EdgeExplorer == null)) {\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , true , false));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n} "},"status":-2},{"failures":[5,6,7,28,8,29,30,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31],"tindex":"1670af52-82c5-11e5-9f71-231590e27430","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:198","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader)"},"variableMap":{"parser":"parser","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:191","type":"CtSwitchImpl","sourcecode":"switch (java.lang.String.charAt(0)) {\n    case 'n' :\n        if (\"node\".equals(java.lang.String)) {\n            long = java.lang.Long.parseLong(java.lang.String);\n            return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n        } \n        break;\n    case 'w' :\n        {\n            long = java.lang.Long.parseLong(java.lang.String);\n            return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    case 'r' :\n        long = java.lang.Long.parseLong(java.lang.String);\n        return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n}"},"status":-1},{"failures":[],"tindex":"1670af53-82c5-11e5-9f71-01ce4f20d726","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:769","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[92,46,47,49,51,53,93,94],"tindex":"1670d664-82c5-11e5-9f71-ddabdc9edc54","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"variableMap":{"output":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:208","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[],"tindex":"1670d665-82c5-11e5-9f71-e1a0d7163b60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:330","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"16703a14-82c5-11e5-9f71-d71f88a290b3","diffs":[{"methodsDiff":{"delete":["java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put"]},"type":"staticDiff"}]}]}