{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":20,"com.graphhopper.routing.PathTest.testFindInstruction":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":68,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":23,"com.graphhopper.routing.QueryGraphTest.testOneWay":26,"com.graphhopper.util.DistanceCalcEarthTest.testCalcCircumference":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":47,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":2,"com.graphhopper.routing.PathTest.testWayList":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":59,"com.graphhopper.util.BitUtilBigTest.testFromBitString":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":21,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":60,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":9,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":33,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.util.SimpleIntDequeTest.testPush":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.util.InstructionListTest.testWayList2":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":66,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":24,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":25,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":63,"com.graphhopper.util.InstructionListTest.testWayList":57,"com.graphhopper.util.InstructionListTest.testCreateGPX":16,"com.graphhopper.util.shapes.BBoxTest.testCreate":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":56,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":8,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":62,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":50,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":4,"com.graphhopper.util.BitUtilLittleTest.testToShort":6,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":48,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":65,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":49,"com.graphhopper.util.InstructionListTest.testFind":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":71,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":35},"transformations":[{"failures":[0],"tindex":"8d3c483e-8284-11e5-a347-5bdb78c5e328","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"nextRelBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:201","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"8d3c6f4f-8284-11e5-a347-f5e71b0805d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][int]) & 255) << 8) | ((byte[][(int + 1)]) & 255)))"},"variableMap":{"b":"b","offset":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][(int + 1)]) & 255) << 8) | ((byte[][int]) & 255)))"},"status":-1},{"failures":[7],"tindex":"8d3c6f50-8284-11e5-a347-f164a671e449","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-1},{"failures":[],"tindex":"8d3c6f51-8284-11e5-a347-d353b6ec9c6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:172","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess.getType().isStoring())\n    com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)));\n"},"status":0},{"failures":[8,9,10,11,12,13,14,15],"tindex":"8d3c6f52-8284-11e5-a347-3f18a6f3e146","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:644","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:89","type":"CtReturnImpl","sourcecode":"return ((2 * (java.lang.Math.double)) * (com.graphhopper.util.DistanceCalcEarth.double)) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double)))"},"status":-1},{"failures":[],"tindex":"8d3c6f53-8284-11e5-a347-93e266bee0b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:158","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[int][]"},"variableMap":{"segmentCount":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][]"},"status":-2},{"failures":[],"tindex":"8d3c9664-8284-11e5-a347-55b1287201f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:240","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(\"tmp.lock\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"status":-2},{"failures":[16,17],"tindex":"8d3c9665-8284-11e5-a347-a3d31466f7c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1))"},"variableMap":{"output":"output","instruction":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat()))"},"status":-1},{"failures":[],"tindex":"8d3c9666-8284-11e5-a347-0bcc6cd8113a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:366","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.setSegmentSize(int)"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"8d3c9667-8284-11e5-a347-31b6a5a25b1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:680","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(10)"},"variableMap":{"existingIter":"virtEdgeIter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:622","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.put(int, com.graphhopper.routing.VirtualEdgeIterator)"},"status":-1},{"failures":[],"tindex":"8d3c9668-8284-11e5-a347-c1afecedeb9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8d3cbd79-8284-11e5-a347-6f3fd8a54817","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"lat","angle":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:66","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[45],"tindex":"8d3cbd7a-8284-11e5-a347-c19f5d3d4ef3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:82","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], 0, int)"},"status":-1},{"failures":[],"tindex":"8d3cbd7b-8284-11e5-a347-ebeaa82116d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[46],"tindex":"8d3cbd7c-8284-11e5-a347-adc678b9b072","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"strLen","length":"charI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,17],"tindex":"8d3cbd7d-8284-11e5-a347-356d2823a5f4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"roundaboutBit","tmpValue":"roundaboutBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:185","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"8d3cbd7e-8284-11e5-a347-8b2fc3da95b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"status":0},{"failures":[],"tindex":"8d3ce48f-8284-11e5-a347-8d87cdac2308","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:151","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 42"},"status":0},{"failures":[],"tindex":"8d3ce490-8284-11e5-a347-7f4405ad0111","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:192","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.abs(com.graphhopper.reader.dem.SRTMProvider.down(double))"},"variableMap":{"this":"this","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:222","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(double, double)"},"status":0},{"failures":[59,60,61,62,63,31,64,65,32,66,67,68,69,70,71],"tindex":"8d3ce491-8284-11e5-a347-1b5431eb47ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n} else {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8d3ce490-8284-11e5-a347-7f4405ad0111","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.dem.SRTMProvider.calcIntKey"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":["com.graphhopper.reader.dem.SRTMProvider_int_calcIntKey(double,double).b"]},"type":"branch"}]},{"transformation":"8d3c6f51-8284-11e5-a347-d353b6ec9c6c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.removeDir"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1"]},"type":"branch"}]},{"transformation":"8d3cbd7e-8284-11e5-a347-8b2fc3da95b0","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).b"],"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":["com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_void_postImportHook().l4"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.TranslationMap.postImportHook"]},"type":"staticDiff"}]}]}