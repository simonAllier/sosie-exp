{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":69,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":57,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":7,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":82,"com.graphhopper.coll.OSMIDMapTest.testGet2":72,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":48,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":54,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":79,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":53,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":80,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":55,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":86,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":76,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":84,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":75,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":40,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":38,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":49,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":85,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":24,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":70,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":3,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":41,"com.graphhopper.coll.OSMIDMapTest.testGet":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":0,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":33,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":73,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":45,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":64,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":2,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":44,"com.graphhopper.reader.OSMReaderTest.testSort":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":52},"transformations":[{"failures":[],"tindex":"b952630a-828a-11e5-aa0b-25b7006851d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:141","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"name","_default":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"b952b12b-828a-11e5-aa0b-a7676609da71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:681","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"b952b12c-828a-11e5-aa0b-63265a1798e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"priorityWayEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,26,27,28,29,30],"tindex":"b952b12d-828a-11e5-aa0b-2bf8090722be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.readNodes(javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[31,32,33,34,35,36],"tindex":"b952b12e-828a-11e5-aa0b-2f11ef814fcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(((2 * (com.graphhopper.reader.dem.CGIARProvider.int)) * (com.graphhopper.reader.dem.CGIARProvider.int)))"},"variableMap":{"com.graphhopper.reader.dem.CGIARProvider.WIDTH":"latSize","heights":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((((int) * (int)) * 4))"},"status":-1},{"failures":[],"tindex":"b952d83f-828a-11e5-aa0b-01da758b2428","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromDouble(byte[], double, 0)"},"status":-2},{"failures":[],"tindex":"b952d840-828a-11e5-aa0b-6d0508e4636a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:52","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:924","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest, com.graphhopper.GHResponse)"},"status":-2},{"failures":[],"tindex":"b952d841-828a-11e5-aa0b-d1cfdfb9653a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"periodTime","angle":"periodTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:290","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[8,9,10,11,12,13,15,37],"tindex":"b952ff52-828a-11e5-aa0b-67a7a8034667","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:59","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n    if (com.graphhopper.util.PointList.isEmpty()) {\n        com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n        com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n    } \n    for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n        if (boolean) {\n            int += com.graphhopper.util.Instruction.getPoints().size();\n            com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n        } \n        com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n        com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n    }\n    if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n        com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n        com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n        com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n    } \n} "},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"b952ff53-828a-11e5-aa0b-f7eab802c945","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"itemsToMove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:697","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (int == (com.graphhopper.storage.EdgeAccess.int))\n            continue;\n        \n        if (com.graphhopper.coll.GHBitSet.contains(int))\n            throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n        \n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"b9532664-828a-11e5-aa0b-f5282535ec1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"deltaLon","azimuth":"deltaLon","java.lang.Math.PI":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:654","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"b9532665-828a-11e5-aa0b-e52d76afa3c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:869","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:71","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,26,27,28,29,30],"tindex":"b9532666-828a-11e5-aa0b-0b2c30c7a92d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"id","indexDivisor":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:657","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, int)"},"status":-1},{"failures":[],"tindex":"b9532667-828a-11e5-aa0b-8112dcdded92","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"allSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[],"tindex":"b9534d78-828a-11e5-aa0b-79c22d0c943e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[71,72,73,74],"tindex":"b9534d79-828a-11e5-aa0b-7988e00e7c43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"variableMap":{"cap":"start","bytes":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,2,83,84,85,86,87],"tindex":"b9534d7a-828a-11e5-aa0b-6f01e52394a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"highway","location":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:733","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b9534d7b-828a-11e5-aa0b-13c548852f1b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:284","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"variableMap":{"eIter":"eIter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:283","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"b953748c-828a-11e5-aa0b-0d23378d128a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b9532667-828a-11e5-aa0b-8112dcdded92","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"]},"type":"branch"}]},{"transformation":"b952d841-828a-11e5-aa0b-d1cfdfb9653a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}