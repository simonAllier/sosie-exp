{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":55,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":56,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":9,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":134,"com.graphhopper.reader.OSMReaderTest.testWithBounds":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":38,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":107,"com.graphhopper.GraphHopperTest.testPrepare":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":112,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":59,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":94,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":135,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":51,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":177,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":108,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":194,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":165,"com.graphhopper.GraphHopperTest.testLoadOSM":197,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":67,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":124,"com.graphhopper.reader.OSMReaderTest.testSort":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":77,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":182,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":151,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":50,"com.graphhopper.util.GHUtilityTest.testSort":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":64,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":199,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.reader.OSMReaderTest.testBarriers":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":102,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.util.GHUtilityTest.testCopy":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":129,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":159,"com.graphhopper.reader.PrinctonReaderTest.testRead":183,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":70,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":80,"com.graphhopper.util.InstructionListTest.testWayList2":61,"com.graphhopper.reader.OSMReaderTest.testFoot":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":105,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":101,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":131,"com.graphhopper.reader.OSMReaderTest.testOneWay":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":72,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":127,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":99,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":117,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":37,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":171,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":187,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":186,"com.graphhopper.util.GHUtilityTest.testSort2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":27,"com.graphhopper.reader.OSMReaderTest.testMain":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":145,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":78,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.storage.GraphHopperStorageTest.testClone":115,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":87,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":128,"com.graphhopper.GraphHopperTest.testFootAndCar":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":74,"com.graphhopper.GraphHopperTest.testVia":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":139,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":142,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":149},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"5624c06c-7928-11e5-880c-e95f47a0da44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((0 * 4), int)"},"variableMap":{"shortcutCount":"edge","shortcuts":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-1},{"failures":[],"tindex":"5624e77d-7928-11e5-880c-dd5d4d03eb95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CmdArgs.merge(com.graphhopper.util.CmdArgs)"},"variableMap":{"args":"properties","tmp":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[],"tindex":"5624e77e-7928-11e5-880c-fd9cf4e1525d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"graphIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:870","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.reader.OSMNode = new com.graphhopper.reader.OSMNode(com.graphhopper.reader.OSMReader.createNewNodeId() , com.graphhopper.storage.NodeAccess , int);\n} else {\n    int = int - 3;\n    com.graphhopper.reader.OSMNode = new com.graphhopper.reader.OSMNode(com.graphhopper.reader.OSMReader.createNewNodeId() , com.graphhopper.reader.PillarInfo , int);\n}"},"status":-2},{"failures":[],"tindex":"56250e8f-7928-11e5-880c-bbbb195837e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:211","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"variableMap":{"type":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:105","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, long, true)"},"status":-2},{"failures":[],"tindex":"56250e90-7928-11e5-880c-9f6ddcfff450","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"56250e91-7928-11e5-880c-0b611af0524d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:169","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * (int - double))"},"variableMap":{"gradient":"minLat","y1":"latDelta","x1":"minLat","xend":"lonUnits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:103","type":"CtLocalVariableImpl","sourcecode":"double double = ((long / (int)) * (double)) + (com.graphhopper.util.shapes.BBox.double)"},"status":-2},{"failures":[],"tindex":"56250e92-7928-11e5-880c-3ffbd19d21ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"variableMap":{"nodes":"entries","size":"depth","length":"depth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:591","type":"CtIfImpl","sourcecode":"if (int == (int[].int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    if (int < 0) {\n        com.graphhopper.storage.index.TIntHashSet.add(-(int + 1));\n    } else {\n        long long = ((long)(int)) * 4;\n        for (long long = long + 4 ; long < long ; long += 4) {\n            com.graphhopper.storage.index.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n        }\n    }\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"56250e93-7928-11e5-880c-65824479f197","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"graphIndex","guess":"graphIndex","low":"graphIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:872","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2},{"failures":[],"tindex":"56250e94-7928-11e5-880c-53cba755e0b3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:83","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.util.zip.GZIPInputStream(java.io.InputStream)"},"variableMap":{"is":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:281","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.FileInputStream(java.io.File)"},"status":-2},{"failures":[],"tindex":"562535a5-7928-11e5-880c-5b0562a52c79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:184","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getEle(int)"},"variableMap":{"i":"i","list":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:181","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.util.Instruction.getFirstLon() : com.graphhopper.util.PointList.getLongitude((int + 1))"},"status":-2},{"failures":[],"tindex":"562535a6-7928-11e5-880c-17e98fd0d0a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"status":-2},{"failures":[],"tindex":"562535a7-7928-11e5-880c-2f94d9e6d6e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"ref","retBucket":"ref","i":"ref","bucketSize":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:67","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"562535a8-7928-11e5-880c-0f85c5f9bad0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"wayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:94","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"562535a9-7928-11e5-880c-55c3a35c9ac4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"status":-2},{"failures":[],"tindex":"562535aa-7928-11e5-880c-11a81920162e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:245","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"variableMap":{"points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:134","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"562535ab-7928-11e5-880c-0518a101bdb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"56255cbc-7928-11e5-880c-0dcb9ff4ab40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:219","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"56255cbd-7928-11e5-880c-eb40d147cdb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[],"tindex":"56255cbe-7928-11e5-880c-cd1f3fae6d23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"swapIndex","weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:249","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-2},{"failures":[],"tindex":"56255cbf-7928-11e5-880c-15e96d6cd528","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:171","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}