{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":138,"com.graphhopper.reader.OSMReaderTest.testFerry":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":38,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":120,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":180,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":164,"com.graphhopper.reader.OSMReaderTest.testWithBounds":81,"com.graphhopper.storage.MMapDataAccessTest.testSegments":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":158,"com.graphhopper.reader.PrinctonReaderTest.testRead":185,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":125,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":117,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":12,"com.graphhopper.reader.OSMReaderTest.testFoot":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":32,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":33,"com.graphhopper.reader.OSMReaderTest.testOneWay":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.GraphHopperAPITest.testDisconnected179":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":127,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":178,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":23,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":102,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":26,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":168,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":75,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":186,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":151,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":118,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":52,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":119,"com.graphhopper.GraphHopperTest.testLoadOSM":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":27,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":49,"com.graphhopper.reader.OSMReaderTest.testSort":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":48,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":129,"com.graphhopper.reader.OSMReaderTest.testMain":72,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":15,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":84,"com.graphhopper.storage.MMapDataAccessTest.testHeader":87,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":4,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":8,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":113,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":28,"com.graphhopper.storage.GraphHopperStorageTest.testClone":171,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":182,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":136,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":137,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.GraphHopperTest.testFootAndCar":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":166,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":170,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":156,"com.graphhopper.GraphHopperTest.testPrepareOnly":46,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":122,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":139,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":17,"com.graphhopper.GraphHopperAPITest.testLoad":68,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":96,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":44,"com.graphhopper.GraphHopperTest.testFootOnly":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":11,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":13,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":145,"com.graphhopper.reader.OSMReaderTest.testBarriers":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":130,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":124},"transformations":[{"failures":[],"tindex":"20addf49-8292-11e5-bed6-e529baf1d36f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:55","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"size":"nodes","fromHeap":"openSetFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:62","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0},{"failures":[],"tindex":"20ae065a-8292-11e5-bed6-6f1e9213501e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:221","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:99","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"20ae065b-8292-11e5-bed6-7b62ff3c4b3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"20ae2d6c-8292-11e5-bed6-c71dc902a78f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:283","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"))"},"status":-2},{"failures":[84,0,85,86,87,88,89,90,41,91,43,92],"tindex":"20ae2d6d-8292-11e5-bed6-f7aa40d79428","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-1},{"failures":[93,94,95,84,96,97,98,99,100,101,102,103,104,65,66,105,67,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"20ae7b8e-8292-11e5-bed6-17804c5e6226","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"S_SKIP_EDGE2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[],"tindex":"20ae7b8f-8292-11e5-bed6-ddffa2bc6d49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:79","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return new com.graphhopper.util.shapes.BBox(java.lang.Double.double , -(java.lang.Double.double) , java.lang.Double.double , -(java.lang.Double.double) , java.lang.Double.double , -(java.lang.Double.double) , true);\n} else {\n    return new com.graphhopper.util.shapes.BBox(java.lang.Double.double , -(java.lang.Double.double) , java.lang.Double.double , -(java.lang.Double.double) , java.lang.Double.double , java.lang.Double.double , false);\n}"},"status":-2},{"failures":[18,36,120,121,122],"tindex":"20ae7b90-8292-11e5-bed6-db1856b0ef2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":-1},{"failures":[3,4,5,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,25,26,27,28,29,31,32,33,34,35,36,37,39,40,47,48,49,50,51,52,54,55,56,57,58,59,61,62,64,65,66,67,68,72,73,74],"tindex":"20aea2a1-8292-11e5-bed6-3dac78701444","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:235","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.prepare()"},"status":-1},{"failures":[93,84,97,0,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,41,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,43,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,111,119,184,72,78,81,83,185,186],"tindex":"20aea2a2-8292-11e5-bed6-9912c7c484dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"20aea2a3-8292-11e5-bed6-3513f879eb7d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"directionBitMask","blockByDefault":"locked"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:245","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"20aec9b4-8292-11e5-bed6-b7e016baf5fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"searchIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:113","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        int = int;\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"20aec9b5-8292-11e5-bed6-1ff3e0e3537a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"status":-2},{"failures":[],"tindex":"20aec9b6-8292-11e5-bed6-955975c2b6f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"variableMap":{"tmpNode":"originalTraversalKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:60","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"20aec9b7-8292-11e5-bed6-efc1e1521ed1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:560","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)"},"status":0},{"failures":[],"tindex":"20aef0c8-8292-11e5-bed6-bb054ed8c9ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:830","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[187],"tindex":"20aef0c9-8292-11e5-bed6-1571a58b57c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:69","type":"CtIfImpl","sourcecode":"if (long > (long))\n    throw new java.lang.IllegalArgumentException((((((java.lang.String) + \" value too large for encoding: \") + long) + \", maxValue:\") + (long)));\n"},"variableMap":{"maxValue":"encoded","name":"sacScale","value":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-1},{"failures":[],"tindex":"20aef0ca-8292-11e5-bed6-2b4990aa2149","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[188,189,190],"tindex":"20aef0cb-8292-11e5-bed6-edb03f109c0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:371","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"20aef0cc-8292-11e5-bed6-014f6aa3034e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > (java.lang.Math.double))\n    double -= 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"turnCosts","angleXY":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:79","type":"CtIfImpl","sourcecode":"if (boolean)\n    double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int);\nelse\n    double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int);\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"20aec9b7-8292-11e5-bed6-efc1e1521ed1","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setElevationProvider(com.graphhopper.reader.dem.ElevationProvider).b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setElevation(boolean).b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setElevationProvider(com.graphhopper.reader.dem.ElevationProvider).t1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.setElevationProvider"]},"type":"staticDiff"}]}]}