{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":17,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":67,"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":58,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":14,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":55,"com.graphhopper.reader.OSMReaderTest.testWithBounds":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":42,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":56,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":28,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":47,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":45,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":41,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":33,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":38,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":18,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":64,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":46,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":34,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":15,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":66,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":30,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":29,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":48,"com.graphhopper.reader.OSMReaderTest.testSort":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":51},"transformations":[{"failures":[0],"tindex":"7d60b8a6-793b-11e5-aae9-1fd68ec1b4c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:182","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"variableMap":{"shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","backwardBit":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:243","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"7d60dfb7-793b-11e5-aae9-8fc03292649c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"valueIfKeyNotFound"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"7d6106c8-793b-11e5-aae9-cb67c7248b3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.getNodes()"},"status":-1},{"failures":[70],"tindex":"7d6106c9-793b-11e5-aae9-b9a188f08584","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:189","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"));\n    if ((double > 0) && (double < double))\n        double = double * 0.9;\n    \n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(0, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n            long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n            long |= long;\n        } else {\n            long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n            long |= long;\n        }\n    } else {\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n        long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n        long |= long;\n    }\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"7d612dda-793b-11e5-aae9-91d51f370bf4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"7d612ddb-793b-11e5-aae9-4dde47468b79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"7d612ddc-793b-11e5-aae9-dba43830dc36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"edgeToRemovePointer","len":"edgeToRemovePointer","start":"edgeToRemovePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:228","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7d612ddd-793b-11e5-aae9-31f3e3b4b11f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:756","type":"CtIfImpl","sourcecode":"if ((int < int) != (int < int))\n    com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false);\n"},"variableMap":{"edgePointer":"edgePointer","updatedB":"E_GEO","nodeB":"E_GEO","updatedA":"length","this":"this","nodeA":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2},{"failures":[],"tindex":"7d6154ee-793b-11e5-aae9-e96016ea17d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"7d6154ef-793b-11e5-aae9-b7aa87518d3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:126","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"7d6154f0-793b-11e5-aae9-3b14b9760f60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"variableMap":{"dist":"b_lat_deg","com.graphhopper.util.DistanceCalcEarth.R":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:222","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[],"tindex":"7d617b01-793b-11e5-aae9-29bede47eec6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:79","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"7d617b02-793b-11e5-aae9-85437fcc3e4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = null"},"variableMap":{"currentWriter":"currentWriter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)))"},"status":-2},{"failures":[],"tindex":"7d617b03-793b-11e5-aae9-c9add2c7e117","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:115","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7))"},"variableMap":{"line":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:111","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3))"},"status":-2},{"failures":[],"tindex":"7d617b04-793b-11e5-aae9-99a85e48c584","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"firstLon","toHeight":"firstLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"7d61a215-793b-11e5-aae9-c7a766f2d6b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"status":-2},{"failures":[],"tindex":"7d61a216-793b-11e5-aae9-7579dbe43e07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntIntBinHeap.insert_(java.lang.Number.intValue(), java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"7d61a217-793b-11e5-aae9-a9aeb9d54490","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"7d61a218-793b-11e5-aae9-d72dde59d390","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:142","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"status":-2},{"failures":[],"tindex":"7d61a219-793b-11e5-aae9-7ff1a8ba1308","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:209","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.InstructionList = com.graphhopper.util.InstructionList"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}