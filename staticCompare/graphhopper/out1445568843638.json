{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":41,"com.graphhopper.reader.OSMReaderTest.testFerry":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":56,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":4,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":28,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":42,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":21,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":40,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":8,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":54,"com.graphhopper.reader.OSMReaderTest.testSort":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":31},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"51c1025c-7931-11e5-b794-579c33c89b0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:104","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"variableMap":{"name":"specificBicycleClass"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:564","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(java.lang.String)"},"status":-1},{"failures":[],"tindex":"51c1296d-7931-11e5-b794-8fe9f497a94a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile)"},"status":-2},{"failures":[],"tindex":"51c1296e-7931-11e5-b794-85da7a01d4e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:269","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-2},{"failures":[],"tindex":"51c1296f-7931-11e5-b794-4fe5b94d16cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":-2},{"failures":[],"tindex":"51c15080-7931-11e5-b794-e7f48787df63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:541","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long)(((int + int) + 1))) * 4))"},"variableMap":{"intIndex":"length","dataAccess":"names","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long) + 1) + (byte[].int)))"},"status":-2},{"failures":[],"tindex":"51c15081-7931-11e5-b794-3dd05b9b889f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:355","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + (com.graphhopper.storage.CHGraphImpl.toDetailsString())"},"status":-2},{"failures":[],"tindex":"51c15082-7931-11e5-b794-137297a6ca03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:401","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((long[][int]) < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"51c15083-7931-11e5-b794-17bb4a17f67b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"51c17794-7931-11e5-b794-cdb3316c051e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:183","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.TIntArrayList.size()"},"status":-2},{"failures":[],"tindex":"51c17795-7931-11e5-b794-d18b1e351f4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:79","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(long >> 24))"},"status":-2},{"failures":[],"tindex":"51c17796-7931-11e5-b794-3988fb163379","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"wayGeometry","da":"wayGeometry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:419","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"51c17797-7931-11e5-b794-033fb9c57143","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"51c17798-7931-11e5-b794-b796c36235d5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:570","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"variableMap":{"edgeId":"i","virtualEdges":"virtualEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-2},{"failures":[],"tindex":"51c19ea9-7931-11e5-b794-e7b0488ea184","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"pavementName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:431","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[],"tindex":"51c19eaa-7931-11e5-b794-957b76ac5c58","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:149","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"point cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-2},{"failures":[],"tindex":"51c19eab-7931-11e5-b794-8f73d1075b25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"finishedFrom","hasRel":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:181","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"status":-2},{"failures":[],"tindex":"51c19eac-7931-11e5-b794-7f2cdcd735b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"originalEdges","length":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:697","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"51c19ead-7931-11e5-b794-eb0d37ec6d8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:525","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"51c19eae-7931-11e5-b794-41832a8296ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"i","NO_TURN_ENTRY":"bucketSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:121","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"51c1c5bf-7931-11e5-b794-bbae37847f3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"s","nodeThis":"s","edgeId":"s","nodeOther":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:185","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}