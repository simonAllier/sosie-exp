{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":192,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":193,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.reader.OSMReaderTest.testWithBounds":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":130,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":154,"com.graphhopper.GraphHopperTest.testPrepare":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":76,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":132,"com.graphhopper.search.NameIndexTest.testFlush":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":60,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":12,"com.graphhopper.util.InstructionListTest.testWayList":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":69,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":145,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":29,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":190,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":39,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":181,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":155,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":172,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":56,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":133,"com.graphhopper.reader.OSMReaderTest.testSort":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":38,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":51,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":121,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":22,"com.graphhopper.routing.PathTest.testWayList":26,"com.graphhopper.storage.MMapDataAccessTest.testCopy":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":101,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":146,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":63,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":32,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":90,"com.graphhopper.GraphHopperAPITest.testLoad":175,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":34,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":83,"com.graphhopper.reader.OSMReaderTest.testBarriers":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":151,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":143,"com.graphhopper.util.GHUtilityTest.testCopy":191,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.routing.PathTest.testFindInstruction":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":84,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":147,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":68,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":136,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.reader.PrinctonReaderTest.testRead":189,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":110,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":115,"com.graphhopper.util.InstructionListTest.testWayList2":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":201,"com.graphhopper.reader.OSMReaderTest.testFoot":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":150,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":138,"com.graphhopper.reader.OSMReaderTest.testOneWay":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":205,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":149,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":180,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":211,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":116,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":212,"com.graphhopper.routing.PathBidirRefTest.testExtract":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":169,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":42,"com.graphhopper.storage.RAMDataAccessTest.testCopy":215,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":164,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":168,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":167,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":74,"com.graphhopper.reader.OSMReaderTest.testMain":177,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":119,"com.graphhopper.routing.PathBidirRefTest.testExtract2":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":158,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":114,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":182,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":93,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":213,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":50,"com.graphhopper.storage.GraphHopperStorageTest.testClone":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":120,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":17,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":2,"com.graphhopper.GraphHopperTest.testFootAndCar":173,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":103,"com.graphhopper.util.InstructionListTest.testCreateGPX":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":85,"com.graphhopper.GraphHopperTest.testPrepareOnly":163,"com.graphhopper.GraphHopperTest.testVia":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":70,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":203,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":14,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":102,"com.graphhopper.GraphHopperTest.testFootOnly":174,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":157,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":24,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":112,"com.graphhopper.util.InstructionListTest.testFind":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":106},"transformations":[{"failures":[0,1,2],"tindex":"bf049905-828c-11e5-86b8-e57c850abec7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:170","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int)"},"status":-1},{"failures":[3,4,5,6,7,8,9],"tindex":"bf04c016-828c-11e5-86b8-57776afb0161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:737","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":-1},{"failures":[],"tindex":"bf04e727-828c-11e5-86b8-cdbd4054566a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"variableMap":{"byteCount":"doubleSize","this":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 8))"},"status":-2},{"failures":[10,5,11,12,13,14,15],"tindex":"bf04e728-828c-11e5-86b8-8f6b597221bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:422","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"status":-1},{"failures":[16,17,18],"tindex":"bf04e729-828c-11e5-86b8-095e09fc5043","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:186","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[19],"tindex":"bf04e72a-828c-11e5-86b8-43c6bd90e3c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:73","type":"CtAssignmentImpl","sourcecode":"long[] = java.util.Arrays.copyOf(long[], int)"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,3,170,171,172,173,4,5,6,7,174,8,175,18,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"bf050e3b-828c-11e5-86b8-457273635a16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:71","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"variableMap":{"key":"longValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:268","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[201,202],"tindex":"bf050e3c-828c-11e5-86b8-bdd268a7e275","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"variableMap":{"intLow":"code","intHigh":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-1},{"failures":[],"tindex":"bf05354d-828c-11e5-86b8-4f0679e743a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:230","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getRemovedNodes().getCardinality()"},"status":-2},{"failures":[],"tindex":"bf05354e-828c-11e5-86b8-e338608614d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"bf05354f-828c-11e5-86b8-c7aecd4a8f81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize())"},"variableMap":{"pointList":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-2},{"failures":[203,204,199],"tindex":"bf055c60-828c-11e5-86b8-cd26e553210b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime())))).append(\"<\/time>\")"},"status":-1},{"failures":[],"tindex":"bf055c61-828c-11e5-86b8-3b066e20a1aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"zeroCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":0},{"failures":[205,206,207,208,209],"tindex":"bf055c62-828c-11e5-86b8-13ba8d786d21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"to","guess":"to","low":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:254","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[],"tindex":"bf055c63-828c-11e5-86b8-79ef3cd633ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[210],"tindex":"bf058374-828c-11e5-86b8-4fefccd823e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"flags","highKey":"defaultValue","key":"defaultValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[211,212,213,214,215],"tindex":"bf058375-828c-11e5-86b8-f1837a0f6c01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"h"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int))"},"status":-1},{"failures":[216],"tindex":"bf058376-828c-11e5-86b8-7980eb6e85c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"To support speed calculation based on elevation data it is necessary to enable import of it.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[172,178],"tindex":"bf058377-828c-11e5-86b8-b7c5234e181e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:182","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"closed":"sortGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:841","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((com.graphhopper.storage.GraphHopperStorage.isCHPossible()) && com.graphhopper.GraphHopper.(isPrepared()))\n        throw new java.lang.IllegalArgumentException(\"Sorting a prepared CHGraph is not possible yet. See #12\");\n    \n    com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.storage.GraphHopperStorage, com.graphhopper.storage.GraphHopperStorage);\n    org.slf4j.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n    com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage;\n} "},"status":-1},{"failures":[],"tindex":"bf05aa88-828c-11e5-86b8-17d1c74af0b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"firstLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bf055c61-828c-11e5-86b8-3b066e20a1aa","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}