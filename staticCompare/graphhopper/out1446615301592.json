{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":26,"com.graphhopper.routing.PathTest.testFindInstruction":3,"com.graphhopper.reader.OSMReaderTest.testFerry":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":99,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":25,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.reader.OSMReaderTest.testWithBounds":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":37,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":18,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":41,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":93,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":74,"com.graphhopper.reader.OSMReaderTest.testFoot":117,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":28,"com.graphhopper.reader.OSMReaderTest.testOneWay":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":85,"com.graphhopper.GraphHopperAPITest.testDisconnected179":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":109,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":88,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":87,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":105,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":70,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":0,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":45,"com.graphhopper.reader.OSMReaderTest.testSort":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":104,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":95,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":73,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":5,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":91,"com.graphhopper.GraphHopperTest.testPrepareOnly":112,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":107,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":17,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":71,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":20,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":121,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":82,"com.graphhopper.util.InstructionListTest.testFind":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":89},"transformations":[{"failures":[0],"tindex":"cb4d7256-82b5-11e5-a08d-13daa3fe2182","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:289","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"cb4d9967-82b5-11e5-a08d-f3aa9ed2ccd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"cb4dc078-82b5-11e5-a08d-c9accea3ba03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:230","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[1],"tindex":"cb4dc079-82b5-11e5-a08d-f1cdc25811fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:190","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"cb4dc07a-82b5-11e5-a08d-27ecd9bef60e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:237","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"variableMap":{"logSize":"bytePointer","java.lang.Integer.MAX_VALUE":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:89","type":"CtOperatorAssignmentImpl","sourcecode":"long += byte[].int"},"status":-2},{"failures":[],"tindex":"cb4dc07b-82b5-11e5-a08d-89405b8cf7cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"weightLong"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"status":-2},{"failures":[],"tindex":"cb4de78c-82b5-11e5-a08d-95034148ecf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:135","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[],"tindex":"cb4de78d-82b5-11e5-a08d-07c85b909bde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:140","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"filled quadtree index array in \" + float) + \"s. size is \") + com.graphhopper.storage.index.Location2IDQuadtree.(getCapacity())) + \" (\") + int) + \"). filled empty \") + int) + \" in \") + float) + \"s\"))"},"status":0},{"failures":[],"tindex":"cb4de78e-82b5-11e5-a08d-91395f5df44c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"iteration","green":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n"},"status":0},{"failures":[2,3],"tindex":"cb4de78f-82b5-11e5-a08d-8f9cc1b43e69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:322","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"cb4e0ea0-82b5-11e5-a08d-d33243724be2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:250","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100.0) * (int)))"},"status":-2},{"failures":[4,5,6,7],"tindex":"cb4e0ea1-82b5-11e5-a08d-d7f887689fb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:85","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.poll_element()"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"cb4e0ea2-82b5-11e5-a08d-174381680b23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"parts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:176","type":"CtOperatorAssignmentImpl","sourcecode":"long *= int[][int]"},"status":-1},{"failures":[33,34,35,36],"tindex":"cb4e0ea3-82b5-11e5-a08d-93ee96a63791","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:588","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[37,38,39,40,41,42,43,44],"tindex":"cb4e0ea4-82b5-11e5-a08d-fb0045d6f996","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:209","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"variableMap":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:240","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n        return long;\n    \n    return 0;\n} "},"status":-1},{"failures":[33,34,35,45,46,47,8,9,10,11,12,13,14,15,16,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,29,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"cb4e35b5-82b5-11e5-a08d-e36f09ab1cc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"ee","edgeEntry":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"cb4e35b6-82b5-11e5-a08d-1582e996f0c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:252","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long >>>= 1) {\n    long <<= 1;\n    long |= long & 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"capacity","maxBits":"remainingSegments","value":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:327","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"status":-1},{"failures":[32,107],"tindex":"cb4e5cc7-82b5-11e5-a08d-4bb180246fee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:355","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = new long[int]"},"variableMap":{"n":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:426","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = gnu.trove.list.TLongList.toArray(int, (int - int))"},"status":-1},{"failures":[103,108,109,110],"tindex":"cb4e5cc8-82b5-11e5-a08d-33a1450ffa11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:81","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[111,112,33,34,35,45,46,47,113,8,9,10,11,12,13,114,14,15,115,16,48,116,117,30,31,32,118,119,120,121,107,122,123,124,106],"tindex":"cb4e5cc9-82b5-11e5-a08d-81533b9b61e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1087","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareIndex()"},"variableMap":{"tmpIndex":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1082","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setResolution(int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cb4de78d-82b5-11e5-a08d-07c85b909bde","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.Location2IDQuadtree.getCapacity","org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}