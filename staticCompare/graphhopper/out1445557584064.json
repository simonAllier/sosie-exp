{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1a8572b3-7917-11e5-8a81-d9570ddf1b7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            TLongList TLongList = new TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            com.graphhopper.reader.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"1a8599c4-7917-11e5-8a81-ad74ef6d9e18","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:600","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-2},{"failures":[],"tindex":"1a8599c5-7917-11e5-8a81-ff6b28cf521e","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:225","type":"CtIfImpl","sourcecode":"if (java.util.Locale != null)\n    this.java.util.Locale = java.util.Locale;\n"},"variableMap":{"locale":"locale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":-2},{"failures":[],"tindex":"1a8599c6-7917-11e5-8a81-41688221d136","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1)).append(\"<\/gh:distance>\")"},"status":-2},{"failures":[],"tindex":"1a8599c7-7917-11e5-8a81-d14569fafeb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:351","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n}"},"status":-2},{"failures":[],"tindex":"1a8599c8-7917-11e5-8a81-93845ed1eb0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"x1","shrinkFactor":"gridCellWidth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:57","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.frac((double / double))"},"status":-2},{"failures":[],"tindex":"1a85c0d9-7917-11e5-8a81-99630ee0a457","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"unvisitedDeadEnds","edgeId":"unvisitedDeadEnds","nextEdgeId":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:75","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter = new com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter(com.graphhopper.routing.util.FlagEncoder);\n    if ((int) > 0)\n        int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    \n    java.util.List<com.graphhopper.routing.util.TIntArrayList> java.util.List<com.graphhopper.routing.util.TIntArrayList> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter, java.util.List<com.graphhopper.routing.util.TIntArrayList>);\n    int = java.lang.Math.max(java.util.List<com.graphhopper.routing.util.TIntArrayList>.size(), int);\n}"},"status":-2},{"failures":[],"tindex":"1a85c0da-7917-11e5-8a81-1b923a81304b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"variableMap":{"storedKey":"capacity","key":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:419","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"1a85c0db-7917-11e5-8a81-81d7b329957b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:687","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"1a85c0dc-7917-11e5-8a81-e1e6e1a20ecf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:53","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = double > 0 ? 1 : -1;\n} else {\n    int int = double > 0 ? 1 : -1;\n    if ((int) != int) {\n        int = 2;\n    } \n}"},"status":-2},{"failures":[],"tindex":"1a85c0dd-7917-11e5-8a81-6517bb66618e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"lastInBoundsPillarNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:693","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"1a85c0de-7917-11e5-8a81-3522d24d2c12","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:163","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 56"},"status":-2},{"failures":[],"tindex":"1a85e7ef-7917-11e5-8a81-cf76f30cb2fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"1a85e7f0-7917-11e5-8a81-37ed76767753","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:189","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    int int = ((int)(com.graphhopper.geohash.KeyAlgo.encode(double, double)));\n    long long = ((long)(int)) * 4;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        int int = com.graphhopper.storage.DataAccess.getInt(long);\n        com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        if (double < double) {\n            com.graphhopper.storage.DataAccess.setInt(long, int);\n        } \n    } else {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"1a85e7f1-7917-11e5-8a81-7d673719365b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:310","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.close();\n}"},"status":-2},{"failures":[],"tindex":"1a860f02-7917-11e5-8a81-dfb6f936f56d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:672","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (com.graphhopper.reader.TLongList.size()) ; int++) {\n        long long = com.graphhopper.reader.TLongList.get(int);\n        int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int)) {\n            if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n                int = int;\n                int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n                int = (-int) - 3;\n                if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                    com.graphhopper.util.PointList.clear();\n                    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n                } \n                int = int;\n                int = -1;\n            } \n            continue;\n        } \n        if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n            throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n        \n        if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n            boolean boolean = (int == 0) || (int == int);\n            if (!boolean) {\n                int = int;\n            } \n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n        } \n        if (int < (com.graphhopper.reader.OSMReader.int)) {\n            int = (-int) - 3;\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            if (int >= 0) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n        } \n    }\n} catch (java.lang.RuntimeException ex) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.error((\"Couldn\\'t properly add edge with osm ids:\" + com.graphhopper.reader.TLongList), java.lang.RuntimeException);\n    if (boolean)\n        throw java.lang.RuntimeException;\n    \n}"},"status":-2},{"failures":[],"tindex":"1a863613-7917-11e5-8a81-71c2f46f8120","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:177","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess._getLinkPosInEdgeArea(int, int, long)"},"status":-2},{"failures":[],"tindex":"1a863614-7917-11e5-8a81-31df2cc17d85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.ViaInstruction:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setTime(com.graphhopper.util.Instruction.getTime())"},"variableMap":{"instr":"instr","this":"instr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:53","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.Instruction>.set(((java.util.List<com.graphhopper.util.Instruction>.size()) - 1), com.graphhopper.util.Instruction)"},"status":-2},{"failures":[],"tindex":"1a865d25-7917-11e5-8a81-774b06a05ee2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:115","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7))"},"variableMap":{"line":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:312","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.lastIndexOf(\".\")"},"status":-2},{"failures":[],"tindex":"1a865d26-7917-11e5-8a81-29107d90ea83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"variableMap":{"this":"tmpIndex","minResolutionInMeter":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMaxRegionSearch(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}