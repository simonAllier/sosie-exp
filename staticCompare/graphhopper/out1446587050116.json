{"failureDictionary":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":48,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":121,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":3,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":61,"com.graphhopper.GraphHopperAPITest.testNoLoad":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":85,"com.graphhopper.routing.PathTest.testFindInstruction":64,"com.graphhopper.reader.OSMReaderTest.testFerry":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":117,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":18,"com.graphhopper.routing.QueryGraphTest.testOneWay":28,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":46,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":31,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":44,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":120,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":23,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":41,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":60,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":80,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.util.InstructionListTest.testWayList2":111,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":40,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":26,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":118,"com.graphhopper.util.InstructionListTest.testWayList":110,"com.graphhopper.reader.OSMReaderTest.testOneWay":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":87,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":131,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":52,"com.graphhopper.GraphHopperAPITest.testDisconnected179":66,"com.graphhopper.util.PointListTest.testEquals":56,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":125,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":81,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":8,"com.graphhopper.reader.OSMReaderTest.testSort":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":7,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":93,"com.graphhopper.reader.OSMReaderTest.testMain":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":101,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":123,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":124,"com.graphhopper.routing.PathTest.testWayList":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":105,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":35,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":51,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":95,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":49,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":97,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":139,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":2,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":4,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":128,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":86,"com.graphhopper.util.InstructionListTest.testCreateGPX":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":54,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":24,"com.graphhopper.GraphHopperTest.testPrepareOnly":113,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":19,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":103,"com.graphhopper.GraphHopperAPITest.testLoad":65,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":96,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":22,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":53,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":99,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":126,"com.graphhopper.reader.OSMReaderTest.testBarriers":71,"com.graphhopper.util.InstructionListTest.testFind":108,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":92},"transformations":[{"failures":[],"tindex":"041b6727-8274-11e5-8b78-a99066de5f5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[0],"tindex":"041b8e38-8274-11e5-8b78-630b16a54ee6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"val","factor":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:143","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"041b8e39-8274-11e5-8b78-e7522afce2f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"osmFile","key":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"status":0},{"failures":[],"tindex":"041b8e3a-8274-11e5-8b78-87e1116dd167","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"flags","flags":"defaultValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[1],"tindex":"041bb54b-8274-11e5-8b78-db729e184d98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.trimToSize()"},"status":-1},{"failures":[2,3,4],"tindex":"041bb54c-8274-11e5-8b78-d35b608b5a13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.compressNew(com.graphhopper.util.PointList, int)"},"status":-1},{"failures":[],"tindex":"041bb54d-8274-11e5-8b78-adfd17319d9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:564","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"041bb54e-8274-11e5-8b78-fde407ab7aaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:238","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0)"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"041bb54f-8274-11e5-8b78-2bb1d691c61b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:632","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int)"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,12,59,60,20,21,23,25,26,27,61,29,62,63,64],"tindex":"041bdc60-8274-11e5-8b78-538135b2b11c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:335","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double);\n}"},"status":-1},{"failures":[65,66,67,68,69,57,70,71,72,73,74,75,76,77,58,78,79,80,6,7,8,9,10,81,13,14,15,17],"tindex":"041bdc61-8274-11e5-8b78-d386b8764aaa","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:328","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-1},{"failures":[],"tindex":"041bdc62-8274-11e5-8b78-dbdf73fa4649","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"tmpPrevEdge","newSize":"tmpPrevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:454","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n        long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n        com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n        break;\n    } \n    int = com.graphhopper.util.CHEdgeIterator.getEdge();\n}"},"status":0},{"failures":[37,39,41,5,43,82,44,83,45,84,85,86,87,88,89,90,91,92,93,94,95,96,54,97,55,98,99,100,101,102,103,104,105,106,107,65,66,108,109,110,111,112,68,69,57,70,71,74,75,76,77,58,78,79,80,113,6,7,8,9,10,81,114,11,12,13,14,15,16,115,17,59,116,60,18,19,20,21,22,23,24,25,26,27,28,61,29,117,118,119,30,31,32,33,120,34,121,122,62,123,124,125,126,127,63,64,128,129],"tindex":"041c0373-8274-11e5-8b78-51655abb9da7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeTo":"index","edgeFrom":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"status":-1},{"failures":[],"tindex":"041c0374-8274-11e5-8b78-cbef8f930809","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:420","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":0},{"failures":[],"tindex":"041c0375-8274-11e5-8b78-6d28c9ed2f09","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:889","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"variableMap":{"weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:887","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"status":-2},{"failures":[],"tindex":"041c2a86-8274-11e5-8b78-4955e1ea8742","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:43","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStarBidirection com.graphhopper.routing.AStarBidirection = new com.graphhopper.routing.AStarBidirection(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStarBidirection.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStarBidirection;\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[110,130,112],"tindex":"041c2a87-8274-11e5-8b78-fd9c91ad126b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"timeOffset","flags":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:151","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean)"},"status":-1},{"failures":[],"tindex":"041c2a88-8274-11e5-8b78-77ce16baffb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[131,132,133,134,135,136,137],"tindex":"041c5199-8274-11e5-8b78-9b809e6f1432","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:163","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[138,139],"tindex":"041c519a-8274-11e5-8b78-fd18addb2318","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(0)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"041c0374-8274-11e5-8b78-cbef8f930809","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.ensureNotLoaded"]},"type":"staticDiff"}]},{"transformation":"041b8e39-8274-11e5-8b78-e7522afce2f6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.isEmpty","com.graphhopper.util.Helper.pruneFileEnd"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.util.Helper_java.lang.String_pruneFileEnd(java.lang.String).b","com.graphhopper.util.Helper_java.lang.String_pruneFileEnd(java.lang.String).e1"]},"type":"branch"}]}]}