{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":26,"com.graphhopper.routing.PathTest.testFindInstruction":0,"com.graphhopper.reader.OSMReaderTest.testFerry":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":114,"com.graphhopper.routing.QueryGraphTest.testOneWay":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":139,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":144,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":120,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":52,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":72,"com.graphhopper.GraphHopperTest.testPrepare":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":5,"com.graphhopper.util.InstructionListTest.testWayList2":21,"com.graphhopper.reader.OSMReaderTest.testFoot":88,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":12,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":68,"com.graphhopper.util.InstructionListTest.testWayList":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":117,"com.graphhopper.reader.OSMReaderTest.testOneWay":94,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":24,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":115,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":142,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":146,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":76,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":31,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":59,"com.graphhopper.coll.OSMIDMapTest.testGet":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":126,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":53,"com.graphhopper.GraphHopperTest.testLoadOSM":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":61,"com.graphhopper.reader.OSMReaderTest.testSort":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":106,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":110,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.util.BitUtilLittleTest.testToLong":85,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":10,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.util.PointListTest.testReverse":23,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":118,"com.graphhopper.coll.OSMIDMapTest.testGet2":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":54,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":90,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":8,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":136,"com.graphhopper.reader.OSMNodeTest.testSetTags":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":112,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":78,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":116,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":4,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":25,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":28,"com.graphhopper.GraphHopperTest.testFootAndCar":44,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":71,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":66,"com.graphhopper.coll.OSMIDMapTest.testGetLong":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":104,"com.graphhopper.util.InstructionListTest.testCreateGPX":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":127,"com.graphhopper.storage.NativeFSLockFactoryTest.testForceDelete":80,"com.graphhopper.GraphHopperTest.testPrepareOnly":96,"com.graphhopper.GraphHopperTest.testVia":41,"com.graphhopper.util.BitUtilBigTest.testToLong":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":145,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.util.DouglasPeuckerTest.testParse":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":60,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":55,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":11,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":22,"com.graphhopper.GraphHopperTest.testFootOnly":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":119,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":141,"com.graphhopper.util.InstructionListTest.testFind":18,"com.graphhopper.reader.OSMReaderTest.testBarriers":89,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":1,"com.graphhopper.util.GHUtilityTest.testCopy":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":135},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"2ed7eca6-8277-11e5-b970-df01e68f8aac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:210","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-1},{"failures":[],"tindex":"2ed813b7-8277-11e5-b970-b7b8dd92ea97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:322","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.GraphHopperStorage.getNodeAccess().is3D()"},"status":-2},{"failures":[],"tindex":"2ed813b8-8277-11e5-b970-b520e6833f89","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"shift","len":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:159","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"2ed813b9-8277-11e5-b970-017557871901","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:85","type":"CtReturnImpl","sourcecode":"return java.lang.Long.parseLong(java.lang.String)"},"status":-2},{"failures":[0,4,7,9,10,12,15,16,77,40,41,48,61,78,69,79],"tindex":"2ed813ba-8277-11e5-b970-93f0ff90e90c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"b_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:234","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[80],"tindex":"2ed813bb-8277-11e5-b970-8fee9a5ffdc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"variableMap":{"name":"fileName","location":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:68","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-1},{"failures":[81,82,83,84,85,86],"tindex":"2ed83acc-8277-11e5-b970-a7e077ff70d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"value","lastKey":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-1},{"failures":[],"tindex":"2ed83acd-8277-11e5-b970-113c1555181a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"status":0},{"failures":[87,88,29,30,89,31,32,90,33,91,92,34,93,94,95,96,97,41,42,43,44,45,46,98,47,48,99],"tindex":"2ed83ace-8277-11e5-b970-1f96a7caf968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:56","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"nd\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n        gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-1},{"failures":[],"tindex":"2ed83acf-8277-11e5-b970-a3a85941abcf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"location","location":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"status":0},{"failures":[100,101,102,103,104,105,106,89,31,91,107],"tindex":"2ed83ad0-8277-11e5-b970-d7688c305319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:107","type":"CtInvocationImpl","sourcecode":"super.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"2ed861e1-8277-11e5-b970-978197b76ab1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:56","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"fromMap":"bestWeightMapTo","size":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:66","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0},{"failures":[108,87,88,29,30,89,31,32,90,33,91,92,34,93,109,94,95,96,97,41,42,43,44,45,46,98,47,48,99],"tindex":"2ed861e2-8277-11e5-b970-7f1e9d04afcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"includeWay","pointer":"includeWay","maxCapacity":"includeWay","baseCapacity":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:243","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay);\n}"},"status":-1},{"failures":[110,111,112,113,114,115,116],"tindex":"2ed861e3-8277-11e5-b970-eb4168724778","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:300","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.shapes.BBox.isValid()))\n    throw new java.lang.IllegalArgumentException((\"Bounding box is not valid to calculate index size: \" + com.graphhopper.util.shapes.BBox));\n"},"variableMap":{"graphBounds":"bounds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((6 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[117],"tindex":"2ed861e4-8277-11e5-b970-45ae0e0202a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"2ed861e5-8277-11e5-b970-d97443cce28d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"currEdge","cl":"parent","tmpPrev":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"2ed888f6-8277-11e5-b970-1fe5c97e646d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:184","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) >= (com.graphhopper.routing.PathBidirRef.getWeight())"},"status":-2},{"failures":[],"tindex":"2ed888f7-8277-11e5-b970-15357a6f8442","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,50,128,129,130,131,132,133,53,134,135,136,137,138,139,73,140,141,142,143,144,145,76,146],"tindex":"2ed888f8-8277-11e5-b970-5f3de717103e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:697","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (int == (com.graphhopper.storage.EdgeAccess.int))\n            continue;\n        \n        if (com.graphhopper.coll.GHBitSet.contains(int))\n            throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n        \n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"2ed888f9-8277-11e5-b970-d11894aa3d4b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:387","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}