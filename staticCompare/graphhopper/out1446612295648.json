{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":17,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":24,"com.graphhopper.GraphHopperTest.testFootOnly":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":7,"com.graphhopper.reader.OSMReaderTest.testBarriers":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":29},"transformations":[{"failures":[],"tindex":"cbafbb01-82ae-11e5-bc8a-cfc84377d375","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:178","type":"CtIfImpl","sourcecode":"if (int < (gnu.trove.list.array.TIntArrayList.size())) {\n    int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.TIntList, int);\n    int = gnu.trove.list.array.TIntArrayList.size();\n    gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n} else {\n    int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"cbb204f2-82ae-11e5-bc8a-41cceba4f1fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:77","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n} else {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n}"},"status":-1},{"failures":[],"tindex":"cbb204f3-82ae-11e5-bc8a-cb84bbd17ef6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[],"tindex":"cbb22c04-82ae-11e5-bc8a-35fda6c21087","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"cbb22c05-82ae-11e5-bc8a-972a1a2574ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:152","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"cbb22c06-82ae-11e5-bc8a-99b76c8a2771","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:220","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"status":0},{"failures":[],"tindex":"cbb22c07-82ae-11e5-bc8a-1b790e726ae0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:143","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"cbb25318-82ae-11e5-bc8a-6da062ceaac4","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"status":-2},{"failures":[],"tindex":"cbb25319-82ae-11e5-bc8a-c99d839c52ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:269","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.Path.getFromNode()"},"status":-2},{"failures":[0],"tindex":"cbb2531a-82ae-11e5-bc8a-1740a18723a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:587","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.util.CmdArgs.getBool(\"osmreader.instructions\", boolean)"},"status":-1},{"failures":[],"tindex":"cbb2531b-82ae-11e5-bc8a-6327423aefee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"queryLon","shrinkFactor":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:745","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, gnu.trove.set.hash.TIntHashSet)"},"status":0},{"failures":[],"tindex":"cbb2531c-82ae-11e5-bc8a-5d8aa1eedb96","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"costs","speed":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"cbb27a2d-82ae-11e5-bc8a-19367356d9c9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.REACH_DEST","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:542","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"cbb27a2e-82ae-11e5-bc8a-3d4dcef14a29","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:136","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = float"},"status":-2},{"failures":[],"tindex":"cbb27a2f-82ae-11e5-bc8a-2f344f92a740","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:353","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[27,28],"tindex":"cbb2a140-82ae-11e5-bc8a-134bdbf5a181","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"nodeId","nodeFlags":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:389","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0)"},"status":-1},{"failures":[],"tindex":"cbb2a141-82ae-11e5-bc8a-03057da4b2c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:257","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = short"},"status":-2},{"failures":[],"tindex":"cbb2a142-82ae-11e5-bc8a-73109fab477e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:272","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-1},{"failures":[29],"tindex":"cbb2a143-82ae-11e5-bc8a-4754c5fa3ed2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"cbb2c854-82ae-11e5-bc8a-bf774fea1f10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:590","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.highResolution\", int)"},"variableMap":{"args":"args","preciseIndexResolution":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:563","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.minNetworkSize\", int)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cbb2531b-82ae-11e5-bc8a-6327423aefee","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.calcMinDistance"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b"]},"type":"branch"}]},{"transformation":"cbb2c854-82ae-11e5-bc8a-bf774fea1f10","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}