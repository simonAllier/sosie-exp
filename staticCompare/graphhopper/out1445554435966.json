{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":43,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":35,"com.graphhopper.reader.OSMReaderTest.testMain":66,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":20,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":79,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":73,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":34,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":82,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":4,"com.graphhopper.GraphHopperTest.testPrepare":56,"com.graphhopper.GraphHopperTest.testFootAndCar":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":80,"com.graphhopper.reader.OSMReaderTest.testFoot":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":37,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":83,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":14,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":30,"com.graphhopper.GraphHopperTest.testPrepareOnly":47,"com.graphhopper.GraphHopperTest.testVia":55,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":1,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":70,"com.graphhopper.GraphHopperAPITest.testLoad":75,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":13,"com.graphhopper.GraphHopperTest.testFootOnly":63,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":18,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":53,"com.graphhopper.reader.OSMReaderTest.testBarriers":68,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":48,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":50,"com.graphhopper.reader.OSMReaderTest.testSort":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":76},"transformations":[{"failures":[0,1],"tindex":"c61b3405-790f-11e5-9852-1d54e2ba19b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"nextTurnBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:207","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,72,73,74,75],"tindex":"c61b5b16-790f-11e5-9852-1722e3490018","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:47","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n    com.graphhopper.coll.GHBitSet.add(int);\n    com.graphhopper.util.SimpleIntDeque.push(int);\n} "},"status":-1},{"failures":[],"tindex":"c61b5b17-790f-11e5-9852-ab9bb4e7840c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"edgeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:296","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":0},{"failures":[],"tindex":"c61b5b18-790f-11e5-9852-e1e1b97019b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"itemsToMove","tmpSize":"com.graphhopper.storage.EdgeAccess.NO_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:697","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (int == (com.graphhopper.storage.EdgeAccess.int))\n            continue;\n        \n        if (com.graphhopper.coll.GHBitSet.contains(int))\n            throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n        \n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"c61b8229-790f-11e5-9852-499cf29ce3de","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:174","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.max(long, 100)"},"variableMap":{"byteCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"status":-2},{"failures":[],"tindex":"c61b822a-790f-11e5-9852-7bf13c141cea","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:173","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"c61b822b-790f-11e5-9852-dbee61047c63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:134","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[76,77,78,79,80,81,82,83,47,59,60,61,62],"tindex":"c61b822c-790f-11e5-9852-351f6208453d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"c61b822d-790f-11e5-9852-7b5fe05ef54d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection"},"variableMap":{"com.graphhopper.util.Helper.DIST_PLANE":"distanceCalc","calc":"distanceCalc"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:52","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DistanceCalc = com.graphhopper.util.DistanceCalc"},"status":0},{"failures":[],"tindex":"c61b822e-790f-11e5-9852-512a79c925eb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:440","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-2},{"failures":[],"tindex":"c61b822f-790f-11e5-9852-ff0eafb08851","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"c61b8230-790f-11e5-9852-5b4be01b823e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:150","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Directory"},"variableMap":{"dir":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:333","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Directory = new com.graphhopper.storage.GHDirectory(java.io.File.getAbsolutePath() , com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"c61ba941-790f-11e5-9852-0d0951582b68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:137","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"variableMap":{"cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"status":-2},{"failures":[],"tindex":"c61ba942-790f-11e5-9852-314e206e37e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"byteCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:113","type":"CtIfImpl","sourcecode":"if (long <= com.graphhopper.storage.MMapDataAccess.(getCapacity()))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"c61ba943-790f-11e5-9852-b91757be9d0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":-2},{"failures":[],"tindex":"c61ba944-790f-11e5-9852-b7278465aca4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:176","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.BaseGraph.isFrozen()))\n    throw new java.lang.IllegalStateException(\"Cannot create shortcut if graph is not yet frozen\");\n"},"variableMap":{"baseGraph":"that"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double)"},"status":-2},{"failures":[],"tindex":"c61ba945-790f-11e5-9852-7791f4031356","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:630","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"c61ba946-790f-11e5-9852-3fcaafd27e9f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"c61ba947-790f-11e5-9852-a7a728388063","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:302","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"c61ba948-790f-11e5-9852-0903ba4d068d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:197","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n        continue;\n    \n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean);\n    double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n    if (com.graphhopper.storage.EdgeEntry == null) {\n        com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n        com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.storage.EdgeEntry.double = double;\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else\n        continue;\n    \n    if (boolean)\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}