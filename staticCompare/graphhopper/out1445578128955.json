{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"f03a920c-7946-11e5-846e-c988d2c0bafc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"maxLon","toHeight":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:166","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.max(com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"f03ab91d-7946-11e5-846e-375d19550477","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"com.graphhopper.util.Instruction.TURN_SLIGHT_LEFT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:263","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"continue\") : com.graphhopper.util.Translation.tr(\"continue_onto\", java.lang.String);\n} else {\n    java.lang.String java.lang.String = null;\n    switch (int) {\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\");\n            break;\n    }\n    if (java.lang.String == null)\n        throw new java.lang.IllegalStateException((\"Turn indication not found \" + int));\n    \n    java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? java.lang.String : com.graphhopper.util.Translation.tr(\"turn_onto\", java.lang.String, java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"f03ae02e-7946-11e5-846e-0f5d1d570c7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"unvisitedDeadEnds","from":"minOneWayNetworkSize","end":"unvisitedDeadEnds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:75","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter = new com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter(com.graphhopper.routing.util.FlagEncoder);\n    if ((int) > 0)\n        int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    \n    java.util.List<com.graphhopper.routing.util.TIntArrayList> java.util.List<com.graphhopper.routing.util.TIntArrayList> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter, java.util.List<com.graphhopper.routing.util.TIntArrayList>);\n    int = java.lang.Math.max(java.util.List<com.graphhopper.routing.util.TIntArrayList>.size(), int);\n}"},"status":-2},{"failures":[],"tindex":"f03ae02f-7946-11e5-846e-7d52f82c14ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.calcDirection(com.graphhopper.util.Instruction)"},"status":-2},{"failures":[],"tindex":"f03ae030-7946-11e5-846e-7dc94dcb24af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":-2},{"failures":[],"tindex":"f03ae031-7946-11e5-846e-97a4e1a4d691","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:355","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = new long[int]"},"variableMap":{"n":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:400","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1))"},"status":-2},{"failures":[],"tindex":"f03ae032-7946-11e5-846e-5b50853c8d17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"lat","angle":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.dem.HeightTile == null) {\n    if (!(java.io.File.exists()))\n        java.io.File.mkdirs();\n    \n    java.lang.String java.lang.String = com.graphhopper.reader.dem.SRTMProvider.getFileString(double, double);\n    if (java.lang.String == null)\n        return 0;\n    \n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1);\n    com.graphhopper.reader.dem.HeightTile.setCalcMean(boolean);\n    com.graphhopper.reader.dem.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile);\n    com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int));\n    com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess);\n    boolean boolean = false;\n    try {\n        boolean = com.graphhopper.storage.DataAccess.loadExisting();\n    } catch (java.lang.Exception ex) {\n        com.graphhopper.reader.dem.Logger.warn((((\"cannot load dem\" + int) + \", error:\") + (java.lang.Exception.getMessage())));\n    }\n    if (!boolean) {\n        byte[] byte[] = new byte[(2 * (int)) * (int)];\n        com.graphhopper.storage.DataAccess.create(byte[].int);\n        try {\n            java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n            java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n            java.io.InputStream java.io.InputStream;\n            if (!(java.io.File.exists())) {\n                for (int int = 0 ; int < 3 ; int++) {\n                    try {\n                        com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                        break;\n                    } catch (java.net.SocketTimeoutException ex) {\n                        java.lang.Thread.sleep(2000);\n                        continue;\n                    } catch (java.io.FileNotFoundException ex) {\n                        java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                        continue;\n                    }\n                }\n            } \n            java.io.InputStream = new java.io.FileInputStream(java.io.File);\n            java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n            java.util.zip.ZipInputStream.getNextEntry();\n            java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n            int int;\n            while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n                for (int int = 0 ; int < int ; int += 2) {\n                    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                    if ((short < (-1000)) || (short > 12000))\n                        short = java.lang.Short.short;\n                    \n                    com.graphhopper.storage.DataAccess.setShort(int, short);\n                }\n            }\n            com.graphhopper.storage.DataAccess.flush();\n        } catch (java.lang.Exception ex) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"f03b0743-7946-11e5-846e-671b50411670","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"segmentCount","child":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:156","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"f03b0744-7946-11e5-846e-7771b2f31653","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:371","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"f03b0745-7946-11e5-846e-63d022e7b449","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLon()"},"variableMap":{"lastI":"lastI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLat()"},"status":-2},{"failures":[],"tindex":"f03b0746-7946-11e5-846e-1f8953844dc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 8))"},"status":-2},{"failures":[],"tindex":"f03b0747-7946-11e5-846e-e3aad7237c70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"empty","v":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":-2},{"failures":[],"tindex":"f03b0748-7946-11e5-846e-4d374363d3d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"status":-2},{"failures":[],"tindex":"f03b2e59-7946-11e5-846e-f5ca0fdca2f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"status":-2},{"failures":[],"tindex":"f03b2e5a-7946-11e5-846e-c14023c6e8c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"variableMap":{"pl":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:135","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"f03b2e5b-7946-11e5-846e-651be81ae1a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.round((long * (double)))"},"variableMap":{"flags":"flags","factor":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"f03b2e5c-7946-11e5-846e-712e044abff8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"variableMap":{"pointer":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"f03b2e5d-7946-11e5-846e-03731a125281","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:517","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"variableMap":{"osmFile":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:528","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"f03b2e5e-7946-11e5-846e-8b8999046a02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:213","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trk><name>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rte>\")"},"status":-2},{"failures":[],"tindex":"f03b2e5f-7946-11e5-846e-558a1243fa66","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"lazyTime","x":"lazyTime","absY":"lazyTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:362","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}