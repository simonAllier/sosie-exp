{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":57,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":50,"com.graphhopper.reader.OSMReaderTest.testFerry":198,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":111,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.reader.OSMReaderTest.testWithBounds":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":178,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":149,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":61,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":77,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":155,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":73,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":82,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":160,"com.graphhopper.util.InstructionListTest.testWayList":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":165,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":161,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":182,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":70,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":157,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":87,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":99,"com.graphhopper.reader.OSMReaderTest.testSort":201,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":181,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":108,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":174,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":197,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":193,"com.graphhopper.routing.PathTest.testWayList":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":164,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":124,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":76,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":195,"com.graphhopper.util.GHUtilityTest.testSort":35,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":11,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":26,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":128,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":177,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.reader.OSMReaderTest.testBarriers":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":64,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":28,"com.graphhopper.util.GHUtilityTest.testCopy":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":158,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":130,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":53,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":92,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":167,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":151,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":97,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":114,"com.graphhopper.util.InstructionListTest.testWayList2":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":215,"com.graphhopper.reader.OSMReaderTest.testFoot":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":63,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":191,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":94,"com.graphhopper.reader.OSMReaderTest.testOneWay":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":216,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":103,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":74,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":148,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":29,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":15,"com.graphhopper.util.GHUtilityTest.testSort2":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":169,"com.graphhopper.reader.OSMReaderTest.testMain":200,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":117,"com.graphhopper.routing.PathBidirRefTest.testExtract2":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":44,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":41,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":152,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":113,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":60,"com.graphhopper.reader.OSMReaderTest.testRelation":217,"com.graphhopper.GraphHopperTest.testPrepareOnly":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":105,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":51,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":96,"com.graphhopper.GraphHopperTest.testFootOnly":27,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":206,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":122},"transformations":[{"failures":[],"tindex":"08b4557d-7918-11e5-bf9e-3b623e825209","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:67","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n        continue;\n    } \n    if (int == 0) {\n        int = java.lang.Integer.parseInt(java.lang.String[][int]);\n    } else if (int == 1) {\n        int = java.lang.Integer.parseInt(java.lang.String[][int]);\n    } else {\n        double = java.lang.Double.parseDouble(java.lang.String[][int]);\n    }\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"08b47c8e-7918-11e5-bf9e-159b671608c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"lon","dy":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:84","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-2},{"failures":[],"tindex":"08b47c8f-7918-11e5-bf9e-57b18a81f98f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:75","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"08b47c90-7918-11e5-bf9e-e7aed92fba6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toDouble(byte[], 0)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"08b47c91-7918-11e5-bf9e-3b86889c6c09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[11,12],"tindex":"08b4a2a2-7918-11e5-bf9e-151d8998642a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"ele","x":"ele","absY":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:131","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"08b4a2a3-7918-11e5-bf9e-c97152bd82ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:145","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int);\n"},"status":-1},{"failures":[31,37,61,69,85,93,112,120,136,144,158,160,161,163,165,167,168,170,171,211,172,174,175,212,12,189,213,204],"tindex":"08b4a2a4-7918-11e5-bf9e-43a158f7d611","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"adjNode","bytes":"adjNode","segmentSizeInBytes":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:885","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[214,0,215,6,216,9,217],"tindex":"08b4c9b5-7918-11e5-bf9e-65fe76204645","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"code","end":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[11],"tindex":"08b4c9b6-7918-11e5-bf9e-2f8aa7ee48fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"distance":"fullDist2D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"08b4c9b7-7918-11e5-bf9e-e7ebe0403543","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.setSourceNode(int)"},"status":-2},{"failures":[],"tindex":"08b4c9b8-7918-11e5-bf9e-cd975b0b1e75","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":-2},{"failures":[],"tindex":"08b4f0c9-7918-11e5-bf9e-61959dbbc831","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"names":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:430","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"08b4f0ca-7918-11e5-bf9e-59942ed0de09","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)])"},"status":-2},{"failures":[],"tindex":"08b4f0cb-7918-11e5-bf9e-e15646251ae3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"status":-2},{"failures":[],"tindex":"08b4f0cc-7918-11e5-bf9e-dd26a6a5eb43","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"distEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"status":-2},{"failures":[],"tindex":"08b4f0cd-7918-11e5-bf9e-919678ef3573","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:214","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"08b517de-7918-11e5-bf9e-697822cf32e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:242","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"08b517df-7918-11e5-bf9e-ebdd8b2d147d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:193","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-2},{"failures":[],"tindex":"08b517e0-7918-11e5-bf9e-4de6bd3e1452","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:84","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}