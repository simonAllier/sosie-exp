{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":68,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":43,"com.graphhopper.routing.QueryGraphTest.testOneWay":53,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":83,"com.graphhopper.reader.OSMReaderTest.testWithBounds":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":95,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":100,"com.graphhopper.util.BitUtilBigTest.testReverse":6,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":101,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":35,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":59,"com.graphhopper.util.InstructionListTest.testWayList2":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":89,"com.graphhopper.reader.OSMReaderTest.testFoot":112,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":51,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":71,"com.graphhopper.util.BitUtilLittleTest.testToBitString":1,"com.graphhopper.util.InstructionListTest.testWayList":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":78,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":94,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":86,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":92,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":104,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":40,"com.graphhopper.reader.OSMReaderTest.testSort":113,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":81,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":82,"com.graphhopper.reader.OSMReaderTest.testMain":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":36,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":25,"com.graphhopper.routing.PathTest.testWayList":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":69,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":108,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":70,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":110,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":58,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.util.BitUtilBigTest.testToBitString":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":26,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":31,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":28,"com.graphhopper.util.InstructionListTest.testCreateGPX":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":96,"com.graphhopper.util.BitUtilLittleTest.testReverse":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":80,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":49,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":27,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":111,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":29,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":125,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":117,"com.graphhopper.storage.EdgeTest.testCloneFull":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":73,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":90,"com.graphhopper.util.GHUtilityTest.testCopy":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":20},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"6819219b-82bf-11e5-bac8-19f4ee6ae9a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[],"tindex":"681948ac-82bf-11e5-bac8-e3ea4d365310","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromFloat(byte[], float, 0)"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"681948ad-82bf-11e5-bac8-c32cced5ec32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:429","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.close()"},"variableMap":{"nameIndex":"nameIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:420","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.flush()"},"status":-1},{"failures":[],"tindex":"68196fbe-82bf-11e5-bac8-5d4fa442e556","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FastestWeighting.toString().equals(com.graphhopper.routing.util.FastestWeighting.toString())"},"status":0},{"failures":[27,28,29,30],"tindex":"68196fbf-82bf-11e5-bac8-8579e0287544","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:245","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[20,31,22,32,33,34,35,36,37,26],"tindex":"68196fc0-82bf-11e5-bac8-dbf5855ab26a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-1},{"failures":[],"tindex":"681996d1-82bf-11e5-bac8-2f25e6512e80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:360","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(gnu.trove.list.TLongList.get(((gnu.trove.list.TLongList.size()) - 1)))"},"status":-2},{"failures":[38,39,40,41,42,11,12,13,14,15,16,18,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"681996d2-82bf-11e5-bac8-515534f46be6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mainNodes","nodeThis":"mainNodes","edgeId":"mainNodes","nodeOther":"mainNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:697","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.VirtualEdgeIterator.next()) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.storage.index.QueryResult>.get(((com.graphhopper.routing.VirtualEdgeIterator.getAdjNode()) - (int))).getClosestEdge();\n    gnu.trove.list.array.TIntArrayList.add(com.graphhopper.util.EdgeIteratorState.getEdge());\n}"},"status":-1},{"failures":[],"tindex":"681996d3-82bf-11e5-bac8-5f48d4127958","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"graphIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:872","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":0},{"failures":[],"tindex":"681996d4-82bf-11e5-bac8-4db566859792","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"speed","lat":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"status":0},{"failures":[],"tindex":"6819bde5-82bf-11e5-bac8-cba0381da1e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:311","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        continue;\n    } \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":0},{"failures":[],"tindex":"6819bde6-82bf-11e5-bac8-85479f0cfe62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:157","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:242","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (com.graphhopper.routing.util.EncodingManager.getBytesForFlags()) == 8"},"status":-2},{"failures":[62,63,64,65,66],"tindex":"6819bde7-82bf-11e5-bac8-e5aa7dd0aa60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:269","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\");\n        break;\n}"},"status":-1},{"failures":[67],"tindex":"6819e4f8-82bf-11e5-bac8-bf3a9a11b1c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"6819e4f9-82bf-11e5-bac8-772a329f37b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize()"},"status":0},{"failures":[],"tindex":"6819e4fa-82bf-11e5-bac8-010a9bf1e7de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:590","type":"CtReturnImpl","sourcecode":"return (int) < (com.graphhopper.util.PointList.this.getSize())"},"variableMap":{"counter":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:292","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"status":-2},{"failures":[63,66],"tindex":"6819e4fb-82bf-11e5-bac8-430f38e13207","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:284","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\")"},"status":-1},{"failures":[10,16,17,68,69,70,71,72,73,74,75,55,76,77,56,78,79,80,81,57,58,82,83,59,84,85,86,87,88,60,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,24,110,25,111,26],"tindex":"6819e4fc-82bf-11e5-bac8-61181109e8b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"byteCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:186","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.create(long);\n}"},"status":-1},{"failures":[112,9,113,114,115,116,117,118,119,120,121,10,122,11,12,13,14,15,16,17,18,19,123,124,125,126,127,128,129],"tindex":"681a0c0d-82bf-11e5-bac8-bd897334504c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:299","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"681a0c0e-82bf-11e5-bac8-55f92038de68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_GEOMETRY":"com.graphhopper.util.Constants.VERSION_LOCATION_IDX","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"68196fbe-82bf-11e5-bac8-5d4fa442e556","diffs":[{"methodsDiff":{"delete":["java.lang.String.equals","com.graphhopper.routing.util.FastestWeighting.toString"]},"type":"staticDiff"}]},{"transformation":"6819bde5-82bf-11e5-bac8-cba0381da1e4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.util.StopWatch.start","com.graphhopper.coll.GHTreeMapComposed.peekValue","com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority","com.graphhopper.coll.GHTreeMapComposed.insert"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.coll.GHTreeMapComposed_int_peekValue().b"]},"type":"branch"}]},{"transformation":"6819e4f9-82bf-11e5-bac8-772a329f37b7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.VLongStorage.trimToSize"]},"type":"staticDiff"}]}]}