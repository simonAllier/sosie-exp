{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":15,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.reader.OSMReaderTest.testFerry":5,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":38,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":65,"com.graphhopper.reader.OSMReaderTest.testWithBounds":16,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":40,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":50,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":43,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":53,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":19,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":54,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":42,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":61,"com.graphhopper.reader.OSMReaderTest.testFoot":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":57,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":1,"com.graphhopper.GraphHopperAPITest.testDisconnected179":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":60,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.GraphHopperTest.testPrepareOnly":20,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":58,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":14,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.GraphHopperAPITest.testLoad":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":49,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":63,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":64,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":47,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":26,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":56,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":21,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.util.GHUtilityTest.testCopy":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":24,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":22},"transformations":[{"failures":[0,1],"tindex":"19f0be73-828f-11e5-b535-4f60262294a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:277","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"variableMap":{"str":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtReturnImpl","sourcecode":"return \"hiking\".equals(java.lang.String)"},"status":-1},{"failures":[],"tindex":"19f0e584-828f-11e5-b535-cd19262f0b6b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"variableMap":{"val":"connectedId","com.graphhopper.coll.SparseIntIntArray.DELETED":"connectedId","keys":"nodeIndex","values":"nodeLowLink","i":"connectedId","o":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[2],"tindex":"19f0e585-828f-11e5-b535-61e30c69e7d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:450","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"19f0e586-828f-11e5-b535-5d72e8d8c1f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:133","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-1},{"failures":[],"tindex":"19f10c97-828f-11e5-b535-41c2bd4f582c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"current","i":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:84","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getAdjNode()"},"status":-2},{"failures":[41],"tindex":"19f10c98-828f-11e5-b535-6599d3c8af72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:135","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-1},{"failures":[],"tindex":"19f10c99-828f-11e5-b535-df5b5d55eefc","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"minLon","minLatTmp":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"19f10c9a-828f-11e5-b535-e1206c0349d7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:145","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"19f10c9b-828f-11e5-b535-6dc591809b28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:40","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.Dijkstra(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStarBidirection com.graphhopper.routing.AStarBidirection = new com.graphhopper.routing.AStarBidirection(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStarBidirection.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStarBidirection;\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"19f133ac-828f-11e5-b535-cdff55db91f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:570","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.this.setWeight(this, double)"},"variableMap":{"weight":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[42],"tindex":"19f133ad-828f-11e5-b535-85c3ae80d2be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"status":-1},{"failures":[43],"tindex":"19f133ae-828f-11e5-b535-8b66b56ea191","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:96","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"19f133af-828f-11e5-b535-c768de665d4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:165","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"19f133b0-828f-11e5-b535-8d71aa91c558","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:254","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((((100 - (double)) / 100) * (com.graphhopper.coll.GHTreeMapComposed.getSize())))"},"status":-2},{"failures":[],"tindex":"19f133b1-828f-11e5-b535-6157d0431628","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"long = long | com.graphhopper.routing.util.AbstractFlagEncoder.(handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int))"},"status":0},{"failures":[],"tindex":"19f133b2-828f-11e5-b535-1551bbb0109a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:236","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.EdgeAccess.isInBounds(int)))\n    throw new java.lang.IllegalStateException(((\"shortcutId \" + int) + \" out of bounds\"));\n"},"variableMap":{"edgeId":"com.graphhopper.storage.EdgeAccess.NO_NODE","chEdgeAccess":"edgeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:670","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int);\n    long long = com.graphhopper.util.EdgeIterator.int;\n    while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n        if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n            int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n            long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n            com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n            com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n        } else {\n            long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"19f15ac3-828f-11e5-b535-73faa0914794","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"status":0},{"failures":[],"tindex":"19f15ac4-828f-11e5-b535-e9cdf8e48bcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1074","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.getHints().put(\"visited_nodes.sum\", long)"},"status":0},{"failures":[69,70,71],"tindex":"19f15ac5-828f-11e5-b535-699a34e23428","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:116","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    gnu.trove.list.array.TIntArrayList.trimToSize();\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"19f15ac6-828f-11e5-b535-41236c5802ff","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting"},"variableMap":{"weighting":"w"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:903","type":"CtIfImpl","sourcecode":"if ((java.lang.String.contains(java.lang.String)) && (java.lang.String.contains(java.lang.String)))\n    return com.graphhopper.routing.util.Weighting;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"19f15ac4-828f-11e5-b535-e9cdf8e48bcd","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.getHints","com.graphhopper.util.PMap.put"]},"type":"staticDiff"}]},{"transformation":"19f133b1-828f-11e5-b535-6157d0431628","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags"]},"type":"staticDiff"}]}]}