{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":54,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":85,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":40,"com.graphhopper.reader.PrinctonReaderTest.testRead":95,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":81,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":45,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":72,"com.graphhopper.reader.OSMReaderTest.testFoot":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":86,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":80,"com.graphhopper.reader.OSMReaderTest.testOneWay":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":107,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":17,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":73,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":59,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":48,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":77,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":70,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":61,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":84,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.coll.CompressedArrayTest.testCompress2":50,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":56,"com.graphhopper.GraphHopperAPITest.testLoad":92,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":3,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":106,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":74,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":13,"com.graphhopper.util.GHUtilityTest.testCopy":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":64},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"33ffeafb-7912-11e5-af32-e73c086fbaaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:250","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getNodes()"},"status":-1},{"failures":[],"tindex":"33ffeafc-7912-11e5-af32-e314d4970246","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:255","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"variableMap":{"res":"edgePointer","value":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:128","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":0},{"failures":[49,50],"tindex":"33ffeafd-7912-11e5-af32-235acd075765","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:70","type":"CtAssignmentImpl","sourcecode":"byte[] = java.util.Arrays.copyOf(byte[], int)"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,9,97,10,11,15,17,22,24,25,34,98,36,37,42,99,45,48,100,101,102,103,104,105,106,107,108],"tindex":"33ffeafe-7912-11e5-af32-bffdcb6fa053","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:330","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"3400120f-7912-11e5-af32-a9170e71a161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:291","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(com.graphhopper.storage.DataAccess.getHeader((2 * 4)))"},"status":-2},{"failures":[],"tindex":"34001210-7912-11e5-af32-7f9bae77456f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:93","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3))"},"variableMap":{"instruction":"instruction","instrJson":"instrJson"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:94","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign())"},"status":-2},{"failures":[],"tindex":"34001211-7912-11e5-af32-d11e46e69f49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"34001212-7912-11e5-af32-e779c5472643","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:347","type":"CtLocalVariableImpl","sourcecode":"int int = (double[].int) / 3"},"status":-2},{"failures":[],"tindex":"34001213-7912-11e5-af32-0bf83ef9e3ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"34001214-7912-11e5-af32-81c4c4a88345","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:348","type":"CtIfImpl","sourcecode":"if (boolean) {\n    super.rename(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"34003925-7912-11e5-af32-f97b06280680","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:251","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean)"},"status":-2},{"failures":[],"tindex":"34003926-7912-11e5-af32-877897056e97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"secondary\") , int)"},"status":-2},{"failures":[],"tindex":"34003927-7912-11e5-af32-67c100f7e55b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:354","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"34003928-7912-11e5-af32-3b89cda01c81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:160","type":"CtIfImpl","sourcecode":"if ((java.util.List<com.graphhopper.util.TIntArrayList>.size()) <= 1)\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"34003929-7912-11e5-af32-2bbeb7e53c19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:120","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-2},{"failures":[],"tindex":"3400392a-7912-11e5-af32-d9b8c67232f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:79","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded()) || com.graphhopper.routing.Dijkstra.(finished()))\n    break;\n"},"status":-2},{"failures":[],"tindex":"3400392b-7912-11e5-af32-495b9e86b874","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:180","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"3400392c-7912-11e5-af32-f18ddd088813","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:306","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"Traversal CHGraph is only possible if BaseGraph is frozen\""},"variableMap":{"baseGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:395","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.Graph.getNodes())"},"status":-2},{"failures":[],"tindex":"3400392d-7912-11e5-af32-c163f348fc8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:468","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadWayGeometryHeader()"},"status":-2},{"failures":[],"tindex":"3400603e-7912-11e5-af32-6d11bd41a131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:83","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}