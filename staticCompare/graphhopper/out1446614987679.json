{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.reader.OSMReaderTest.testFerry":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":124,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":69,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":79,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":91,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":134,"com.graphhopper.reader.OSMReaderTest.testWithBounds":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":125,"com.graphhopper.reader.PrinctonReaderTest.testRead":52,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":75,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":115,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":131,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":36,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":119,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":31,"com.graphhopper.reader.OSMReaderTest.testFoot":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":80,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":113,"com.graphhopper.reader.OSMReaderTest.testOneWay":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":136,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":19,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":41,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":106,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":12,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":32,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":92,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":37,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":110,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":127,"com.graphhopper.reader.OSMReaderTest.testSort":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":29,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":118,"com.graphhopper.reader.OSMReaderTest.testMain":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":35,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":123,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":46,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":129,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":103,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":111,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":44,"com.graphhopper.GraphHopperTest.testFootAndCar":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":78,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":138,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":42,"com.graphhopper.GraphHopperTest.testPrepareOnly":68,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":77,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":139,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":3,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":28,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":18,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":62,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":107,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":10,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":20,"com.graphhopper.reader.OSMReaderTest.testBarriers":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":2,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":14,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":97},"transformations":[{"failures":[],"tindex":"1030724e-82b5-11e5-ab45-3baf039a1538","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:50","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.Weighting = com.graphhopper.routing.util.Weighting"},"variableMap":{"singleCHWeighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1017","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createTurnWeighting(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.QueryGraph, com.graphhopper.routing.util.FlagEncoder)"},"status":0},{"failures":[],"tindex":"1030724f-82b5-11e5-ab45-b7b273887ff3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:301","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[],"tindex":"10309960-82b5-11e5-ab45-59a0306a7bb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:417","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"setName\")"},"variableMap":{"this":"outEdgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.fillEdges(com.graphhopper.storage.EdgeEntry, java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>, gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>, com.graphhopper.util.EdgeExplorer, false)"},"status":-2},{"failures":[0,1,2,3],"tindex":"10309961-82b5-11e5-ab45-bb89d6a5a416","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-1},{"failures":[],"tindex":"10309962-82b5-11e5-ab45-7d885b220a2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:55","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"10309963-82b5-11e5-ab45-9b32ff6313b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:71","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BeelineWeightApproximator"},"variableMap":{"approx":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:67","type":"CtIfImpl","sourcecode":"if (\"BeelineSimplification\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else if (\"BeelineAccurate\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Approximation \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"10309964-82b5-11e5-ab45-3fb25bef0872","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[4,5,6,7,8],"tindex":"1030c075-82b5-11e5-ab45-370865446f56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1012","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"request":"request","this":"this","weighting":"weighting","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1009","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,38,39,1,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,4,5,70,71,6,7,72,73,8,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"1030c076-82b5-11e5-ab45-ad27a5c88ff2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"directionBitMask","mask":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:183","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[32,34,114,115,116,0,39,1,117,43,118,119,3,45,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"1030c077-82b5-11e5-ab45-9545c831b276","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:86","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"variableMap":{"lastKey":"edgeToUpdatePointer","key":"edgeToUpdatePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:224","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int)"},"status":-1},{"failures":[135],"tindex":"1030c078-82b5-11e5-ab45-61b3f80969a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"turnCosts","index":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((((long)(long)) * (int)))"},"status":-1},{"failures":[],"tindex":"1030e789-82b5-11e5-ab45-93a1d47e2f7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:89","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"1030e78a-82b5-11e5-ab45-cb7dec966dd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:173","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[61],"tindex":"1030e78b-82b5-11e5-ab45-8f2bbbdbd714","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:937","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type)"},"variableMap":{"viaNodeID":"toWayID","fromWayID":"fromWayID","toWayID":"toWayID","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:935","type":"CtIfImpl","sourcecode":"if (((long >= 0) && (long >= 0)) && (long >= 0)) {\n    return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type);\n} "},"status":-1},{"failures":[136,1,137,43],"tindex":"1030e78c-82b5-11e5-ab45-0107668bc919","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"variableMap":{"edge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:70","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeIteratorState.getDistance()) / double) * (com.graphhopper.routing.util.FastestWeighting.double)"},"status":-1},{"failures":[],"tindex":"1030e78d-82b5-11e5-ab45-c9da790a740d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:657","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:77","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null"},"status":-2},{"failures":[],"tindex":"1030e78e-82b5-11e5-ab45-f91a3d261bea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"tmpNo","index":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:153","type":"CtIfImpl","sourcecode":"if (double >= 64) {\n    int = 64;\n} else if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"10310e9f-82b5-11e5-ab45-356b3e703815","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:90","type":"CtAssignmentImpl","sourcecode":"int = (71 * int) + (com.graphhopper.routing.util.FastestWeighting.toString().hashCode())"},"status":0},{"failures":[138,139,140],"tindex":"10310ea0-82b5-11e5-ab45-43b01250af53","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:321","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"The graph has not yet been initialized.\")"},"status":-1},{"failures":[],"tindex":"10310ea1-82b5-11e5-ab45-f7036369c9fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1030724e-82b5-11e5-ab45-3baf039a1538","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.createTurnWeighting"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).e1","com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).e1","com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b"]},"type":"branch"}]},{"transformation":"1030724f-82b5-11e5-ab45-b7b273887ff3","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"type":"staticDiff"}]},{"transformation":"10310e9f-82b5-11e5-ab45-356b3e703815","diffs":[{"methodsDiff":{"delete":["java.lang.String.hashCode","com.graphhopper.routing.util.FastestWeighting.toString"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.routing.util.FastestWeighting_java.lang.String_toString().b"]},"type":"branch"}]}]}