{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":52,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":71,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":191,"com.graphhopper.reader.OSMReaderTest.testFerry":313,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":295,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":296,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":68,"com.graphhopper.routing.QueryGraphTest.testOneWay":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":132,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":187,"com.graphhopper.reader.OSMReaderTest.testWithBounds":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":33,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":34,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":3,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":169,"com.graphhopper.util.BitUtilBigTest.testReverse":335,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":133,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":165,"com.graphhopper.GraphHopperTest.testPrepare":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":273,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":224,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.util.BitUtilLittleTest.testToBitString":330,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":238,"com.graphhopper.util.InstructionListTest.testWayList":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":306,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":122,"com.graphhopper.GraphHopperAPITest.testDisconnected179":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":101,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":97,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":188,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":64,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":291,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":116,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":93,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":283,"com.graphhopper.GraphHopperTest.testLoadOSM":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":172,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":248,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":189,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":230,"com.graphhopper.reader.OSMReaderTest.testSort":316,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":36,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":128,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":54,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":76,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":310,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":202,"com.graphhopper.routing.PathTest.testWayList":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":141,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":19,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":186,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":262,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":104,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":183,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":148,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":63,"com.graphhopper.util.BitUtilBigTest.testToBitString":333,"com.graphhopper.util.GHUtilityTest.testSort":300,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":145,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":81,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":292,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":277,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":103,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":250,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":160,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":255,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":226,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":268,"com.graphhopper.GraphHopperAPITest.testLoad":327,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":95,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":274,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":218,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":108,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":258,"com.graphhopper.reader.OSMReaderTest.testBarriers":317,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":251,"com.graphhopper.routing.PathTest.testFound":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":244,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":49,"com.graphhopper.util.GHUtilityTest.testCopy":299,"com.graphhopper.routing.PathTest.testFindInstruction":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":259,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":270,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":243,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":215,"com.graphhopper.util.InstructionListTest.testEmptyList":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":150,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":236,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":285,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":272,"com.graphhopper.reader.PrinctonReaderTest.testRead":311,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":8,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":115,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":136,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":252,"com.graphhopper.util.InstructionListTest.testWayList2":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":175,"com.graphhopper.reader.OSMReaderTest.testFoot":314,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":194,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":195,"com.graphhopper.reader.OSMReaderTest.testOneWay":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":117,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":7,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":155,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":207,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":214,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":318,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":2,"com.graphhopper.routing.PathBidirRefTest.testExtract":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":163,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":90,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":294,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":293,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":181,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":201,"com.graphhopper.util.GHUtilityTest.testSort2":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":25,"com.graphhopper.reader.OSMReaderTest.testMain":315,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":105,"com.graphhopper.routing.PathBidirRefTest.testExtract2":66,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":173,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":31,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":184,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":167,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":281,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":246,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":190,"com.graphhopper.storage.GraphHopperStorageTest.testClone":210,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":220,"com.graphhopper.GraphHopperTest.testFootAndCar":94,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":110,"com.graphhopper.routing.PathTest.testTime":58,"com.graphhopper.util.InstructionListTest.testCreateGPX":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":170,"com.graphhopper.util.BitUtilLittleTest.testReverse":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":261,"com.graphhopper.util.GHUtilityTest.testSortDirected":301,"com.graphhopper.GraphHopperTest.testPrepareOnly":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":124,"com.graphhopper.GraphHopperTest.testVia":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":153,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":21,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":168,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":106,"com.graphhopper.GraphHopperTest.testFootOnly":99,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":174,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":59,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":123,"com.graphhopper.util.InstructionListTest.testFind":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":253},"transformations":[{"failures":[],"tindex":"319ad98d-82c8-11e5-bcdc-f344e44b21d6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"319b009e-82c8-11e5-bcdc-719bee83d9c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-1},{"failures":[],"tindex":"319b27af-82c8-11e5-bcdc-b7759faa441a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,0,1,2,3,4,5,44,6,45,7,8,9,46,10,11,47,48,12,13,14,15,16,17,49,18,19,50,20,21,22,23,24,51,25,26,27,52,53,28,29,54,30,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"319b27b0-82c8-11e5-bcdc-01e8bedc808b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[],"tindex":"319b4ec1-82c8-11e5-bcdc-7fdd8234f4be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"start","nodeA":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[329,175,192,330,331,332,333,334,335],"tindex":"319b75d2-82c8-11e5-bcdc-0f5d605bc247","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:226","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-1},{"failures":[313],"tindex":"319b75d3-82c8-11e5-bcdc-ab199fdab379","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"unknownSpeed","speed":"unknownSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:550","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"319b75d4-82c8-11e5-bcdc-85db75dbafb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"variableMap":{"storedKey":"tmp","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-2},{"failures":[],"tindex":"319b9ce5-82c8-11e5-bcdc-75d7b3a30a8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"minLat","toHeight":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"319b9ce6-82c8-11e5-bcdc-67a9fc635422","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:425","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":-2},{"failures":[336,309],"tindex":"319b9ce7-82c8-11e5-bcdc-1d2279881521","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:200","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rte>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLon())).append(\"\\\">\")"},"status":-1},{"failures":[319,337,338],"tindex":"319b9ce8-82c8-11e5-bcdc-3510663bad45","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setSeaLevel(true)"},"variableMap":{"demProvider":"demProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:237","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile)"},"status":-1},{"failures":[],"tindex":"319bc3f9-82c8-11e5-bcdc-67710d35a0fd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"capacity","to":"capacity","lonSize":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:228","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[320,321],"tindex":"319bc3fa-82c8-11e5-bcdc-df84b917f784","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"osmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:816","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMReader.getOsmWayIdSet().contains(long)) {\n    com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().put(int, long);\n} "},"status":-1},{"failures":[],"tindex":"319bc3fb-82c8-11e5-bcdc-f7b6217bfdbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:69","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"319bc3fc-82c8-11e5-bcdc-1529f51a0661","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLat()"},"status":-2},{"failures":[],"tindex":"319bc3fd-82c8-11e5-bcdc-7155c38c7364","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:55","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field.setAccessible(true)"},"status":0},{"failures":[],"tindex":"319beb0e-82c8-11e5-bcdc-71c70608b46c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":0},{"failures":[],"tindex":"319beb0f-82c8-11e5-bcdc-75b466459e0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currTo","entryCurrent":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:167","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll()"},"status":-2},{"failures":[],"tindex":"319beb10-82c8-11e5-bcdc-4dee73e9e0f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:142","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Translation com.graphhopper.util.Translation : java.util.Map<java.lang.String, com.graphhopper.util.Translation>.values()) {\n    java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.Translation.asMap();\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n            continue;\n        } \n        int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n        if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        } else {\n            java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n            java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n            try {\n                java.lang.String.format(java.lang.String, java.lang.Object[]);\n            } catch (java.lang.Exception ex) {\n                java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n            }\n        }\n    }\n}"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"319beb0e-82c8-11e5-bcdc-71c70608b46c","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"319beb10-82c8-11e5-bcdc-4dee73e9e0f0","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"]},"type":"branch"},{"methodsDiff":{"delete":["java.util.Arrays.fill","java.util.Map<java.lang.String, java.lang.String>.entrySet","java.lang.StringBuilder.append","com.graphhopper.util.Translation.asMap","java.lang.String.format","java.util.Map<java.lang.String, java.lang.String>.get","com.graphhopper.util.Helper.isEmpty","java.util.Map<java.lang.String, java.lang.String>.put","java.lang.Throwable.getMessage","com.graphhopper.util.Translation.getLocale","java.util.Map.Entry<java.lang.String, java.lang.String>.getKey","com.graphhopper.util.TranslationMap.countOccurence","java.util.Map.Entry<java.lang.String, java.lang.String>.getValue"]},"branchesDiff":{"delete":["c5","l3","l4","t0","t1","e2"]},"type":"staticDiff"}]}]}