{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":34,"com.graphhopper.search.NameIndexTest.testCreate":131,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":23,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":82,"com.graphhopper.reader.OSMReaderTest.testFerry":171,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.routing.QueryGraphTest.testOneWay":22,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":78,"com.graphhopper.reader.OSMReaderTest.testWithBounds":179,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":204,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":195,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":187,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":163,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":219,"com.graphhopper.GraphHopperTest.testPrepare":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":33,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":57,"com.graphhopper.search.NameIndexTest.testFlush":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":135,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.util.InstructionListTest.testWayList":107,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":154,"com.graphhopper.GraphHopperAPITest.testDisconnected179":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":211,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":94,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":4,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":146,"com.graphhopper.GraphHopperTest.testLoadOSM":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":80,"com.graphhopper.reader.OSMReaderTest.testSort":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":157,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":178,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":201,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":70,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":116,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":37,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":3,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":98,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":74,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":110,"com.graphhopper.coll.OSMIDMapTest.testGet2":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":148,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":182,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":75,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":31,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":9,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":150,"com.graphhopper.coll.OSMIDMapTest.testGetLong":169,"com.graphhopper.search.NameIndexTest.testPut":129,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":213,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":162,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":115,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":183,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":217,"com.graphhopper.reader.OSMReaderTest.testBarriers":56,"com.graphhopper.routing.PathTest.testFound":132,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":28,"com.graphhopper.util.GHUtilityTest.testCopy":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":1,"com.graphhopper.routing.PathTest.testFindInstruction":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":25,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":140,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":59,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":216,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":11,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":113,"com.graphhopper.util.InstructionListTest.testWayList2":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":196,"com.graphhopper.reader.OSMReaderTest.testFoot":172,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":86,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":103,"com.graphhopper.reader.OSMReaderTest.testOneWay":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":161,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":58,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":190,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":193,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":173,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":188,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":71,"com.graphhopper.coll.OSMIDMapTest.testGet":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":137,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":192,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":168,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":43,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":221,"com.graphhopper.storage.RAMDataAccessTest.testCopy":205,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":191,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":96,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":39,"com.graphhopper.storage.RAMDataAccessTest.testSegments":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":158,"com.graphhopper.reader.OSMReaderTest.testMain":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":76,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":62,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":175,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":142,"com.graphhopper.storage.StorablePropertiesTest.testStore":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":81,"com.graphhopper.GraphHopperTest.testFootAndCar":47,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":127,"com.graphhopper.routing.PathTest.testTime":133,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":156,"com.graphhopper.GraphHopperTest.testPrepareOnly":119,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":155,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":63,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":215,"com.graphhopper.GraphHopperTest.testFootOnly":51,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":68,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":5,"com.graphhopper.util.InstructionListTest.testFind":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":123},"transformations":[{"failures":[0,1,2],"tindex":"0ba3d19c-82a8-11e5-8b81-f7dd6c65b61f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"0ba3f8ad-82a8-11e5-8b81-99216c9cc731","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:650","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"0ba3f8ae-82a8-11e5-8b81-816487b909b3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:176","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"nodesContracted":"towerNodeDistance","nodesContractedPercentage":"towerNodeDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"status":0},{"failures":[],"tindex":"0ba3f8af-82a8-11e5-8b81-cd5992065a60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"0ba3f8b0-82a8-11e5-8b81-f93e737c5c4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:348","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , true)"},"variableMap":{"max":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:881","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList((int + int) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52],"tindex":"0ba41fc1-82a8-11e5-8b81-2503f4af70ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean)"},"variableMap":{"tmpCalcPoints":"tmpCalcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean)"},"status":-1},{"failures":[110,109],"tindex":"0ba41fc2-82a8-11e5-8b81-1dde73f34f2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"variableMap":{"com.graphhopper.util.Constants.VERSION":"str","tmp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"0ba41fc3-82a8-11e5-8b81-9f217f696487","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:96","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.close()"},"variableMap":{"zis":"bis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:60","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.OSMInputFile.openPBFReader(java.io.InputStream);\n} else {\n    com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream);\n}"},"status":-2},{"failures":[],"tindex":"0ba41fc4-82a8-11e5-8b81-793a75af74a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLon()"},"status":-2},{"failures":[111,112],"tindex":"0ba41fc5-82a8-11e5-8b81-757c1883f2bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:554","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int++;\n    if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n        int++;\n    \n}"},"status":-1},{"failures":[],"tindex":"0ba446d6-82a8-11e5-8b81-0b0008011bbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:192","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"variableMap":{"values":"arr","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"0ba446d7-82a8-11e5-8b81-a754afdb9503","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:657","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"0ba446d8-82a8-11e5-8b81-5585ab56efbe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"length","newBaseIndex":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:113","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[113,114],"tindex":"0ba446d9-82a8-11e5-8b81-45ad78cc2584","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:210","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[115,116,117],"tindex":"0ba446da-82a8-11e5-8b81-efd3f4e53c19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false);\n"},"status":-1},{"failures":[],"tindex":"0ba446db-82a8-11e5-8b81-e33153ad2495","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"status":-2},{"failures":[118,119,48,49,120,50,121,122,123,124,125,126,127],"tindex":"0ba46dec-82a8-11e5-8b81-cfbfac0ea519","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:60","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[128,129,118,130,131,3,4,132,133,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,134,24,135,136,111,137,138,139,140,141,142,143,112,144,145,146,25,147,148,26,27,149,150,151,28,152,153,29,154,155,156,157,30,31,158,32,33,34,35,36,159,37,160,161,162,163,119,38,39,40,41,42,43,164,44,45,46,47,48,49,120,50,51,165,52,53,166,167,168,169,170,171,172,54,55,56,173,174,175,176,177,178,179,180,181,182,183,184,121,185,122,57,186,58,59,60,187,188,189,190,191,192,193,61,62,194,63,195,64,65,66,67,68,196,69,197,70,71,72,73,74,75,76,77,198,78,79,80,81,82,199,83,200,84,85,86,87,88,89,90,123,201,124,91,202,92,93,94,203,204,205,206,207,208,209,210,211,212,125,99,213,214,126,215,216,217,127,218,100,219,101,102,103,220,104,105,106,107,108,109,221],"tindex":"0ba46ded-82a8-11e5-8b81-fd6e4852588b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:311","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[192,209],"tindex":"0ba46dee-82a8-11e5-8b81-6d465068c3ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"remainingSegments","hash":"remainingSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:335","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0ba46def-82a8-11e5-8b81-c18f6a7260a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1115","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((++int) + \"/\") + (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet().size())) + \" calling prepare.doWork for \") + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getKey())) + \" ... (\") + (com.graphhopper.util.Helper.getMemInfo())) + \")\"))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0ba46def-82a8-11e5-8b81-c18f6a7260a0","diffs":[{"methodsDiff":{"delete":["java.util.Set<java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>>.size","com.graphhopper.util.Helper.getMemInfo","java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getKey","org.slf4j.Logger.info","java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet"]},"type":"staticDiff"}]}]}