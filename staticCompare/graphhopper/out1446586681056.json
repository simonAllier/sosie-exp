{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":28,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":0,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":36,"com.graphhopper.util.BitUtilBigTest.testToDouble":91,"com.graphhopper.reader.OSMReaderTest.testMain":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":58,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":65,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":61,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":32,"com.graphhopper.routing.QueryGraphTest.testOneWay":35,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":78,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":23,"com.graphhopper.reader.OSMReaderTest.testWithBounds":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":74,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":30,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":27,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":38,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":50,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":41,"com.graphhopper.GraphHopperTest.testPrepare":11,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":70,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":33,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":34,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":80,"com.graphhopper.GraphHopperAPITest.testDisconnected179":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":52,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":67,"com.graphhopper.GraphHopperTest.testVia":10,"com.graphhopper.util.BitUtilBigTest.testToLong":92,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":55,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":68,"com.graphhopper.GraphHopperAPITest.testLoad":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":62,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":29,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":42,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":85,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":51,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.reader.OSMReaderTest.testSort":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":81},"transformations":[{"failures":[0],"tindex":"28208d88-8273-11e5-b694-bdef860c6f6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:286","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(')')"},"status":-1},{"failures":[1],"tindex":"2820b499-8273-11e5-b694-df57f053e17a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"2820b49a-8273-11e5-b694-0ff618bc9606","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:713","type":"CtReturnImpl","sourcecode":"return (java.util.List<com.graphhopper.storage.index.QueryResult>) != null"},"status":-1},{"failures":[],"tindex":"2820b49b-8273-11e5-b694-f78c19de8f09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"variableMap":{"ghLocation":"streetName","osmFile":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:136","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\");\n} else {\n    java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String);\n}"},"status":-2},{"failures":[39,40,41,42],"tindex":"2820dbac-8273-11e5-b694-a7e7db4bf018","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:819","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"This graph does not support an additional edge field.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:222","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"))"},"status":-1},{"failures":[43],"tindex":"2820dbad-8273-11e5-b694-8f5356d3f2ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:301","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"status":-1},{"failures":[44],"tindex":"2820dbae-8273-11e5-b694-21c83f6ac85c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"2820dbaf-8273-11e5-b694-f52b509b8c98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:88","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    boolean = true;\n} "},"variableMap":{"endX":"remainingSegNo","reachedX":"com.graphhopper.util.Constants.WINDOWS","x":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:428","type":"CtTryImpl","sourcecode":"try {\n    if (!(com.graphhopper.util.Constants.boolean)) {\n        java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))));\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"2820dbb0-8273-11e5-b694-f104f163cdd1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"avoidSpeedLimit","edgeId":"avoidSpeedLimit","nextEdgeId":"avoidSpeedLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:534","type":"CtIfImpl","sourcecode":"if (double < (int)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"2820dbb1-8273-11e5-b694-ffa581878aa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"282102c2-8273-11e5-b694-6b03da69d200","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:118","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.reader.PillarInfo.(is3D()))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.NaN","this":"pillarInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:528","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    return com.graphhopper.storage.NodeAccess.getLatitude(int);\n} else if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[83,82],"tindex":"282102c3-8273-11e5-b694-5ffa93783d96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:201","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"282102c4-8273-11e5-b694-590c55680db5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.calcDirection(com.graphhopper.util.Instruction)"},"status":-2},{"failures":[],"tindex":"282102c5-8273-11e5-b694-8966262a6283","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:73","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>()"},"status":-1},{"failures":[84,85,86,87],"tindex":"282102c6-8273-11e5-b694-b5cefb82e921","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"282102c7-8273-11e5-b694-87fe56c45a9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:208","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"status":-2},{"failures":[],"tindex":"282129d8-8273-11e5-b694-fbb91ee9a44c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:304","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.Directory com.graphhopper.storage.Directory"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:442","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.Directory com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , true)"},"status":-2},{"failures":[88,89,90],"tindex":"282129d9-8273-11e5-b694-21810c75bfd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"fileDetails","configuredCHWeightings":"baseUrl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[91,92],"tindex":"282129da-8273-11e5-b694-9b5e561549af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"282129db-8273-11e5-b694-918d8b0ff61a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:162","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.removeDA(com.graphhopper.storage.DataAccess, com.graphhopper.storage.DataAccess.getName(), true)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"282129db-8273-11e5-b694-918d8b0ff61a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getName","com.graphhopper.storage.GHDirectory.removeDA"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.storage.AbstractDataAccess_void_close().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.storage.RAMDataAccess_void_close().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.storage.AbstractDataAccess_void_close().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.storage.RAMDataAccess_void_close().b"]},"type":"branch"}]}]}