{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":9,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":13,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":11,"com.graphhopper.util.BitUtilLittleTest.testToShort":12,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7},"transformations":[{"failures":[],"tindex":"c4f9a1f6-7910-11e5-b40f-3504e3a7a404","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 1)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"clonePL","com.graphhopper.util.PointList.EMPTY":"clonePL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:362","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"c4f9c907-7910-11e5-b40f-170efb6af5ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:736","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && (!(com.graphhopper.coll.GHBitSet.contains(int))))\n    continue;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"c4f9c908-7910-11e5-b40f-ff1bacca14c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-1},{"failures":[],"tindex":"c4f9c909-7910-11e5-b40f-dfcf0e0b0e03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:752","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"class:bicycle:\" + (java.lang.String.toString())"},"variableMap":{"specificBicycleClass":"str","subkey":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"status":-2},{"failures":[10,11,12,13,14,15],"tindex":"c4f9c90a-7910-11e5-b40f-3d8688da6b4b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:48","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(short))"},"status":-1},{"failures":[],"tindex":"c4f9c90b-7910-11e5-b40f-e110f1433daf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:240","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"c4f9c90c-7910-11e5-b40f-bd5fd9b6d7cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:38","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[],"tindex":"c4f9c90d-7910-11e5-b40f-bd33e316c5c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:138","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[],"tindex":"c4f9f01e-7910-11e5-b40f-6b62e1e6eae5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.System.getProperty(java.lang.String)"},"variableMap":{"systemProperty":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c4f9f01f-7910-11e5-b40f-f3acf2692a78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"tmpNode","guess":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2},{"failures":[],"tindex":"c4f9f020-7910-11e5-b40f-5b841ca4207e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:417","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometryHeader()"},"status":-2},{"failures":[],"tindex":"c4f9f021-7910-11e5-b40f-59b41e41ed2a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:98","type":"CtIfImpl","sourcecode":"if ((java.io.File.exists()) && (!(java.io.File.isDirectory())))\n    throw new java.lang.IllegalArgumentException(\"Cache path has to be a directory\");\n"},"variableMap":{"cacheDir":"cacheDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"c4f9f022-7910-11e5-b40f-3dec25efb2c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:304","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c4f9f023-7910-11e5-b40f-7151eb8e7680","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean)"},"variableMap":{"tmpCalcPoints":"tmpCalcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker)"},"status":-2},{"failures":[],"tindex":"c4fa1734-7910-11e5-b40f-a13cb6ea83e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:169","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"variableMap":{"baseUrl":"key","name":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:125","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c4fa1735-7910-11e5-b40f-7f2f40f3bbff","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1028","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"pass_through\", false)"},"variableMap":{"request":"request"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:929","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"calcPoints\", boolean)"},"status":-2},{"failures":[],"tindex":"c4fa1736-7910-11e5-b40f-e919a8ebfa52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"deltaIn","lon":"deltaIn","lat":"deltaIn"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:53","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = double > 0 ? 1 : -1;\n} else {\n    int int = double > 0 ? 1 : -1;\n    if ((int) != int) {\n        int = 2;\n    } \n}"},"status":-2},{"failures":[],"tindex":"c4fa1737-7910-11e5-b40f-59374338b1ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:47","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"c4fa1738-7910-11e5-b40f-d1029ceb4e95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:44","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"c4fa1739-7910-11e5-b40f-6514f49e5e33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:78","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"variableMap":{"heights":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}