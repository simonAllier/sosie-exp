{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":3},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"16253185-790d-11e5-ba43-9d7fd1dceda6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[10,11],"tindex":"16255896-790d-11e5-ba43-69b54b1128b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:115","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.parseBoolean(java.lang.String)"},"variableMap":{"str":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"16257fa7-790d-11e5-ba43-bf6d93f4cffa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:144","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.dem.ElevationProvider == null) || (com.graphhopper.reader.dem.ElevationProvider == (com.graphhopper.reader.dem.ElevationProvider.com.graphhopper.reader.dem.ElevationProvider)))\n    com.graphhopper.GraphHopper.setElevation(false);\nelse\n    com.graphhopper.GraphHopper.setElevation(true);\n"},"status":-2},{"failures":[],"tindex":"16257fa8-790d-11e5-ba43-6f5553acfbf6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"status":-2},{"failures":[],"tindex":"16257fa9-790d-11e5-ba43-17713595b026","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:563","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"level graph not yet frozen\""},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:184","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.create(long)"},"status":-2},{"failures":[],"tindex":"16257faa-790d-11e5-ba43-ffab55e6bba7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:166","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"1625a6bb-790d-11e5-ba43-6fa71792f3d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"variableMap":{"value":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:235","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[],"tindex":"1625a6bc-790d-11e5-ba43-cfa9acf72f7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"1625a6bd-790d-11e5-ba43-435a3cbc7d3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"1625cdce-790d-11e5-ba43-1d9a52fb00cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:97","type":"CtIfImpl","sourcecode":"if ((int) >= (int[].int)) {\n    int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))));\n} "},"status":-2},{"failures":[],"tindex":"1625cdcf-790d-11e5-ba43-bfc2ce3f61bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"variableMap":{"val":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:482","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * double))) / double"},"status":-2},{"failures":[],"tindex":"1625cdd0-790d-11e5-ba43-0d016c753cc3","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"status":-2},{"failures":[],"tindex":"1625cdd1-790d-11e5-ba43-efe45f048fbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"1625cdd2-790d-11e5-ba43-290af8a5ec5c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[],"tindex":"1625f4e3-790d-11e5-ba43-1187caefd5b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"pointer","edgeFrom":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:50","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1625f4e4-790d-11e5-ba43-7bd985222abc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:189","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int)"},"variableMap":{"s":"segSize","bytes":"bytes","segmentSizeInBytes":"segSize","this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:148","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < long ; long += int) {\n    if (com.graphhopper.storage.AbstractDataAccess.isIntBased()) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.storage.DataAccess.getInt((long + int)), int);\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.getBytes(long, byte[], int);\n    }\n    if (boolean) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.storage.DataAccess.setInt((long + int), com.graphhopper.util.BitUtil.toInt(byte[], int));\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.setBytes(long, byte[], int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"1625f4e5-790d-11e5-ba43-dd73c95618c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:84","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1625f4e6-790d-11e5-ba43-9164e048791c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1015","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"variableMap":{"foundIndex":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:297","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"status":-2},{"failures":[],"tindex":"16261bf7-790d-11e5-ba43-db453f976d1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"16261bf8-790d-11e5-ba43-99ea17db592e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:153","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:151","type":"CtReturnImpl","sourcecode":"return int >= (com.graphhopper.storage.BaseGraph.int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}