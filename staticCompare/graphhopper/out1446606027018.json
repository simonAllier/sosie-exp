{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":4,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":118,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":143,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":43,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":103,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":44,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":52,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":7,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":135,"com.graphhopper.storage.MMapDataAccessTest.testSegments":91,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":42,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":53,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":109,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":93,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":33,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":65,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":90,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":79,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":86,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":21,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":125,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":63,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":131,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":114,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":66,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":95,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":6,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":92,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":147,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":8,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":136,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":62,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":94,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":35,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":54,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":87,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":149,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":46,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":36,"com.graphhopper.storage.RAMDataAccessTest.testCopy":112,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":72,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":101,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":146,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.storage.RAMDataAccessTest.testSegments":119,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":134,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":69,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":0,"com.graphhopper.storage.RAMDataAccessTest.testHeader":117,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":97,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":102,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":104,"com.graphhopper.storage.MMapDataAccessTest.testHeader":89,"com.graphhopper.storage.MMapDataAccessTest.testCopy":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":150,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":17,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":88,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":145,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":50,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":73,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":130,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":31,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":20,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":113,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":77,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":3,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":5,"com.graphhopper.storage.UnsafeDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":56,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":48,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":9,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":128,"com.graphhopper.util.InstructionListTest.testCreateGPX":122,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":152,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":10,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":14,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":133,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":12,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":141,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":24,"com.graphhopper.storage.UnsafeDataAccessTest.testBoundsCheck":51,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":13,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":99,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":137,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":16,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":83,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":106,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":38,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":138,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":70,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_GetBytes":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":11},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"3339c388-82a0-11e5-bc30-8911d7b015ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"shrinkFactor","toHeight":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:140","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[29,30,31,32,33,34,35,36],"tindex":"333a11a9-82a0-11e5-bc30-773e46bb1e55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"333a11aa-82a0-11e5-bc30-29f5ecf4a735","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:120","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    if ((byte & byte) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    byte <<= 1;\n}"},"status":0},{"failures":[],"tindex":"333a11ab-82a0-11e5-bc30-45d993ec6bde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:686","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((\"start creating graph from \" + (java.lang.String)))"},"status":0},{"failures":[],"tindex":"333a11ac-82a0-11e5-bc30-9f8d50cdbf24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"setWayGeometry\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:706","type":"CtIfImpl","sourcecode":"if (!(gnu.trove.list.array.TIntArrayList.contains(com.graphhopper.util.EdgeIterator.getEdge())))\n    com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false));\n"},"status":-2},{"failures":[],"tindex":"333a38bd-82a0-11e5-bc30-4b006c2fdf0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"333a38be-82a0-11e5-bc30-b172a0f6d170","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:121","type":"CtIfImpl","sourcecode":"if ((byte & byte) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":0},{"failures":[37,38,19,39,20,21,40],"tindex":"333a38bf-82a0-11e5-bc30-959026427dd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:104","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult)"},"status":-1},{"failures":[],"tindex":"333a38c0-82a0-11e5-bc30-53a6b8009576","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"333a5fd1-82a0-11e5-bc30-4f83007ee9a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:186","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[29,30,41,42,31,32,33,34,35,43,44,45,46,47],"tindex":"333a5fd2-82a0-11e5-bc30-872622ed13be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[48],"tindex":"333a5fd3-82a0-11e5-bc30-7f1695ffb924","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:185","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"333a5fd4-82a0-11e5-bc30-89c2a0734466","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:560","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)"},"status":0},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"333a86e5-82a0-11e5-bc30-f72915dd874f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:214","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    return true;\n} "},"status":-1},{"failures":[122,123],"tindex":"333a86e6-82a0-11e5-bc30-eb184e102f24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":-1},{"failures":[],"tindex":"333a86e7-82a0-11e5-bc30-45f027275f83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:243","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.coll.GHBitSet.getCardinality()"},"status":0},{"failures":[],"tindex":"333a86e8-82a0-11e5-bc30-83473743be42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"weightApproximation","x":"weightApproximation","absY":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"status":-1},{"failures":[124,125,126,127,128,129,130,131,132,133,39,134,135,21,136,137,40,138,29,139,30,41,42,31,32,33,34,35,36],"tindex":"333aadf9-82a0-11e5-bc30-49413f5302e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:602","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n    continue;\n"},"variableMap":{"maxLevel":"node","u_fromNode":"maxLevel","w_toNode":"node","prepareGraph":"prepareGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-1},{"failures":[140,141,142,143,144,12,145,146],"tindex":"333aadfa-82a0-11e5-bc30-6d19d8305996","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"foundDist","angleXY":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:99","type":"CtForImpl","sourcecode":"for (int int = 0, int int ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < 0)\n        continue;\n    \n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        double = double;\n    } \n    if (int > 0)\n        continue;\n    \n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n            if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            \n            double = double;\n        } \n    } \n}"},"status":-1},{"failures":[147,148,149,150,151,152],"tindex":"333ad50b-82a0-11e5-bc30-73dd2400c64c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"resolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initLatLonSize(int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"333a38be-82a0-11e5-bc30-b172a0f6d170","diffs":[{"branches":{"com.graphhopper.util.BitUtilBigTest.testToBitString":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]},{"transformation":"333a5fd4-82a0-11e5-bc30-89c2a0734466","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setSimplifyResponse(boolean).b"]},"type":"branch"}]},{"transformation":"333a86e7-82a0-11e5-bc30-45f027275f83","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.GHBitSet.getCardinality"]},"type":"staticDiff"}]},{"transformation":"333a11ab-82a0-11e5-bc30-45d993ec6bde","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}