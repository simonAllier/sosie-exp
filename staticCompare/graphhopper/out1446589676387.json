{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":68,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":96,"com.graphhopper.util.BitUtilBigTest.testToDouble":24,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":145,"com.graphhopper.routing.PathTest.testFindInstruction":106,"com.graphhopper.reader.OSMReaderTest.testFerry":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":152,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":67,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.reader.OSMReaderTest.testWithBounds":128,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":133,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":79,"com.graphhopper.coll.CompressedArrayTest.testCompress":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":31,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":94,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":90,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":18,"com.graphhopper.util.InstructionListTest.testWayList2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":161,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.search.NameIndexTest.testFlush":66,"com.graphhopper.reader.OSMReaderTest.testFoot":124,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":35,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":12,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":119,"com.graphhopper.util.InstructionListTest.testWayList":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":13,"com.graphhopper.reader.OSMReaderTest.testOneWay":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":43,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":74,"com.graphhopper.GraphHopperAPITest.testDisconnected179":170,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":81,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":143,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":114,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":104,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":163,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":118,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":131,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":102,"com.graphhopper.coll.OSMIDMapTest.testGet":109,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":27,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":73,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":72,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":140,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":165,"com.graphhopper.reader.OSMReaderTest.testSort":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":154,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":29,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":52,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":91,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":101,"com.graphhopper.routing.PathTest.testWayList":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":169,"com.graphhopper.coll.OSMIDMapTest.testGet2":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":53,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":34,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":80,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":158,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":70,"com.graphhopper.storage.StorablePropertiesTest.testStore":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":86,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":23,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":47,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":88,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":93,"com.graphhopper.coll.OSMIDMapTest.testGetLong":112,"com.graphhopper.search.NameIndexTest.testPut":65,"com.graphhopper.util.InstructionListTest.testCreateGPX":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":15,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":132,"com.graphhopper.GraphHopperTest.testPrepareOnly":63,"com.graphhopper.coll.CompressedArrayTest.testCompress2":134,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.util.BitUtilBigTest.testToLong":25,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":44,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":164,"com.graphhopper.GraphHopperAPITest.testLoad":19,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":14,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":160,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":103,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.util.InstructionListTest.testFind":59,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":37,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":40,"com.graphhopper.util.GHUtilityTest.testCopy":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":153},"transformations":[{"failures":[0,1],"tindex":"217bca76-827a-11e5-82c1-d3ee3532575f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:509","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\n')"},"variableMap":{"sb":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\")"},"status":-1},{"failures":[],"tindex":"217bf187-827a-11e5-82c1-499ec41019f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"relBitMask","len":"relBitMask","start":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"217bf188-827a-11e5-82c1-af7d2304097b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:626","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.reverse(long, com.graphhopper.geohash.SpatialKeyAlgo.getBits())"},"status":-1},{"failures":[23],"tindex":"217bf189-827a-11e5-82c1-6741000c5fef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n    throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n} "},"status":-1},{"failures":[24,25],"tindex":"217bf18a-827a-11e5-82c1-974b62a1c5dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"offset","guess":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[2,3,6,7,9,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,18,50,51,52,53],"tindex":"217bf18b-827a-11e5-82c1-412963561909","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:125","type":"CtIfImpl","sourcecode":"if (long == (long))\n    return ;\n"},"variableMap":{"EMPTY_FLAGS":"time","turnFlags":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.CHEdgeIteratorState.isShortcut())) {\n    double double = com.graphhopper.util.CHEdgeIteratorState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.CHEdgeIteratorState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.CHEdgeIteratorState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"217c189c-827a-11e5-82c1-57f786ca187d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:184","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((\"<?xml version=\\'1.0\\' encoding=\\'UTF-8\\' standalone=\\'no\\' ?>\" + (\"<gpx xmlns=\\'http://www.topografix.com/GPX/1/1\\' xmlns:xsi=\\'http://www.w3.org/2001/XMLSchema-instance\\'\" + (\" creator=\\'Graphhopper\\' version=\\'1.1\\'\" + (\" xmlns:gh=\\'https://graphhopper.com/public/schema/gpx/1.1\\'>\" + (\"\\n<metadata>\" + (\"<copyright author=\\\"OpenStreetMap contributors\\\"/>\" + (\"<link href=\\'http://graphhopper.com\\'>\" + (\"<text>GraphHopper GPX<\/text>\" + (\"<\/link>\" + \"<time>\"))))))))) + (java.text.SimpleDateFormat.format(long))) + \"<\/time>\") + \"<\/metadata>\""},"status":-2},{"failures":[],"tindex":"217c189d-827a-11e5-82c1-ab43405bd9a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"variableMap":{"nodeAccess":"nodeAccess","this":"nodeAccess","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int), com.graphhopper.util.PointAccess.getElevation(int))"},"status":-2},{"failures":[54,55,56,57],"tindex":"217c189e-827a-11e5-82c1-693d6d201450","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:601","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[58,59,60,61,62,1,63,2,6,7,64,8,9,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,11,83,15,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,50,101,102,103,104,105,106,107,108,109,110,111,112,113,20,114,115],"tindex":"217c189f-827a-11e5-82c1-5d3463849fe0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"length","edge2":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:296","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[116,117,118,119],"tindex":"217c3fb0-827a-11e5-82c1-4b9230fd9591","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"s","newSize":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:189","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int)"},"status":-1},{"failures":[],"tindex":"217c3fb1-827a-11e5-82c1-9f6381f507e8","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:848","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"))"},"variableMap":{"logger":"logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:601","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    org.slf4j.Logger.info((((\"graph \" + (com.graphhopper.storage.GraphHopperStorage.toString())) + \", details:\") + (com.graphhopper.storage.GraphHopperStorage.toDetailsString())));\n"},"status":0},{"failures":[120,63,121,2,3,4,5,6,7,64,8,9,122,123,124,20,21,22,114,115,125,126,127,128,129,130],"tindex":"217c3fb2-827a-11e5-82c1-9f5fd2ec50a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"id","mSize":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[],"tindex":"217c3fb3-827a-11e5-82c1-634ef25d74b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:286","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":0},{"failures":[131,132,133],"tindex":"217c3fb4-827a-11e5-82c1-4185f16b5e39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:127","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"217c66c5-827a-11e5-82c1-2d58737c51e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"217c66c6-827a-11e5-82c1-03b4685d08e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:306","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n    long = long;\n} "},"status":0},{"failures":[134,135],"tindex":"217c66c7-827a-11e5-82c1-2596e421106d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"status":-1},{"failures":[120,63,136,137,138,139,140,141,121,2,3,4,5,6,7,64,8,9,122,142,11,143,83,144,145,146,147,148,149,150,151,152,153,154,155,156,157,15,158,84,159,160,161,162,163,164,165,166,167,168,169,42,46,47,18,19,170,123,124,20,21,22,114,115,125,126,127,171,128,129,130],"tindex":"217c66c8-827a-11e5-82c1-15a33e218b1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:315","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-1},{"failures":[],"tindex":"217c66c9-827a-11e5-82c1-71ab6b3e72a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"i","edgeId":"i","com.graphhopper.storage.EdgeAccess.NO_NODE":"swapIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:246","type":"CtIfImpl","sourcecode":"if (boolean) {\n    double = double[][int];\n    double[][int] = double[][int];\n    double[][int] = double;\n} "},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"217c3fb3-827a-11e5-82c1-634ef25d74b1","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"217c66c6-827a-11e5-82c1-03b4685d08e8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.nf","org.slf4j.Logger.info"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}