{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":10,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":53,"com.graphhopper.reader.OSMReaderTest.testMain":69,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":26,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":65,"com.graphhopper.routing.QueryGraphTest.testOneWay":84,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":76,"com.graphhopper.routing.PathTest.testWayList":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":39,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":64,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":81,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":52,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":61,"com.graphhopper.GraphHopperTest.testPrepare":86,"com.graphhopper.GraphHopperTest.testFootAndCar":37,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.util.InstructionListTest.testWayList2":83,"com.graphhopper.util.BitUtilBigTest.testToBitString":6,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":3,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":54,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":66,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":56,"com.graphhopper.util.BitUtilLittleTest.testToBitString":4,"com.graphhopper.util.InstructionListTest.testWayList":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":58,"com.graphhopper.util.BitUtilBigTest.testToInt":7,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":77,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":72,"com.graphhopper.GraphHopperTest.testVia":85,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":29,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":68,"com.graphhopper.GraphHopperTest.testFootOnly":70,"com.graphhopper.util.BitUtilLittleTest.testToInt":5,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":36,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":74,"com.graphhopper.GraphHopperTest.testLoadOSM":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":59},"transformations":[{"failures":[],"tindex":"e4d9ea7c-7927-11e5-84d0-a3a42dbe8f97","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:243","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"e4da389d-7927-11e5-84d0-b328b239db63","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int, 0)"},"status":-1},{"failures":[],"tindex":"e4da389e-7927-11e5-84d0-936e1cba1ce0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"e4da389f-7927-11e5-84d0-9316c8084e46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:911","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[63,9,10,64,65,12,66,67,13,14,68,69,70,71,72,39,73,74,41,75,76,43,77,78,79,80,81,82,61,62,83],"tindex":"e4da38a0-7927-11e5-84d0-29be22ca2a2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:905","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double)"},"status":-1},{"failures":[63,10,64,12,84,31,32,33,35,85,86,87,37,88,89,90],"tindex":"e4da5fb1-7927-11e5-84d0-5f3aa170ad1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"variableMap":{"mode":"mode","pointList":"com.graphhopper.util.PointList.EMPTY","com.graphhopper.util.PointList.EMPTY":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:87","type":"CtIfImpl","sourcecode":"if (int == 3)\n    return com.graphhopper.util.PointList.clone(false);\nelse if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"e4da5fb2-7927-11e5-84d0-671e1a629b05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:258","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.setEdgeEntry(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n    com.graphhopper.routing.PathBidirRef.setEdgeEntryTo(com.graphhopper.storage.EdgeEntry);\n} "},"status":-2},{"failures":[],"tindex":"e4da5fb3-7927-11e5-84d0-7d286928594c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n    throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n} "},"status":-2},{"failures":[],"tindex":"e4da5fb4-7927-11e5-84d0-1b2a36e6ec6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:153","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"e4da5fb5-7927-11e5-84d0-a12c1910c45e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:96","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.read(byte[])"},"status":-2},{"failures":[],"tindex":"e4da5fb6-7927-11e5-84d0-bfa22c1c19ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"e4da86c7-7927-11e5-84d0-af2fef4c7f32","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"orientation":"speed","java.lang.Math.PI":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:309","type":"CtIfImpl","sourcecode":"if ((double < 0) || (java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative or NaN: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-2},{"failures":[],"tindex":"e4da86c8-7927-11e5-84d0-23531c62d7c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:697","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"e4da86c9-7927-11e5-84d0-1d646cabbcd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"shrinkFactor","tmp":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:140","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"e4da86ca-7927-11e5-84d0-7788e5366979","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String)"},"variableMap":{"location":"location","dir":"outdir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:311","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean)"},"status":-2},{"failures":[],"tindex":"e4da86cb-7927-11e5-84d0-953fddce1204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-2},{"failures":[],"tindex":"e4da86cc-7927-11e5-84d0-bfb0eaecfe07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:187","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"status":-2},{"failures":[],"tindex":"e4da86cd-7927-11e5-84d0-bbb89a546823","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:293","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.clean(0, java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"e4daadde-7927-11e5-84d0-c720eaf66b69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:55","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"e4daaddf-7927-11e5-84d0-b39c92878410","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:945","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.GraphHopperStorage) == null) || (!(boolean)))\n    throw new java.lang.IllegalStateException(\"Call load or importOrLoad before routing\");\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}