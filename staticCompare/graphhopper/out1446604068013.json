{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":3,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":65,"com.graphhopper.reader.OSMReaderTest.testMain":57,"com.graphhopper.reader.OSMReaderTest.testFerry":55,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":15,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":43,"com.graphhopper.util.InstructionListTest.testEmptyList":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":22,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":2,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.storage.StorablePropertiesTest.testStore":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":39,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":76,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.GraphHopperTest.testFootAndCar":46,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":49,"com.graphhopper.util.InstructionListTest.testWayList2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":70,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":25,"com.graphhopper.util.InstructionListTest.testWayList":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":6,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":10,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":50,"com.graphhopper.storage.StorablePropertiesTest.testLoad":74,"com.graphhopper.GraphHopperTest.testPrepareOnly":42,"com.graphhopper.GraphHopperTest.testVia":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":38,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":72,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":64,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":21,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":16,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":54,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":13,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":40,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":45,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":63,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":5,"com.graphhopper.util.InstructionListTest.testFind":8,"com.graphhopper.reader.OSMReaderTest.testBarriers":59,"com.graphhopper.GraphHopperTest.testLoadOSM":48,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.reader.OSMReaderTest.testSort":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":71},"transformations":[{"failures":[],"tindex":"a391533e-829b-11e5-88da-e71c2963aacc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:273","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"a391a15f-829b-11e5-88da-f7e2ad505ec7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:259","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false))"},"status":-1},{"failures":[],"tindex":"a391a160-829b-11e5-88da-e153ae841baf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:733","type":"CtLocalVariableImpl","sourcecode":"double double = double - (int * (double))"},"status":-2},{"failures":[],"tindex":"a391a161-829b-11e5-88da-3bed099e07aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"periodTime","incDist2DSum":"periodTime","fwdSlower":"periodTime","fullDist2D":"periodTime","restDist2D":"periodTime","speed":"periodTime","decDist2DSum":"periodTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:361","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[6,7],"tindex":"a391a162-829b-11e5-88da-6728e7ad3d9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:228","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"fwdFaster":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:411","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int])"},"status":-1},{"failures":[],"tindex":"a391c873-829b-11e5-88da-59a9fd924a6b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:372","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"base graph already frozen\");\n"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:273","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String)"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"a391c874-829b-11e5-88da-8fe0f11b3aca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:56","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>(int)"},"status":-1},{"failures":[23,24,25,26,27,28,6,29,30,31,32,33,34,35,7],"tindex":"a391c875-829b-11e5-88da-afb9cc846b27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:408","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (boolean)\n        double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n    else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n    \n} "},"status":-1},{"failures":[],"tindex":"a391c876-829b-11e5-88da-2b4959836a62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:594","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"routing.defaultWeightLimit\", double)"},"status":0},{"failures":[],"tindex":"a391ef87-829b-11e5-88da-a395f3f9ebeb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"i","weightLong":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"status":0},{"failures":[],"tindex":"a391ef88-829b-11e5-88da-6ff3c463bea8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:154","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"variableMap":{"str":"dataAccess","this":"com.graphhopper.storage.DAType.UNSAFE_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"a391ef89-829b-11e5-88da-a1762a71df65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:231","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.getAllEdges()"},"status":0},{"failures":[],"tindex":"a391ef8a-829b-11e5-88da-8f7e8a05ec5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"edgeOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.util.PointList.getSize();\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n} else {\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n}"},"status":-2},{"failures":[],"tindex":"a392169b-829b-11e5-88da-6d2413737e73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"length","edge2":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:98","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    if ((byte[].int) > 255) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n        com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n        java.lang.String = java.lang.String;\n        continue;\n    } \n    break;\n}"},"status":-2},{"failures":[5],"tindex":"a392169c-829b-11e5-88da-753debef8948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[36,37,38,39,40],"tindex":"a392169d-829b-11e5-88da-8dc63a38efdd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-1},{"failures":[],"tindex":"a3923dae-829b-11e5-88da-d5c319e4a611","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:418","type":"CtIfImpl","sourcecode":"if ((long[][int]) == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"a3923daf-829b-11e5-88da-c5ffa762f4a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"nodeVia","delta":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:179","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.NodeAccess.getAdditionalNodeField(int)"},"status":-2},{"failures":[41,42,43,23,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,0,68,69,70,71,72,73,74,75,76],"tindex":"a3923db0-829b-11e5-88da-e35631add9b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:49","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"a3923db1-829b-11e5-88da-83596c5f9248","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:208","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a391c876-829b-11e5-88da-2b4959836a62","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getDouble"]},"type":"staticDiff"}]},{"transformation":"a391ef89-829b-11e5-88da-a1762a71df65","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.getAllEdges"]},"type":"staticDiff"}]},{"transformation":"a391a161-829b-11e5-88da-3bed099e07aa","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}