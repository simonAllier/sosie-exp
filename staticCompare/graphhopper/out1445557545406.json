{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"037c1450-7917-11e5-a838-81477c3aa29b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:951","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.GHRequest.getVehicle()"},"status":-2},{"failures":[],"tindex":"037c3b61-7917-11e5-a838-6fbf35d8bf43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"lonSize","lastIndex":"lonSize","fromIndex":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:394","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[],"tindex":"037c6272-7917-11e5-a838-b5dec68aa58a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    \n}"},"status":-2},{"failures":[],"tindex":"037c6273-7917-11e5-a838-b1b8c983d521","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:424","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"037c6274-7917-11e5-a838-b56ec342b52b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"allBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"037c8985-7917-11e5-a838-d9c59cab76db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"adjNode","edgeId":"to","com.graphhopper.storage.EdgeAccess.NO_NODE":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:110","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"037c8986-7917-11e5-a838-7d6c9ecaa7c9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT","length":"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, com.graphhopper.storage.index.Location2IDQuadtree.int)"},"status":-2},{"failures":[],"tindex":"037cb097-7917-11e5-a838-2fc5d726b079","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"defaultSegmentSize","nextEdgeId":"defaultSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:525","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"graph.dataaccess.segmentSize\", int)"},"status":-2},{"failures":[],"tindex":"037cb098-7917-11e5-a838-77ae98c66ff2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"pointer","retBucket":"pointer","i":"pointer","bucketSize":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"037cb099-7917-11e5-a838-ab2cc21c73bb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:647","type":"CtReturnImpl","sourcecode":"return (long & (long)) == 0 ? 0 : java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"037cb09a-7917-11e5-a838-f7aa398f5241","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:303","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"037cb09b-7917-11e5-a838-3d852531fb50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:116","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"variableMap":{"line":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"status":-2},{"failures":[],"tindex":"037cd7ac-7917-11e5-a838-6d9fdd805c98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:133","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-2},{"failures":[],"tindex":"037cd7ad-7917-11e5-a838-fde3b019abba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"viaNode","from":"newEntryIndex","end":"newEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int)"},"status":-2},{"failures":[],"tindex":"037cd7ae-7917-11e5-a838-d7db4f9dc6fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:598","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3))"},"status":-2},{"failures":[],"tindex":"037cd7af-7917-11e5-a838-0f21b48a0af5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:529","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[],"tindex":"037cfec0-7917-11e5-a838-f5cd1f35ecf0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:552","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLon(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"037cfec1-7917-11e5-a838-a72141e8cff5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:216","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"037cfec2-7917-11e5-a838-a93c7bd9ec9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"lastTime","mask":"lastTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"status":-2},{"failures":[],"tindex":"037cfec3-7917-11e5-a838-5f19660c5fee","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:202","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}