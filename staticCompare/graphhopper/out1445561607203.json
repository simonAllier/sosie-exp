{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":0,"com.graphhopper.storage.MMapDataAccessTest.testHeader":11,"com.graphhopper.storage.MMapDataAccessTest.testCopy":7,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":64,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":52,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":48,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":58,"com.graphhopper.storage.MMapDataAccessTest.testSegments":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":40,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":56,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":18,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":47,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":12,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":1,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":66,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":4,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":37,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":57,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":61,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":35,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":53,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":55},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"78814409-7920-11e5-ad82-6d69d6f46407","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:292","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"variableMap":{"edgeId":"segmentsToMap","mainEdges":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:131","type":"CtTryImpl","sourcecode":"try {\n    if (boolean) {\n        int = int;\n        com.graphhopper.storage.MMapDataAccess.clean(0, java.util.List<java.nio.ByteBuffer>.size());\n        com.graphhopper.util.Helper.cleanHack();\n        java.util.List<java.nio.ByteBuffer>.clear();\n    } else {\n        long += (java.util.List<java.nio.ByteBuffer>.size()) * long;\n        int = int - (java.util.List<java.nio.ByteBuffer>.size());\n    }\n    for ( ; int < int ; int++) {\n        java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long));\n        long += long;\n    }\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((((((((((((\"Couldn\\'t map buffer \" + int) + \" of \") + int) + \" at position \") + long) + \" for \") + long) + \" bytes with offset \") + long) + \", new fileLength:\") + long) , java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"7881922a-7920-11e5-ad82-57f6b7483cdd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-2},{"failures":[],"tindex":"7881922b-7920-11e5-ad82-8150dbd21d5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"7881b93c-7920-11e5-ad82-f1787686acec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()"},"status":-2},{"failures":[],"tindex":"7881b93d-7920-11e5-ad82-7b522a7b88df","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"lonSize","index":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:394","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[],"tindex":"7881b93e-7920-11e5-ad82-e33638858e56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:903","type":"CtIfImpl","sourcecode":"if ((java.lang.String.contains(java.lang.String)) && (java.lang.String.contains(java.lang.String)))\n    return com.graphhopper.routing.util.Weighting;\n"},"status":-2},{"failures":[],"tindex":"7881b93f-7920-11e5-ad82-1fba5d1e44e1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:571","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[],"tindex":"7881e050-7920-11e5-ad82-4bbf10ec3b9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:350","type":"CtInvocationImpl","sourcecode":"super.rename(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7881e051-7920-11e5-ad82-3397f5408534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"7881e052-7920-11e5-ad82-2bb45022a5b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:66","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"variableMap":{"lat1":"toLat","lat2":"toLat","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:53","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-2},{"failures":[],"tindex":"7881e053-7920-11e5-ad82-3f03f919d1c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:174","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"7881e054-7920-11e5-ad82-ebcefc66e0f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:142","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"variableMap":{"e":"e","writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:140","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-2},{"failures":[],"tindex":"78820765-7920-11e5-ad82-a51ec6e0cf4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:570","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph"},"variableMap":{"g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:439","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.copyTo(com.graphhopper.storage.Graph)"},"status":-2},{"failures":[],"tindex":"78820766-7920-11e5-ad82-7bf6323316ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:53","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    if ((double > 90) || (double < (-90)))\n        java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n    \n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if ((double > 180) || (double < (-180)))\n        java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n            java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n        } \n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n            java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"78820767-7920-11e5-ad82-1f25b66c9bcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:500","type":"CtReturnImpl","sourcecode":"return ~int"},"variableMap":{"high":"bitsForEdgeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"78822e78-7920-11e5-ad82-7d279f101c0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = null"},"variableMap":{"currentWriter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(new byte[int])"},"status":-2},{"failures":[],"tindex":"78822e79-7920-11e5-ad82-27b112139b67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:114","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    break;\n"},"status":-2},{"failures":[],"tindex":"78822e7a-7920-11e5-ad82-7d224df244d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-2},{"failures":[],"tindex":"78822e7b-7920-11e5-ad82-8b389fd87556","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:62","type":"CtIfImpl","sourcecode":"if ((double) < (com.graphhopper.storage.EdgeEntry.double))\n    return -1;\n"},"status":-2},{"failures":[],"tindex":"78822e7c-7920-11e5-ad82-4344ab9e6a05","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:248","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}