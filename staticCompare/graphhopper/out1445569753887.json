{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"704d1169-7933-11e5-a39c-4f846ffa2f44","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:816","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMReader.getOsmWayIdSet().contains(long)) {\n    com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().put(int, long);\n} "},"variableMap":{"edgeId":"tmpNode","osmWayId":"flags","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:729","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n    com.graphhopper.util.PointList.clear();\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n} "},"status":-2},{"failures":[],"tindex":"704d387a-7933-11e5-a39c-19650aea2f60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"virtNodeIDintern","currentIndex":"virtNodeIDintern","bucketSize":"virtNodeIDintern"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"704d387b-7933-11e5-a39c-6db6641a38bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"status":-2},{"failures":[],"tindex":"704d387c-7933-11e5-a39c-1320d80e87b8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"iteration","nextEdgeId":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:739","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1) {\n    if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n        double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n        double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n        if (double < double)\n            return true;\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"704d5f8d-7933-11e5-a39c-45281c512837","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"edge","index":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:110","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"704d5f8e-7933-11e5-a39c-37fe4db12259","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess);\n    com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet);\n    int = com.graphhopper.coll.GHBitSet.getCardinality();\n    for (int int = 0 ; int < int ; int++) {\n        int int = -1;\n        int int = -1;\n        if (com.graphhopper.coll.GHBitSet.contains(int)) {\n            if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n                int = int;\n                int = int + 1;\n            } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n                int = int;\n                int = int + (int);\n            } \n        } else {\n            if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n                int = int + 1;\n                int = int;\n            } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n                int = int + (int);\n                int = int;\n            } \n        }\n        if (int >= 0) {\n            if ((int[][int]) >= 0) {\n                if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                    continue;\n                } \n            } \n            com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n            int[][int] = int[][int];\n            com.graphhopper.coll.GHBitSet.add(int);\n            int++;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"704d5f8f-7933-11e5-a39c-bdfccc990d32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-2},{"failures":[],"tindex":"704d5f90-7933-11e5-a39c-ff8707442ed6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-2},{"failures":[],"tindex":"704d5f91-7933-11e5-a39c-8fd394a3680a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:339","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"704d86a2-7933-11e5-a39c-7f7838a56c62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"variableMap":{"pavementName":"str","wayTypeName":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:160","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"704d86a3-7933-11e5-a39c-2b83fd4507be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:135","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHBitSet.getCardinality()"},"status":-2},{"failures":[],"tindex":"704d86a4-7933-11e5-a39c-7d50c68221e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:137","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{"sw":"lazySW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":-2},{"failures":[],"tindex":"704d86a5-7933-11e5-a39c-e95c5a7aed49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:500","type":"CtReturnImpl","sourcecode":"return ~int"},"variableMap":{"high":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:158","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"704d86a6-7933-11e5-a39c-eff3d70e3145","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:149","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.routing.AStar.AStarEdge.int, int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"704dadb7-7933-11e5-a39c-2f7504e00fd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:514","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.location\", \"\")"},"variableMap":{"args":"args"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:569","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"prepare.chWeighting\", \"fastest\")"},"status":-2},{"failures":[],"tindex":"704dadb8-7933-11e5-a39c-c3e218b1c7df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:87","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"variableMap":{"alreadyRun":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:166","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextPBF();\nelse\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML();\n"},"status":-2},{"failures":[],"tindex":"704dadb9-7933-11e5-a39c-81e5171baf56","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"variableMap":{"properties":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"status":-2},{"failures":[],"tindex":"704dadba-7933-11e5-a39c-fd95af837790","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:92","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.TurnCostExtension.getTurnCostFlags(int, int, int)"},"status":-2},{"failures":[],"tindex":"704dadbb-7933-11e5-a39c-97727afd56d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 4))), com.graphhopper.util.PMap.getDouble(\"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"704dadbc-7933-11e5-a39c-3f8df6c094de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"encoded","bufferStart":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:300","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}