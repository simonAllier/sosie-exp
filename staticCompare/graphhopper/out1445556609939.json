{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d5e54fd9-7914-11e5-8dab-4183aaef4ec9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:163","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"unsupported shape\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:663","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\")"},"status":-2},{"failures":[],"tindex":"d5e576ea-7914-11e5-8dab-3d98a0da496b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:158","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"d5e576eb-7914-11e5-8dab-332648861638","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:820","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting : java.util.Set<com.graphhopper.routing.util.Weighting>) {\n    com.graphhopper.routing.ch.PrepareContractionHierarchies com.graphhopper.routing.ch.PrepareContractionHierarchies = new com.graphhopper.routing.ch.PrepareContractionHierarchies(new com.graphhopper.storage.GHDirectory(\"\" , com.graphhopper.storage.DAType.com.graphhopper.storage.DAType) , com.graphhopper.storage.GraphHopperStorage , com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting) , com.graphhopper.routing.util.Weighting.getFlagEncoder() , com.graphhopper.routing.util.Weighting , com.graphhopper.routing.util.TraversalMode);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int).setNeighborUpdates(int).setLogMessages(double);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies);\n}"},"status":-2},{"failures":[],"tindex":"d5e576ec-7914-11e5-8dab-09c3293a24aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:81","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Long.parseLong(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"d5e576ed-7914-11e5-8dab-e15c77acfecd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"len","key":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:194","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int)"},"status":-2},{"failures":[],"tindex":"d5e59dfe-7914-11e5-8dab-21318e8f0426","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:555","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"yes\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:375","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"d5e59dff-7914-11e5-8dab-9d2b7f810c29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"polledNode","segmentSizePower":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:326","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)"},"status":-2},{"failures":[],"tindex":"d5e59e00-7914-11e5-8dab-3b74c3523015","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], java.lang.Double.doubleToRawLongBits(double), int)"},"status":-2},{"failures":[],"tindex":"d5e59e01-7914-11e5-8dab-81d4d63c6759","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n    return long;\n"},"variableMap":{"acceptBit":"acceptBit","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"d5e59e02-7914-11e5-8dab-478c7685f124","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:159","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"variableMap":{"counts":"current","counter":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:168","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).isBackward(com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"d5e59e03-7914-11e5-8dab-3325b683ef41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:139","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"d5e59e04-7914-11e5-8dab-ed0aac52e5ff","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtLocalVariableImpl","sourcecode":"long long = (java.lang.System.nanoTime()) - long"},"variableMap":{"start":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:382","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long)"},"status":-2},{"failures":[],"tindex":"d5e5c515-7914-11e5-8dab-ff361172c821","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:672","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (com.graphhopper.reader.TLongList.size()) ; int++) {\n        long long = com.graphhopper.reader.TLongList.get(int);\n        int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int)) {\n            if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n                int = int;\n                int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n                int = (-int) - 3;\n                if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                    com.graphhopper.util.PointList.clear();\n                    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n                } \n                int = int;\n                int = -1;\n            } \n            continue;\n        } \n        if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n            throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n        \n        if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n            boolean boolean = (int == 0) || (int == int);\n            if (!boolean) {\n                int = int;\n            } \n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n        } \n        if (int < (com.graphhopper.reader.OSMReader.int)) {\n            int = (-int) - 3;\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            if (int >= 0) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n        } \n    }\n} catch (java.lang.RuntimeException ex) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.util.Logger.error((\"Couldn\\'t properly add edge with osm ids:\" + com.graphhopper.reader.TLongList), java.lang.RuntimeException);\n    if (boolean)\n        throw java.lang.RuntimeException;\n    \n}"},"status":-2},{"failures":[],"tindex":"d5e5c516-7914-11e5-8dab-830ebffad825","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"charI","degree":"charI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"d5e5c517-7914-11e5-8dab-97374556a0d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d5e5c518-7914-11e5-8dab-331d4e64d501","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"d5e5c519-7914-11e5-8dab-051f891aaabd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"d5e5c51a-7914-11e5-8dab-1d6950ac69d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:809","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null)"},"variableMap":{"algoFactories":"algoFactories","weighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:830","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies)"},"status":-2},{"failures":[],"tindex":"d5e5ec2b-7914-11e5-8dab-45c92a2c53e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:134","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"d5e5ec2c-7914-11e5-8dab-bb3029c31401","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:121","type":"CtLocalVariableImpl","sourcecode":"long long = java.io.RandomAccessFile.readLong()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}