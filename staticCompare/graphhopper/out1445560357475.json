{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":12,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.util.BitUtilBigTest.testToDouble":0,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":90,"com.graphhopper.routing.PathTest.testFindInstruction":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":2,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":26,"com.graphhopper.routing.QueryGraphTest.testOneWay":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":10,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":32,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":110,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":102,"com.graphhopper.GraphHopperTest.testPrepare":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":11,"com.graphhopper.util.InstructionListTest.testWayList2":43,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":65,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":94,"com.graphhopper.util.InstructionListTest.testWayList":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":7,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":41,"com.graphhopper.GraphHopperAPITest.testDisconnected179":115,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":18,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":108,"com.graphhopper.GraphHopperTest.testLoadOSM":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":81,"com.graphhopper.reader.OSMReaderTest.testSort":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":98,"com.graphhopper.reader.OSMReaderTest.testMain":45,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":104,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":15,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":103,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":17,"com.graphhopper.routing.PathTest.testWayList":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":70,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":9,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":100,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":72,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":33,"com.graphhopper.util.BitUtilBigTest.testToLong":1,"com.graphhopper.GraphHopperTest.testVia":56,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":27,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":80,"com.graphhopper.GraphHopperAPITest.testLoad":114,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":71,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":44,"com.graphhopper.GraphHopperTest.testFootOnly":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":77,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":19,"com.graphhopper.util.InstructionListTest.testFind":40,"com.graphhopper.reader.OSMReaderTest.testBarriers":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":105},"transformations":[{"failures":[0,1],"tindex":"8f9b2564-791d-11e5-ba99-cb8748a1b738","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"8f9b4c75-791d-11e5-ba99-f7fa383ca742","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:66","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"8f9b4c76-791d-11e5-ba99-a3ec2c174f80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:893","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int));\n    int += 4;\n    double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int));\n    int += 4;\n    if (com.graphhopper.storage.NodeAccess.is3D()) {\n        com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)));\n        int += 4;\n    } else {\n        com.graphhopper.util.PointList.add(double, double);\n    }\n}"},"status":-1},{"failures":[],"tindex":"8f9b7387-791d-11e5-ba99-6d636d6ee864","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"blockByDefault":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:450","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"8f9b7388-791d-11e5-ba99-3193a48ec258","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"variableMap":{"degree":"tmpNo","lat":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"status":-2},{"failures":[],"tindex":"8f9b7389-791d-11e5-ba99-a1bc72130158","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:108","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"8f9b9a9a-791d-11e5-ba99-971fb1c60c44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:434","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))))"},"status":-2},{"failures":[],"tindex":"8f9b9a9b-791d-11e5-ba99-0f109828a00a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:232","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"8f9b9a9c-791d-11e5-ba99-c1049506ba77","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.trimToSize()"},"status":-2},{"failures":[],"tindex":"8f9b9a9d-791d-11e5-ba99-814eb0327b19","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:132","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((int[].int) * 4) ; int += 4) {\n    com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int));\n}"},"status":-2},{"failures":[],"tindex":"8f9bc1ae-791d-11e5-ba99-03187eff929c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"8f9bc1af-791d-11e5-ba99-f563b245ac2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:747","type":"CtIfImpl","sourcecode":"if (double < double)\n    return true;\n"},"variableMap":{"minDistance":"maxLat","rMin":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:118","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) > 0"},"status":-2},{"failures":[],"tindex":"8f9bc1b0-791d-11e5-ba99-b77d89bf1471","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"doPrepare"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:567","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.util.CmdArgs.getBool(\"prepare.doPrepare\", boolean)"},"status":-2},{"failures":[],"tindex":"8f9bc1b1-791d-11e5-ba99-e5788fe93b06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:50","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8f9bc1b2-791d-11e5-ba99-71a89a574efa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:67","type":"CtIfImpl","sourcecode":"if ((int) >= (byte[].int)) {\n    int int = java.lang.Math.max(10, ((int)((int) * 1.5F)));\n    byte[] = java.util.Arrays.copyOf(byte[], int);\n} "},"status":-2},{"failures":[],"tindex":"8f9bc1b3-791d-11e5-ba99-9308b9a14340","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:640","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.GraphHopper.importData();\n    com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"8f9bc1b4-791d-11e5-ba99-a94f5bff5db8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"variableMap":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","hash":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"8f9be8c5-791d-11e5-ba99-1382961a5372","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"connectedId","end":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:47","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n    com.graphhopper.coll.GHBitSet.add(int);\n    com.graphhopper.util.SimpleIntDeque.push(int);\n} "},"status":-2},{"failures":[],"tindex":"8f9be8c6-791d-11e5-ba99-892135dd728a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:324","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.flush()"},"status":-2},{"failures":[],"tindex":"8f9be8c7-791d-11e5-ba99-95175a7caad1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:460","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"variableMap":{"sayText":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:295","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}