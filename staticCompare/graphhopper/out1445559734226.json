{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1c1dfad9-791c-11e5-bede-ebcca9d427ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1c1e21ea-791c-11e5-bede-b783d19e9ef0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:118","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"variableMap":{"versionHint":"baseUrl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"1c1e21eb-791c-11e5-bede-8175127b078b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:355","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = new java.lang.Object[int]"},"variableMap":{"n":"expectedCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:163","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = new java.lang.String[int]"},"status":-2},{"failures":[],"tindex":"1c1e21ec-791c-11e5-bede-d757c7c1e763","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:214","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    return true;\n} "},"variableMap":{"file":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:132","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"1c1e48fd-791c-11e5-bede-cf409aceaebe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"variableMap":{"segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-2},{"failures":[],"tindex":"1c1e48fe-791c-11e5-bede-bdfaa0d8c17e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"fromOsmWayId","ferryBit":"fromOsmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:63","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1c1e48ff-791c-11e5-bede-0f6a6acfa345","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:261","type":"CtIfImpl","sourcecode":"if ((!(java.util.List<java.nio.ByteBuffer>.isEmpty())) && ((java.util.List<java.nio.ByteBuffer>.get(0)) instanceof java.nio.MappedByteBuffer)) {\n    for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n        ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force();\n    }\n} "},"status":-2},{"failures":[],"tindex":"1c1e4900-791c-11e5-bede-3bac1e98ef48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"status":-2},{"failures":[],"tindex":"1c1e4901-791c-11e5-bede-e370e4e933ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:601","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"1c1e4902-791c-11e5-bede-3f6e7fd5b218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"1c1e4903-791c-11e5-bede-478770dd95b1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"variableMap":{"edge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:438","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"1c1e7014-791c-11e5-bede-294687e2dc7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"1c1e7015-791c-11e5-bede-853018b31f95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:155","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.clear()"},"status":-2},{"failures":[],"tindex":"1c1e7016-791c-11e5-bede-f38168adab35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:51","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.size()"},"status":-2},{"failures":[],"tindex":"1c1e7017-791c-11e5-bede-3da630a99ebe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"variableMap":{"nextTowerId":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:328","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"1c1e7018-791c-11e5-bede-19649da9c8ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:420","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.flush()"},"status":-2},{"failures":[],"tindex":"1c1e7019-791c-11e5-bede-173a956b9ae1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trk>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rte>\")"},"status":-2},{"failures":[],"tindex":"1c1e701a-791c-11e5-bede-15e511033d0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"variableMap":{"name":"latlon","refName":"latlon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:432","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"status":-2},{"failures":[],"tindex":"1c1e701b-791c-11e5-bede-31137df7e1cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"itemsToMove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:716","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int);\n    int int = com.graphhopper.coll.SparseIntIntArray.valueAt(int);\n    long long = ((long)(int)) * (int);\n    long long = ((long)(int)) * (int);\n    for (long long = 0 ; long < (int) ; long += 4) {\n        com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n    }\n}"},"status":-2},{"failures":[],"tindex":"1c1e972c-791c-11e5-bede-3bed38faf40a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"debug"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1029","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < (java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) ; int++) {\n    if (int == 1) {\n        com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(0), false);\n    } else if (boolean) {\n        com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n        com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n    } \n    com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = java.util.List<com.graphhopper.storage.index.QueryResult>.get(int);\n    com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(int), true);\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start();\n    com.graphhopper.routing.RoutingAlgorithm com.graphhopper.routing.RoutingAlgorithm = com.graphhopper.routing.RoutingAlgorithmFactory.createAlgo(com.graphhopper.routing.QueryGraph, com.graphhopper.routing.AlgorithmOptions);\n    com.graphhopper.routing.RoutingAlgorithm.setWeightLimit(double);\n    java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\";\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start();\n    com.graphhopper.routing.Path com.graphhopper.routing.Path = com.graphhopper.routing.RoutingAlgorithm.calcPath(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.storage.index.QueryResult.getClosestNode());\n    if ((com.graphhopper.routing.Path.getTime()) < 0)\n        throw new java.lang.RuntimeException((\"Time was negative. Please report as bug and include:\" + com.graphhopper.GHRequest));\n    \n    java.util.List<com.graphhopper.routing.Path>.add(com.graphhopper.routing.Path);\n    java.lang.String += ((((\", \" + (com.graphhopper.routing.RoutingAlgorithm.getName())) + \"-routing:\") + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s, \") + (com.graphhopper.routing.Path.getDebugInfo());\n    com.graphhopper.routing.QueryGraph.clearUnfavoredStatus();\n    long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes();\n    com.graphhopper.storage.index.QueryResult = com.graphhopper.storage.index.QueryResult;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}