{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":51,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":63,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":17,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":50,"com.graphhopper.reader.PrinctonReaderTest.testRead":55,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":38,"com.graphhopper.util.SimpleIntDequeTest.testPush":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":13,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":27,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":16,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":19,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":69,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":41,"com.graphhopper.reader.OSMReaderTest.testOneWay":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":45,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":71,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":70,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":37,"com.graphhopper.GraphHopperAPITest.testLoad":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":76,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":40,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":48,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":80,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":28,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":46},"transformations":[{"failures":[0,1],"tindex":"2634f3ed-792a-11e5-9072-cb4c88d51e85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:334","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"noNumberValue":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"26351afe-792a-11e5-9072-13f2ff97f664","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:442","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"26351aff-792a-11e5-9072-c12c3bf97e90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:120","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[],"tindex":"26351b00-792a-11e5-9072-c7d3b414bbb1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:105","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    java.io.RandomAccessFile.writeInt(int[][int]);\n}"},"status":0},{"failures":[],"tindex":"26351b01-792a-11e5-9072-ef0f424bdb0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:314","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false)"},"status":-2},{"failures":[],"tindex":"26351b02-792a-11e5-9072-8f4b0936380c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"26354213-792a-11e5-9072-17fd1d3ea7d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":-2},{"failures":[],"tindex":"26354214-792a-11e5-9072-6bd91328f332","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-2},{"failures":[],"tindex":"26354215-792a-11e5-9072-cbee93099c7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"status":-2},{"failures":[],"tindex":"26354216-792a-11e5-9072-4b93e316d54b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:415","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\":rural\")) || (java.lang.String.endsWith(\":trunk\")))\n    return 80;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-2},{"failures":[],"tindex":"26354217-792a-11e5-9072-fd4522ace3d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:58","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc"},"variableMap":{"calc":"distanceCalc","com.graphhopper.util.Helper.DIST_EARTH":"distanceCalc"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:52","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DistanceCalc = com.graphhopper.util.DistanceCalc"},"status":-2},{"failures":[],"tindex":"26354218-792a-11e5-9072-57f9a0b019cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"status":-2},{"failures":[],"tindex":"26354219-792a-11e5-9072-553e25980444","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:143","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n    com.graphhopper.routing.AStar.AStarEdge.double += com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, false);\n    com.graphhopper.routing.AStar.AStarEdge.double += com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, true);\n} "},"status":-2},{"failures":[],"tindex":"2635421a-792a-11e5-9072-11a754534899","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[],"tindex":"2635692b-792a-11e5-9072-f323ee847d72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"exitNumber","indexDivisor":"exitNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"status":-2},{"failures":[],"tindex":"2635692c-792a-11e5-9072-399252c46796","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:132","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DouglasPeucker = com.graphhopper.util.DouglasPeucker"},"variableMap":{"douglasPeucker":"simplifyAlgo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:981","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.setMaxDistance(double)"},"status":-2},{"failures":[],"tindex":"2635692d-792a-11e5-9072-5959b6d582f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"2635692e-792a-11e5-9072-2d2011b2c5e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:465","type":"CtReturnImpl","sourcecode":"return (java.lang.Character.toUpperCase(java.lang.String.charAt(0))) + (java.lang.String.substring(1))"},"variableMap":{"sayText":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:157","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"2635692f-792a-11e5-9072-bf239dfa6056","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:352","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(com.graphhopper.reader.OSMWay.getId())"},"status":-2},{"failures":[],"tindex":"26356930-792a-11e5-9072-cb8ba261b157","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}