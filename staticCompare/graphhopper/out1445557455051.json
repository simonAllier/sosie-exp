{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":8,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":57,"com.graphhopper.reader.OSMReaderTest.testFerry":76,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":53,"com.graphhopper.reader.OSMReaderTest.testWithBounds":85,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":46,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":51,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":45,"com.graphhopper.GraphHopperTest.testPrepare":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":16,"com.graphhopper.util.InstructionListTest.testWayList2":31,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":98,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":9,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":5,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":11,"com.graphhopper.util.BitUtilLittleTest.testToBitString":25,"com.graphhopper.util.InstructionListTest.testWayList":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":59,"com.graphhopper.reader.OSMReaderTest.testOneWay":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":100,"com.graphhopper.GraphHopperAPITest.testDisconnected179":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":54,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.coll.OSMIDMapTest.testGet":24,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":72,"com.graphhopper.GraphHopperTest.testLoadOSM":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":44,"com.graphhopper.reader.OSMReaderTest.testSort":78,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":15,"com.graphhopper.reader.OSMReaderTest.testMain":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":41,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":40,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":60,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":81,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":3,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":63,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":14,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":32,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":49,"com.graphhopper.GraphHopperTest.testFootAndCar":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":58,"com.graphhopper.util.BitUtilLittleTest.testToFloat":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":13,"com.graphhopper.GraphHopperTest.testPrepareOnly":88,"com.graphhopper.GraphHopperTest.testVia":89,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":95,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":83,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":4,"com.graphhopper.GraphHopperAPITest.testLoad":74,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":18,"com.graphhopper.GraphHopperTest.testFootOnly":96,"com.graphhopper.util.BitUtilLittleTest.testToInt":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":66,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":67,"com.graphhopper.util.InstructionListTest.testFind":29,"com.graphhopper.reader.OSMReaderTest.testBarriers":79,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":20,"com.graphhopper.util.GHUtilityTest.testCopy":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69},"transformations":[{"failures":[],"tindex":"cda08b33-7916-11e5-95cf-a53a24ff7f74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.bytesForFlags\", com.graphhopper.routing.util.EncodingManager.getBytesForFlags())"},"status":0},{"failures":[],"tindex":"cda0b244-7916-11e5-95cf-e5ab70987f10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"cda0b245-7916-11e5-95cf-019f61f5a69d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"da","index":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:78","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"cda0b246-7916-11e5-95cf-6d44ae3f55c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"status":-1},{"failures":[97,98,99,100,101],"tindex":"cda0d957-7916-11e5-95cf-e3e20042771d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"cda0d958-7916-11e5-95cf-cfd721f547dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"cda0d959-7916-11e5-95cf-d5282c54817f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-2},{"failures":[],"tindex":"cda0d95a-7916-11e5-95cf-61b56f4c403f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"com.graphhopper.util.Instruction.USE_ROUNDABOUT","nextEdgeOther":"com.graphhopper.util.Instruction.USE_ROUNDABOUT","nodeOther":"com.graphhopper.util.Instruction.USE_ROUNDABOUT","nextEdge":"com.graphhopper.util.Instruction.USE_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:134","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    if (!(boolean)) {\n        java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\");\n    } else {\n        java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String);\n    }\n} else {\n    throw new java.lang.IllegalStateException((int + \"no Roundabout indication\"));\n}"},"status":-2},{"failures":[],"tindex":"cda1006b-7916-11e5-95cf-1f4400879b4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"intVal","i":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:273","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"cda1006c-7916-11e5-95cf-cb6c1aee16b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"variableMap":{"str":"str","edgeEncoders":"edgeEncoders"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:298","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion());\n}"},"status":-2},{"failures":[],"tindex":"cda1006d-7916-11e5-95cf-8d73f3d7ea49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"relBitMask","highKey":"relBitMask","key":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"cda1277e-7916-11e5-95cf-0b1006a65c1e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:179","type":"CtWhileImpl","sourcecode":"while (!(java.util.zip.Deflater.finished())) {\n    int int = java.util.zip.Deflater.deflate(byte[]);\n    java.io.ByteArrayOutputStream.write(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"cda1277f-7916-11e5-95cf-c30e91460ecf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"variableMap":{"com.graphhopper.routing.QueryGraph.VE_BASE_REV":"virtNode","virtualEdges":"virtualEdges","i":"virtNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:683","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = boolean ? java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int))) : java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-2},{"failures":[],"tindex":"cda12780-7916-11e5-95cf-23a8f8d53741","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"blockFords"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:149","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"cda12781-7916-11e5-95cf-6f0c40ee3f9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-2},{"failures":[],"tindex":"cda12782-7916-11e5-95cf-cb0130bcb06f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:170","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.NaN":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:143","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"cda14d93-7916-11e5-95cf-1954a2285613","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"r_lon_deg","incDist2DSum":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:226","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"cda14d94-7916-11e5-95cf-3d113ffc4d38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"lastElem","nextEdgeId":"lastElem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:127","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"cda14d95-7916-11e5-95cf-35e26d536cbb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"a_lat_deg","tmp":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:131","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-2},{"failures":[],"tindex":"cda14d96-7916-11e5-95cf-d7420ee868d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:151","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}