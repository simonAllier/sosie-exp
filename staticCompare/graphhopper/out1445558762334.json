{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":39,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":32,"com.graphhopper.reader.OSMReaderTest.testMain":74,"com.graphhopper.routing.PathTest.testFindInstruction":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":15,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":46,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":54,"com.graphhopper.routing.QueryGraphTest.testOneWay":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":66,"com.graphhopper.routing.PathTest.testWayList":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":17,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":3,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":48,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":31,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":6,"com.graphhopper.GraphHopperTest.testPrepare":86,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":2,"com.graphhopper.GraphHopperTest.testFootAndCar":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":63,"com.graphhopper.util.InstructionListTest.testWayList2":72,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":33,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":50,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":35,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.util.InstructionListTest.testWayList":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":37,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":41,"com.graphhopper.GraphHopperTest.testVia":85,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":43,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":24,"com.graphhopper.GraphHopperAPITest.testLoad":40,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":78,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":18,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":47,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":73,"com.graphhopper.GraphHopperTest.testFootOnly":92,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":84,"com.graphhopper.util.InstructionListTest.testFind":70,"com.graphhopper.reader.OSMReaderTest.testBarriers":76,"com.graphhopper.GraphHopperTest.testLoadOSM":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":82,"com.graphhopper.reader.OSMReaderTest.testSort":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":80},"transformations":[{"failures":[],"tindex":"d8d3f23a-7919-11e5-8c54-8b6e24304762","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"d8d4194b-7919-11e5-8c54-c556a600f3b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"d8d4194c-7919-11e5-8c54-5dd33bf9d2bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:909","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n    com.graphhopper.util.PointList.reverse();\n} else {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[],"tindex":"d8d4405d-7919-11e5-8c54-fb365c44eb5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.util.Constants.VERSION_NODE","nextEdgeId":"com.graphhopper.util.Constants.VERSION_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:153","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.StorableProperties.(check(\"nodes\", com.graphhopper.util.Constants.int, boolean)))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"d8d4405e-7919-11e5-8c54-110654c9c439","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"d8d4405f-7919-11e5-8c54-b310ca7fa50c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"d8d44060-7919-11e5-8c54-5d95e0793500","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((((int) * (int)) * 4))"},"status":-2},{"failures":[],"tindex":"d8d46771-7919-11e5-8c54-f99497861001","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"newSize","nodeCount":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:105","type":"CtIfImpl","sourcecode":"if (int <= (double[].int))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"d8d46772-7919-11e5-8c54-6d5e0e7c2dfe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trk>\")"},"variableMap":{"track":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-2},{"failures":[],"tindex":"d8d46773-7919-11e5-8c54-f95b2dd3204b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)"},"status":-2},{"failures":[],"tindex":"d8d46774-7919-11e5-8c54-2d9ce0d0e5d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:173","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d8d46775-7919-11e5-8c54-551845f2a32a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:182","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"variableMap":{"shift":"priorityFromRelation","backwardBit":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:316","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[],"tindex":"d8d48e86-7919-11e5-8c54-d1cb2f02aa35","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:167","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"d8d48e87-7919-11e5-8c54-2f0eaf31f58d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:722","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < (int) ; long += 4) {\n    com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n}"},"status":-2},{"failures":[],"tindex":"d8d48e88-7919-11e5-8c54-e781fd066e06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:107","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-2},{"failures":[],"tindex":"d8d48e89-7919-11e5-8c54-4f9738df73b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:91","type":"CtAssignmentImpl","sourcecode":"java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry()"},"status":-2},{"failures":[],"tindex":"d8d4b59a-7919-11e5-8c54-8db550e9474e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"variableMap":{"index":"bufferIndex","bufferIndex":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:272","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    return ((short)(int[][][int][int]));\nelse\n    return ((short)((int[][][int][int]) >> 16));\n"},"status":-2},{"failures":[],"tindex":"d8d4b59b-7919-11e5-8c54-616c365c3f51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"variableMap":{"latSize":"indexDivisor","lonSize":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:271","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"d8d4b59c-7919-11e5-8c54-03ed325045c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:185","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n}"},"status":-2},{"failures":[],"tindex":"d8d4b59d-7919-11e5-8c54-cd869c10691f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"indexWithMaxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:169","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}