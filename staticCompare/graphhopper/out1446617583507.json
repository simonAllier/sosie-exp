{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":130,"com.graphhopper.util.BitUtilBigTest.testToDouble":66,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":42,"com.graphhopper.reader.OSMReaderTest.testFerry":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":127,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":70,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":38,"com.graphhopper.reader.OSMReaderTest.testWithBounds":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":98,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":129,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":68,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":132,"com.graphhopper.reader.OSMReaderTest.testFoot":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":45,"com.graphhopper.reader.OSMReaderTest.testOneWay":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":133,"com.graphhopper.GraphHopperAPITest.testDisconnected179":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":126,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":39,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":75,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":84,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":8,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":5,"com.graphhopper.reader.OSMReaderTest.testSort":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":125,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":51,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":78,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":30,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":26,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":21,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":64,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":24,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":89,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":62,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.util.BitUtilBigTest.testToLong":67,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":123,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":32,"com.graphhopper.GraphHopperAPITest.testLoad":19,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":22,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":27,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":28,"com.graphhopper.reader.OSMReaderTest.testBarriers":1,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":101,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":65},"transformations":[{"failures":[0],"tindex":"1b6e328a-82bb-11e5-873d-637a69e9463a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"1b6e599b-82bb-11e5-873d-792051cd5a20","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:598","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()) & (long)"},"status":-2},{"failures":[1,2],"tindex":"1b6e599c-82bb-11e5-873d-fdb03e848841","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = gnu.trove.list.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                gnu.trove.list.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"1b6e80ad-82bb-11e5-873d-ad1e2157b906","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:392","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"status":-2},{"failures":[],"tindex":"1b6e80ae-82bb-11e5-873d-0589ba873e45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:188","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"1b6e80af-82bb-11e5-873d-c15c77d1ada7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"1b6ea7c0-82bb-11e5-873d-cf7ea375aa67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:611","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    com.graphhopper.storage.index.LocationIndexTree.fillIDs((long >>> (byte[][int])), int, gnu.trove.set.hash.TIntHashSet, (int + 1));\n} "},"status":-1},{"failures":[56],"tindex":"1b6ea7c1-82bb-11e5-873d-b76424ec77f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[57],"tindex":"1b6ea7c2-82bb-11e5-873d-9fe687b6d9bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"variableMap":{"synched":"allFound"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:114","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"));\n} "},"status":-1},{"failures":[],"tindex":"1b6ea7c3-82bb-11e5-873d-355b90e963b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:588","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[9,10,11,12,13,14,15,17,1,19,22,27,29,37,42,44],"tindex":"1b6eced4-82bb-11e5-873d-e33ede9fc987","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    \n}"},"status":-1},{"failures":[],"tindex":"1b6eced5-82bb-11e5-873d-dbce192cd186","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:682","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":0},{"failures":[58,59,60,61,62,63],"tindex":"1b6eced6-82bb-11e5-873d-15c5a59864f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"latSize","to":"lonSize","lonSize":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"status":-1},{"failures":[64,65],"tindex":"1b6eced7-82bb-11e5-873d-51708a976425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:153","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[66,67],"tindex":"1b6ef5e8-82bb-11e5-873d-05ab1ba18f12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 24))"},"status":-1},{"failures":[68,69,70,9,10,11,12,13,14,71,15,16,72,73,74,17,18,1,75,76,64,77,2,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"1b6ef5e9-82bb-11e5-873d-d300749878df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[93,116,125,126],"tindex":"1b6ef5ea-82bb-11e5-873d-71d6c8993d6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"speed","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[131,132,133],"tindex":"1b6f1cfb-82bb-11e5-873d-03af08e84266","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"priorityFromRelation","sLon":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:353","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"1b6f1cfc-82bb-11e5-873d-813673b8e8d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:163","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 56"},"status":-2},{"failures":[134,135,56],"tindex":"1b6f1cfd-82bb-11e5-873d-d938cfc3f85e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1b6eced5-82bb-11e5-873d-dbce192cd186","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges"]},"type":"staticDiff"}]}]}