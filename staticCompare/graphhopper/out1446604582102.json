{"failureDictionary":{"com.graphhopper.routing.PathTest.testFindInstruction":46,"com.graphhopper.reader.OSMReaderTest.testFerry":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":29,"com.graphhopper.reader.OSMReaderTest.testWithBounds":79,"com.graphhopper.util.shapes.CircleTest.testContains":93,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":40,"com.graphhopper.util.BitUtilBigTest.testReverse":9,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":105,"com.graphhopper.GraphHopperTest.testPrepare":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.util.InstructionListTest.testWayList2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":35,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":2,"com.graphhopper.util.InstructionListTest.testWayList":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":3,"com.graphhopper.reader.OSMReaderTest.testOneWay":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":98,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":107,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":36,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":106,"com.graphhopper.routing.PathBidirRefTest.testExtract":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":41,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":91,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":56,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":25,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":28,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":7,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.routing.PathBidirRefTest.testExtract2":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":42,"com.graphhopper.routing.PathTest.testWayList":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":100,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.GraphHopperTest.testFootAndCar":63,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":20,"com.graphhopper.search.NameIndexTest.testPut":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":89,"com.graphhopper.util.BitUtilLittleTest.testReverse":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":102,"com.graphhopper.GraphHopperTest.testPrepareOnly":83,"com.graphhopper.GraphHopperTest.testVia":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":90,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":66,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":77,"com.graphhopper.GraphHopperAPITest.testLoad":49,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":53,"com.graphhopper.GraphHopperTest.testFootOnly":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":44,"com.graphhopper.util.InstructionListTest.testFind":50,"com.graphhopper.reader.OSMReaderTest.testBarriers":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":103},"transformations":[{"failures":[],"tindex":"d5fb66a6-829c-11e5-b82e-534d20b684b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:302","type":"CtOperatorAssignmentImpl","sourcecode":"double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[],"tindex":"d5fb8db7-829c-11e5-b82e-69c7835657b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:318","type":"CtReturnImpl","sourcecode":"return \"destinations: \" + java.lang.String"},"variableMap":{"str":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:261","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"d5fb8db8-829c-11e5-b82e-c71395069896","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:190","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"d5fbb4c9-829c-11e5-b82e-c146d83ded82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"priorityFromRelation","key":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.MotorcycleFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, long))"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"d5fbb4ca-829c-11e5-b82e-cb4b87bd7418","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"maxBits","hash":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:256","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[10,11],"tindex":"d5fbb4cb-829c-11e5-b82e-650f43e4b53e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"d5fbb4cc-829c-11e5-b82e-eb1c43475113","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"usedBits","maxLeafEntries":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,10,46,47,48,49,50,11,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"d5fbb4cd-829c-11e5-b82e-cdc5f1442037","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:278","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIteratorState.getBaseNode()"},"status":-1},{"failures":[],"tindex":"d5fbb4ce-829c-11e5-b82e-118c72f0acef","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:55","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, double, double, true)"},"variableMap":{"minLon":"java.lang.Double.NaN","maxEle":"maxLon","maxLat":"minLat","minLat":"java.lang.Double.NaN","minEle":"minLat","this":"this","maxLon":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,60,61,62,63,64,65,85,66,67,86],"tindex":"d5fbdbdf-829c-11e5-b82e-2ff6f8130955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:175","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n        boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n        if (boolean) {\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n            int int = gnu.trove.list.TLongList.size();\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n            }\n            if (((++long) % 5000000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    } \n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n        if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n            com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n        \n        if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n            com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n        \n        if (((++long) % 50000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"d5fbdbe0-829c-11e5-b82e-95be88bbeec4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[46,87,88,89,90,91,50,92,93],"tindex":"d5fbdbe1-829c-11e5-b82e-71a478a8ebaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"fromLat","dy":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:78","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-1},{"failures":[],"tindex":"d5fbdbe2-829c-11e5-b82e-e7e94f5c80fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:613","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:695","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.get(int)"},"status":-2},{"failures":[94,95,96,97,98,70,71,82,84,60,61,62,63,64,65,85,66,86],"tindex":"d5fc02f3-829c-11e5-b82e-e3066d319c3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:91","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-1},{"failures":[65,99],"tindex":"d5fc02f4-829c-11e5-b82e-a9222b5caa70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:572","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setCHWeighting(java.lang.String)"},"variableMap":{"tmpCHWeighting":"ghLocation","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:740","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String))"},"status":-1},{"failures":[],"tindex":"d5fc02f5-829c-11e5-b82e-77f7da1c0368","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:48","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"_location":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"status":0},{"failures":[14,15,16,17,18,21,100,101,102,25,26,27,28,30,31,32,34,35,103,36,104,37,38,39,40,105,106,41,107,108],"tindex":"d5fc02f6-829c-11e5-b82e-c36dea7fee92","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"S_SKIP_EDGE1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:658","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.storage.EdgeAccess.int) + 4"},"status":-1},{"failures":[],"tindex":"d5fc02f7-829c-11e5-b82e-8d9ee477bdd7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"dMinLon","delta_lon":"dMinLat","a_lon":"dMinLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"status":-2},{"failures":[],"tindex":"d5fc02f8-829c-11e5-b82e-0f7956044e43","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"d5fc2a09-829c-11e5-b82e-617cb42c4acc","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:328","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d5fbb4c9-829c-11e5-b82e-c146d83ded82","diffs":[{"branches":{"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":["com.graphhopper.routing.util.MotorcycleFlagEncoder_int_handlePriority(com.graphhopper.reader.OSMWay,long).e2","com.graphhopper.routing.util.MotorcycleFlagEncoder_int_handlePriority(com.graphhopper.reader.OSMWay,long).e1","com.graphhopper.routing.util.EncodedValue_long_setValue(long,long).b","com.graphhopper.reader.OSMElement_<T>_T_getTag(java.lang.String,T).e1","com.graphhopper.routing.util.MotorcycleFlagEncoder_int_handlePriority(com.graphhopper.reader.OSMWay,long).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.util.MotorcycleFlagEncoder.handlePriority","com.graphhopper.routing.util.EncodedValue.setValue"]},"type":"staticDiff"}]}]}