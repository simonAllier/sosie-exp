{"failureDictionary":{"com.graphhopper.routing.PathTest.testFindInstruction":78,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":85,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":97,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":48,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.util.InstructionListTest.testWayList2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":68,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":53,"com.graphhopper.util.InstructionListTest.testWayList":36,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":98,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":74,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":42,"com.graphhopper.routing.PathBidirRefTest.testExtract":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":49,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":63,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":66,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":46,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.routing.PathBidirRefTest.testExtract2":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":73,"com.graphhopper.routing.PathTest.testWayList":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":60,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":94,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":82,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":65,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":88,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":92,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.GraphHopperAPITest.testLoad":81,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":83,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.util.InstructionListTest.testFind":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":55,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":95},"transformations":[{"failures":[0],"tindex":"047e4c83-7918-11e5-977d-61d0ec801a5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:78","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"047e7394-7918-11e5-977d-61a5561cda5c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"eof"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:157","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[28,29,30,31,32,33,4,7,12,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"047e7395-7918-11e5-977d-bd6bf682f8b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:237","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.EdgeIterable.init(int, int))\n    return com.graphhopper.storage.BaseGraph.EdgeIterable;\n"},"status":-1},{"failures":[],"tindex":"047e7396-7918-11e5-977d-a790df192a88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:134","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"047e7397-7918-11e5-977d-2d66dae79087","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:720","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"variableMap":{"graphHopperFolder":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"047e7398-7918-11e5-977d-8366c88e694e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"047e9aa9-7918-11e5-977d-e544a89ac738","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"047e9aaa-7918-11e5-977d-0547c7d699ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"ret"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:131","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"047e9aab-7918-11e5-977d-b1c9baa5a2e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:190","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"047e9aac-7918-11e5-977d-75f5d36d9289","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge1","b":"from","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:84","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"047e9aad-7918-11e5-977d-71ec4cc1ceab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:164","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"047e9aae-7918-11e5-977d-0fd280f46a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:122","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-2},{"failures":[],"tindex":"047e9aaf-7918-11e5-977d-211f1326aab3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:184","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((\"<?xml version=\\'1.0\\' encoding=\\'UTF-8\\' standalone=\\'no\\' ?>\" + (\"<gpx xmlns=\\'http://www.topografix.com/GPX/1/1\\' xmlns:xsi=\\'http://www.w3.org/2001/XMLSchema-instance\\'\" + (\" creator=\\'Graphhopper\\' version=\\'1.1\\'\" + (\" xmlns:gh=\\'https://graphhopper.com/public/schema/gpx/1.1\\'>\" + (\"\\n<metadata>\" + (\"<copyright author=\\\"OpenStreetMap contributors\\\"/>\" + (\"<link href=\\'http://graphhopper.com\\'>\" + (\"<text>GraphHopper GPX<\/text>\" + (\"<\/link>\" + \"<time>\"))))))))) + (java.text.SimpleDateFormat.format(long))) + \"<\/time>\") + \"<\/metadata>\""},"status":-2},{"failures":[],"tindex":"047ec1c0-7918-11e5-977d-b7fe5afbfe4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"tmp","id":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:957","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"047ec1c1-7918-11e5-977d-e933d695aa5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"047ec1c2-7918-11e5-977d-4f83ef7cc631","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"variableMap":{"graphHopperFolder":"direction","ghLocation":"direction","osmFile":"direction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:246","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.isEmpty()))\n    java.lang.StringBuilder.append(\"<gh:direction>\").append(java.lang.String).append(\"<\/gh:direction>\");\n"},"status":-2},{"failures":[],"tindex":"047ec1c3-7918-11e5-977d-0903b790fd47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:598","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3))"},"status":-2},{"failures":[],"tindex":"047ec1c4-7918-11e5-977d-4b01263e811d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:380","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"047ee8d5-7918-11e5-977d-13fe482fc6d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"status":-2},{"failures":[],"tindex":"047ee8d6-7918-11e5-977d-75d42abec820","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:112","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.Instruction>.isEmpty()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}