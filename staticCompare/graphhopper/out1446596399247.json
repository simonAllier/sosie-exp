{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":284,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":232,"com.graphhopper.reader.OSMReaderTest.testFerry":80,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":220,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":244,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":248,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":69,"com.graphhopper.routing.QueryGraphTest.testOneWay":254,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":231,"com.graphhopper.reader.OSMReaderTest.testWithBounds":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":60,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":293,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":63,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":156,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":177,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":269,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":194,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":39,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":257,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":186,"com.graphhopper.util.InstructionListTest.testWayList":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":190,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":239,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":209,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":117,"com.graphhopper.GraphHopperAPITest.testDisconnected179":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":208,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":20,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":187,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":136,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":307,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":311,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":62,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":272,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":270,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":137,"com.graphhopper.reader.OSMReaderTest.testSort":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":282,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":222,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":104,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":207,"com.graphhopper.storage.RAMDataAccessTest.testHeader":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":196,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":252,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":309,"com.graphhopper.storage.MMapDataAccessTest.testHeader":53,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":301,"com.graphhopper.routing.PathTest.testWayList":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":166,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":54,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":197,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":135,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":210,"com.graphhopper.reader.OSMNodeTest.testSetTags":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":167,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":192,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":203,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":306,"com.graphhopper.util.GHUtilityTest.testSort":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":139,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":98,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":256,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":151,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":74,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":111,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":300,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":245,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":225,"com.graphhopper.GraphHopperAPITest.testLoad":201,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":291,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":40,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":64,"com.graphhopper.routing.PathTest.testFound":303,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":234,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":188,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":132,"com.graphhopper.routing.PathTest.testFindInstruction":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":25,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":29,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":230,"com.graphhopper.util.InstructionListTest.testEmptyList":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":191,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":46,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":263,"com.graphhopper.reader.PrinctonReaderTest.testRead":310,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":113,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":121,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":130,"com.graphhopper.util.InstructionListTest.testWayList2":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":238,"com.graphhopper.reader.OSMReaderTest.testFoot":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":143,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":140,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":105,"com.graphhopper.reader.OSMReaderTest.testOneWay":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":44,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":50,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":61,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":271,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":260,"com.graphhopper.routing.PathBidirRefTest.testExtract":287,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":12,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":289,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":114,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":165,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":8,"com.graphhopper.util.GHUtilityTest.testSort2":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":283,"com.graphhopper.reader.OSMReaderTest.testMain":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":126,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":250,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":242,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":110,"com.graphhopper.routing.PathBidirRefTest.testExtract2":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":290,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":168,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":154,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":96,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":108,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":240,"com.graphhopper.storage.GraphHopperStorageTest.testClone":41,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":127,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":315,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":175,"com.graphhopper.routing.PathTest.testTime":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":26,"com.graphhopper.util.GHUtilityTest.testSortDirected":217,"com.graphhopper.GraphHopperTest.testPrepareOnly":78,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":152,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":280,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":88,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":155,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":243,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":5,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":237,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":160,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":305,"com.graphhopper.util.InstructionListTest.testFind":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":146},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"c89fe294-8289-11e5-95f4-e784fd273eac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"variableMap":{"val":"storedInt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:383","type":"CtReturnImpl","sourcecode":"return ((double)(int)) / (com.graphhopper.util.Helper.float)"},"status":-2},{"failures":[6,78,13,14,15,16,17,18,19,20,21,22,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"c8a009a5-8289-11e5-95f4-7fb9236f8d07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:373","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[93,94,25,27,29,95,30,96,33,34,35,97,36,98,99,100,101,40,42,44,102,45,103,48,49,50,104,51,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"c8a030b6-8289-11e5-95f4-e368c093c1ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"segmentSizeInBytes","tmp":"segmentSizeInBytes","segmentSizeInBytes":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[14,17,82,87,90],"tindex":"c8a030b7-8289-11e5-95f4-458cc65dc662","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"variableMap":{"pl":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:757","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"status":-1},{"failures":[129,130],"tindex":"c8a030b8-8289-11e5-95f4-399e267e571d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"c8a030b9-8289-11e5-95f4-b9947041c7f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"variableMap":{"edge":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false)"},"status":-2},{"failures":[],"tindex":"c8a030ba-8289-11e5-95f4-93d5bb01f513","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:180","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"c8a030bb-8289-11e5-95f4-97308d73c0d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getBaseNode()"},"status":-2},{"failures":[131,132],"tindex":"c8a057cc-8289-11e5-95f4-b9e0394e99f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:361","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"variableMap":{"clonePL":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:107","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int))"},"status":-1},{"failures":[0,1,2,3,4,133,5,7,8,9,10,11,12,14,15,16,17,18,19,21,22,23,25,26,29,30,31,32,33,34,35,36,38,40,41,44,45,46,47,48,49,50,51,56,57,60,61,62,63,64,65,66,67,72,73,74,75,76,77,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,116,176,118,120,177,178,122,123,124,126,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,80,81,82,83,84,85,86,202,87,88,89,90,91,92],"tindex":"c8a057cd-8289-11e5-95f4-9514bd6886e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-1},{"failures":[203,204,205,206,207,208,209,210,211,212],"tindex":"c8a057ce-8289-11e5-95f4-0f133aba42fd","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:307","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"variableMap":{"str":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:441","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[213,214,215,216,0,1,2,217,3,218,219,4,133,5,220,221,7,8,9,10,11,12,16,23,93,222,223,224,225,100,38,226,227,228,229,230,72,73,74,75,76,77,134,135,231,136,137,138,232,233,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,234,154,235,155,156,236,157,158,159,237,238,160,161,162,163,164,165,166,167,168,239,169,170,171,172,173,240,241,242,243,114,175,244,245,246,247,247,248,248,179,179,249,249,180,180,250,250,181,181,251,251,182,182,252,252,183,183,253,253,254,254,255,255,256,256,184,184,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,185,273,274,186,187,275,276,277,188,278,279,189,190,280,281,282,191,192,283,193,194,284,285,195,286,196,197,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,198,199,200,306,307,201,308,309,310,311,80,81,82,83,84,85,86,202,87,312,88,89,90,91,92],"tindex":"c8a057cf-8289-11e5-95f4-f1bb84e2d2d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[4,5],"tindex":"c8a07ee0-8289-11e5-95f4-55c4d5729377","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:143","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(0)"},"status":-1},{"failures":[85,313],"tindex":"c8a07ee1-8289-11e5-95f4-ad78b46e3139","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:88","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:98","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.parseDouble(java.lang.String)"},"status":-1},{"failures":[],"tindex":"c8a07ee2-8289-11e5-95f4-8be29ac49eb3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":0},{"failures":[14,185,186,187,188,189,190,191,192,193,194,285,195,196,197],"tindex":"c8a07ee3-8289-11e5-95f4-139b404b3555","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:408","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (boolean)\n        double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n    else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n    \n} "},"status":-1},{"failures":[],"tindex":"c8a07ee4-8289-11e5-95f4-5773839fd6c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:836","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"maxTurnCosts":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:135","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n        byte[] byte[] = new byte[int];\n        for (int int = 0 ; int < int ; int++) {\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-1},{"failures":[0,1,2,3,4,133,5,78,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,134,135,231,136,137,138,232,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,234,154,155,156,236,157,158,159,237,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,314,116,176,117,118,120,177,178,122,123,124,126,247,248,179,249,180,250,181,251,182,252,183,253,254,255,184,185,186,187,188,189,190,191,192,193,194,285,195,196,197,198,199,200,201,80,81,82,83,84,85,86,202,87,88,89,90,91,92],"tindex":"c8a0a5f5-8289-11e5-95f4-d76a2bc93873","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:369","type":"CtReturnImpl","sourcecode":"return ((int)(double * (com.graphhopper.util.Helper.float)))"},"status":-1},{"failures":[],"tindex":"c8a0a5f6-8289-11e5-95f4-4fc6ff804f22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:561","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:375","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[131,132,315],"tindex":"c8a0a5f7-8289-11e5-95f4-2579766fc84e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"tmp","dY":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:58","type":"CtReturnImpl","sourcecode":"return double * double"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}