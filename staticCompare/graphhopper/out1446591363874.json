{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":2,"com.graphhopper.search.NameIndexTest.testCreate":21,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":86,"com.graphhopper.reader.OSMReaderTest.testMain":51,"com.graphhopper.routing.PathTest.testFindInstruction":47,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":60,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":40,"com.graphhopper.routing.PathTest.testWayList":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":92,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":17,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":79,"com.graphhopper.reader.OSMReaderTest.testWithBounds":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":1,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":15,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":81,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":83,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":27,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":59,"com.graphhopper.GraphHopperTest.testPrepare":31,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":85,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":87,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":77,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":48,"com.graphhopper.search.NameIndexTest.testFlush":19,"com.graphhopper.reader.OSMReaderTest.testFoot":50,"com.graphhopper.routing.PathTest.testTime":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":7,"com.graphhopper.search.NameIndexTest.testPut":18,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":69,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":12,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":64,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":36,"com.graphhopper.GraphHopperTest.testPrepareOnly":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":57,"com.graphhopper.GraphHopperTest.testVia":30,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":49,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":13,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":41,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":26,"com.graphhopper.GraphHopperTest.testFootOnly":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":78,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":84,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":4,"com.graphhopper.storage.EdgeTest.testCloneFull":5,"com.graphhopper.util.InstructionListTest.testFind":22,"com.graphhopper.GraphHopperTest.testLoadOSM":35,"com.graphhopper.routing.PathTest.testFound":42,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":39,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":56,"com.graphhopper.reader.OSMReaderTest.testSort":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":90},"transformations":[{"failures":[],"tindex":"0f4eca12-827e-11e5-bd43-55873b47590f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"nodeA","mainNodes":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:498","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"0f4ef123-827e-11e5-bd43-4d0503583007","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM_INT","defaultType":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"0f4ef124-827e-11e5-bd43-a7c941c192e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:254","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.TIntList.size()) ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(gnu.trove.list.TIntList.get(int));\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false));\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"0f4f1835-827e-11e5-bd43-53d263948086","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"variableMap":{"nodeCount":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:130","type":"CtLocalVariableImpl","sourcecode":"long long = long + (int * long)"},"status":-2},{"failures":[],"tindex":"0f4f1836-827e-11e5-bd43-678e4ed633cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:250","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[5],"tindex":"0f4f1837-827e-11e5-bd43-93d76e109efb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:50","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.EdgeEntry != null) {\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone();\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-1},{"failures":[],"tindex":"0f4f1838-827e-11e5-bd43-d593035b12f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:440","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0f4f3f49-827e-11e5-bd43-0f15d6a2a3fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.trimToSize()"},"status":0},{"failures":[],"tindex":"0f4f3f4a-827e-11e5-bd43-2b559387f669","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:239","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"variableMap":{"swapIndex":"i","i":"i","latitudes":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:419","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"0f4f3f4b-827e-11e5-bd43-b9545a6aec60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:98","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    if ((byte[].int) > 255) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n        com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n        java.lang.String = java.lang.String;\n        continue;\n    } \n    break;\n}"},"status":-1},{"failures":[],"tindex":"0f4f3f4c-827e-11e5-bd43-9505a6b56475","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"status":0},{"failures":[],"tindex":"0f4f665d-827e-11e5-bd43-499f82a3be62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - 1) - ((int)((((int) / (int)) * double)))"},"status":-2},{"failures":[6,11,14,53,55],"tindex":"0f4f665e-827e-11e5-bd43-4f7f1b3f23c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"elev"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:122","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"0f4f665f-827e-11e5-bd43-7bfdea2dedab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"variableMap":{"bits":"E_LINKA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:224","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int)"},"status":-1},{"failures":[85,86,87],"tindex":"0f4f6660-827e-11e5-bd43-2d34a413f0b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:169","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int)"},"status":-1},{"failures":[],"tindex":"0f4f6661-827e-11e5-bd43-bf03e1a2cbf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:182","type":"CtLocalVariableImpl","sourcecode":"java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:197","type":"CtLocalVariableImpl","sourcecode":"java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream(byte[].int)"},"status":-2},{"failures":[88,89],"tindex":"0f4f8d72-827e-11e5-bd43-6320d20b3bc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:91","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-1},{"failures":[22,23,24,25,26,90,40,41,44,45,48,49,91],"tindex":"0f4f8d73-827e-11e5-bd43-f31b9add319f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:84","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n        continue;\n    \n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n    double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n    if (com.graphhopper.storage.EdgeEntry == null) {\n        com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n        com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.storage.EdgeEntry.double = double;\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else\n        continue;\n    \n    com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n}"},"status":-1},{"failures":[92,76],"tindex":"0f4f8d74-827e-11e5-bd43-796b358763a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"flags","mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0f4f3f49-827e-11e5-bd43-0f15d6a2a3fb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.trimToSize"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":["com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":["com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.storage.MMapDataAccess_void_trimTo(long).b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).l1","com.graphhopper.util.Helper_java.util.List_readFile(java.io.Reader).b","com.graphhopper.storage.MMapDataAccess_void_trimTo(long).t3","com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.storage.MMapDataAccess_void_trimTo(long).e1","com.graphhopper.util.Helper_java.util.List_readFile(java.io.Reader).l1","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).b","com.graphhopper.storage.MMapDataAccess_void_trimTo(long).e2"],"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":["com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e1"]},"type":"branch"}]},{"transformation":"0f4f3f4c-827e-11e5-bd43-9505a6b56475","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"]},"type":"branch"}]}]}