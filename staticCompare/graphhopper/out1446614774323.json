{"failureDictionary":{"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":88,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":11,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":50,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":54,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":57,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":58,"com.graphhopper.GraphHopperTest.testPrepare":120,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":16,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":10,"com.graphhopper.reader.OSMReaderTest.testOneWay":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":47,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":65,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":60,"com.graphhopper.GraphHopperTest.testLoadOSM":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":6,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":82,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":138,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":149,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":131,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":107,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.GraphHopperTest.testPrepareOnly":118,"com.graphhopper.GraphHopperTest.testVia":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":135,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":75,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":108,"com.graphhopper.GraphHopperTest.testFootOnly":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":49,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":84,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":41,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":110,"com.graphhopper.util.GHUtilityTest.testCopy":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":92},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"9105d298-82b4-11e5-9c48-b10799402bfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"9105f9a9-82b4-11e5-9c48-fbdf71b4ec82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"firstNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:703","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"9105f9aa-82b4-11e5-9c48-5bc5fe2b4bed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Downloader:57","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"9105f9ab-82b4-11e5-9c48-5f10b80a6a91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:732","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getBaseNode();\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && (!(com.graphhopper.coll.GHBitSet.contains(int))))\n        continue;\n    \n    int int = com.graphhopper.coll.SparseIntIntArray.get(int);\n    if (int < 0)\n        int = int;\n    \n    int int = com.graphhopper.coll.SparseIntIntArray.get(int);\n    if (int < 0)\n        int = int;\n    \n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n    int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long);\n    int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long);\n    long long = com.graphhopper.storage.EdgeAccess.getFlags_(long, false);\n    com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, int, int);\n    com.graphhopper.storage.EdgeAccess.setFlags_(long, (int > int), long);\n    if ((int < int) != (int < int))\n        com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false);\n    \n}"},"status":-1},{"failures":[],"tindex":"910620bc-82b4-11e5-9c48-b51d34b9b962","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"minEle","x":"minEle","absY":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:184","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)))"},"status":-2},{"failures":[53,54,55,56,57,58,59,60],"tindex":"910620bd-82b4-11e5-9c48-b7fe1d48ec24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[61],"tindex":"910620be-82b4-11e5-9c48-7b40d600db27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"val","factor":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:143","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"910620bf-82b4-11e5-9c48-5beda10ec45d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:787","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.putAlgorithmFactory(com.graphhopper.routing.util.Weighting, (com.graphhopper.routing.RoutingAlgorithmFactory = new com.graphhopper.routing.RoutingAlgorithmFactorySimple()))"},"status":0},{"failures":[],"tindex":"910647d0-82b4-11e5-9c48-0976b620d55b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:315","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Directory) != null)\n    return com.graphhopper.storage.Directory;\n"},"variableMap":{"dir":"outdir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Directory"},"status":-2},{"failures":[62,63],"tindex":"910647d1-82b4-11e5-9c48-d1e1328fbcae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:881","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareHighwayNode(long)"},"status":-1},{"failures":[],"tindex":"910647d2-82b4-11e5-9c48-5777aaffdde9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"factor","x1":"a_lon","x2":"delta_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:165","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-2},{"failures":[20,21,23,25,26,27,28,30,32,33,34,35,37,39,40,41,42,44,46,47,51,52,64],"tindex":"910647d3-82b4-11e5-9c48-bd2de37a6f26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"mSize":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:752","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"91066ee4-82b4-11e5-9c48-c7fd4cad4548","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:168","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"variableMap":{"name":"specificBicycleClass"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:564","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(java.lang.String)"},"status":-1},{"failures":[],"tindex":"91066ee5-82b4-11e5-9c48-7d775ba0773d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:416","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[103,104,105,106,107,108,109,110,53,111,54,112,113,55,56,57,58,59,60],"tindex":"91066ee6-82b4-11e5-9c48-bde84d301203","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:165","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"91066ee7-82b4-11e5-9c48-b17d1f3daab6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[114,115],"tindex":"910695f8-82b4-11e5-9c48-973ba482d6fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:588","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[103,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,106,135,107,136,137,138,139,140,141,142,108,143,109,144,110,53,111,54,112,113,145,55,146,56,57,58,147,59,60],"tindex":"910695f9-82b4-11e5-9c48-5f9d4ad35ff3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[148,149],"tindex":"910695fa-82b4-11e5-9c48-33d84cec2d70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"variableMap":{"bytePos":"storedKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"910695fb-82b4-11e5-9c48-316a92ffc5fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"length","edgeFrom":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:55","type":"CtReturnImpl","sourcecode":"return byte[].int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"910620bf-82b4-11e5-9c48-5beda10ec45d","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).b","com.graphhopper.util.PathMerger_void_doWork(com.graphhopper.GHResponse,java.util.List,com.graphhopper.util.Translation).t4","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).t3","com.graphhopper.util.PointList_void_trimToSize(int).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.PathMerger_void_doWork(com.graphhopper.GHResponse,java.util.List,com.graphhopper.util.Translation).e4","com.graphhopper.util.PointList_void_trimToSize(int).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).e1","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setSimplifyResponse(boolean).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).l5","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).b","com.graphhopper.util.PathMerger_void_doWork(com.graphhopper.GHResponse,java.util.List,com.graphhopper.util.Translation).t4","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).t3","com.graphhopper.util.PointList_void_trimToSize(int).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.PathMerger_void_doWork(com.graphhopper.GHResponse,java.util.List,com.graphhopper.util.Translation).e4","com.graphhopper.util.PointList_void_trimToSize(int).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).e1","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setSimplifyResponse(boolean).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).l5","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"]},"type":"branch"}]}]}