{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":48,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":33,"com.graphhopper.util.BitUtilBigTest.testToDouble":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":51,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.util.BitUtilLittleTest.testToLong":5,"com.graphhopper.reader.OSMReaderTest.testFerry":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":69,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":57,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":45,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":61,"com.graphhopper.util.BitUtilLittleTest.testToDouble":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":9,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":65,"com.graphhopper.GraphHopperTest.testPrepare":14,"com.graphhopper.GraphHopperTest.testFootAndCar":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.reader.OSMReaderTest.testFoot":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":42,"com.graphhopper.coll.OSMIDMapTest.testGetLong":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":41,"com.graphhopper.util.InstructionListTest.testCreateGPX":6,"com.graphhopper.reader.OSMReaderTest.testOneWay":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":68,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":3,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":19,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.util.BitUtilBigTest.testToLong":1,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":47,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":28,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":29,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":54,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":7,"com.graphhopper.GraphHopperTest.testFootOnly":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":55,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":60,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":67,"com.graphhopper.GraphHopperTest.testLoadOSM":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":40,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":58,"com.graphhopper.util.GHUtilityTest.testCopy":71,"com.graphhopper.reader.OSMReaderTest.testSort":26},"transformations":[{"failures":[0,1],"tindex":"74cbbc0d-7933-11e5-b78b-6dbeec07ab5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 24))"},"status":-1},{"failures":[2,3,4,5],"tindex":"74cbe31e-7933-11e5-b78b-91b1c5219e36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:80","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(long >> 16))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:79","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(long >> 24))"},"status":-1},{"failures":[6,7],"tindex":"74cbe31f-7933-11e5-b78b-5df1bfcbe0ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:254","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/extensions>\")"},"status":-1},{"failures":[8,9],"tindex":"74cbe320-7933-11e5-b78b-c3da4f687db0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[6,7],"tindex":"74cbe321-7933-11e5-b78b-7f0fc50f45d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.ViaInstruction:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setDistance(com.graphhopper.util.Instruction.getDistance())"},"variableMap":{"instr":"nextInstr","this":"nextInstr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:207","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Instruction = com.graphhopper.util.Instruction"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"74cbe322-7933-11e5-b78b-93292fb7359c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,13,21],"tindex":"74cbe323-7933-11e5-b78b-99cbf90b2a95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"N_CH_REF"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-1},{"failures":[],"tindex":"74cc0a34-7933-11e5-b78b-b37e5097df4f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"74cc0a35-7933-11e5-b78b-e7b69e902f7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"nodeVia","edge2":"edgeFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"74cc0a36-7933-11e5-b78b-a9a6649a8d5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-2},{"failures":[],"tindex":"74cc0a37-7933-11e5-b78b-3352c946f956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:50","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.Weighting = com.graphhopper.routing.util.Weighting"},"status":-2},{"failures":[],"tindex":"74cc0a38-7933-11e5-b78b-75265c5aad56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:385","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"74cc3149-7933-11e5-b78b-93941351d888","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:720","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-2},{"failures":[],"tindex":"74cc314a-7933-11e5-b78b-8b118ccd4fe8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:778","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.Lock != null)\n    com.graphhopper.storage.Lock.release();\n"},"variableMap":{"lock":"lock"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:632","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"74cc314b-7933-11e5-b78b-6d2645f19fd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"NO_TURN_ENTRY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:225","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"74cc314c-7933-11e5-b78b-4745a46428c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"lon","x":"lon","absY":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:96","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"74cc314d-7933-11e5-b78b-cb8bf46ad34a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"variableMap":{"y1":"nodeCount","y2":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:328","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.DataAccess.ensureCapacity((((long)(int)) * (int)))"},"status":-2},{"failures":[],"tindex":"74cc314e-7933-11e5-b78b-8fe868110d6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:143","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"variableMap":{"name":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:424","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"74cc314f-7933-11e5-b78b-0d9dd58a8c05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:352","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(com.graphhopper.reader.OSMWay.getId())"},"status":-2},{"failures":[],"tindex":"74cc5860-7933-11e5-b78b-2be8e21b0e6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}