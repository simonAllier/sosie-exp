{"failureDictionary":{"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":3,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":4,"com.graphhopper.coll.CompressedArrayTest.testCompress":2,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":5,"com.graphhopper.storage.VLongStorageTest.testWrite":0,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":1},"transformations":[{"failures":[],"tindex":"66e14f7e-7929-11e5-a0c9-65703a34c300","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"edgeId","clockwise":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:533","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.EdgeAccess.isInBounds(int)))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"));\n"},"status":0},{"failures":[],"tindex":"66e1768f-7929-11e5-a0c9-3d9bbef4a254","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"flags","mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:122","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0)"},"status":-2},{"failures":[],"tindex":"66e17690-7929-11e5-a0c9-d511441c488a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"66e17691-7929-11e5-a0c9-e792449bdeb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:50","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"66e19da2-7929-11e5-a0c9-2727614d911d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"66e19da3-7929-11e5-a0c9-11a484d3c74e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:116","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[4,5],"tindex":"66e19da4-7929-11e5-a0c9-21269f777338","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"66e19da5-7929-11e5-a0c9-e999abefbe0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"minResolutionInMeter","tmpErr":"minResolutionInMeter","y1":"minResolutionInMeter","dLon":"minResolutionInMeter","sLat":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[],"tindex":"66e19da6-7929-11e5-a0c9-9be3dc9aae2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:219","type":"CtIfImpl","sourcecode":"if (java.io.File.isDirectory()) {\n    for (java.io.File java.io.File : java.io.File.listFiles()) {\n        com.graphhopper.util.Helper.com.graphhopper.util.Helper.removeDir(java.io.File);\n    }\n} "},"status":-2},{"failures":[],"tindex":"66e19da7-7929-11e5-a0c9-1d72ac0b5f8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:119","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"variableMap":{"daPointer":"value","width":"value","this":"this","counter":"counter","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[],"tindex":"66e1c4b8-7929-11e5-a0c9-277c1ff4584d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:96","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.read(byte[])"},"status":-2},{"failures":[],"tindex":"66e1c4b9-7929-11e5-a0c9-0986ce09f29d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:205","type":"CtIfImpl","sourcecode":"if (double < double) {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n} "},"status":-2},{"failures":[],"tindex":"66e1c4ba-7929-11e5-a0c9-4fdb824bc508","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"variableMap":{"latSize":"segmentSizeIntsPower","lonSize":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"66e1c4bb-7929-11e5-a0c9-abaee440edb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Use base graph for LocationIndexTree instead of CHGraph\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:185","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Version of \" + java.lang.String) + \" unsupported: \") + java.lang.String) + \", expected:\") + int))"},"status":-2},{"failures":[],"tindex":"66e1c4bc-7929-11e5-a0c9-8314915cd0af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:150","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return \"\";\n} "},"variableMap":{"key":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:84","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"66e1c4bd-7929-11e5-a0c9-8f3768b3d9c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:81","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[(int) + 10]"},"variableMap":{"endIndexPlusOne":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:228","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[int]"},"status":-2},{"failures":[],"tindex":"66e1c4be-7929-11e5-a0c9-03056a7ec5cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:561","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:546","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"66e1ebcf-7929-11e5-a0c9-778d96974b94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"nodeOther","hash":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:188","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"66e1ebd0-7929-11e5-a0c9-9d30c7caf261","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"integ","edgeId":"integ","nodeA":"integ"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:95","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"66e1ebd1-7929-11e5-a0c9-4559c76c43b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:357","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.TLongList.size()) > 1) {\n    int int = com.graphhopper.reader.OSMReader.getNodeMap().get(com.graphhopper.reader.TLongList.get(0));\n    int int = com.graphhopper.reader.OSMReader.getNodeMap().get(com.graphhopper.reader.TLongList.get(((com.graphhopper.reader.TLongList.size()) - 1)));\n    double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int);\n    double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int);\n    double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int);\n    double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int);\n    if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n        com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n    } \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}