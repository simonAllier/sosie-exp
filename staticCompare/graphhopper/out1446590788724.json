{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":231,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.reader.OSMReaderTest.testFerry":45,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":173,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":174,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":204,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":12,"com.graphhopper.reader.OSMReaderTest.testWithBounds":55,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":277,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":117,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":178,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":281,"com.graphhopper.GraphHopperTest.testPrepare":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":113,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":264,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":130,"com.graphhopper.util.InstructionListTest.testWayList":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":137,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":43,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":181,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":225,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":83,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":149,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":176,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":246,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":77,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":255,"com.graphhopper.routing.util.EncodedValueTest.testSwap":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":307,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":13,"com.graphhopper.GraphHopperTest.testLoadOSM":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":84,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":187,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":268,"com.graphhopper.reader.OSMReaderTest.testSort":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":201,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":121,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":143,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":196,"com.graphhopper.util.BitUtilBigTest.testFromBitString":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":211,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":256,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":136,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":291,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":38,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":217,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":148,"com.graphhopper.util.GHUtilityTest.testSort":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":214,"com.graphhopper.coll.IntIntBinHeapTest.testSize":326,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":5,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":212,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":266,"com.graphhopper.GraphHopperAPITest.testLoad":67,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":142,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":185,"com.graphhopper.reader.OSMReaderTest.testBarriers":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":237,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":135,"com.graphhopper.util.GHUtilityTest.testCopy":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":127,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":297,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":16,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":63,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":274,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":64,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":299,"com.graphhopper.reader.PrinctonReaderTest.testRead":175,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":223,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":324,"com.graphhopper.util.InstructionListTest.testWayList2":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":3,"com.graphhopper.reader.OSMReaderTest.testFoot":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":91,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":88,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":278,"com.graphhopper.reader.OSMReaderTest.testOneWay":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":199,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":192,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":122,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":232,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":251,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":257,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":74,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":239,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":316,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":109,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":238,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":95,"com.graphhopper.util.GHUtilityTest.testSort2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":229,"com.graphhopper.reader.OSMReaderTest.testMain":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":213,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":319,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":112,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":202,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":19,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":97,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":305,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":85,"com.graphhopper.storage.GraphHopperStorageTest.testClone":253,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":321,"com.graphhopper.GraphHopperTest.testFootAndCar":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":99,"com.graphhopper.reader.OSMReaderTest.testRelation":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":290,"com.graphhopper.GraphHopperTest.testPrepareOnly":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":197,"com.graphhopper.GraphHopperTest.testVia":75,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":0,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":98,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":151,"com.graphhopper.GraphHopperTest.testFootOnly":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":103,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":147,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":284},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"b87e7954-827c-11e5-9b06-67d857dcbddb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"value","pointer":"value","maxCapacity":"value","baseCapacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-1},{"failures":[63,64,65,66,67,47,48,68,69,70,71,72,73,74,75,76,77,60,78,79,80,61,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"b87ec775-827c-11e5-9b06-479411820f6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:781","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.fillIDs(long, com.graphhopper.storage.index.LocationIndexTree.int, gnu.trove.set.hash.TIntHashSet, 0)"},"status":-1},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,63,137,64,65,138,139,66,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,46,47,48,68,49,50,51,52,55,58,175,176,177,178,70,71,72,73,74,179,75,76,77,60,78,79,180,80,62,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,81,82,83,86,92,94,281,98,99,100,103,109,111,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"b87ec776-827c-11e5-9b06-179eec0f1808","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:109","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"variableMap":{"guess":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:177","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess._getLinkPosInEdgeArea(int, int, long)"},"status":-1},{"failures":[135,63,65,66,317,318,154,319,320,75,76,77,60,87,104],"tindex":"b87f1597-827c-11e5-9b06-fdd26bef454a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"fromX":"a_lon","toX":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-1},{"failures":[],"tindex":"b87f3ca8-827c-11e5-9b06-69f4e146aeac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:686","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((\"start creating graph from \" + (java.lang.String)))"},"status":0},{"failures":[],"tindex":"b87f3ca9-827c-11e5-9b06-836ca1c18871","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:82","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[]{ ((byte)(byte[].int)) }"},"status":-2},{"failures":[],"tindex":"b87f3caa-827c-11e5-9b06-299da07c7259","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"parent","ase":"entryCurrent","currEdge":"entryCurrent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"b87f3cab-827c-11e5-9b06-c7a3de990261","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"b87f63bc-827c-11e5-9b06-ef6829bd47df","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:278","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"status":-2},{"failures":[],"tindex":"b87f63bd-827c-11e5-9b06-87b9877e9097","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:613","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:677","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.get(int)"},"status":-2},{"failures":[321,322,323,324,325],"tindex":"b87f63be-827c-11e5-9b06-3583d4cc5b92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"speed","lat":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:316","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"b87f63bf-827c-11e5-9b06-791ab0b1460c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":0},{"failures":[326],"tindex":"b87f63c0-827c-11e5-9b06-7354d74c2a85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"variableMap":{"mKeys":"keys","nkeys":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:228","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], (int + 1))"},"status":-1},{"failures":[],"tindex":"b87f8ad1-827c-11e5-9b06-378590ec1f4d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:647","type":"CtReturnImpl","sourcecode":"return (long & (long)) == 0 ? 0 : java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"b87f8ad2-827c-11e5-9b06-4fcbb2d3a180","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"osmReaderWayPointMaxDistance","shortTripsSpeed":"osmReaderWayPointMaxDistance","durationInHours":"osmReaderWayPointMaxDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:581","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"osmreader.wayPointMaxDistance\", double)"},"status":0},{"failures":[],"tindex":"b87f8ad3-827c-11e5-9b06-0d25ef983f31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:91","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:136","type":"CtTryImpl","sourcecode":"try {\n    return com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode.valueOf(java.lang.String.toUpperCase());\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalArgumentException(((((\"TraversalMode \" + java.lang.String) + \" not supported. \") + \"Supported are: \") + (java.util.Arrays.asList(com.graphhopper.routing.util.TraversalMode.values()))));\n}"},"status":-2},{"failures":[],"tindex":"b87fb1e4-827c-11e5-9b06-6f95e4ed628c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:201","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((com.graphhopper.util.InstructionList.(size()) - 1))"},"status":-2},{"failures":[67,76,77,60,61],"tindex":"b87fb1e5-827c-11e5-9b06-73d8dc2166f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:161","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"b87fb1e6-827c-11e5-9b06-7bde42b5e282","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:671","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[327],"tindex":"b87fb1e7-827c-11e5-9b06-e334ddee0796","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"bLen","nodeCount":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b87f3ca8-827c-11e5-9b06-69f4e146aeac","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"b87f63bf-827c-11e5-9b06-791ab0b1460c","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.detach","com.graphhopper.storage.index.QueryResult.setClosestEdge"]},"type":"staticDiff"}]}]}