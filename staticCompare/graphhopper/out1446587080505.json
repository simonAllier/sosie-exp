{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":3,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":110,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":157,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":122,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":18,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":10,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":6,"com.graphhopper.util.InstructionListTest.testWayList":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":43,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":115,"com.graphhopper.GraphHopperAPITest.testDisconnected179":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":107,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":106,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":154,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":156,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":158,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":98,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":81,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":45,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":0,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":128,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":51,"com.graphhopper.routing.PathTest.testWayList":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":16,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":147,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":161,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":109,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":8,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":113,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":83,"com.graphhopper.GraphHopperAPITest.testLoad":63,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":145,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":95,"com.graphhopper.GraphHopperTest.testFootOnly":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":164,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":12,"com.graphhopper.util.GHUtilityTest.testCopy":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":104},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"16486b3a-8274-11e5-9e9f-8565471e2633","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[],"tindex":"164b9f8b-8274-11e5-9e9f-57c5d59710bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":0},{"failures":[],"tindex":"164b9f8c-8274-11e5-9e9f-d9301bab95f6","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[8],"tindex":"164bc69d-8274-11e5-9e9f-9510e3b86e0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:71","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:77","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[],"tindex":"164bc69e-8274-11e5-9e9f-63339ad945c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"164bc69f-8274-11e5-9e9f-cddd4fb7ebab","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:292","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"variableMap":{"edgeId":"index","mainEdges":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"164bc6a0-8274-11e5-9e9f-73d3c48b1646","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"prevLon","com.graphhopper.util.AngleCalc.PI3_4":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:417","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[],"tindex":"164bedb1-8274-11e5-9e9f-539bebfc9c6f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"maxDistInMeter","shrinkFactor":"maxDistInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:145","type":"CtLocalVariableImpl","sourcecode":"double double = double / (int)"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45],"tindex":"164bedb2-8274-11e5-9e9f-e9833c6b50c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:317","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\",\"))\n    return \"destinations: \" + java.lang.String;\nelse\n    return \"destination: \" + java.lang.String;\n"},"variableMap":{"str":"pavementName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"164bedb3-8274-11e5-9e9f-ef0890b82718","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:66","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Value cannot be null. Use remove instead.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"))"},"status":0},{"failures":[],"tindex":"164c14c4-8274-11e5-9e9f-f94199e85e77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:88","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"164c14c5-8274-11e5-9e9f-03bf28141e7a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:154","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"variableMap":{"str":"name","this":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:102","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DAType.equals(com.graphhopper.storage.DataAccess.getType())))\n    throw new java.lang.IllegalStateException((((((\"Found existing DataAccess object \\'\" + java.lang.String) + \"\\' but types did not match. Requested:\") + com.graphhopper.storage.DAType) + \", was:\") + (com.graphhopper.storage.DataAccess.getType())));\n"},"status":0},{"failures":[],"tindex":"164c14c6-8274-11e5-9e9f-bd5b0a8481dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:83","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.util.zip.GZIPInputStream(java.io.InputStream)"},"variableMap":{"is":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:44","type":"CtAssignmentImpl","sourcecode":"this.java.io.InputStream = java.io.InputStream"},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"164c14c7-8274-11e5-9e9f-ef8e9a37d7bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:76","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>();\n    java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>);\n    com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation();\n    java.lang.String java.lang.String = com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation);\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = com.graphhopper.util.InstructionAnnotation.getMessage();\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"text\", com.graphhopper.util.Helper.firstBig(java.lang.String));\n    if (!(com.graphhopper.util.InstructionAnnotation.isEmpty())) {\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_text\", com.graphhopper.util.InstructionAnnotation.getMessage());\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_importance\", com.graphhopper.util.InstructionAnnotation.getImportance());\n    } \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime());\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3));\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign());\n    java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON());\n    int int = int + (com.graphhopper.util.Instruction.getPoints().size());\n    if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n        int--;\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int));\n    int = int;\n    int++;\n}"},"status":-1},{"failures":[58,59,60,61,62],"tindex":"164c3bd8-8274-11e5-9e9f-2bd8d492e97b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:115","type":"CtIfImpl","sourcecode":"if (double < double) {\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"164c3bd9-8274-11e5-9e9f-25e7ac303aee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:400","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,62,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,10,14,15,143,144,145,146,147,148,23,24,25,26,27,149,150,28,30,31,32,33,151,152,34,153,154],"tindex":"164c62ea-8274-11e5-9e9f-9f1df769e2b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"status":-1},{"failures":[],"tindex":"164c62eb-8274-11e5-9e9f-5b9f72349abd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:250","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[155,156,140,141,157,158,159,142,10,11,160,161,12,13,14,162,15,16,163,17,18,164,21,22,28],"tindex":"164c62ec-8274-11e5-9e9f-0f126ef90de9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"dist","java.lang.Math.PI":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"164c62ed-8274-11e5-9e9f-85e8e6c06f69","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLongitude(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"164b9f8b-8274-11e5-9e9f-57c5d59710bc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader"]},"type":"staticDiff"}]}]}