{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":69,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":78,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":138,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":30,"com.graphhopper.routing.PathTest.testFindInstruction":95,"com.graphhopper.reader.OSMReaderTest.testFerry":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":119,"com.graphhopper.routing.QueryGraphTest.testOneWay":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":115,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":88,"com.graphhopper.reader.OSMReaderTest.testWithBounds":109,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":127,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":8,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":40,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":66,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":1,"com.graphhopper.GraphHopperTest.testPrepare":56,"com.graphhopper.util.InstructionListTest.testWayList2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":116,"com.graphhopper.reader.OSMReaderTest.testFoot":99,"com.graphhopper.search.NameIndexTest.testFlush":136,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":34,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":81,"com.graphhopper.util.InstructionListTest.testWayList":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":85,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":121,"com.graphhopper.GraphHopperAPITest.testDisconnected179":97,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":25,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":103,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":91,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":53,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":50,"com.graphhopper.reader.OSMReaderTest.testSort":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":49,"com.graphhopper.storage.RAMDataAccessTest.testSegments":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":38,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":108,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":133,"com.graphhopper.reader.OSMReaderTest.testMain":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":5,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":70,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":18,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":92,"com.graphhopper.storage.RAMDataAccessTest.testHeader":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":118,"com.graphhopper.routing.PathTest.testWayList":94,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":93,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":105,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":13,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":90,"com.graphhopper.storage.StorablePropertiesTest.testStore":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":117,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":29,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":87,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":123,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":132,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":137,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":7,"com.graphhopper.GraphHopperTest.testFootAndCar":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":31,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":76,"com.graphhopper.util.InstructionListTest.testCreateGPX":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":12,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":73,"com.graphhopper.GraphHopperTest.testPrepareOnly":47,"com.graphhopper.GraphHopperTest.testVia":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":134,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":20,"com.graphhopper.GraphHopperAPITest.testLoad":96,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":59,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":11,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":71,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":45,"com.graphhopper.GraphHopperTest.testFootOnly":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":16,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":17,"com.graphhopper.util.InstructionListTest.testFind":42,"com.graphhopper.reader.OSMReaderTest.testBarriers":102,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":39},"transformations":[{"failures":[],"tindex":"2954f8e2-827f-11e5-8216-450c32879ecc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:98","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"2954f8e3-827f-11e5-8216-7fb15d8fa1e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:643","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()))"},"variableMap":{"ghStorage":"ghStorage","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()))"},"status":0},{"failures":[],"tindex":"29551ff4-827f-11e5-8216-4f501dc69755","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int)"},"status":-2},{"failures":[],"tindex":"29551ff5-827f-11e5-8216-2bcd3d1dff04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"29551ff6-827f-11e5-8216-9713d8f93d30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n"},"variableMap":{"node":"index","tna":"nodeAccess","fna":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:139","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int), com.graphhopper.util.PointAccess.getElevation(int));\nelse\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int));\n"},"status":-1},{"failures":[],"tindex":"29551ff7-827f-11e5-8216-ef98680c4562","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:56","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"fromMap":"bestWeightMapTo","size":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:66","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0},{"failures":[],"tindex":"29554708-827f-11e5-8216-bd6c8a9d8a17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"capacity","nextEdgeId":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:227","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"29554709-827f-11e5-8216-0fdd000500a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:334","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"noNumberValue":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"status":-2},{"failures":[112],"tindex":"2955470a-827f-11e5-8216-d3465f960cbe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PMap.has(\"version\")) {\n    if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n        throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n    } \n} "},"status":-1},{"failures":[],"tindex":"2955470b-827f-11e5-8216-21ff69f45d1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:383","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[113,114,115,116],"tindex":"2955470c-827f-11e5-8216-7dd44a8c7a9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:397","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"2955470d-827f-11e5-8216-f1dc0f6b07db","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1142","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.AllEdgeIterator"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[117,118,3,119,120,6,121,122,123,124,125,126,127,128,129,130,131,132,39,133,134,135,136,47,59,60,62,64],"tindex":"29556e1e-827f-11e5-8216-f3df3126c1c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"rw\");\n    try {\n        long long = com.graphhopper.storage.RAMDataAccess.getCapacity();\n        com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        for (int int = 0 ; int < (byte[][].int) ; int++) {\n            byte[] byte[] = byte[][][int];\n            java.io.RandomAccessFile.write(byte[]);\n        }\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Couldn\\'t store bytes to \" + com.graphhopper.storage.AbstractDataAccess.(toString())) , java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"29556e1f-827f-11e5-8216-cd35e3c8b5d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"lastLon","shrinkFactor":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:146","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double)"},"status":-2},{"failures":[48,49,50,51,52,55,56,57,58,59,60,62,68,69,78,83,84,86,87,89,93],"tindex":"29556e20-827f-11e5-8216-adc5beeb4756","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"variableMap":{"com.graphhopper.routing.QueryGraph.VE_BASE_REV":"edgeId","virtualEdges":"virtualEdges","i":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:575","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"status":-1},{"failures":[137,138],"tindex":"29556e21-827f-11e5-8216-b1caee83de5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:113","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        int = int;\n        break;\n    } \n}"},"status":-1},{"failures":[42,95],"tindex":"29556e22-827f-11e5-8216-b58761004ae3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:323","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[139,45],"tindex":"29559533-827f-11e5-8216-5bcf5dad6878","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:380","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\":\")"},"variableMap":{"sb":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\")"},"status":-1},{"failures":[49],"tindex":"29559534-827f-11e5-8216-f9da406087c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:201","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"29559535-827f-11e5-8216-a5bbb4efa6a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:403","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    java.nio.ByteBuffer java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get(int);\n    com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer);\n    java.util.List<java.nio.ByteBuffer>.set(int, null);\n}"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2954f8e3-827f-11e5-8216-7fb15d8fa1e5","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.getProperties","com.graphhopper.GraphHopper.formatDateTime","com.graphhopper.storage.StorableProperties.put"]},"type":"staticDiff"}]},{"transformation":"29559535-827f-11e5-8216-a5bbb4efa6a6","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"]},"type":"branch"},{"methodsDiff":{"delete":["java.util.List<java.nio.ByteBuffer>.get","java.util.List<java.nio.ByteBuffer>.set","com.graphhopper.util.Helper.cleanMappedByteBuffer"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]},{"transformation":"2955470b-827f-11e5-8216-21ff69f45d1e","diffs":[{"methodsDiff":{"delete":["java.lang.String.hashCode","java.lang.Object.toString"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":["com.graphhopper.routing.util.CarFlagEncoder_java.lang.String_toString().b","com.graphhopper.routing.util.FootFlagEncoder_java.lang.String_toString().b"],"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.routing.util.CarFlagEncoder_java.lang.String_toString().b","com.graphhopper.routing.util.FootFlagEncoder_java.lang.String_toString().b"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.routing.util.FootFlagEncoder_java.lang.String_toString().b"]},"type":"branch"}]}]}