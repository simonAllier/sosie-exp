{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":41,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":38,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.storage.StorablePropertiesTest.testStore":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":4,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":5,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":49,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":26,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":39,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":54,"com.graphhopper.GraphHopperAPITest.testDisconnected179":23,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":32,"com.graphhopper.GraphHopperTest.testPrepareOnly":31,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":30,"com.graphhopper.GraphHopperAPITest.testLoad":22,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.GraphHopperTest.testFootOnly":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":6,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":7,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":29},"transformations":[{"failures":[],"tindex":"e49e176d-826d-11e5-952f-dbc37bbe6ea1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:163","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState) == null)\n    throw new java.lang.IllegalStateException(\"No closest edge?\");\n"},"variableMap":{"closestEdge":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState)"},"status":0},{"failures":[],"tindex":"e49e3e7e-826d-11e5-952f-69f39f11930d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"timeout","to":"timeout","lonSize":"timeout"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Downloader:57","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"e49e658f-826d-11e5-952f-c5cb9bee9ff8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"variableMap":{"cg":"prepareGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:265","type":"CtWhileImpl","sourcecode":"while (!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) {\n    if ((boolean && ((long) > 0)) && (((long) % long) == 0)) {\n        com.graphhopper.util.StopWatch.start();\n        com.graphhopper.coll.GHTreeMapComposed.clear();\n        int int = com.graphhopper.storage.CHGraphImpl.getNodes();\n        for (int int = 0 ; int < int ; int++) {\n            if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n                continue;\n            \n            int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n            com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        }\n        com.graphhopper.util.StopWatch.stop();\n        int++;\n        if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n            throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n        \n    } \n    if (((long) % long) == 0) {\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        org.slf4j.Logger.info((((((((((((((((((com.graphhopper.util.Helper.nf(long)) + \", updates:\") + int) + \", nodes: \") + (com.graphhopper.util.Helper.nf(com.graphhopper.coll.GHTreeMapComposed.getSize()))) + \", shortcuts:\") + (com.graphhopper.util.Helper.nf(int))) + \", dijkstras:\") + (com.graphhopper.util.Helper.nf(long))) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", algo:\") + (com.graphhopper.routing.DijkstraOneToMany.getMemoryUsageAsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())));\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    } \n    (long)++;\n    int int = com.graphhopper.coll.GHTreeMapComposed.pollKey();\n    if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n        com.graphhopper.util.StopWatch.start();\n        int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n        if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n            com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n            com.graphhopper.util.StopWatch.stop();\n            continue;\n        } \n        com.graphhopper.util.StopWatch.stop();\n    } \n    int += com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int);\n    com.graphhopper.storage.CHGraphImpl.setLevel(int, int);\n    int++;\n    if ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)\n        break;\n    \n    com.graphhopper.util.CHEdgeIterator com.graphhopper.util.CHEdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.CHEdgeIterator.next()) {\n        int int = com.graphhopper.util.CHEdgeIterator.getAdjNode();\n        if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n            continue;\n        \n        if (boolean && ((java.util.Random.nextInt(100)) < (int))) {\n            com.graphhopper.util.StopWatch.start();\n            int int = int[][int];\n            int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n            if (int != int)\n                com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n            \n            com.graphhopper.util.StopWatch.stop();\n        } \n        com.graphhopper.storage.CHGraphImpl.disconnect(com.graphhopper.util.CHEdgeExplorer, com.graphhopper.util.CHEdgeIterator);\n    }\n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"e49e6590-826d-11e5-952f-57c697bfde31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    com.graphhopper.storage.GraphHopperStorage.close();\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:948","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.isClosed())\n    throw new java.lang.IllegalStateException(\"You need to create a new GraphHopper instance as it is already closed\");\n"},"status":-1},{"failures":[8,11,12],"tindex":"e49e8ca1-826d-11e5-952f-a1c8a6930064","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"placeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1031","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(0), false);\n} else if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-1},{"failures":[],"tindex":"e49e8ca2-826d-11e5-952f-9522d911de6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:539","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"e49e8ca3-826d-11e5-952f-5368415d46f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"variableMap":{"intIndex":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:148","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"e49e8ca4-826d-11e5-952f-4583bd32ac47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:39","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.SimpleIntDeque.pop()"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,19,32,20,33],"tindex":"e49e8ca5-826d-11e5-952f-c127b9d93bb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:84","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"e49e8ca6-826d-11e5-952f-ff61793a60ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"periodicUpdatesPercentage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:244","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round(java.lang.Math.max(10, (((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100.0) * (int))))"},"status":-2},{"failures":[34],"tindex":"e49eb3b7-826d-11e5-952f-8500cb22265e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"e49eb3b8-826d-11e5-952f-f7fe6d7cb67e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge2","b":"skippedEdge2","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"e49eb3b9-826d-11e5-952f-1f0ceb8523a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"com.graphhopper.reader.OSMReader.PILLAR_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:638","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int)"},"status":-2},{"failures":[8,10,11,12,14,35,36,37,38,39,40,41,42,43,44,45,0,3,4],"tindex":"e49eb3ba-826d-11e5-952f-c1e958d091fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:202","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"factor":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:171","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[],"tindex":"e49eb3bb-826d-11e5-952f-676dc2833730","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:58","type":"CtLocalVariableImpl","sourcecode":"int int = double > 0 ? 1 : -1"},"status":-2},{"failures":[46,47,48,49,50,51,26,27,29,52],"tindex":"e49eb3bc-826d-11e5-952f-93ee138bf80b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-1},{"failures":[24,25,26,53,54,27,28,29,30,31,18,19,32,20],"tindex":"e49edacd-826d-11e5-952f-1de9103d97d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:45","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"variableMap":{"_location":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:93","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[],"tindex":"e49edace-826d-11e5-952f-bd29b6a0a485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:200","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n    com.graphhopper.storage.DataAccess.setHeader((8 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n} "},"status":0},{"failures":[],"tindex":"e49edacf-826d-11e5-952f-8d7aff90cc8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"status":-2},{"failures":[],"tindex":"e49edad0-826d-11e5-952f-75ccd0464e5a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:225","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkseg>\")"},"variableMap":{"track":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\")"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e49e176d-826d-11e5-952f-dbc37bbe6ea1","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).e11","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t15","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).t10","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2$1_int_compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult).t14"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18"],"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":["com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l20","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e16","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e13","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e14","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).t18","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).e17","com.graphhopper.routing.QueryGraph$2_boolean_execute(java.util.List).l18"]},"type":"branch"}]},{"transformation":"e49edace-826d-11e5-952f-bd29b6a0a485","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader","com.graphhopper.util.Helper.eleToInt"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":["com.graphhopper.util.Helper_int_eleToInt(double).b","com.graphhopper.util.Helper_double_intToEle(int).t1","com.graphhopper.util.Helper_int_eleToInt(double).e1","com.graphhopper.util.Helper_int_eleToInt(double).t1"],"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"],"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"]},"type":"branch"}]},{"transformation":"e49e8ca2-826d-11e5-952f-9522d911de6e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testOneWay":["com.graphhopper.routing.util.AbstractFlagEncoder_long_setSpeed(long,double).t3","com.graphhopper.routing.util.AbstractFlagEncoder_long_handleFerryTags(com.graphhopper.reader.OSMWay,double,double,double).t3"]},"type":"branch"}]}]}