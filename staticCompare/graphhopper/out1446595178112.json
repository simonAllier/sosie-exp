{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.reader.OSMReaderTest.testFerry":181,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":200,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":204,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":226,"com.graphhopper.reader.OSMReaderTest.testWithBounds":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":215,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":138,"com.graphhopper.GraphHopperTest.testPrepare":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":36,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":194,"com.graphhopper.GraphHopperAPITest.testDisconnected179":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":88,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":154,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":28,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":187,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":139,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":82,"com.graphhopper.GraphHopperTest.testLoadOSM":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":217,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":227,"com.graphhopper.reader.OSMReaderTest.testSort":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":52,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":3,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":23,"com.graphhopper.routing.PathTest.testWayList":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":14,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":152,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":107,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":27,"com.graphhopper.util.GHUtilityTest.testSort":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":165,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":140,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":16,"com.graphhopper.GraphHopperAPITest.testLoad":180,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":13,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":185,"com.graphhopper.routing.PathTest.testFound":43,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":126,"com.graphhopper.util.GHUtilityTest.testCopy":197,"com.graphhopper.routing.PathTest.testFindInstruction":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":78,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":17,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":116,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":79,"com.graphhopper.reader.PrinctonReaderTest.testRead":31,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":202,"com.graphhopper.reader.OSMReaderTest.testFoot":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":155,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":123,"com.graphhopper.reader.OSMReaderTest.testOneWay":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":93,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":161,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":186,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":171,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":134,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":169,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":160,"com.graphhopper.util.GHUtilityTest.testSort2":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":70,"com.graphhopper.reader.OSMReaderTest.testMain":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":80,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":146,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":188,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":192,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":106,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":120,"com.graphhopper.GraphHopperTest.testFootAndCar":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":127,"com.graphhopper.routing.PathTest.testTime":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":94,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":68,"com.graphhopper.util.GHUtilityTest.testSortDirected":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":96,"com.graphhopper.GraphHopperTest.testPrepareOnly":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":20,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":125,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":90,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":211,"com.graphhopper.GraphHopperTest.testFootOnly":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":219,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":206},"transformations":[{"failures":[0],"tindex":"f0c63c81-8286-11e5-9ad3-e33a3a2309f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"endY","nodeThis":"y","edgeId":"endY","nodeOther":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:93","type":"CtIfImpl","sourcecode":"if (int > 0.0) {\n    if (int >= int)\n        boolean = true;\n    \n} else if (int <= int) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f0c66392-8286-11e5-9ad3-ef7a77a51d00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:66","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f0c66393-8286-11e5-9ad3-1750a524a866","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"variableMap":{"storedKey":"capacity","key":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"f0c68aa4-8286-11e5-9ad3-d50e74622206","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:559","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setDAType(com.graphhopper.storage.DAType)"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"f0c68aa5-8286-11e5-9ad3-f7e6147c1207","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getBaseNode()"},"variableMap":{"mainEdgeState":"mainEdgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:62","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getSkippedEdge2()"},"status":-1},{"failures":[],"tindex":"f0c68aa6-8286-11e5-9ad3-ebb8dbc6bbd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"status":0},{"failures":[15,16,17,18,19,20,21,22],"tindex":"f0c68aa7-8286-11e5-9ad3-d3883bf2b1e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:141","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n"},"status":-1},{"failures":[23,24,25,26,27,28,29,30],"tindex":"f0c6b1b8-8286-11e5-9ad3-ad52b592d0fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"exited"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:69","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[31,32],"tindex":"f0c6b1b9-8286-11e5-9ad3-f5361e5370ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"distance":"dist","dist":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:82","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Double.parseDouble(java.lang.String[][int])"},"status":-1},{"failures":[],"tindex":"f0c6b1ba-8286-11e5-9ad3-af779bc21b78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:141","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[26],"tindex":"f0c6b1bb-8286-11e5-9ad3-dd916d598af0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"clockwise"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:55","type":"CtAssignmentImpl","sourcecode":"int = double > 0 ? 1 : -1"},"status":-1},{"failures":[33,8,9,34,35,36,37,38,39,11,12,40,14,41,42],"tindex":"f0c6d8cc-8286-11e5-9ad3-c1d627989e2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:421","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"f0c6d8cd-8286-11e5-9ad3-c7e947ec19ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.max((10 * 4), long))"},"variableMap":{"bytes":"tmp","this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + (int)))"},"status":-2},{"failures":[15,16,17,18,19,20,21,22],"tindex":"f0c6d8ce-8286-11e5-9ad3-231b78c08845","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"toLat","x1":"queryLon","x2":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:134","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double))"},"status":-1},{"failures":[],"tindex":"f0c6d8cf-8286-11e5-9ad3-6df172e4ce89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"setWayGeometry\")"},"variableMap":{"this":"adjEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[23,24,43,44,25,26,45,46,27,28,47,48,49,50,51,52,53,54,55,1,56,57,58,59,60,61,62,2,3,4,5,63,64,65,33,6,7,8,9,66,10,67,36,68,69,37,38,70,11,12,13,14,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,15,151,152,153,16,17,18,19,20,21,154,155,156,157,22,158,159,160,161,162,163,164,165,166,167,168,169,170,41,171,42,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,31,32,194,195,196,197,198,199,200,201],"tindex":"f0c6ffe0-8286-11e5-9ad3-b9599b1287b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"nodeThis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:188","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f0c6ffe1-8286-11e5-9ad3-6d5b6882b82e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphStorage.getDirectory().getLocation()"},"status":-2},{"failures":[202,203,204,205],"tindex":"f0c726f2-8286-11e5-9ad3-0779f869f902","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:524","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[],"tindex":"f0c726f3-8286-11e5-9ad3-a54c23cf03bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"java.lang.Double.NaN","r_lat":"java.lang.Double.NaN","a_lat":"java.lang.Double.NaN","delta_lon":"java.lang.Double.NaN","r_lon":"java.lang.Double.NaN","a_lon":"java.lang.Double.NaN","norm":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[35,37,38,11,206,207,208,209,210,211,212,213,146,214,215,216,147,217,218,219,220,221,148,222,149,150,15,151,223,152,153,224,225,226,154,227,228,229,230,231,155,232,156,157,22,158,233,159,160,163,164,165,166,234,167,168,169,170,41,171,235,42,172,173,174,175,176,177,178,236,179,180,237,181,182,183,184,185,186,187,188,189,190,238,191,192,193],"tindex":"f0c726f4-8286-11e5-9ad3-690289390272","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:99","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f0c68aa4-8286-11e5-9ad3-d50e74622206","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.reader.dem.ElevationProvider$1_com.graphhopper.reader.dem.ElevationProvider_setDAType(com.graphhopper.storage.DAType).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.setDAType"]},"type":"staticDiff"}]}]}