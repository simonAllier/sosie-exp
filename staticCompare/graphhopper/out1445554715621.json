{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":46,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.reader.OSMReaderTest.testFerry":191,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":76,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":77,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":223,"com.graphhopper.routing.QueryGraphTest.testOneWay":22,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":141,"com.graphhopper.reader.OSMReaderTest.testWithBounds":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":117,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":122,"com.graphhopper.GraphHopperTest.testPrepare":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":45,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":125,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":132,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.util.InstructionListTest.testWayList":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":37,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":81,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":79,"com.graphhopper.GraphHopperAPITest.testDisconnected179":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":110,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":197,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":116,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":186,"com.graphhopper.GraphHopperTest.testLoadOSM":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":159,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":92,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":143,"com.graphhopper.reader.OSMReaderTest.testSort":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":225,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":173,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":50,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":27,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":168,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":70,"com.graphhopper.util.GHUtilityTest.testSort":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":111,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":31,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":88,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":11,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":220,"com.graphhopper.GraphHopperAPITest.testLoad":189,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":49,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":129,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.reader.OSMReaderTest.testBarriers":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":119,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":33,"com.graphhopper.util.GHUtilityTest.testCopy":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":26,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":179,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":180,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":90,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":61,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":103,"com.graphhopper.util.InstructionListTest.testWayList2":83,"com.graphhopper.reader.OSMReaderTest.testFoot":192,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":147,"com.graphhopper.reader.OSMReaderTest.testOneWay":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":10,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":130,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":224,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":138,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":115,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":126,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":196,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":54,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":121,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":207,"com.graphhopper.util.GHUtilityTest.testSort2":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":43,"com.graphhopper.reader.OSMReaderTest.testMain":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":169,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":155,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":144,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":134,"com.graphhopper.GraphHopperTest.testFootAndCar":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":39,"com.graphhopper.util.GHUtilityTest.testSortDirected":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":97,"com.graphhopper.GraphHopperTest.testPrepareOnly":205,"com.graphhopper.GraphHopperTest.testVia":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":38,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":156,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":89,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":84,"com.graphhopper.GraphHopperTest.testFootOnly":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":161,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":68,"com.graphhopper.util.InstructionListTest.testFind":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":172},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"tindex":"6cccb25b-7910-11e5-b17c-c79bf9efe773","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:108","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int * (int);\n} "},"variableMap":{"retBucket":"E_NODEB","storedKey":"edgePointer","bucketSize":"E_NODEB","key":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:155","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-1},{"failures":[223,224,225],"tindex":"6ccd278c-7910-11e5-b17c-a7b3f62ec169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:446","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.NodeAccess.getDimension())))))\n    throw new java.lang.IllegalStateException((((((\"Configured dimension (\" + (com.graphhopper.storage.NodeAccess.getDimension())) + \") is not equal \") + \"to dimension of loaded graph (\") + java.lang.String) + \")\"));\n"},"status":-1},{"failures":[],"tindex":"6ccd278d-7910-11e5-b17c-4f496de9143e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"entries"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:194","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"status":-2},{"failures":[],"tindex":"6ccd4e9e-7910-11e5-b17c-8138901c7165","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"com.graphhopper.util.Helper.MB","len":"com.graphhopper.util.Helper.MB","start":"com.graphhopper.util.Helper.MB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"status":-2},{"failures":[],"tindex":"6ccd4e9f-7910-11e5-b17c-c3d466cb9e47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:752","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-2},{"failures":[],"tindex":"6ccd4ea0-7910-11e5-b17c-1d29950e5526","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"6ccd4ea1-7910-11e5-b17c-434495606e2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"variableMap":{"motorcarTag":"highway","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:532","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    if (double < (int)) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else {\n    if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"6ccd75b2-7910-11e5-b17c-79d3638fafca","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:129","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"6ccd75b3-7910-11e5-b17c-6dfd8af10441","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:94","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[],"tindex":"6ccd75b4-7910-11e5-b17c-ff6a78c4e894","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"highway","destination":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:367","type":"CtIfImpl","sourcecode":"if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"6ccd9cc5-7910-11e5-b17c-d3c8f5188bde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"lastEntry","edge2":"depth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (int < (int[][int])) {\n        throw new java.lang.IllegalStateException((\"entries should decrease or stay but was:\" + (java.util.Arrays.toString(int[]))));\n    } \n    int = int[][int];\n    byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int]);\n    long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int]);\n}"},"status":-2},{"failures":[],"tindex":"6ccd9cc6-7910-11e5-b17c-f54315c6e3ab","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"variableMap":{"track":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\")"},"status":-2},{"failures":[],"tindex":"6ccd9cc7-7910-11e5-b17c-231e0e4abb1d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:96","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"status":-2},{"failures":[],"tindex":"6ccd9cc8-7910-11e5-b17c-354649647454","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:143","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n    int = int;\n    if ((int++) > 1000) {\n        throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n    } \n}"},"status":-2},{"failures":[],"tindex":"6ccdc3d9-7910-11e5-b17c-5ba76836a80f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:114","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.storage.DataAccess.getInt(((long + (int)) + 4));\n    long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int);\n} "},"status":-2},{"failures":[],"tindex":"6ccdc3da-7910-11e5-b17c-07b4ceb655a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:348","type":"CtIfImpl","sourcecode":"if (boolean) {\n    super.rename(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"6ccdc3db-7910-11e5-b17c-e1cce4e885b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:48","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"_location":"streetName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:265","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"continue\") : com.graphhopper.util.Translation.tr(\"continue_onto\", java.lang.String)"},"status":-2},{"failures":[],"tindex":"6ccdc3dc-7910-11e5-b17c-75c439d10ac5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"i","weights":"longitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:243","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-2},{"failures":[],"tindex":"6ccdc3dd-7910-11e5-b17c-fbaa98543404","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"newEdgeId","edgeId":"newEdgeId","nodeA":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:147","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6ccdeaee-7910-11e5-b17c-4f9ed9f2c41f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"E_NODEB","speed":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:47","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}