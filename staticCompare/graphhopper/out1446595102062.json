{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":65,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":102,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":103,"com.graphhopper.routing.PathTest.testFindInstruction":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":51,"com.graphhopper.reader.OSMReaderTest.testFerry":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":24,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":72,"com.graphhopper.reader.PrinctonReaderTest.testRead":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":56,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":29,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":81,"com.graphhopper.GraphHopperTest.testPrepare":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":108,"com.graphhopper.util.InstructionListTest.testWayList2":170,"com.graphhopper.reader.OSMReaderTest.testFoot":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":149,"com.graphhopper.util.InstructionListTest.testWayList":169,"com.graphhopper.reader.OSMReaderTest.testOneWay":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":18,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":45,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":58,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":67,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":145,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":172,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":142,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":158,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":85,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":162,"com.graphhopper.routing.PathBidirRefTest.testExtract":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":167,"com.graphhopper.GraphHopperTest.testLoadOSM":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":90,"com.graphhopper.reader.OSMReaderTest.testSort":118,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":155,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":63,"com.graphhopper.reader.OSMReaderTest.testMain":117,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":10,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":160,"com.graphhopper.routing.PathBidirRefTest.testExtract2":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":139,"com.graphhopper.routing.PathTest.testWayList":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":147,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":109,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":35,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":33,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":107,"com.graphhopper.GraphHopperTest.testFootAndCar":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":74,"com.graphhopper.routing.PathTest.testTime":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":130,"com.graphhopper.GraphHopperTest.testVia":93,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":52,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":87,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":28,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":112,"com.graphhopper.GraphHopperTest.testFootOnly":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":159,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.util.InstructionListTest.testFind":114,"com.graphhopper.reader.OSMReaderTest.testBarriers":119,"com.graphhopper.routing.PathTest.testFound":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":151,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":5},"transformations":[{"failures":[],"tindex":"c3719f06-8286-11e5-925f-abb8c97c6764","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:256","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(float))\n    continue;\n"},"status":0},{"failures":[0,1,2,3,4,5,5,6,7,8,8,9,9,10,11,12,13,14,15,16,16,17,18,19,20,21,22,23,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,54,55,56,57,58,59,60,61,62,63,63,64,65,66,67,68,69,70,71,72,73,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"c371ed27-8286-11e5-925f-a163ce7877a0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"variableMap":{"extStorage":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.close()"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"c371ed28-8286-11e5-925f-c7c92be221c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"status":-1},{"failures":[110],"tindex":"c3721439-8286-11e5-925f-3f32fbdad3b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"c372143a-8286-11e5-925f-75b425af1e9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER","lonSimilar":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:321","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.store(com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.com.graphhopper.storage.index.LocationIndexTree.InMemTreeEntry, com.graphhopper.storage.index.LocationIndexTree.int);\n    com.graphhopper.storage.index.LocationIndexTree.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalStateException((\"Problem while storing location index. \" + (com.graphhopper.util.Helper.getMemInfo())) , java.lang.Exception);\n}"},"status":-2},{"failures":[111,112],"tindex":"c372143b-8286-11e5-925f-f1a8663d1afa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:445","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[113,114],"tindex":"c372143c-8286-11e5-925f-5f3b84373efc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    double double = com.graphhopper.util.PointList.getLongitude(int);\n    if (!((int == 0) && (int == 0))) {\n        double double;\n        int int = int;\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n            if (int > 0)\n                int++;\n            \n        } else {\n            double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n            if (int > 0)\n                int++;\n            \n        }\n        if (double < double) {\n            double = double;\n            int = int;\n        } \n    } \n    double = double;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"c3723b4d-8286-11e5-925f-3d2ffbf510b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"angle","x":"com.graphhopper.util.AngleCalc.PI3_4","absY":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"c3723b4e-8286-11e5-925f-51676b50158f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"c3723b4f-8286-11e5-925f-1d35dcc6c39e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:232","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"c3723b50-8286-11e5-925f-e3d03c4a2317","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:535","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkAdjNodeBounds(int)"},"variableMap":{"adjNode":"N_CH_REF","this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[],"tindex":"c3726261-8286-11e5-925f-0300fa9cb202","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:314","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int)"},"status":-2},{"failures":[],"tindex":"c3726262-8286-11e5-925f-a92f61644b3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true)"},"status":-2},{"failures":[],"tindex":"c3726263-8286-11e5-925f-31292c9f7780","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:774","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,93,94,95,96,97,98,132,99,133,134],"tindex":"c3726264-8286-11e5-925f-83e598462125","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"value","fileStr":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String)"},"status":-1},{"failures":[98,135],"tindex":"c3728975-8286-11e5-925f-bff1c8d3daf3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"variableMap":{"str":"entry","name":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"status":-1},{"failures":[],"tindex":"c3728976-8286-11e5-925f-155c16f107ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:77","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null"},"status":-2},{"failures":[0,88,89,90,91,92,136,93,94,95,96,97,98,99,133,137,138,139,140,141,142,143,113,144,145,146,147,148,149,150,151,152,153,104,154,105,155,106,107,156,157,108,158,159,160,109,161,162,163,164,165,166,167,114,168,169,170,112],"tindex":"c3728977-8286-11e5-925f-e77751dfa098","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:278","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIteratorState.getBaseNode()"},"status":-1},{"failures":[171,172],"tindex":"c372b088-8286-11e5-925f-bbd416a3ee3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:85","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c3719f06-8286-11e5-925f-abb8c97c6764","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"c3723b4e-8286-11e5-925f-51676b50158f","diffs":[{"methodsDiff":{"delete":["java.lang.System.nanoTime"]},"type":"staticDiff"}]}]}