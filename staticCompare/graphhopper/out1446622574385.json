{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":70,"com.graphhopper.reader.OSMReaderTest.testMain":34,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":13,"com.graphhopper.reader.OSMReaderTest.testFerry":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":62,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":88,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":10,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":14,"com.graphhopper.coll.OSMIDMapTest.testGet2":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":84,"com.graphhopper.reader.OSMReaderTest.testWithBounds":43,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":67,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":4,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":24,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":5,"com.graphhopper.GraphHopperTest.testPrepare":27,"com.graphhopper.GraphHopperTest.testFootAndCar":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":64,"com.graphhopper.coll.OSMIDMapTest.testGetLong":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":50,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":87,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":18,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":2,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":81,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":19,"com.graphhopper.coll.BigLongIntMapTest.testPut":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":1,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":60,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":79,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":65,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":37,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":51,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":76,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":16,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":38,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.coll.OSMIDMapTest.testGet":20,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":90,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":3,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":40,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":0,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":22,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":57,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.storage.RAMDataAccessTest.testCopy":77,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":55,"com.graphhopper.reader.OSMReaderTest.testSort":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":54},"transformations":[{"failures":[],"tindex":"ba397076-82c6-11e5-b1fd-49eeaa194e56","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:324","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.flush()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:292","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"ba399787-82c6-11e5-b1fd-73a01d311b39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"dLon","yend":"dLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"status":-1},{"failures":[],"tindex":"ba39be98-82c6-11e5-b1fd-653ebd24ba4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:179","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"mtb\"))\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n"},"variableMap":{"code":"code","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE","relation":"relation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[],"tindex":"ba39be99-82c6-11e5-b1fd-c10759fb63a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:427","type":"CtInvocationImpl","sourcecode":"java.lang.Object.getClass().getMethod(\"clean\").invoke(java.lang.Object)"},"variableMap":{"cleaner":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2},{"failures":[16],"tindex":"ba39be9a-82c6-11e5-b1fd-ff4d642c34c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"latSimilar","capacity":"daPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:118","type":"CtIfImpl","sourcecode":"if (int < ((int) - 1))\n    int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n"},"status":-1},{"failures":[17,18,19],"tindex":"ba39e5ab-82c6-11e5-b1fd-6122a4ccf065","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"java.lang.Math.PI","java.lang.Math.PI":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"status":-1},{"failures":[20,21,22,23,24],"tindex":"ba39e5ac-82c6-11e5-b1fd-1de9f5f2136c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:86","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"variableMap":{"lastKey":"guess","key":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:109","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"status":-1},{"failures":[25,26],"tindex":"ba39e5ad-82c6-11e5-b1fd-1de9f761f7ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"low","nextTurnCostIndex":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:401","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((long[][int]) < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"ba3a0cbe-82c6-11e5-b1fd-2b8b97def85e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"variableMap":{"size":"indexDivisor","i":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:243","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"ba3a0cbf-82c6-11e5-b1fd-bb864f2b08c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"prepareLogMessages","incDist2DSum":"prepareLogMessages","fwdSlower":"prepareLogMessages","fullDist2D":"prepareLogMessages","restDist2D":"prepareLogMessages","speed":"prepareLogMessages","decDist2DSum":"prepareLogMessages"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:578","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"prepare.logmessages\", double)"},"status":0},{"failures":[],"tindex":"ba3a0cc0-82c6-11e5-b1fd-51c15d9fac5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.util.PointList.getSize();\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n} else {\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n}"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"ba3a0cc1-82c6-11e5-b1fd-25236d854763","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"variableMap":{"midLat":"lat","spatialKey":"tmp","bits":"tmp","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-1},{"failures":[46],"tindex":"ba3a33d2-82c6-11e5-b1fd-4b68ed166017","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += gnu.trove.map.hash.TLongIntHashMap[][int].size()"},"status":-1},{"failures":[39],"tindex":"ba3a33d3-82c6-11e5-b1fd-9fa243638d90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:932","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[47],"tindex":"ba3a33d4-82c6-11e5-b1fd-2bce96c3827e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:510","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[36,41,48,49,50,51],"tindex":"ba3a33d5-82c6-11e5-b1fd-c3d32585a023","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"variableMap":{"tt":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:247","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,9,67,68,69,11,70,12,71,72,73,74,75],"tindex":"ba3a5ae6-82c6-11e5-b1fd-39366eee5850","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:795","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"towerNodeDistance":"w"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:171","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[76,77],"tindex":"ba3a5ae7-82c6-11e5-b1fd-bff56f467f94","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][]"},"status":-1},{"failures":[78,79,80,81,82],"tindex":"ba3a5ae8-82c6-11e5-b1fd-77ae2ed7b9fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"turnRestrictionBit","flags":"turnRestrictionBit","dir":"turnRestrictionBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:659","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[83,84,85,86,87,88,89,90],"tindex":"ba3a5ae9-82c6-11e5-b1fd-cd231851fe1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"bits","index":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ba3a0cbf-82c6-11e5-b1fd-bb864f2b08c6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getDouble"]},"type":"staticDiff"}]}]}