{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":197,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":54,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":135,"com.graphhopper.search.NameIndexTest.testCreate":268,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":140,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.reader.OSMReaderTest.testFerry":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":45,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":44,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":34,"com.graphhopper.reader.OSMReaderTest.testWithBounds":102,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":202,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":195,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":49,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":31,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":263,"com.graphhopper.GraphHopperTest.testPrepare":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":249,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":253,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":232,"com.graphhopper.util.InstructionListTest.testWayList":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":4,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":2,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":238,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":229,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":210,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":266,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":53,"com.graphhopper.GraphHopperTest.testLoadOSM":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":111,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":244,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":209,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":224,"com.graphhopper.routing.PathTest.testWayList":142,"com.graphhopper.storage.MMapDataAccessTest.testCopy":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":194,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":77,"com.graphhopper.coll.OSMIDMapTest.testGet2":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":231,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":276,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":134,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":246,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":59,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":228,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":192,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":236,"com.graphhopper.coll.OSMIDMapTest.testGetLong":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":12,"com.graphhopper.search.NameIndexTest.testPut":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":24,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":58,"com.graphhopper.GraphHopperAPITest.testLoad":275,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":277,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":250,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":107,"com.graphhopper.reader.OSMReaderTest.testBarriers":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":204,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":38,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":165,"com.graphhopper.util.GHUtilityTest.testCopy":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":35,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":259,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":122,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":30,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":218,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":62,"com.graphhopper.util.InstructionListTest.testWayList2":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":6,"com.graphhopper.reader.OSMReaderTest.testFoot":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":206,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":203,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":157,"com.graphhopper.reader.OSMReaderTest.testOneWay":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":220,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":198,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":174,"com.graphhopper.coll.OSMIDMapTest.testGet":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":10,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":205,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":176,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":271,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":247,"com.graphhopper.reader.OSMReaderTest.testMain":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":73,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":169,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":67,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":166,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":19,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":207,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":74,"com.graphhopper.GraphHopperTest.testFootAndCar":84,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":190,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":187,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":112,"com.graphhopper.reader.OSMReaderTest.testRelation":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":243,"com.graphhopper.GraphHopperTest.testPrepareOnly":79,"com.graphhopper.GraphHopperTest.testVia":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":16,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":242,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":217,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.GraphHopperTest.testFootOnly":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":170,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":171,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":226,"com.graphhopper.util.InstructionListTest.testFind":150,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":37,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":163},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"937f1bd7-827a-11e5-bbd0-9bde5ce10071","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:418","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\":urban\"))\n    return 50;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:408","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[106,107,91],"tindex":"938165c8-827a-11e5-bbd0-dd2ca8c0415f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception ex) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"938165c9-827a-11e5-bbd0-57e1f654fb3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:221","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"status":0},{"failures":[],"tindex":"93818cda-827a-11e5-bbd0-03b6b813095b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"node","segmentSizePower":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:106","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"93818cdb-827a-11e5-bbd0-9f756c783158","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"dijkstraCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:623","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"93818cdc-827a-11e5-bbd0-c1417ba8b62f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:314","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"93818cdd-827a-11e5-bbd0-6b053534809a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:183","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,89,93,96,97],"tindex":"9381b3ee-827a-11e5-bbd0-33f5ebd97c73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:296","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"variableMap":{"index":"dim","entrySize":"dim"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:832","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int))"},"status":-1},{"failures":[144],"tindex":"9381b3ef-827a-11e5-bbd0-17c2414dc905","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"newRelationFlags","mask":"osmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:628","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long)"},"status":-1},{"failures":[145,146,147,148,149],"tindex":"9381b3f0-827a-11e5-bbd0-6bfbb35b18ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:86","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"variableMap":{"lastKey":"guess","key":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:109","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"status":-1},{"failures":[],"tindex":"9381b3f1-827a-11e5-bbd0-7dc60b1090e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.freeze()"},"status":0},{"failures":[],"tindex":"9381db02-827a-11e5-bbd0-8f1b9087e769","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"9381db03-827a-11e5-bbd0-ff4bef89f7aa","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:383","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.capacity()"},"status":0},{"failures":[],"tindex":"9381db04-827a-11e5-bbd0-8f1255d3c829","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[150,151,108,109,0,152,153,110,111,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,112,113,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,114,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,115,201,202,203,204,116,205,206,207,208,117,209,210,211,118,119,120,121,122,212,213,214,215,216,217,218,123,124,125,126,127,219,128,129,130,131,132,220,221,222,133,223,134,135,138,140,141,224,225,226,227,142,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,143,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,78,79,269,270,271,272,273,274,80,81,82,83,84,85,86,87,88,89,275,145,146,147,148,149,91,93,94,95,96,97,98,99,100,101,102,103,105,276,277,278,279,280],"tindex":"9381db05-827a-11e5-bbd0-e90a1d48b78d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"93820216-827a-11e5-bbd0-296603e2335f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-2},{"failures":[],"tindex":"93820217-827a-11e5-bbd0-e762044ec41f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"variableMap":{"edgeKey1":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","edgeKey2":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:138","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0)\n        return false;\n    \n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n    byte[] byte[] = new byte[int];\n    for (int int = 0 ; int < int ; int++) {\n        int int = java.io.RandomAccessFile.read(byte[]);\n        if (int <= 0)\n            throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n        \n        com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-1},{"failures":[114,115,116,117,209,281,282],"tindex":"93822928-827a-11e5-bbd0-5d4b9abc91d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"delta","bytes":"length","segmentSizeInBytes":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:342","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.put(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.put(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.put(byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"93822929-827a-11e5-bbd0-85bd097021c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:262","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[16,33,45,67],"tindex":"9382292a-827a-11e5-bbd0-cd1ca13e6d69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"speed","segmentSizePower":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:397","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"93822929-827a-11e5-bbd0-85bd097021c6","diffs":[{"branchesDiff":{"delete":["t0","e1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t6","com.graphhopper.GraphHopper_boolean_isAllowWrites().b","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_com.graphhopper.storage.NativeFSLockFactory$NativeLock(java.io.File,java.lang.String,boolean).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t3","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e14","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_lockExists().b","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e12","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e11","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e3","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e2","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t14","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().e3","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t11"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.GraphHopper_void_close().c3","com.graphhopper.GraphHopper_void_close().t2","com.graphhopper.GraphHopper_void_close().b","com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).b","com.graphhopper.GraphHopper_void_close().t1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_boolean_removeDir(java.io.File).b","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t6","com.graphhopper.GraphHopper_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_void_mkdirs().e1","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).t5","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.RAMDataAccess_void_flush().e2","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_lockExists().b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e1","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e3","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_process(java.lang.String).e2","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t14","com.graphhopper.storage.RAMDataAccess_boolean_loadExisting().e3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e5","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e6","com.graphhopper.GraphHopper_boolean_load(java.lang.String).t11","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.RAMIntDataAccess_void_flush().l3","com.graphhopper.storage.RAMDataAccess_void_flush().l3","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.RAMIntDataAccess_void_flush().l4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_com.graphhopper.storage.NativeFSLockFactory$NativeLock(java.io.File,java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().t1","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).t2","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e14","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e12","com.graphhopper.storage.RAMIntDataAccess_void_flush().e2","com.graphhopper.GraphHopper_boolean_load(java.lang.String).e11","com.graphhopper.storage.DAType_java.lang.String_toString().e4","com.graphhopper.util.Helper_boolean_removeDir(java.io.File).t1"]},"type":"branch"}]}]}