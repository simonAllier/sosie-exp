{"failureDictionary":{"com.graphhopper.util.GHUtilityTest.testSort2":28,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":14,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":46,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":12,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":33,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":24,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":31,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":26,"com.graphhopper.coll.CompressedArrayTest.testCompress":49,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":20,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":19,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":13,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":15,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":11,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":21,"com.graphhopper.util.GHUtilityTest.testSort":29,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":43,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":9,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":40,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.coll.CompressedArrayTest.testCompress2":48,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":23,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":39,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":44,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":10,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":41,"com.graphhopper.reader.OSMReaderTest.testSort":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":22},"transformations":[{"failures":[0],"tindex":"46642592-82c3-11e5-be94-3b08d38a78e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:278","type":"CtIfImpl","sourcecode":"if ((int[][int]) >= 0) {\n    if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n        continue;\n    } \n} "},"status":-1},{"failures":[],"tindex":"466473b3-82c3-11e5-be94-71ce2772eefb","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"466473b4-82c3-11e5-be94-154d79d3ef95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.clear()"},"status":-2},{"failures":[],"tindex":"466473b5-82c3-11e5-be94-af7eb1597e93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"tmpNewShortcuts","tmpNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:655","type":"CtForEachImpl","sourcecode":"NEXT_SC : for (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut : java.util.Map<com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut>.keySet()) {\n    boolean boolean = false;\n    com.graphhopper.util.CHEdgeIterator com.graphhopper.util.CHEdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    while (com.graphhopper.util.CHEdgeIterator.next()) {\n        if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n            if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n                continue NEXT_SC;\n            \n            if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n                throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n            } \n            com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n            com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            boolean = true;\n            break;\n        } \n    }\n    if (!boolean) {\n        com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n        com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        int++;\n    } \n}"},"status":-2},{"failures":[1],"tindex":"46649ac6-82c3-11e5-be94-bbc50192a280","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"variableMap":{"start":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:66","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long)"},"status":-1},{"failures":[2],"tindex":"4664c1d7-82c3-11e5-be94-87870cfce376","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"status":-1},{"failures":[3,4],"tindex":"4664c1d8-82c3-11e5-be94-755c745caa44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:307","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"variableMap":{"str":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:520","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\""},"status":-1},{"failures":[],"tindex":"4664c1d9-82c3-11e5-be94-c1fef11ff3fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"goalNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12],"tindex":"4664c1da-82c3-11e5-be94-7b41efbc5ba2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"freeIndex":"segmentCount","currentIndex":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:164","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n    int[] int[] = new int[int];\n    for (int int = 0 ; int < int ; int++) {\n        int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n    }\n    int[][][int] = int[];\n}"},"status":-1},{"failures":[],"tindex":"4664e8eb-82c3-11e5-be94-c3be8cbeb5be","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"zeroCounter","lastKey":"zeroCounter","key":"zeroCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":0},{"failures":[13,14,15],"tindex":"4664e8ec-82c3-11e5-be94-437487993918","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:58","type":"CtReturnImpl","sourcecode":"return double * double"},"status":-1},{"failures":[],"tindex":"4664e8ed-82c3-11e5-be94-5527843e6fa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"edgeFrom","index":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"46650ffe-82c3-11e5-be94-11ed46f7f9d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"status":-2},{"failures":[16,5,6,17,7,18,19,20,12,21,22,23],"tindex":"46650fff-82c3-11e5-be94-ed2bf258208c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:84","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[24,25,26],"tindex":"46651000-82c3-11e5-be94-adea6672a8cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:149","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:210","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"status":-1},{"failures":[27,28,29,30],"tindex":"46651001-82c3-11e5-be94-8f30af850eca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:269","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-1},{"failures":[],"tindex":"46653712-82c3-11e5-be94-6524192735c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"flags","highKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:86","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true);\n"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"46653713-82c3-11e5-be94-cb0b2bbd522e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"midLon","incDist2DSum":"midLon","fwdSlower":"maxLonTmp","fullDist2D":"midLon","restDist2D":"maxLonTmp","speed":"maxLonTmp","decDist2DSum":"maxLonTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"46653714-82c3-11e5-be94-27aa8f73046c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:305","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}