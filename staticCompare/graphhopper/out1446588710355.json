{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":64,"com.graphhopper.reader.OSMReaderTest.testMain":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":26,"com.graphhopper.reader.OSMReaderTest.testFerry":54,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":28,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":20,"com.graphhopper.reader.OSMReaderTest.testWithBounds":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":9,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":61,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":12,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":17,"com.graphhopper.reader.OSMNodeTest.testSetTags":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":15,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":38,"com.graphhopper.GraphHopperTest.testPrepare":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":11,"com.graphhopper.GraphHopperTest.testFootAndCar":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":24,"com.graphhopper.reader.OSMReaderTest.testFoot":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":27,"com.graphhopper.reader.OSMReaderTest.testOneWay":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":22,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":50,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":36,"com.graphhopper.GraphHopperTest.testPrepareOnly":42,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":29,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":16,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":59,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":60,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":48,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":32,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":25,"com.graphhopper.reader.OSMReaderTest.testBarriers":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":14,"com.graphhopper.GraphHopperTest.testLoadOSM":49,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":53,"com.graphhopper.reader.OSMReaderTest.testSort":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69},"transformations":[{"failures":[],"tindex":"e1af7731-8277-11e5-b847-e1e4ff90f865","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:388","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"e1af9e42-8277-11e5-b847-656bbc018bee","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"tmp","orientation":"tmp","java.lang.Math.PI":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:240","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":0},{"failures":[],"tindex":"e1af9e43-8277-11e5-b847-9b4bf8d4a990","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIteratorState.isShortcut())\n    return com.graphhopper.util.CHEdgeIteratorState.getWeight();\n"},"variableMap":{"tmp":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:52","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"e1af9e44-8277-11e5-b847-b137dbb6604b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:110","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e1af9e45-8277-11e5-b847-f90538a817ad","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"status":0},{"failures":[0,1],"tindex":"e1afc556-8277-11e5-b847-47a8eb1eed10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:428","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(double, double)"},"variableMap":{"lon":"lat","keyAlgo":"algo","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:83","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(new com.graphhopper.util.shapes.GHPoint(double , double))"},"status":-1},{"failures":[2],"tindex":"e1afc557-8277-11e5-b847-0d249046c4f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"e1afc558-8277-11e5-b847-5363be6ce5b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:744","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int)"},"status":-2},{"failures":[],"tindex":"e1afc559-8277-11e5-b847-af25bf57fc61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"e1afc55a-8277-11e5-b847-9f6c97c75255","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"subnetworks","tmp":"subnetworks","segmentSizeInBytes":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:84","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(java.util.List<gnu.trove.list.array.TIntArrayList>.size(), int)"},"status":0},{"failures":[],"tindex":"e1afc55b-8277-11e5-b847-09e86745e3e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"e1afc55c-8277-11e5-b847-9b22b0644b28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"status":-1},{"failures":[40],"tindex":"e1afec6d-8277-11e5-b847-e95c09f12d58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:105","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue()"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:88","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-1},{"failures":[],"tindex":"e1afec6e-8277-11e5-b847-c3b3e08838d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((((((\"time(pass1): \" + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" pass2: \") + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" total:\") + ((int)(((com.graphhopper.util.StopWatch.getSeconds()) + (com.graphhopper.util.StopWatch.getSeconds()))))))"},"status":0},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"e1afec6f-8277-11e5-b847-45a266a91872","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:171","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement != null)\n    return com.graphhopper.reader.OSMElement;\n"},"status":-1},{"failures":[42,49,50,51,68,69,70,71],"tindex":"e1afec70-8277-11e5-b847-678c3ffe3bd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((4 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[],"tindex":"e1afec71-8277-11e5-b847-cfcc1a55d68d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:715","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) + (com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"shortcuts":"index","nodesCH":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:80","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) / 4"},"status":0},{"failures":[],"tindex":"e1b01382-8277-11e5-b847-2587b16c797e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:830","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getElevation(int)"},"status":-2},{"failures":[],"tindex":"e1b01383-8277-11e5-b847-a17f757f79d6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"relationCodeEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"e1b01384-8277-11e5-b847-e5b37c547507","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"E_FLAGS","hash":"S_SKIP_EDGE1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:658","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.storage.EdgeAccess.int) + 4"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e1afec6e-8277-11e5-b847-c3b3e08838d6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds","org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"e1afc55b-8277-11e5-b847-09e86745e3e9","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"e1afec71-8277-11e5-b847-cfcc1a55d68d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity"]},"type":"staticDiff"}]}]}