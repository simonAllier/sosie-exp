{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":390,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.reader.OSMReaderTest.testFerry":240,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":235,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":382,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":273,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":1,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":302,"com.graphhopper.GraphHopperTest.testPrepare":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":370,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":290,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":318,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":187,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":310,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":342,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":83,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":305,"com.graphhopper.GraphHopperTest.testLoadOSM":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":20,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":136,"com.graphhopper.reader.OSMReaderTest.testSort":242,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":376,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":118,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":371,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":34,"com.graphhopper.routing.DijkstraTest.initializationError":423,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":239,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":165,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":375,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":221,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":323,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":313,"com.graphhopper.coll.OSMIDMapTest.testGetLong":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":65,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":71,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":137,"com.graphhopper.GraphHopperAPITest.testLoad":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":387,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":102,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.reader.OSMReaderTest.testBarriers":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":154,"com.graphhopper.util.GHUtilityTest.testCopy":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":347,"com.graphhopper.routing.PathTest.testFindInstruction":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":395,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":194,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":119,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":78,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":296,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":400,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":161,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":182,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":280,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":188,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":28,"com.graphhopper.routing.AStarTest.initializationError":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":162,"com.graphhopper.routing.PathBidirRefTest.testExtract":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":396,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":257,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":186,"com.graphhopper.util.GHUtilityTest.testSort2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":324,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":74,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":425,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":15,"com.graphhopper.storage.GraphHopperStorageTest.testClone":94,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":414,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":159,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":104,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":349,"com.graphhopper.routing.PathTest.testTime":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":184,"com.graphhopper.reader.OSMReaderTest.testRelation":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":361,"com.graphhopper.util.GHUtilityTest.testSortDirected":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":149,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":284,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":189,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":409,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":357,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":176,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":281,"com.graphhopper.routing.QueryGraphTest.testOneWay":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":157,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":19,"com.graphhopper.reader.OSMReaderTest.testWithBounds":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":272,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":362,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":397,"com.graphhopper.util.BitUtilLittleTest.testToDouble":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":209,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":67,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":10,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":309,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":147,"com.graphhopper.GraphHopperAPITest.testDisconnected179":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":350,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":345,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":411,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":360,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":373,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":264,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":7,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":388,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":303,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":113,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":321,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":422,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":415,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":216,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":50,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":330,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":86,"com.graphhopper.routing.PathTest.testWayList":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":372,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":353,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":408,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":331,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":126,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":129,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":58,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":341,"com.graphhopper.util.GHUtilityTest.testSort":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":178,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":84,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":192,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":128,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":166,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":377,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":46,"com.graphhopper.routing.PathTest.testFound":336,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":383,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":401,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":306,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":45,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":99,"com.graphhopper.util.InstructionListTest.testEmptyList":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":164,"com.graphhopper.reader.PrinctonReaderTest.testRead":237,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":69,"com.graphhopper.reader.OSMReaderTest.testFoot":241,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":180,"com.graphhopper.reader.OSMReaderTest.testOneWay":253,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":142,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":79,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":300,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":359,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":413,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":293,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":225,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":279,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":355,"com.graphhopper.util.BitUtilLittleTest.testToLong":42,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":18,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":283,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":87,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":381,"com.graphhopper.routing.PathBidirRefTest.testExtract2":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":183,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":222,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":206,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":374,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":391,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":416,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":11,"com.graphhopper.GraphHopperTest.testFootAndCar":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":346,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":158,"com.graphhopper.GraphHopperTest.testPrepareOnly":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":197,"com.graphhopper.GraphHopperTest.testVia":262,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":319,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":248,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":130,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":114,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":392,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":214,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":358,"com.graphhopper.routing.AStarBidirectionTest.initializationError":421,"com.graphhopper.util.InstructionListTest.testFind":23,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4},"transformations":[{"failures":[],"tindex":"caa8b699-82a4-11e5-b452-075a808494cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:38","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lat\"))"},"status":-2},{"failures":[],"tindex":"caa8b69a-82a4-11e5-b452-97b8de15dc95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.NaN","weight":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:231","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) >= 2) {\n    double = com.graphhopper.util.PointList.getLatitude(1);\n    double = com.graphhopper.util.PointList.getLongitude(1);\n} else if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"caa8ddab-82a4-11e5-b452-8968b81f8610","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:843","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n    int += 4;\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n    int += 4;\n    if (boolean) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n        int += 4;\n    } \n}"},"status":-1},{"failures":[40,41,42,43],"tindex":"caa8ddac-82a4-11e5-b452-7b67156ea0d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:75","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long >> 56))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:81","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(long >> 8))"},"status":-1},{"failures":[44],"tindex":"caa8ddad-82a4-11e5-b452-53e07bf12a66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"bwFaster"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:239","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"caa8ddae-82a4-11e5-b452-8d9f67be5f3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:873","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMNode = new com.graphhopper.reader.OSMNode(com.graphhopper.reader.OSMReader.createNewNodeId() , com.graphhopper.storage.NodeAccess , int)"},"status":-2},{"failures":[45,46,47,48,49,50,51,5,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,6,72,73,74,75,76,7,77,78,79,80,8,81,82,83,84,85,86,87,88,89,90,10,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,11,111,112,113,114,115,12,116,117,118,119,13,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,15,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,16,158,159,160,161,162,17,163,164,165,166,18,167,168,169,170,171,172,173,19,174,20,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,21,210,22,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,23,228,229,24,25,230,231,232,26,233,234,235,236,237,238,239,240,241,27,242,243,28,29,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,30,270,271,272,273,274,275,276,277,278,279,280,44,31,31,281,281,282,282,32,32,33,33,283,283,284,284,285,285,286,286,34,34,35,35,287,287,288,288,36,36,289,289,37,37,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,38,329,330,331,332,333,334,335,336,337,338,339,39,340,341,342],"tindex":"caa904bf-82a4-11e5-b452-a52af7f015f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"caa904c0-82a4-11e5-b452-9f454692d2f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:113","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"caa904c1-82a4-11e5-b452-9d8fca22d2bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"value","speed":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:482","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * double))) / double"},"status":-2},{"failures":[],"tindex":"caa904c2-82a4-11e5-b452-67198fc2df30","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":0},{"failures":[],"tindex":"caa92bd3-82a4-11e5-b452-ff2c273a270c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":0},{"failures":[0,343,344,345,346,347,348,349,350,351,352,45,353,354,355,356,357,358,359,360,361,1,362,363,364,365,46,2,366,367,368,369,3,370,371,372,373,374,4,375,47,376,377,48,49,50,51,5,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,6,72,73,74,75,76,7,77,78,79,80,8,81,82,83,84,85,86,9,378,379,87,88,89,90,10,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,11,111,112,113,114,115,12,116,117,118,119,13,120,121,122,123,124,125,126,380,127,128,129,381,130,131,132,133,14,382,134,135,136,137,15,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,16,158,159,160,161,162,17,163,164,165,166,18,167,168,169,170,171,186,198,204,222,240,241,27,242,243,28,29,244,245,247,248,249,250,251,253,254,265,30,383,384,385,386,387,388,389,279,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,281,422,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,38,329,330,331,423,424],"tindex":"caa92bd4-82a4-11e5-b452-17185e3307c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"caa92bd5-82a4-11e5-b452-bb614865bc31","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:225","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[425],"tindex":"caa952e6-82a4-11e5-b452-2f99b768d159","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"inner":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:76","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"caa952e7-82a4-11e5-b452-e3d329242a80","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:112","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.Instruction>.isEmpty()"},"status":-2},{"failures":[],"tindex":"caa952e8-82a4-11e5-b452-a771ff9b513b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"variableMap":{"sacScale":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\"))"},"status":-2},{"failures":[],"tindex":"caa952e9-82a4-11e5-b452-cd69b31d95b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.min(int[][int], int[][int])"},"variableMap":{"start":"element","prevConnectedId":"element","nodeLowLink":"elem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"caa952ea-82a4-11e5-b452-734590f11f64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:314","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[],"tindex":"caa952eb-82a4-11e5-b452-27cf9c1e2e67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"counter","bytes":"counter","segmentSizeInBytes":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1113","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory> java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory> : java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet()) {\n    org.slf4j.Logger.info(((((((((++int) + \"/\") + (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet().size())) + \" calling prepare.doWork for \") + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getKey())) + \" ... (\") + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n    if (!((java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue()) instanceof com.graphhopper.routing.ch.PrepareContractionHierarchies))\n        throw new java.lang.IllegalStateException((\"RoutingAlgorithmFactory is not suited for CH preparation \" + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())));\n    \n    ((com.graphhopper.routing.ch.PrepareContractionHierarchies)(java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())).doWork();\n}"},"status":0},{"failures":[],"tindex":"caa979fc-82a4-11e5-b452-41644f3a436a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"caa92bd3-82a4-11e5-b452-ff2c273a270c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.BresenhamLine.fix"]},"type":"staticDiff"}]},{"transformation":"caa952eb-82a4-11e5-b452-27cf9c1e2e67","diffs":[{"methodsDiff":{"delete":["java.util.Set<java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>>.size","java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue","com.graphhopper.util.Helper.getMemInfo","java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getKey","com.graphhopper.routing.ch.PrepareContractionHierarchies.doWork","org.slf4j.Logger.info","java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]}]}