{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":239,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":249,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":190,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":191,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":246,"com.graphhopper.routing.QueryGraphTest.testOneWay":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":103,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":205,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":206,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":272,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":215,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":5,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":238,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":118,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":132,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":254,"com.graphhopper.util.InstructionListTest.testWayList":187,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":233,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":179,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":210,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":41,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":199,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":269,"com.graphhopper.util.HelperTest.testUnzip":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":209,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":91,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":224,"com.graphhopper.GraphHopperTest.testLoadOSM":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":42,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":86,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":136,"com.graphhopper.reader.OSMReaderTest.testSort":281,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":99,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":243,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":253,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":200,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":260,"com.graphhopper.routing.PathTest.testWayList":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":244,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":39,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":231,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":155,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":150,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":19,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":114,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":235,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":268,"com.graphhopper.util.GHUtilityTest.testSort":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":46,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":227,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":176,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":110,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":148,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":287,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":276,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":242,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":204,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":100,"com.graphhopper.routing.PathTest.testFound":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":60,"com.graphhopper.util.GHUtilityTest.testCopy":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":229,"com.graphhopper.routing.PathTest.testFindInstruction":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":152,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":159,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":273,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":232,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":22,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":141,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":282,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":172,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":217,"com.graphhopper.reader.PrinctonReaderTest.testRead":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":90,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":221,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":105,"com.graphhopper.util.InstructionListTest.testWayList2":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":73,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":47,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":97,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":92,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":69,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":35,"com.graphhopper.routing.PathBidirRefTest.testExtract":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":194,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":54,"com.graphhopper.util.GHUtilityTest.testSort2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":65,"com.graphhopper.reader.OSMReaderTest.testMain":280,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":285,"com.graphhopper.routing.PathBidirRefTest.testExtract2":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":20,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":43,"com.graphhopper.storage.GraphHopperStorageTest.testClone":122,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":113,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":104,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":128,"com.graphhopper.GraphHopperTest.testFootAndCar":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":61,"com.graphhopper.routing.PathTest.testTime":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":154,"com.graphhopper.util.GHUtilityTest.testSortDirected":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":288,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":25,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":4,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":250,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":189,"com.graphhopper.GraphHopperTest.testFootOnly":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":68,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":264,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":274,"com.graphhopper.util.InstructionListTest.testFind":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":146},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"bfbc98a3-8284-11e5-9ef2-19e6cd181830","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"a","adjNode":"b","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double).setFlags(com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-1},{"failures":[],"tindex":"bfbcbfb4-8284-11e5-9ef2-6b891a05fcc7","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:164","type":"CtReturnImpl","sourcecode":"return (((((\"*-(\" + (int)) + \")->\") + (int)) + \"-(\") + (int)) + \")->*\""},"variableMap":{"edgeTo":"maxGeoRef","nodeVia":"maxGeoRef","edgeFrom":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:406","type":"CtReturnImpl","sourcecode":"return ((((((((((((((((((\"edges:\" + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"nodes:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.storage.BaseGraph.getNodes()))) + \"(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"name:(\") + ((com.graphhopper.search.NameIndex.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"geo:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"bounds:\") + (com.graphhopper.util.shapes.BBox)"},"status":-2},{"failures":[],"tindex":"bfbcbfb5-8284-11e5-9ef2-7debd529b1a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:539","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.provider\", \"noop\").toLowerCase()"},"status":-2},{"failures":[],"tindex":"bfbce6c6-8284-11e5-9ef2-fd95c33c8bdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:230","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.close()"},"status":-2},{"failures":[],"tindex":"bfbce6c7-8284-11e5-9ef2-2d1fd1cd6ccc","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())))"},"variableMap":{"tmpWayCounter":"tmpRelationCounter","this":"this","com.graphhopper.reader.OSMReader.logger":"com.graphhopper.reader.OSMReader.logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:197","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n    final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n    if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n        com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n    \n    if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n        com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n    \n    if (((++long) % 50000) == 0) {\n        com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n} "},"status":0},{"failures":[],"tindex":"bfbce6c8-8284-11e5-9ef2-f305a1674a73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:260","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double double = com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(int, boolean);\n    double double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-1},{"failures":[],"tindex":"bfbce6c9-8284-11e5-9ef2-af597c82b291","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[270,271,272],"tindex":"bfbd0dda-8284-11e5-9ef2-231724b7e510","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setSeaLevel(true)"},"variableMap":{"demProvider":"demProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:237","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile)"},"status":-1},{"failures":[],"tindex":"bfbd0ddb-8284-11e5-9ef2-876e014f1d89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"flags","highKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:373","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[57,64,66,70,71,75,76,89,96,98,102,103,107,108,120,127,129,133,134,138,139,152,159,161,165,166,170,171,203,204,206,208,209],"tindex":"bfbd0ddc-8284-11e5-9ef2-9dc91b399ecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:701","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (int == (com.graphhopper.storage.EdgeAccess.int))\n        continue;\n    \n    if (com.graphhopper.coll.GHBitSet.contains(int))\n        throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n    \n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-1},{"failures":[273,274,275,276],"tindex":"bfbd0ddd-8284-11e5-9ef2-47f43a9d4b1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"resFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:117","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int)"},"status":-1},{"failures":[],"tindex":"bfbd0dde-8284-11e5-9ef2-571e391fa944","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:879","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"bfbd0ddf-8284-11e5-9ef2-0bf379af9f8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-2},{"failures":[],"tindex":"bfbd34f0-8284-11e5-9ef2-0f1608e118ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":0},{"failures":[277],"tindex":"bfbd34f1-8284-11e5-9ef2-3d571bf0a4ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:159","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"factor","tmpNo":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:78","type":"CtWhileImpl","sourcecode":"while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n    java.io.FileOutputStream.write(byte[], 0, int);\n    long += int * double;\n    if (com.graphhopper.util.ProgressListener != null)\n        com.graphhopper.util.ProgressListener.update(long);\n    \n}"},"status":-1},{"failures":[1,3,12,16,17,46,50,51,192,193,194,195,196,278,279,280,281,229,232,282,235,238,244,245,246,247,283,250,251,252,253,254,256,257,259],"tindex":"bfbd34f2-8284-11e5-9ef2-f30f655c5ba2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:180","type":"CtIfImpl","sourcecode":"if (double < 1)\n    return ;\n"},"variableMap":{"fullDist2D":"tmpLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:172","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.Position) != (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position)) {\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double);\n    return ;\n} "},"status":-1},{"failures":[273,284,285,85,274,116,286,275,146,287,276,288,289,290,291,292,220,221],"tindex":"bfbd34f3-8284-11e5-9ef2-31a48f4e7ddc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.flush()"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.putCurrentVersions()"},"status":-1},{"failures":[],"tindex":"bfbd34f4-8284-11e5-9ef2-d321a69c4403","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"status":-2},{"failures":[],"tindex":"bfbd34f5-8284-11e5-9ef2-6523fad2319a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:58","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.util.ArrayList<java.lang.Integer>.add(gnu.trove.list.TIntList.get(int));\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bfbd34f0-8284-11e5-9ef2-0f1608e118ff","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun"]},"type":"staticDiff"}]}]}