{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":351,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":387,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":327,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":38,"com.graphhopper.reader.OSMReaderTest.testFerry":398,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":226,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":280,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":246,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":447,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":73,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":453,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":135,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":369,"com.graphhopper.GraphHopperTest.testPrepare":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":456,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":357,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":318,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":382,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":281,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":374,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":372,"com.graphhopper.GraphHopperTest.testLoadOSM":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":199,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":174,"com.graphhopper.reader.OSMReaderTest.testSort":401,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":307,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":408,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":444,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":151,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":66,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":391,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":415,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":114,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":332,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":121,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":347,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":231,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":17,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":23,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":256,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":457,"com.graphhopper.GraphHopperAPITest.testLoad":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":250,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":136,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":310,"com.graphhopper.reader.OSMReaderTest.testBarriers":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":42,"com.graphhopper.util.GHUtilityTest.testCopy":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":338,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":319,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":316,"com.graphhopper.routing.PathTest.testFindInstruction":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":249,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":165,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":152,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":29,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":245,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":43,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":109,"com.graphhopper.util.InstructionListTest.testWayList2":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":182,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":33,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":234,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":126,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":110,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":258,"com.graphhopper.routing.PathBidirRefTest.testExtract":328,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":422,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":312,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":276,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":186,"com.graphhopper.util.GHUtilityTest.testSort2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":348,"com.graphhopper.reader.OSMReaderTest.testMain":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":238,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":84,"com.graphhopper.storage.GraphHopperStorageTest.testClone":129,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":107,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":44,"com.graphhopper.routing.PathTest.testTime":376,"com.graphhopper.util.InstructionListTest.testCreateGPX":438,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":56,"com.graphhopper.util.GHUtilityTest.testSortDirected":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":96,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":437,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":388,"com.graphhopper.GraphHopperTest.testFootOnly":434,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":443,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":201,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":265,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":377,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":52,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":176,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":384,"com.graphhopper.routing.QueryGraphTest.testOneWay":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":172,"com.graphhopper.reader.OSMReaderTest.testWithBounds":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":304,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":451,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":454,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":320,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":19,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":125,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":333,"com.graphhopper.util.InstructionListTest.testWayList":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":94,"com.graphhopper.GraphHopperAPITest.testDisconnected179":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":45,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":267,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":414,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":427,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":131,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":27,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":370,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":146,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":366,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":205,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":355,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":287,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":122,"com.graphhopper.routing.PathTest.testWayList":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":340,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":386,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":449,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":284,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":75,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":292,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":381,"com.graphhopper.util.GHUtilityTest.testSort":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":178,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":455,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":35,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":446,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":115,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":390,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":2,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":445,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":290,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":232,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":354,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":59,"com.graphhopper.routing.PathTest.testFound":375,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":326,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":435,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":330,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":47,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":134,"com.graphhopper.util.InstructionListTest.testEmptyList":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":260,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":113,"com.graphhopper.reader.PrinctonReaderTest.testRead":413,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":87,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":239,"com.graphhopper.reader.OSMReaderTest.testFoot":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":58,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":180,"com.graphhopper.reader.OSMReaderTest.testOneWay":412,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":89,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":149,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":54,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":133,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":362,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":441,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":371,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":360,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":440,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":225,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":116,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":411,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":76,"com.graphhopper.routing.PathBidirRefTest.testExtract2":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":212,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":193,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":120,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":271,"com.graphhopper.GraphHopperTest.testFootAndCar":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":41,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":106,"com.graphhopper.GraphHopperTest.testPrepareOnly":417,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":168,"com.graphhopper.GraphHopperTest.testVia":425,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":343,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":407,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":460,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":77,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":255,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":406,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":53,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":95,"com.graphhopper.util.InstructionListTest.testFind":218,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0},"transformations":[{"failures":[],"tindex":"8bf96de1-7912-11e5-9111-d754d287e34e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n    return long;\n"},"variableMap":{"acceptBit":"ferryBit","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:209","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436],"tindex":"8bf9bc02-7912-11e5-9111-f32fc9538faa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"encoderCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[437,438,222],"tindex":"8bf9e313-7912-11e5-9111-1b46cc461967","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"status":-1},{"failures":[389],"tindex":"8bf9e314-7912-11e5-9111-19373eab024e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:168","type":"CtReturnImpl","sourcecode":"return ((int) + \"->\") + (int)"},"status":-1},{"failures":[439,440,441,442,443],"tindex":"8bf9e315-7912-11e5-9111-a719167f1c14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"dLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[261,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,416,417,424,425,426,427,428,429,430,432,433,434,435],"tindex":"8bf9e316-7912-11e5-9111-39f42e37a38f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"includeWay","bufferStart":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[0,1,1,2,444,444,445,3,446,4,5,6,7,8,9,10,11,12,13,447,15,16,17,18,19,20,21,22,23,448,449,24,25,450,26,27,28,29,30,31,32,451,33,34,35,36,37,38,39,40,41,42,43,44,45,46,452,48,49,50,51,52,53,54,55,56,453,454,57,58,455,59,60,61,62,63,64,65,456,66,67,68,69,72,457,458,213,214,215,216,217,218,459,219,220,221,222,223,224,226,227,228,229,253,302,303,304,305,306,307,308,309,310,328,329,373,374,375,376,377,378,379,380,381,382,385,405,460,413,414,415],"tindex":"8bfa0a27-7912-11e5-9111-fd1d5e44f26b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:65","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.Directory.find(\"turn_costs\")"},"status":-1},{"failures":[],"tindex":"8bfa0a28-7912-11e5-9111-55823d8f1123","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"edgeId","tmpSize":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:228","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(int)"},"status":-2},{"failures":[],"tindex":"8bfa0a29-7912-11e5-9111-5beaff54f57d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:920","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"8bfa0a2a-7912-11e5-9111-51bd1c157bbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","ase":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:107","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-2},{"failures":[],"tindex":"8bfa313b-7912-11e5-9111-2d230b09255b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:204","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.close()"},"variableMap":{"tmpRaFile":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:144","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"8bfa313c-7912-11e5-9111-2d136ffabbbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:160","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"8bfa313d-7912-11e5-9111-e91a0a5fecc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:277","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"8bfa313e-7912-11e5-9111-0b9c486ea17c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.lookup(java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":-2},{"failures":[],"tindex":"8bfa313f-7912-11e5-9111-e19500e0d0ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:55","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field.setAccessible(true)"},"status":-2},{"failures":[],"tindex":"8bfa5850-7912-11e5-9111-953b1da43101","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"prevTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:186","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double))) / (double))))"},"status":-2},{"failures":[],"tindex":"8bfa5851-7912-11e5-9111-257f790bff18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"b_lon","r_lat":"b_lon","a_lat":"r_lon","delta_lon":"b_lon","r_lon":"b_lon","a_lon":"r_lon","norm":"b_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:234","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"8bfa5852-7912-11e5-9111-376a66c2bd41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-2},{"failures":[],"tindex":"8bfa5853-7912-11e5-9111-654f5395e90a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:89","type":"CtForImpl","sourcecode":"for (int int, int int = 0 ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        if (double <= 0)\n            break;\n        \n        com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n    } \n}"},"status":-2},{"failures":[],"tindex":"8bfa7f64-7912-11e5-9111-0f182327ea17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}