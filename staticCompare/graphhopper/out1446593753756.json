{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":156,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":180,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":187,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":221,"com.graphhopper.reader.OSMReaderTest.testFerry":87,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":359,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":78,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":338,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":19,"com.graphhopper.storage.VLongStorageTest.testWrite":205,"com.graphhopper.reader.OSMReaderTest.testWithBounds":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":243,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":314,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":262,"com.graphhopper.coll.CompressedArrayTest.testCompress":208,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":226,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":292,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":38,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":229,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":106,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":279,"com.graphhopper.GraphHopperTest.testPrepare":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":155,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":58,"com.graphhopper.search.NameIndexTest.testFlush":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":162,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":298,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":138,"com.graphhopper.util.InstructionListTest.testWayList":126,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":310,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":268,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":366,"com.graphhopper.GraphHopperAPITest.testDisconnected179":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":67,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":144,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":199,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":354,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":323,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":0,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":175,"com.graphhopper.GraphHopperTest.testLoadOSM":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":21,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":214,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":303,"com.graphhopper.reader.OSMReaderTest.testSort":90,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":150,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":216,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":334,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":160,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":184,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":352,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":190,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":280,"com.graphhopper.routing.PathTest.testWayList":196,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":328,"com.graphhopper.coll.OSMIDMapTest.testGet2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":346,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":288,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":145,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":179,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":331,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":240,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":52,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":295,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":152,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":198,"com.graphhopper.util.GHUtilityTest.testSort":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":25,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":141,"com.graphhopper.coll.OSMIDMapTest.testGetLong":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":349,"com.graphhopper.search.NameIndexTest.testPut":102,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":264,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":273,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":71,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":347,"com.graphhopper.coll.CompressedArrayTest.testCompress2":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":274,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":244,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":85,"com.graphhopper.GraphHopperAPITest.testLoad":131,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":76,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":283,"com.graphhopper.reader.OSMReaderTest.testBarriers":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":234,"com.graphhopper.routing.PathTest.testFound":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":335,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":34,"com.graphhopper.util.GHUtilityTest.testCopy":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":143,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":2,"com.graphhopper.routing.PathTest.testFindInstruction":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":235,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":245,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":104,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":316,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":290,"com.graphhopper.util.InstructionListTest.testEmptyList":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":146,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":309,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":259,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":299,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":247,"com.graphhopper.reader.PrinctonReaderTest.testRead":353,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":241,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":75,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":176,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":342,"com.graphhopper.util.InstructionListTest.testWayList2":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":44,"com.graphhopper.reader.OSMReaderTest.testFoot":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":29,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":86,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":26,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":83,"com.graphhopper.reader.OSMReaderTest.testOneWay":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":263,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":133,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":332,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":324,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":260,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":217,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":269,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":282,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":289,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":92,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":158,"com.graphhopper.coll.OSMIDMapTest.testGet":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":165,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":277,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":202,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":113,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":129,"com.graphhopper.storage.RAMDataAccessTest.testCopy":63,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":318,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":112,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":227,"com.graphhopper.storage.RAMDataAccessTest.testSegments":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":33,"com.graphhopper.util.GHUtilityTest.testSort2":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":153,"com.graphhopper.reader.OSMReaderTest.testMain":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":348,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":281,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":224,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":53,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":101,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":35,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":255,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":170,"com.graphhopper.storage.StorablePropertiesTest.testStore":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":22,"com.graphhopper.storage.GraphHopperStorageTest.testClone":285,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":313,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":340,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":3,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":294,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":59,"com.graphhopper.GraphHopperTest.testFootAndCar":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":77,"com.graphhopper.routing.PathTest.testTime":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":149,"com.graphhopper.reader.OSMReaderTest.testRelation":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":339,"com.graphhopper.util.GHUtilityTest.testSortDirected":364,"com.graphhopper.GraphHopperTest.testPrepareOnly":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":215,"com.graphhopper.GraphHopperTest.testVia":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":223,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":148,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":96,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":74,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":181,"com.graphhopper.GraphHopperTest.testFootOnly":122,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":128,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":43,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":45,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":231,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":194,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":330,"com.graphhopper.util.InstructionListTest.testFind":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":321},"transformations":[{"failures":[0,1,2,3],"tindex":"9fcac27c-8283-11e5-80c5-23ffbe23d954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:147","type":"CtIfImpl","sourcecode":"if (double < double) {\n    int = int;\n    double = double;\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,0,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"9fcae98d-8283-11e5-80c5-0d28b1f60591","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:108","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[205,206,207,208],"tindex":"9fcb109e-8283-11e5-80c5-5def819b0ff9","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(0)"},"variableMap":{"buck":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeByte(((byte)((long & 127L) | 128L)))"},"status":-1},{"failures":[209,210,211,212,213,67,214,215,216,217,218,174],"tindex":"9fcb109f-8283-11e5-80c5-0fb6efd70a66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-1},{"failures":[207,208],"tindex":"9fcb37b0-8283-11e5-80c5-3f596a8cad85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:156","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[9,11,55,57,69,73,77,107,118,119,120,121],"tindex":"9fcb37b1-8283-11e5-80c5-8d6ae14e16c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:275","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"status":-1},{"failures":[],"tindex":"9fcb37b2-8283-11e5-80c5-e5ff9a0ff354","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:352","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Helper.idealIntArraySize((int + 1))"},"variableMap":{"pos":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:360","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"9fcb37b3-8283-11e5-80c5-4b6571d2015e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:312","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.close()"},"variableMap":{"cg":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:494","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeExplorer == null) || (com.graphhopper.util.EdgeExplorer == null)) {\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , true , false));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n} "},"status":-2},{"failures":[],"tindex":"9fcb5ec4-8283-11e5-80c5-a596c84ca8e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    boolean = true;\n    boolean = true;\n} "},"status":-1},{"failures":[30,50,219,220,221,222,223,224],"tindex":"9fcb5ec5-8283-11e5-80c5-ed1468cc11cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:99","type":"CtForImpl","sourcecode":"for (int int = 0, int int ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < 0)\n        continue;\n    \n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        double = double;\n    } \n    if (int > 0)\n        continue;\n    \n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n            if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            \n            double = double;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"9fcb85d6-8283-11e5-80c5-abbacf59a215","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[9,12,13,14,15,19,21,39,41,55,58,59,60,61,225,226,227,228,77,79,80,81,82,89,92,93,122,126,127,158,176,179,180,182,184,185,186,187,189,196],"tindex":"9fcb85d7-8283-11e5-80c5-33cb8c37aa8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"wayGeometry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:858","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int)"},"status":-1},{"failures":[],"tindex":"9fcb85d8-8283-11e5-80c5-81de98c7dd60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:49","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[229,230,7,8,231,9,232,10,11,233,209,12,234,235,236,237,238,239,240,241,242,243,244,210,245,246,247,248,249,250,251,252,13,253,254,255,256,257,14,258,259,260,261,15,262,263,16,264,265,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,266,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,267,52,53,268,269,270,271,272,273,219,220,221,222,223,224,274,275,276,277,278,279,54,280,55,56,57,281,211,58,282,283,284,285,286,287,288,289,290,291,292,212,293,294,295,296,297,298,299,300,59,301,302,303,304,305,60,306,307,308,309,61,310,311,62,312,313,314,315,66,316,317,67,68,69,70,71,72,73,74,75,76,318,77,78,319,214,79,320,321,322,323,324,325,326,327,328,329,330,215,331,332,333,334,335,336,337,338,80,339,340,341,342,343,81,344,345,346,347,82,348,349,83,350,351,84,85,86,352,353,354,87,88,89,90,91,92,93,94,95,355,356,96,97,98,99,357,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,0,117,118,119,120,121,122,123,124,358,125,126,127,128,359,360,129,361,362,130,363,364,365,366,131,132],"tindex":"9fcbace9-8283-11e5-80c5-bd2b294f622c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"variableMap":{"i":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"9fcbacea-8283-11e5-80c5-b98e3ca69cbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"segmentSizeInBytes","i":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:138","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0)\n        return false;\n    \n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n    byte[] byte[] = new byte[int];\n    for (int int = 0 ; int < int ; int++) {\n        int int = java.io.RandomAccessFile.read(byte[]);\n        if (int <= 0)\n            throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n        \n        com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[],"tindex":"9fcbd3fb-8283-11e5-80c5-b5ae44ef9fc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"neighborTime","orientation":"neighborTime","java.lang.Math.PI":"neighborTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:363","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[],"tindex":"9fcbd3fc-8283-11e5-80c5-fd46d0d5033a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int)"},"status":-2},{"failures":[],"tindex":"9fcbd3fd-8283-11e5-80c5-8bce913071cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"sw"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1052","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":0},{"failures":[],"tindex":"9fcbd3fe-8283-11e5-80c5-6dcbc6bc4b42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:105","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"9fcbfb0f-8283-11e5-80c5-a7aa125166fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:181","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"variableMap":{"minLon":"weightLimit","maxLat":"weight","minLat":"weightLimit","maxLon":"weight","lon":"weightLimit","lat":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:190","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) > (double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"9fcbd3fd-8283-11e5-80c5-8bce913071cb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]},{"transformation":"9fcbd3fb-8283-11e5-80c5-b5ae44ef9fc7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}