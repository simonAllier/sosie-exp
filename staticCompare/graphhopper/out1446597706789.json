{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":23,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":67,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":44,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":3,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":17,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":38,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":55,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":22,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":70,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":69,"com.graphhopper.GraphHopperTest.testPrepare":31,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.util.InstructionListTest.testWayList2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":19,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":8,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":56,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":65,"com.graphhopper.util.InstructionListTest.testCreateGPX":1,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":72,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":45,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":43,"com.graphhopper.GraphHopperTest.testVia":30,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":54,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":9,"com.graphhopper.util.HelperTest.testUnzip":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":37,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":4,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":58,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":50,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":71,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":5,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.GraphHopperTest.testLoadOSM":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":25,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":46,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":62},"transformations":[{"failures":[],"tindex":"d3fb92a8-828c-11e5-bd39-b32ffad92e5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:277","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-1},{"failures":[],"tindex":"d3fbb9b9-828c-11e5-bd39-7befa288567d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()"},"status":0},{"failures":[],"tindex":"d3fbb9ba-828c-11e5-bd39-fdc9a4bf8c52","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"periodTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:361","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[0],"tindex":"d3fbe0cb-828c-11e5-bd39-0df19efd1709","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:64","type":"CtIfImpl","sourcecode":"if (java.util.zip.ZipEntry.isDirectory()) {\n    new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n} else {\n    double double = 1;\n    if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n        double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n    \n    java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n    java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n    try {\n        int int;\n        while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n            java.io.FileOutputStream.write(byte[], 0, int);\n            long += int * double;\n            if (com.graphhopper.util.ProgressListener != null)\n                com.graphhopper.util.ProgressListener.update(long);\n            \n        }\n    } finally {\n        java.io.FileOutputStream.close();\n    }\n}"},"status":-1},{"failures":[],"tindex":"d3fbe0cc-828c-11e5-bd39-2313134173d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:185","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"d3fbe0cd-828c-11e5-bd39-65bffc124613","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:391","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.pbf.PbfBlobDecoder.org.slf4j.Logger.debug((\"Skipping unrecognised blob type \" + (java.lang.String)))"},"variableMap":{"blobType":"name","com.graphhopper.reader.pbf.PbfBlobDecoder.log":"com.graphhopper.search.NameIndex.logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"status":0},{"failures":[1,2],"tindex":"d3fc07de-828c-11e5-bd39-e740b156ecac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1)).append(\"<\/gh:distance>\")"},"variableMap":{"output":"output","instruction":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"d3fc07df-828c-11e5-bd39-d7a8167a66bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"pointsIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:76","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>();\n    java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>);\n    com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation();\n    java.lang.String java.lang.String = com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation);\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = com.graphhopper.util.InstructionAnnotation.getMessage();\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"text\", com.graphhopper.util.Helper.firstBig(java.lang.String));\n    if (!(com.graphhopper.util.InstructionAnnotation.isEmpty())) {\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_text\", com.graphhopper.util.InstructionAnnotation.getMessage());\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_importance\", com.graphhopper.util.InstructionAnnotation.getImportance());\n    } \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime());\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3));\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign());\n    java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON());\n    int int = int + (com.graphhopper.util.Instruction.getPoints().size());\n    if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n        int--;\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int));\n    int = int;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"d3fc2ef0-828c-11e5-bd39-7357208968f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[1,2],"tindex":"d3fc2ef1-828c-11e5-bd39-d3ffe7c69b7d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:494","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction)"},"variableMap":{"ways":"this","prevInstruction":"currInstr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:205","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction)"},"status":-1},{"failures":[1,2],"tindex":"d3fc2ef2-828c-11e5-bd39-45449e8cf5e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:200","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rte>\")"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"d3fc5603-828c-11e5-bd39-c97ad6881ff9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:586","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d3fc5604-828c-11e5-bd39-ed0993e67b16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:310","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHTreeMapComposed.pollKey()"},"status":-2},{"failures":[],"tindex":"d3fc5605-828c-11e5-bd39-872226c6aee2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:191","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0},{"failures":[37,38,39,40],"tindex":"d3fc5606-828c-11e5-bd39-4b10deb859ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:106","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.io.InputStream java.io.InputStream = java.lang.Object.getClass().getResourceAsStream((java.lang.String + \"_names.txt\"));\n    for (java.lang.String java.lang.String : com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(java.io.InputStream , com.graphhopper.util.Helper.java.nio.charset.Charset))) {\n        int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3));\n        if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n            int = -int;\n        \n        int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7));\n        if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n            int = -int;\n        \n        int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(int, int);\n        java.lang.String java.lang.String = gnu.trove.map.hash.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String);\n        if (java.lang.String != null)\n            throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n        \n    }\n}"},"status":-1},{"failures":[],"tindex":"d3fc7d17-828c-11e5-bd39-d311f143b141","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"d3fc7d18-828c-11e5-bd39-3b91ea415752","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge1","b":"skippedEdge1","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:99","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"d3fc7d19-828c-11e5-bd39-ddc68eaae039","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:79","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"d3fc7d1a-828c-11e5-bd39-6734a27e35e1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:96","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"id\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:123","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2))"},"status":0},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"d3fca42b-828c-11e5-bd39-49ea58b5254c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d3fc5605-828c-11e5-bd39-872226c6aee2","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).t9"],"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":["com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9"],"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":["com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9","com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).t9"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).t9"]},"type":"branch"}]},{"transformation":"d3fbe0cd-828c-11e5-bd39-65bffc124613","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}