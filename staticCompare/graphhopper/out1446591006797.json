{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":44,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":245,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":38,"com.graphhopper.reader.OSMReaderTest.testFerry":267,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":94,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":95,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":199,"com.graphhopper.routing.QueryGraphTest.testOneWay":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":193,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":150,"com.graphhopper.reader.OSMReaderTest.testWithBounds":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":255,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":145,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":284,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":221,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":287,"com.graphhopper.GraphHopperTest.testPrepare":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":244,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":125,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":210,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":227,"com.graphhopper.util.InstructionListTest.testWayList":0,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":236,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":86,"com.graphhopper.GraphHopperAPITest.testDisconnected179":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":139,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":151,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":51,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":105,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":122,"com.graphhopper.GraphHopperTest.testLoadOSM":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":168,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":152,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":185,"com.graphhopper.reader.OSMReaderTest.testSort":269,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":83,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":63,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":111,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":249,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":295,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":226,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":299,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":112,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":71,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":241,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":263,"com.graphhopper.util.GHUtilityTest.testSort":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":155,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":20,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":69,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":259,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":109,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":282,"com.graphhopper.GraphHopperAPITest.testLoad":265,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":248,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":254,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":257,"com.graphhopper.reader.OSMReaderTest.testBarriers":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":146,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":3,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":232,"com.graphhopper.util.GHUtilityTest.testCopy":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":116,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":286,"com.graphhopper.util.InstructionListTest.testEmptyList":279,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":235,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":35,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":18,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":215,"com.graphhopper.reader.PrinctonReaderTest.testRead":75,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":59,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":138,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":66,"com.graphhopper.util.InstructionListTest.testWayList2":92,"com.graphhopper.reader.OSMReaderTest.testFoot":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":158,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":209,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":36,"com.graphhopper.reader.OSMReaderTest.testOneWay":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":258,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":179,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":142,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":271,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":212,"com.graphhopper.routing.PathBidirRefTest.testExtract":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":298,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":102,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":253,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":175,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":98,"com.graphhopper.util.GHUtilityTest.testSort2":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":242,"com.graphhopper.reader.OSMReaderTest.testMain":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":54,"com.graphhopper.routing.PathBidirRefTest.testExtract2":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":178,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":164,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":16,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":217,"com.graphhopper.storage.GraphHopperStorageTest.testClone":26,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":153,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":65,"com.graphhopper.GraphHopperTest.testFootAndCar":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":10,"com.graphhopper.util.GHUtilityTest.testSortDirected":89,"com.graphhopper.GraphHopperTest.testPrepareOnly":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":189,"com.graphhopper.GraphHopperTest.testVia":103,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":237,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":165,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":203,"com.graphhopper.GraphHopperTest.testFootOnly":2,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":170,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":261,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":291,"com.graphhopper.util.InstructionListTest.testFind":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":161},"transformations":[{"failures":[],"tindex":"3a783f4d-827d-11e5-93d3-1177baea4158","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:133","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"status":-2},{"failures":[],"tindex":"3a78665e-827d-11e5-93d3-3d0eb553e980","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-2},{"failures":[0],"tindex":"3a78665f-827d-11e5-93d3-6f56afc32b0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound()) {\n    com.graphhopper.util.InstructionList.add(new com.graphhopper.util.FinishInstruction(com.graphhopper.storage.NodeAccess , int));\n} "},"status":-1},{"failures":[1,2,3,4],"tindex":"3a786660-827d-11e5-93d3-1de8b4a63fe0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"encoded","backwardBit":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:298","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"3a786661-827d-11e5-93d3-7792c9793211","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:230","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString().replaceAll(\"\\\\\\'\", \"\\\"\")"},"status":-2},{"failures":[],"tindex":"3a786662-827d-11e5-93d3-657579303c91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:269","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"3a788d73-827d-11e5-93d3-53aea6283c0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"E_ADDITIONAL":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:95","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[81,82,83,84],"tindex":"3a788d74-827d-11e5-93d3-ed6bce85e6df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if (int < 0) {\n        int = gnu.trove.list.array.TIntArrayList.size();\n        gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n        continue;\n    } \n    int int;\n    if (int < (gnu.trove.list.array.TIntArrayList.size())) {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.TIntList, int);\n        int = gnu.trove.list.array.TIntArrayList.size();\n        gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n    } else {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n    }\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"3a788d75-827d-11e5-93d3-05c2d2106dc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"workerThreads","mSize":"workerThreads"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:586","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"osmreader.workerThreads\", int)"},"status":0},{"failures":[5,85,86,87,88,89,90,91,0,92,93,94,95,96,97,98,99,100,101,102,103,104,105,1,106,107,108,109,2,110,6,111,112,7,8,9,10,11,113,114,115,116,12,13,14,117,118,119,120,16,121,122,17,19,123,20,21,22,124,125,23,24,25,26,27,126,127,128,129,28,29,30,130,131,132,133,32,134,135,33,35,136,36,37,137,38,39,40,41,42,138,139,140,141,43,44,45,142,143,144,145,47,146,147,48,50,148,51,52,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,53,183,184,54,55,56,185,186,57,58,59,60,61,187,188,189,190,62,63,64,191,192,193,194,66,195,196,67,69,197,70,71,198,199,200,201,202,203,204,72,205,206,207,208,209,210,211,73,212,213,214,215,216,217,218,219,220,221,222,223,74,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,81,254,255,82,83,84,256,257,258,259,260,261,262,263,264,265,266,75,76,267,268,77,269,270,271,272,273,78,274,79,80],"tindex":"3a788d76-827d-11e5-93d3-c1717777bff2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"E_LINKA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[96,97,275,103,104,105,1,106,107,108,109,2,110,267,268,77,269,270,271,272,273,78,276,274,79,277,80],"tindex":"3a78b487-827d-11e5-93d3-294124901cf9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"skippedLocations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:564","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMReader.isInBounds(com.graphhopper.reader.OSMNode)) {\n    com.graphhopper.reader.OSMReader.addNode(com.graphhopper.reader.OSMNode);\n    if (com.graphhopper.reader.OSMNode.hasTags()) {\n        long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n        if (long != 0)\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n        \n    } \n    (long)++;\n} else {\n    (long)++;\n}"},"status":-1},{"failures":[],"tindex":"3a78b488-827d-11e5-93d3-81d8f5241b77","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"variableMap":{"list":"fullPoints","points":"fullPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:65","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D())"},"status":0},{"failures":[5,85,86,87,278,88,89,90,279,91,0,92,93,94,95,96,97,280,98,99,100,101,102,103,104,105,1,106,107,108,109,2,110,6,111,112,7,9,10,11,113,114,281,282,115,116,12,13,14,117,118,119,120,15,16,121,17,18,19,123,20,22,124,125,23,25,26,27,126,127,283,284,128,129,28,29,30,130,131,132,133,31,32,134,135,33,34,35,136,36,137,38,40,41,42,138,139,285,286,140,141,43,44,45,142,143,144,145,46,47,146,48,49,50,148,51,287,149,150,151,152,153,154,155,156,157,158,159,160,161,162,288,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,289,180,181,182,53,183,184,54,55,56,185,186,57,59,60,61,187,188,290,291,189,190,62,63,64,191,192,193,194,65,66,195,196,67,68,69,197,70,198,199,200,201,202,203,292,204,72,205,206,207,208,209,210,211,73,212,213,214,215,216,217,218,219,220,221,222,223,74,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,81,254,255,82,293,83,84,256,257,258,259,294,260,261,262,263,264,265,266,295,75,76,267,268,77,269,270,271,272,273,78,276,274,79,80],"tindex":"3a78db99-827d-11e5-93d3-45bd7542feee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs(0, com.graphhopper.storage.DataAccess.getCapacity())"},"status":-1},{"failures":[],"tindex":"3a78db9a-827d-11e5-93d3-81e178fca4fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:169","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":0},{"failures":[],"tindex":"3a78db9b-827d-11e5-93d3-5776bf4df875","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"currFrom","ase":"currFrom","currEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:76","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":0},{"failures":[273],"tindex":"3a78db9c-827d-11e5-93d3-c374c7d9a8e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:430","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[296,297,298,299,300,301,302,303,304],"tindex":"3a7902ad-827d-11e5-93d3-4160c94bbd51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"3a7902ae-827d-11e5-93d3-3fe092610dca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"guessedKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:480","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3a788d75-827d-11e5-93d3-05c2d2106dc2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}