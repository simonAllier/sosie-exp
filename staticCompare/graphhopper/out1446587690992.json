{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":282,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":351,"com.graphhopper.reader.OSMReaderTest.testFerry":228,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":329,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":348,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":15,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":370,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":183,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":257,"com.graphhopper.GraphHopperTest.testPrepare":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":381,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":273,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":326,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":265,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":111,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":297,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":260,"com.graphhopper.GraphHopperTest.testLoadOSM":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":119,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":95,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":112,"com.graphhopper.reader.OSMReaderTest.testSort":231,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":394,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":201,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":382,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":309,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":242,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":55,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":393,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":106,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":62,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":144,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":150,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":141,"com.graphhopper.GraphHopperAPITest.testLoad":11,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":184,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":174,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":131,"com.graphhopper.reader.OSMReaderTest.testBarriers":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":269,"com.graphhopper.util.GHUtilityTest.testCopy":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":355,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":386,"com.graphhopper.routing.PathTest.testFindInstruction":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":73,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":202,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":158,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":20,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":349,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":69,"com.graphhopper.util.InstructionListTest.testWayList2":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":120,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":316,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":78,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":51,"com.graphhopper.routing.PathBidirRefTest.testExtract":298,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":115,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":375,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":124,"com.graphhopper.util.GHUtilityTest.testSort2":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":279,"com.graphhopper.reader.OSMReaderTest.testMain":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":379,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":154,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":63,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":26,"com.graphhopper.storage.GraphHopperStorageTest.testClone":176,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":49,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":357,"com.graphhopper.routing.PathTest.testTime":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":369,"com.graphhopper.util.GHUtilityTest.testSortDirected":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":38,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":306,"com.graphhopper.GraphHopperTest.testFootOnly":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":365,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":114,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":301,"com.graphhopper.routing.QueryGraphTest.testOneWay":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":392,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":110,"com.graphhopper.reader.OSMReaderTest.testWithBounds":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":162,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":307,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":146,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":172,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":264,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":204,"com.graphhopper.util.InstructionListTest.testWayList":334,"com.graphhopper.GraphHopperAPITest.testDisconnected179":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":358,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":353,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":384,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":220,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":258,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":196,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":286,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":167,"com.graphhopper.routing.PathTest.testWayList":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":271,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":303,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":14,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":296,"com.graphhopper.util.GHUtilityTest.testSort":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":116,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":165,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":16,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":56,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":308,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":126,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":127,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":21,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":71,"com.graphhopper.routing.PathTest.testFound":290,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":261,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":143,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":70,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":181,"com.graphhopper.util.InstructionListTest.testEmptyList":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":277,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":54,"com.graphhopper.reader.PrinctonReaderTest.testRead":243,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":29,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":148,"com.graphhopper.reader.OSMReaderTest.testFoot":229,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":315,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":345,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":118,"com.graphhopper.reader.OSMReaderTest.testOneWay":241,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":31,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":199,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":159,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":255,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":367,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":248,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":328,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":57,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":305,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":170,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":18,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":66,"com.graphhopper.routing.PathBidirRefTest.testExtract2":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":107,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":90,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":385,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":61,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":200,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":193,"com.graphhopper.GraphHopperTest.testFootAndCar":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":134,"com.graphhopper.GraphHopperTest.testPrepareOnly":210,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":76,"com.graphhopper.GraphHopperTest.testVia":218,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":274,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":237,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":398,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":336,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":397,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":99,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":366,"com.graphhopper.util.InstructionListTest.testFind":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":125},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"82227a01-8275-11e5-8cb7-05d881177a7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"shift","nextEdgeId":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"82297ee2-8275-11e5-8cb7-8b043a7571fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean)"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"8229a5f3-8275-11e5-8cb7-5bb1baace3bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:621","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"i":"segmentSizeIntsPower","mainNodes":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"8229a5f4-8275-11e5-8cb7-0babcb88e91e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:153","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"8229cd05-8275-11e5-8cb7-49ed24993d32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"8229cd06-8275-11e5-8cb7-d189c04b32b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:75","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[11,211,212,213,214,215,216,218,219,220,221,222,223,225,226,245,247,253,254,255,256,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,281,282,284,285,286,287],"tindex":"8229cd07-8275-11e5-8cb7-23c597731532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.DijkstraBidirectionRef.finished())\n    return com.graphhopper.routing.PathBidirRef.extract();\n"},"status":-1},{"failures":[],"tindex":"8229f418-8275-11e5-8cb7-d95b256bac9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:308","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (int > 0)\n        int++;\n    \n} else {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n    if (int > 0)\n        int++;\n    \n}"},"status":-2},{"failures":[],"tindex":"8229f419-8275-11e5-8cb7-418eeab67819","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:91","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":0},{"failures":[344],"tindex":"8229f41a-8275-11e5-8cb7-e50b13268df3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"size":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:185","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[],"tindex":"8229f41b-8275-11e5-8cb7-815d385ac9c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"variableMap":{"prioQueueOpenSetFrom":"prioQueueOpenSet","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"status":0},{"failures":[345],"tindex":"822a1b2c-8275-11e5-8cb7-5122c3a24d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:98","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"822a1b2d-8275-11e5-8cb7-37e3124ccb40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:227","type":"CtTryImpl","sourcecode":"try {\n    if (!(boolean))\n        javax.xml.stream.XMLStreamReader.close();\n    \n} catch (javax.xml.stream.XMLStreamException ex) {\n    throw new java.io.IOException(javax.xml.stream.XMLStreamException);\n} finally {\n    boolean = true;\n    java.io.InputStream.close();\n    if (((java.lang.Thread) != null) && (java.lang.Thread.isAlive()))\n        java.lang.Thread.interrupt();\n    \n}"},"status":0},{"failures":[320,326],"tindex":"822a1b2e-8275-11e5-8cb7-d7f4d4fecce1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:64","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"variableMap":{"stateStack":"stateStack","firstNode":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:105","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[346],"tindex":"822a1b2f-8275-11e5-8cb7-67f73fd27eb8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"status":-1},{"failures":[],"tindex":"822a4240-8275-11e5-8cb7-1d5e13beffe4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:134","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"variableMap":{"str":"str","s":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:159","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"status":0},{"failures":[],"tindex":"822a4241-8275-11e5-8cb7-3dec38d7cf0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:85","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"variableMap":{"tagTxt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"status":0},{"failures":[11,12,13,14,347,15,16,17,18,19,20,21,22,23,348,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,349,51,52,53,54,55,56,57,58,59,60,61,62,350,351,352,353,354,355,356,357,358,359,360,70,361,362,363,364,365,366,367,368,369,370,371,372,373,374,71,375,376,377,378,379,380,381,382,383,384,385,72,73,74,75,386,76,77,387,78,79,80,81,388,82,83,84,85,86,389,87,88,89,90,390,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,391,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,392,123,124,125,393,126,394,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,395,155,156,157,158,159,160,161,162,163,164,165,166,167,168,396,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,397,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,398,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"822a4242-8275-11e5-8cb7-618cee44c14c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"edges","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"822a6953-8275-11e5-8cb7-9f0a8add6d8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:511","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"tmpOsmFile":"version","osmFile":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:93","type":"CtIfImpl","sourcecode":"if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[228,399],"tindex":"822a9064-8275-11e5-8cb7-6f483430932f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:96","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception ex) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8229f419-8275-11e5-8cb7-418eeab67819","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"822a1b2d-8275-11e5-8cb7-37e3124ccb40","diffs":[{"methodsDiff":{"delete":["javax.xml.stream.XMLStreamReader.close","java.lang.Thread.interrupt"]},"branchesDiff":{"delete":["t0","t1","c2"]},"type":"staticDiff"}]}]}