{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":7,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":22,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":30,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":38,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":20,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":29},"transformations":[{"failures":[0],"tindex":"6387fb64-790d-11e5-bcac-df96eaa96f17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n    return long;\n"},"status":-1},{"failures":[1,2,3,4],"tindex":"63882275-790d-11e5-bcac-91c11e9f7493","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:108","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[],"tindex":"63882276-790d-11e5-bcac-fffe12b18164","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"nodeIndex","clockwise":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:164","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"63882277-790d-11e5-bcac-b3d08e5e1615","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"63882278-790d-11e5-bcac-4b768123fee7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":-2},{"failures":[],"tindex":"63882279-790d-11e5-bcac-c30704ab07a6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:216","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"6388227a-790d-11e5-bcac-4bb6c0fd0e8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"6388227b-790d-11e5-bcac-61b01905a983","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:980","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"6388498c-790d-11e5-bcac-31ddb924418f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"ab_y","tmp":"rb_y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"6388498d-790d-11e5-bcac-77cf1745445f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:436","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String[][1].replace(\"]\", \"\").trim()"},"status":-2},{"failures":[],"tindex":"6388498e-790d-11e5-bcac-253342a728c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"minLonTmp","resultOrientation":"midLon","baseOrientation":"minLonTmp","java.lang.Math.PI":"maxLonTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-2},{"failures":[],"tindex":"6388498f-790d-11e5-bcac-d39112455ef2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"variableMap":{"k":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":-2},{"failures":[],"tindex":"63884990-790d-11e5-bcac-39b749aa9730","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"wayGeometry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"63884991-790d-11e5-bcac-4d9058503b8c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:66","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"status":-2},{"failures":[],"tindex":"63884992-790d-11e5-bcac-e5e4b76a9375","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"x1","retBucket":"x1","i":"sLon","bucketSize":"sLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"638870a3-790d-11e5-bcac-55ed5809adff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"status":-2},{"failures":[],"tindex":"638870a4-790d-11e5-bcac-e36d5ea57692","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"factor","resultOrientation":"factor","baseOrientation":"factor","java.lang.Math.PI":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":-2},{"failures":[],"tindex":"638870a5-790d-11e5-bcac-217d977717ed","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:131","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField()) && ((com.graphhopper.storage.BaseGraph.int) >= 0))\n    return com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int)));\nelse\n    throw new java.lang.AssertionError(\"This graph does not provide an additional node field\");\n"},"status":-2},{"failures":[],"tindex":"638870a6-790d-11e5-bcac-c7543d4ffd7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":-2},{"failures":[],"tindex":"638870a7-790d-11e5-bcac-dfdc064b7a39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:607","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}