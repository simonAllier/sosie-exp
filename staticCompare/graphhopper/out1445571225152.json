{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.util.BitUtilBigTest.testToDouble":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":13,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":14,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":22,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":2,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":9,"com.graphhopper.util.BitUtilBigTest.testToLong":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":20,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":16,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":26,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":21,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":17,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":25,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":45,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":7},"transformations":[{"failures":[0,1],"tindex":"dd3e98d6-7936-11e5-ace3-930b07957e9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 48))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"dd3ebfe7-7936-11e5-ace3-936589e9fd0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"itemsToMove","hash":"itemsToMove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:664","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"dd3ebfe8-7936-11e5-ace3-617d28cad1c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"variableMap":{"extStorage":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:71","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n"},"status":-2},{"failures":[43,44,45,46],"tindex":"dd3ebfe9-7936-11e5-ace3-fd06a2852d5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"dd3ebfea-7936-11e5-ace3-c35eb28cca62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"dd3ee6fb-7936-11e5-ace3-bfec55343e19","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:500","type":"CtReturnImpl","sourcecode":"return ~int"},"variableMap":{"high":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"dd3ee6fc-7936-11e5-ace3-213f10ff7b7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:252","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"dd3ee6fd-7936-11e5-ace3-611e01757286","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"dd3ee6fe-7936-11e5-ace3-b1d0c125a42b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:166","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextPBF();\nelse\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML();\n"},"status":-2},{"failures":[],"tindex":"dd3ee6ff-7936-11e5-ace3-59169a2b88c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"previousEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:145","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"dd3ee700-7936-11e5-ace3-33400b549453","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:764","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String))"},"status":-2},{"failures":[],"tindex":"dd3ee701-7936-11e5-ace3-99efb9bdc10b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:249","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.io.InputStream.read()"},"variableMap":{"java.lang.System.in":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:96","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.read(byte[])"},"status":-2},{"failures":[],"tindex":"dd3f0e12-7936-11e5-ace3-495710a1c392","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"length","tmpErr":"length","y1":"E_GEO","dLon":"length","sLat":"E_GEO"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2},{"failures":[],"tindex":"dd3f0e13-7936-11e5-ace3-9f78a6b0355f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.clear()"},"status":-2},{"failures":[],"tindex":"dd3f0e14-7936-11e5-ace3-d7052ba2dccd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:403","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"dd3f0e15-7936-11e5-ace3-1fe3e5a21c94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int]);\n}"},"status":-2},{"failures":[],"tindex":"dd3f0e16-7936-11e5-ace3-3ba1af310a49","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:295","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n    if ((com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.util.EdgeIterator.getFlags())) || (com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.util.EdgeIterator.getFlags())))\n        return false;\n    \n}"},"variableMap":{"encoders":"encoders","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:292","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n        if ((com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.util.EdgeIterator.getFlags())) || (com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.util.EdgeIterator.getFlags())))\n            return false;\n        \n    }\n}"},"status":-2},{"failures":[],"tindex":"dd3f3527-7936-11e5-ace3-4102f019bc9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMNode.readTags(javax.xml.stream.XMLStreamReader)"},"status":-2},{"failures":[],"tindex":"dd3f3528-7936-11e5-ace3-e315bd10907c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"currEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"dd3f3529-7936-11e5-ace3-7d402c39d2eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:529","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"longTripsSpeed":"longTripsSpeed","shortTripsSpeed":"longTripsSpeed","this":"this","durationInHours":"shortTripsSpeed","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception ex) {\n    }\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}