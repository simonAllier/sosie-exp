{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":28,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":57,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":20,"com.graphhopper.reader.OSMReaderTest.testMain":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":13,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":42,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":83,"com.graphhopper.util.PointListTest.testIterable":84,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":30,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":43,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":79,"com.graphhopper.util.BitUtilBigTest.testReverse":3,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":11,"com.graphhopper.GraphHopperTest.testPrepare":70,"com.graphhopper.GraphHopperTest.testFootAndCar":72,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.reader.OSMReaderTest.testFoot":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":22,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":26,"com.graphhopper.util.BitUtilLittleTest.testReverse":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":32,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":15,"com.graphhopper.GraphHopperTest.testPrepareOnly":61,"com.graphhopper.GraphHopperTest.testVia":69,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":17,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":8,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":54,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":31,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":81,"com.graphhopper.GraphHopperTest.testFootOnly":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":36,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":52,"com.graphhopper.GraphHopperTest.testLoadOSM":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":62,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":65,"com.graphhopper.reader.OSMReaderTest.testSort":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":63},"transformations":[{"failures":[0,1,2,3],"tindex":"641b69f2-792f-11e5-9b8e-cdce0928968b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:102","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"variableMap":{"indexM":"strLen","tmp":"str","version":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:181","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long <<= 1;\n    if ((java.lang.String.charAt(int)) != '0')\n        long |= 1;\n    \n}"},"status":-1},{"failures":[],"tindex":"641b9103-792f-11e5-9b8e-bfa5c9c9cb02","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.R"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:89","type":"CtReturnImpl","sourcecode":"return ((2 * (java.lang.Math.double)) * (com.graphhopper.util.DistanceCalcEarth.double)) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double)))"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"641b9104-792f-11e5-9b8e-8953aed5674b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:47","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n    com.graphhopper.coll.GHBitSet.add(int);\n    com.graphhopper.util.SimpleIntDeque.push(int);\n} "},"status":-1},{"failures":[79,80,81,82,9,10,11,12,83,84,62,63,64,65,66,69,70,71,72,73,74,76,77],"tindex":"641b9105-792f-11e5-9b8e-bfc1621692d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getElevation(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"641bdf26-792f-11e5-9b8e-7d55ce79ae56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"641bdf27-792f-11e5-9b8e-074d51111201","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"tmpAngle","resultOrientation":"tmpAngle","baseOrientation":"tmpAngle","java.lang.Math.PI":"tmpAngle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:118","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"turn_angle\", com.graphhopper.util.Helper.round(double, 2));\n"},"status":-2},{"failures":[],"tindex":"641bdf28-792f-11e5-9b8e-b1292de0926f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-2},{"failures":[],"tindex":"641bdf29-792f-11e5-9b8e-71847b224d86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"641c063a-792f-11e5-9b8e-4b961e20582a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"641c063b-792f-11e5-9b8e-c14cf27b5f94","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:41","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"641c063c-792f-11e5-9b8e-d76036c03b7a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:74","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"641c063d-792f-11e5-9b8e-61052c62d333","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:305","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage.getDirectory()) instanceof com.graphhopper.storage.MMapDirectory) {\n    throw new java.lang.IllegalStateException(\"not supported yet: mmap will overwrite existing storage at the same location\");\n} else {\n    boolean boolean = ((com.graphhopper.storage.GHDirectory)(com.graphhopper.storage.GraphStorage.getDirectory())).isStoring();\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n}"},"status":-2},{"failures":[],"tindex":"641c063e-792f-11e5-9b8e-bbc9d7bd4e3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"traversalId","edgeId":"traversalId","nextEdgeId":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:111","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int)"},"status":-2},{"failures":[],"tindex":"641c063f-792f-11e5-9b8e-830478da3fc4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"variableMap":{"key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"status":-2},{"failures":[],"tindex":"641c2d50-792f-11e5-9b8e-db49ba1dbacf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:194","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"variableMap":{"entries":"arr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:83","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"status":-2},{"failures":[],"tindex":"641c2d51-792f-11e5-9b8e-257dead70d87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-2},{"failures":[],"tindex":"641c2d52-792f-11e5-9b8e-bd4ff9f63b70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:49","type":"CtReturnImpl","sourcecode":"return !(java.lang.Double.isNaN(double))"},"variableMap":{"ele":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:147","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.EdgeEntry.double) > (double)"},"status":-2},{"failures":[],"tindex":"641c2d53-792f-11e5-9b8e-958620d51c30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:137","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"641c2d54-792f-11e5-9b8e-9b73920c5086","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"tmp","pointer":"tmp","maxCapacity":"tmp","baseCapacity":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(long)"},"status":-2},{"failures":[],"tindex":"641c2d55-792f-11e5-9b8e-6fa937e5852a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:657","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n    break;\n"},"variableMap":{"removedNodes":"visited","toMoveNodes":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:37","type":"CtWhileImpl","sourcecode":"while (!(com.graphhopper.util.SimpleIntDeque.isEmpty())) {\n    int = com.graphhopper.util.SimpleIntDeque.pop();\n    if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n        continue;\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n            com.graphhopper.coll.GHBitSet.add(int);\n            com.graphhopper.util.SimpleIntDeque.push(int);\n        } \n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}