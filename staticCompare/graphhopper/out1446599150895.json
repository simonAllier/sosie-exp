{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":343,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":193,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":282,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":283,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":298,"com.graphhopper.routing.QueryGraphTest.testOneWay":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":234,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":60,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":186,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":315,"com.graphhopper.coll.CompressedArrayTest.testCompress":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":208,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":96,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":41,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":339,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":90,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":122,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":266,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":113,"com.graphhopper.util.InstructionListTest.testWayList":107,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":116,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":286,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":290,"com.graphhopper.GraphHopperAPITest.testDisconnected179":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":319,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":37,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":134,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":61,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":147,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":330,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":344,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":128,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":44,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":62,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":215,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":271,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":137,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":230,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":275,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":120,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":304,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":145,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":248,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":322,"com.graphhopper.routing.PathTest.testWayList":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":223,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":135,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":278,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":227,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":164,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":56,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":89,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":329,"com.graphhopper.util.GHUtilityTest.testSort":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":80,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":189,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":252,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":194,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":177,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":199,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":242,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":311,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":140,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":268,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":168,"com.graphhopper.GraphHopperAPITest.testLoad":33,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":174,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":213,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":251,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":320,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":231,"com.graphhopper.routing.PathTest.testFound":324,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":115,"com.graphhopper.util.GHUtilityTest.testCopy":294,"com.graphhopper.routing.PathTest.testFindInstruction":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":160,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":170,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":205,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":257,"com.graphhopper.util.InstructionListTest.testEmptyList":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":192,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":276,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":183,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":267,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":337,"com.graphhopper.reader.PrinctonReaderTest.testRead":146,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":218,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":249,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":83,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":156,"com.graphhopper.util.InstructionListTest.testWayList2":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":47,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":70,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":67,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":280,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":228,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":310,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":273,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":169,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":203,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":256,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":200,"com.graphhopper.routing.PathBidirRefTest.testExtract":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":334,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":321,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":190,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":75,"com.graphhopper.util.GHUtilityTest.testSort2":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":138,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":102,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":143,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":153,"com.graphhopper.routing.PathBidirRefTest.testExtract2":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":57,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":232,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":180,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":149,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":124,"com.graphhopper.storage.StorablePropertiesTest.testStore":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":142,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":63,"com.graphhopper.storage.GraphHopperStorageTest.testClone":85,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":246,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":236,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":262,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":81,"com.graphhopper.routing.PathTest.testTime":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":235,"com.graphhopper.util.GHUtilityTest.testSortDirected":296,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":226,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":195,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":136,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":211,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":301,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":86,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":46,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":48,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":225,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":326,"com.graphhopper.util.InstructionListTest.testFind":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":217},"transformations":[{"failures":[],"tindex":"30bca8e9-8290-11e5-bc7c-21ce2d5085b0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:62","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"30bccffa-8290-11e5-bc7c-a3037b456241","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:366","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:367","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"30bcf70b-8290-11e5-bc7c-a9c9752ec1ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:388","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"30bcf70c-8290-11e5-bc7c-b94156907745","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:572","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setCHWeighting(java.lang.String)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"30bcf70d-8290-11e5-bc7c-3d08303221e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"lat","java.lang.Math.PI":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"30bd1e1e-8290-11e5-bc7c-93686a0d2339","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:147","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-2},{"failures":[25,33,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,88,89,117,90,118,119,120,121],"tindex":"30bd1e1f-8290-11e5-bc7c-017111da2075","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"mode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:884","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[],"tindex":"30bd1e20-8290-11e5-bc7c-c38fb44a3c31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:102","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"variableMap":{"cacheDir":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:1005","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2},{"failures":[2,3,4,5,6,7,9,10,11,12,13,14,16,17,33,122,123,124,125,126,127,128,112,129,130,113,114,131,132,133,115,134,135,87,116,136,137,88,89,138,117,90,119,139,120,121],"tindex":"30bd4531-8290-11e5-bc7c-25dbf2745331","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:197","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n        continue;\n    \n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean);\n    double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n    if (com.graphhopper.storage.EdgeEntry == null) {\n        com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n        com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.storage.EdgeEntry.double = double;\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else\n        continue;\n    \n    if (boolean)\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    \n}"},"status":-1},{"failures":[26],"tindex":"30bd4532-8290-11e5-bc7c-e5b6aaa2934d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:428","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n        return true;\n    \n}"},"status":-1},{"failures":[1,13,14,15,16,35,140,141,142,143,81,84,144],"tindex":"30bd6c43-8290-11e5-bc7c-c1400abc4817","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:140","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-1},{"failures":[24,25,35,92,96,81,100,84,104],"tindex":"30bd6c44-8290-11e5-bc7c-990242f7acff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:353","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-1},{"failures":[],"tindex":"30bd6c45-8290-11e5-bc7c-6be2f508f174","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:235","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,145,146,147,33,34,148,149,150,151,152,153,154,155,156,35,157,158,91,159,160,161,36,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,92,178,179,180,181,93,182,183,184,185,94,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,203,204,76,77,78,205,206,207,208,209,210,143,211,212,213,214,81,215,99,216,217,218,82,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,100,235,236,237,238,101,239,240,241,242,102,243,244,245,246,247,248,84,249,103,250,251,252,85,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,104,269,270,271,272,105,273,274,275,276,106,277,278,279,280,281,282,283,284,285,286,107,287,288,289,290,291,292,293,294,295,296,297,298,108,299,300,109,301,302,303,304,110,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,111,328,329,330,331,332,122,333,123,334,335,336,337,338,124,125,126,127,339,340,341,128,112,129,130,113,114,131,132,133,115,134,135,87,116,136,342,137,88,89,138,117,90,343,118,119,139,120,121],"tindex":"30bd9356-8290-11e5-bc7c-af943c871343","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"variableMap":{"index":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[9,12,18,20,25,26,344,345],"tindex":"30bdba67-8290-11e5-bc7c-7937c22f971e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"30bdba68-8290-11e5-bc7c-7d81a2ade429","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:178","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.QueryResult.getQueryPoint().double"},"status":-2},{"failures":[],"tindex":"30bdba69-8290-11e5-bc7c-e9ec21f63e78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:127","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"status":0},{"failures":[346],"tindex":"30bdba6a-8290-11e5-bc7c-5557333c6472","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"variableMap":{"intLen":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:175","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-1},{"failures":[347,348],"tindex":"30bdba6b-8290-11e5-bc7c-dd10fbcdd61a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"length","retBucket":"delta","i":"length","bucketSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:269","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"30bde17c-8290-11e5-bc7c-7ba5584d9b38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"variableMap":{"mKeys":"oldPriorities","nkeys":"oldPriorities"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"30bcf70c-8290-11e5-bc7c-b94156907745","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.setCHWeighting"]},"type":"staticDiff"}]}]}