{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":64,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":226,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":243,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":265,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":266,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":5,"com.graphhopper.routing.QueryGraphTest.testOneWay":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":222,"com.graphhopper.reader.OSMReaderTest.testWithBounds":92,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":255,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":122,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":184,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":220,"com.graphhopper.GraphHopperTest.testPrepare":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":63,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":28,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":126,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":46,"com.graphhopper.util.InstructionListTest.testWayList":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":55,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":268,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":164,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":223,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":27,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":264,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":157,"com.graphhopper.GraphHopperTest.testLoadOSM":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":203,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":129,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":224,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":37,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":68,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":18,"com.graphhopper.routing.PathTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":190,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":45,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":141,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":213,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":113,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":26,"com.graphhopper.util.GHUtilityTest.testSort":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":248,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":217,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":215,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":139,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":148,"com.graphhopper.GraphHopperAPITest.testLoad":95,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":67,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":71,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.routing.PathTest.testFound":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":257,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":246,"com.graphhopper.util.GHUtilityTest.testCopy":277,"com.graphhopper.routing.PathTest.testFindInstruction":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":143,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":249,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":237,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":159,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":151,"com.graphhopper.reader.PrinctonReaderTest.testRead":80,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":168,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":39,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":185,"com.graphhopper.util.InstructionListTest.testWayList2":270,"com.graphhopper.reader.OSMReaderTest.testFoot":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":260,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":228,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":137,"com.graphhopper.reader.OSMReaderTest.testOneWay":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":172,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":124,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":175,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":194,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":253,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":186,"com.graphhopper.routing.PathBidirRefTest.testExtract":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":102,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":274,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":259,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":211,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":258,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":235,"com.graphhopper.util.GHUtilityTest.testSort2":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":61,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":166,"com.graphhopper.routing.PathBidirRefTest.testExtract2":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":232,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":214,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":182,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":155,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":36,"com.graphhopper.storage.GraphHopperStorageTest.testClone":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":225,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":261,"com.graphhopper.GraphHopperTest.testFootAndCar":105,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.util.BitUtilBigTest.testToFloat":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":247,"com.graphhopper.routing.PathTest.testTime":21,"com.graphhopper.util.BitUtilLittleTest.testToFloat":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":144,"com.graphhopper.util.GHUtilityTest.testSortDirected":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":179,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":240,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":56,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":200,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":167,"com.graphhopper.GraphHopperTest.testFootOnly":110,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":205,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":178,"com.graphhopper.util.InstructionListTest.testFind":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":234},"transformations":[{"failures":[0,1],"tindex":"2224c261-7910-11e5-8d0b-d13202ed3ffe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:163","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState) == null)\n    throw new java.lang.IllegalStateException(\"No closest edge?\");\n"},"variableMap":{"closestEdge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,1,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"tindex":"22251082-7910-11e5-8d0b-b5d3ea770c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:47","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"22251083-7910-11e5-8d0b-0ddd853162b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"22251084-7910-11e5-8d0b-5994eefeba7c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"22253795-7910-11e5-8d0b-03f9545bdc86","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:234","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":0},{"failures":[280,281],"tindex":"22253796-7910-11e5-8d0b-2ffdf902a0fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromFloat(byte[], float, 0)"},"status":-1},{"failures":[],"tindex":"22253797-7910-11e5-8d0b-43db735fdee5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:600","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-2},{"failures":[],"tindex":"22253798-7910-11e5-8d0b-c51adbab4fd4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"orientation":"java.lang.Math.PI","java.lang.Math.PI":"baseOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"22253799-7910-11e5-8d0b-bf578a1a58ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"22255eaa-7910-11e5-8d0b-f7044b97aeb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:376","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return false;\n"},"variableMap":{"favoredHeading":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:742","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n    double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n    double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n    if (double < double)\n        return true;\n    \n} "},"status":-2},{"failures":[],"tindex":"22255eab-7910-11e5-8d0b-fdaf8c8bfc65","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[],"tindex":"22255eac-7910-11e5-8d0b-cde6ecb27a3a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:499","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , true , false))"},"variableMap":{"edgeInExplorer":"edgeOutExplorer","encoder":"encoder","graph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:496","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true))"},"status":-2},{"failures":[],"tindex":"22255ead-7910-11e5-8d0b-4f23ce93550a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:289","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"22255eae-7910-11e5-8d0b-2f42c7a6b933","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1015","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"variableMap":{"foundIndex":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:297","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"status":-2},{"failures":[],"tindex":"222585bf-7910-11e5-8d0b-23fa6cda4bd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:184","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((\"<?xml version=\\'1.0\\' encoding=\\'UTF-8\\' standalone=\\'no\\' ?>\" + (\"<gpx xmlns=\\'http://www.topografix.com/GPX/1/1\\' xmlns:xsi=\\'http://www.w3.org/2001/XMLSchema-instance\\'\" + (\" creator=\\'Graphhopper\\' version=\\'1.1\\'\" + (\" xmlns:gh=\\'https://graphhopper.com/public/schema/gpx/1.1\\'>\" + (\"\\n<metadata>\" + (\"<copyright author=\\\"OpenStreetMap contributors\\\"/>\" + (\"<link href=\\'http://graphhopper.com\\'>\" + (\"<text>GraphHopper GPX<\/text>\" + (\"<\/link>\" + \"<time>\"))))))))) + (java.text.SimpleDateFormat.format(long))) + \"<\/time>\") + \"<\/metadata>\""},"status":-2},{"failures":[],"tindex":"222585c0-7910-11e5-8d0b-39ddd25ad148","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:636","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, 0)"},"status":-2},{"failures":[],"tindex":"222585c1-7910-11e5-8d0b-4de1e8188bd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:561","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"222585c2-7910-11e5-8d0b-8bf23dab4f0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"222585c3-7910-11e5-8d0b-21a73429c0e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"222585c4-7910-11e5-8d0b-f3d56cc49fb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}