{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":13,"com.graphhopper.routing.PathTest.testFindInstruction":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":61,"com.graphhopper.routing.PathBidirRefTest.testExtract2":64,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":73,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":65,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":76,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":84,"com.graphhopper.routing.PathTest.testWayList":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":45,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":54,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":57,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":46,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":83,"com.graphhopper.coll.CompressedArrayTest.testCompress":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":39,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":6,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":55,"com.graphhopper.GraphHopperTest.testPrepare":30,"com.graphhopper.GraphHopperTest.testFootAndCar":32,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":15,"com.graphhopper.util.InstructionListTest.testWayList2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":58,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":9,"com.graphhopper.util.InstructionListTest.testWayList":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":2,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":19,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":0,"com.graphhopper.coll.CompressedArrayTest.testCompress2":11,"com.graphhopper.GraphHopperTest.testPrepareOnly":75,"com.graphhopper.GraphHopperTest.testVia":29,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":89,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":85,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":3,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":66,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":80,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":22,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":60,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":38,"com.graphhopper.routing.PathBidirRefTest.testExtract":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":28,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":67,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":87,"com.graphhopper.util.InstructionListTest.testFind":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":43,"com.graphhopper.GraphHopperTest.testLoadOSM":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":23,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":24},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"0bc8d868-8298-11e5-8404-e52e40c69941","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"midLat","angleXY":"maxLatTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"0bc8ff79-8298-11e5-8404-b7c0e21b42f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:315","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"status":0},{"failures":[],"tindex":"0bc9268a-8298-11e5-8404-117411551996","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:286","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"0bc9268b-8298-11e5-8404-a98aed97ff3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"variableMap":{"high":"E_NODEB","highKey":"edgePointer","key":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:153","type":"CtIfImpl","sourcecode":"if (int == int)\n    return com.graphhopper.storage.DataAccess.getInt((long + (int)));\n"},"status":-2},{"failures":[13,14,15,16],"tindex":"0bc9268c-8298-11e5-8404-5db753bfe1bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:546","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"0bc9268d-8298-11e5-8404-cf85fa32cc85","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"variableMap":{"closestEdge":"edgeBase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-1},{"failures":[],"tindex":"0bc94d9e-8298-11e5-8404-d751ecd29805","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"lastTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"status":0},{"failures":[73,74],"tindex":"0bc94d9f-8298-11e5-8404-c709333bd101","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0bc94da0-8298-11e5-8404-e5ee496377de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathNative.setFromNode(int)"},"variableMap":{"p":"this","fromNode":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:95","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setEndNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[75,76,29,33,34,77,78,79,80],"tindex":"0bc94da1-8298-11e5-8404-91ffcd9ed4ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"variableMap":{"name":"graphHopperFolder","refName":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:717","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-1},{"failures":[81,82,83],"tindex":"0bc974b2-8298-11e5-8404-3548c4cc7a7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1066","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:214","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[84,85,86,87],"tindex":"0bc974b3-8298-11e5-8404-4f80fd0c5543","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (com.graphhopper.storage.index.Location2IDQuadtree.int))\n    throw new java.lang.IllegalStateException(\"incorrect loc2id index version\");\n"},"variableMap":{"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT":"E_FLAGS","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((long + (int)) + 4), com.graphhopper.util.BitUtil.getIntHigh(long))"},"status":-1},{"failures":[],"tindex":"0bc974b4-8298-11e5-8404-056d6a81837b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:432","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:355","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + (com.graphhopper.storage.CHGraphImpl.toDetailsString())"},"status":0},{"failures":[],"tindex":"0bc974b5-8298-11e5-8404-f90eeca7baa9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:135","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n        byte[] byte[] = new byte[int];\n        for (int int = 0 ; int < int ; int++) {\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"variableMap":{"ex":"ex","segmentSizeInBytes":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","this":"this","com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:146","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0) {\n            return false;\n        } \n        byte[] byte[] = new byte[int];\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        int[][] = new int[int][];\n        for (int int = 0 ; int < int ; int++) {\n            int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n            int[] int[] = new int[int];\n            for (int int = 0 ; int < int ; int++) {\n                int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n            }\n            int[][][int] = int[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"0bc99bc6-8298-11e5-8404-516e2e55c7bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"0bc99bc7-8298-11e5-8404-7ba656d94bed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:193","type":"CtIfImpl","sourcecode":"if (int > ((com.graphhopper.storage.GraphHopperStorage.getAllEdges().getMaxId()) / 2))\n    throw new java.lang.IllegalStateException((((\"Too many total edges were removed: \" + int) + \", all edges:\") + (com.graphhopper.storage.GraphHopperStorage.getAllEdges().getMaxId())));\n"},"variableMap":{"allRemoved":"index","ghStorage":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"0bc9c2d8-8298-11e5-8404-9dbebe4cd9bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"com.graphhopper.util.AngleCalc.PI3_4","incDist2DSum":"com.graphhopper.util.AngleCalc.PI3_4","fwdSlower":"angle","fullDist2D":"angle","restDist2D":"com.graphhopper.util.AngleCalc.PI3_4","speed":"angle","decDist2DSum":"com.graphhopper.util.AngleCalc.PI3_4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"0bc9c2d9-8298-11e5-8404-1d81847a4a5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:147","type":"CtAssignmentImpl","sourcecode":"int = int - (java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"0bc9c2da-8298-11e5-8404-890346b3c698","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:147","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.Instruction == null"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,88,49,50,51,89,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"0bc9c2db-8298-11e5-8404-41b1278017b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:285","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"variableMap":{"adj":"tmpNode","toGraph":"graph","eIter":"edgeBase","base":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0bc94d9e-8298-11e5-8404-d751ecd29805","diffs":[{"methodsDiff":{"delete":["java.lang.System.nanoTime"]},"type":"staticDiff"}]},{"transformation":"0bc974b4-8298-11e5-8404-056d6a81837b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.toDetailsString"]},"type":"staticDiff"}]}]}