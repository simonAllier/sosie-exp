{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"bb2bdca8-7926-11e5-81b5-3df8fbd395ea","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"keys","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"bb2bdca9-7926-11e5-81b5-e37d14eb95bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"param"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:68","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"status":-2},{"failures":[],"tindex":"bb2bdcaa-7926-11e5-81b5-4b5a0446370f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:199","type":"CtIfImpl","sourcecode":"if (java.io.IOException == null) {\n    throw new java.lang.AssertionError(\"internal problem as the exception \\'ioex\\' shouldn\\'t be null\");\n} "},"variableMap":{"ioex":"ex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:145","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        continue;\n    } \n    int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n    if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    } else {\n        java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n        java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n        try {\n            java.lang.String.format(java.lang.String, java.lang.Object[]);\n        } catch (java.lang.Exception ex) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"bb2c03bb-7926-11e5-81b5-698dc62d2a3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:131","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = int[][int];\n    if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n        if (int != int) {\n            int[][int] = int[][int];\n            int[][int] = int;\n        } \n        int++;\n    } \n}"},"variableMap":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"nodes","keys":"oldPriorities","values":"oldPriorities","n":"nodes","o":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:217","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n}"},"status":-2},{"failures":[],"tindex":"bb2c03bc-7926-11e5-81b5-b9b20b94e44c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:351","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n}"},"status":-2},{"failures":[],"tindex":"bb2c03bd-7926-11e5-81b5-032fe75ccfa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"newIndex","green":"newIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:269","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-2},{"failures":[],"tindex":"bb2c03be-7926-11e5-81b5-6fe12bf9b8ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"java.lang.Double.NaN","weight":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"bb2c03bf-7926-11e5-81b5-0750473a774f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:210","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bb2c03c0-7926-11e5-81b5-ebebac0cf1b3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:141","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(java.lang.Math.abs(com.graphhopper.util.shapes.BBox.double), java.lang.Math.abs(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"bb2c2ad1-7926-11e5-81b5-a3ec0037cad4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"size":"b","i":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:212","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"bb2c2ad2-7926-11e5-81b5-0f629c2fce13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.flush()"},"status":-2},{"failures":[],"tindex":"bb2c2ad3-7926-11e5-81b5-b19704b7c3b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":-2},{"failures":[],"tindex":"bb2c2ad4-7926-11e5-81b5-1f7c33638cd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"bb2c2ad5-7926-11e5-81b5-c721c22cf124","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:289","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"bb2c2ad6-7926-11e5-81b5-77aab58e59ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:89","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"bb2c2ad7-7926-11e5-81b5-0b0ba3c4ebb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:146","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double)"},"status":-2},{"failures":[],"tindex":"bb2c2ad8-7926-11e5-81b5-6162048d8bfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"bb2c51e9-7926-11e5-81b5-d9f360026d7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"edge","edgeId":"neighborNode","nextEdgeId":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:264","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-2},{"failures":[],"tindex":"bb2c51ea-7926-11e5-81b5-33bc464045c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:127","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bb2c51eb-7926-11e5-81b5-b31e71abc0cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:196","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"rw\");\n    try {\n        long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity();\n        com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        for (int int = 0 ; int < (int[][].int) ; int++) {\n            int[] int[] = int[][][int];\n            int int = int[].int;\n            byte[] byte[] = new byte[int * 4];\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n            }\n            java.io.RandomAccessFile.write(byte[]);\n        }\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Couldn\\'t store integers to \" + com.graphhopper.storage.AbstractDataAccess.(toString())) , java.lang.Exception);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}