{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.reader.OSMReaderTest.testOneWay":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":35,"com.graphhopper.reader.OSMReaderTest.testWithBounds":8,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":9,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":26,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":28,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":22,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":19},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"2a1980c5-7910-11e5-92bf-c7fe378d89c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1068","type":"CtAssertImpl","sourcecode":"assert boolean"},"variableMap":{"ret":"isPusingSection"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:589","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"2a19a7d6-7910-11e5-92bf-39689f060f6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"defaultSegmentSize","nextTurnCostIndex":"defaultSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:755","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"2a19a7d7-7910-11e5-92bf-6503d03deeae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-2},{"failures":[],"tindex":"2a19a7d8-7910-11e5-92bf-2f95a38aeed7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"favoredHeading","x1":"favoredHeading","y2":"favoredHeading","x2":"favoredHeading"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.validateAzimuthValue(double)"},"status":-2},{"failures":[],"tindex":"2a19cee9-7910-11e5-92bf-d39fe117087f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:57","type":"CtLocalVariableImpl","sourcecode":"int int = javax.xml.stream.XMLStreamReader.getEventType()"},"status":-2},{"failures":[],"tindex":"2a19ceea-7910-11e5-92bf-c7aebf3fc033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((0 * 4), int)"},"status":-2},{"failures":[],"tindex":"2a19ceeb-7910-11e5-92bf-4dff6bc25b64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Use base graph for LocationIndexTree instead of CHGraph\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-2},{"failures":[],"tindex":"2a19ceec-7910-11e5-92bf-4d15b6aa1d84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":-2},{"failures":[],"tindex":"2a19ceed-7910-11e5-92bf-330f509ff739","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:95","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"2a19f5fe-7910-11e5-92bf-751d4fcde653","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(0)"},"status":-2},{"failures":[],"tindex":"2a19f5ff-7910-11e5-92bf-89dd494c67ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:665","type":"CtContinueImpl","sourcecode":"continue NEXT_SC"},"status":-2},{"failures":[],"tindex":"2a19f600-7910-11e5-92bf-6149337ab92c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"counter","start":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:172","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2a19f601-7910-11e5-92bf-39ceeabf610a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[])"},"status":-2},{"failures":[],"tindex":"2a19f602-7910-11e5-92bf-d3d48158a072","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:122","type":"CtIfImpl","sourcecode":"if ((java.lang.String.contains(\"_\")) && (com.graphhopper.util.Translation == null))\n    com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2));\n"},"status":-2},{"failures":[],"tindex":"2a1a1d13-7910-11e5-92bf-1ddcfe1277cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"removedEdges","index":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtForEachImpl","sourcecode":"for (TIntArrayList TIntArrayList : java.util.List<com.graphhopper.util.TIntArrayList>) {\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.TIntArrayList, int);\n}"},"status":-2},{"failures":[],"tindex":"2a1a1d14-7910-11e5-92bf-9565e76e8d33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList)"},"status":-2},{"failures":[],"tindex":"2a1a1d15-7910-11e5-92bf-b71f14226abe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"longTripsSpeed","speed":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"2a1a1d16-7910-11e5-92bf-f3d2fe5417d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:689","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n    com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"2a1a4427-7910-11e5-92bf-934edc3f9a7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:201","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((com.graphhopper.util.InstructionList.(size()) - 1))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}