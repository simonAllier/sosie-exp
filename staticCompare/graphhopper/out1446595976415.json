{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":114,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":248,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":184,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":151,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":211,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":273,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":86,"com.graphhopper.coll.CompressedArrayTest.testCompress":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":222,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":213,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":267,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":113,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":78,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":96,"com.graphhopper.util.InstructionListTest.testWayList":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":105,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":252,"com.graphhopper.GraphHopperAPITest.testDisconnected179":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":201,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":134,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":140,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":128,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":173,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":208,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":85,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":216,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":69,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":170,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":108,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":145,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":258,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":117,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":281,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":130,"com.graphhopper.routing.PathTest.testWayList":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":164,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":110,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":260,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":29,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":255,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":133,"com.graphhopper.util.GHUtilityTest.testSort":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":124,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":192,"com.graphhopper.coll.CompressedArrayTest.testCompress2":141,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":230,"com.graphhopper.GraphHopperAPITest.testLoad":120,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":261,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":77,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":166,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":64,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":205,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":101,"com.graphhopper.util.GHUtilityTest.testCopy":127,"com.graphhopper.routing.PathTest.testFindInstruction":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":202,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":104,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":245,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":62,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":68,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":138,"com.graphhopper.reader.PrinctonReaderTest.testRead":139,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":229,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":82,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":188,"com.graphhopper.util.InstructionListTest.testWayList2":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":143,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":153,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":150,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":32,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":259,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":81,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":204,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":135,"com.graphhopper.routing.PathBidirRefTest.testExtract":278,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":92,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":254,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":167,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":88,"com.graphhopper.util.GHUtilityTest.testSort2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":111,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":194,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":31,"com.graphhopper.routing.PathBidirRefTest.testExtract2":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":224,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":183,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":60,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":161,"com.graphhopper.storage.GraphHopperStorageTest.testClone":239,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":187,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":269,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":157,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":168,"com.graphhopper.util.InstructionListTest.testCreateGPX":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":228,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":35,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":106,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":212,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":218,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":219,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":76,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":178,"com.graphhopper.util.InstructionListTest.testFind":251,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":226},"transformations":[{"failures":[],"tindex":"cc983bf3-8288-11e5-900d-1379760429c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:114","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    break;\n"},"status":-2},{"failures":[],"tindex":"cc986304-8288-11e5-900d-5be47ff048e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"connectedId","nextEdgeOther":"connectedId","nodeOther":"connectedId","nextEdge":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"cc986305-8288-11e5-900d-6502f48b1dbd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"event","indexDivisor":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-1},{"failures":[],"tindex":"cc986306-8288-11e5-900d-09a90d328d75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"wayStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:301","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":0},{"failures":[27,28],"tindex":"cc986307-8288-11e5-900d-db9c26f46d9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:180","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.util.Instruction.getFirstLat() : com.graphhopper.util.PointList.getLatitude((int + 1))"},"variableMap":{"last":"last","i":"i","nextInstr":"nextInstr","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:181","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.util.Instruction.getFirstLon() : com.graphhopper.util.PointList.getLongitude((int + 1))"},"status":-1},{"failures":[29],"tindex":"cc986308-8288-11e5-900d-19ffa7f8e7ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:118","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,0,4,5,7,8,9,10,74,75,76,77,78,79,80,81,82,83,84,85,15,16,18,21,24,26],"tindex":"cc988a19-8288-11e5-900d-8bcf166d6c96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"nextEdgeOther","size":"tmp","lonSize":"nextEdgeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:192","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"cc988a1a-8288-11e5-900d-5f3f363cad98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"node","segmentSizeIntsPower":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:96","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[86],"tindex":"cc988a1b-8288-11e5-900d-b18d2f53e52d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:189","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"status":-1},{"failures":[8,10],"tindex":"cc988a1c-8288-11e5-900d-6d87fe71b706","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:775","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"cc988a1d-8288-11e5-900d-c99b94e4ee91","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"currentIndex","S_SKIP_EDGE2":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:66","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[87,88,89,90,91,92,3,4,5,6,7,8,10,11,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,77,117,118,78,119,79,80,81,82,85,120,121],"tindex":"cc98b12e-8288-11e5-900d-67c020abb54a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[87,88,89,91,122],"tindex":"cc98b12f-8288-11e5-900d-93e5d287211a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"cc98b130-8288-11e5-900d-6b4dcf567ce8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"status":0},{"failures":[30,33,123,40,42,124,49,55,125,62,64,126,71,127,3,74,128,129,130,131,76,132,133,134,93,96,97,109,111,113,77,119,135,136,137,138,79,81,82,83,84,85,14,17,20,139,140],"tindex":"cc98b131-8288-11e5-900d-579a72e22462","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"edgePointer","flags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:128","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"cc98b132-8288-11e5-900d-272c3b677cc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"minLonTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"cc98d843-8288-11e5-900d-85c057edfe56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:301","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"variableMap":{"from":"segmentSizePower","lonSize":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:252","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":0},{"failures":[],"tindex":"cc98d844-8288-11e5-900d-fd9aa3d55771","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:643","type":"CtReturnImpl","sourcecode":"return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[155,3,156,157,158,159,25],"tindex":"cc98d845-8288-11e5-900d-7bef28854047","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:251","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[30,160,161,162,163,164,31,165,166,167,168,169,170,171,32,33,172,173,34,174,175,176,123,177,178,35,36,179,180,181,182,183,37,184,185,186,187,38,188,189,190,39,40,191,192,193,194,195,196,197,198,199,41,42,200,43,201,124,202,203,204,47,205,49,206,207,208,209,210,211,212,213,214,215,216,217,218,143,219,144,145,220,50,51,221,222,223,224,225,226,227,54,55,228,56,229,125,230,231,232,60,233,62,234,235,236,237,238,63,64,239,65,240,126,241,242,243,69,244,71,245,246,247,248,249,250,127,251,252,27,253,155,254,0,87,88,89,90,91,92,2,3,4,5,6,7,8,255,9,10,12,256,257,258,259,260,261,262,263,156,264,265,266,267,157,158,268,269,270,271,74,75,272,273,274,128,275,129,159,130,131,76,276,132,277,133,134,93,95,96,97,98,99,100,101,102,103,104,106,109,110,111,112,113,116,77,117,118,78,119,135,136,137,138,79,80,81,82,83,84,85,278,279,280,281,282,120,13,14,15,16,17,19,20,21,22,23,24,25,283,26,139,140],"tindex":"cc98d846-8288-11e5-900d-f1100c8cba7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtAssignmentImpl","sourcecode":"int = super.defineWayBits(int, int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cc98b130-8288-11e5-900d-6b4dcf567ce8","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}