{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":237,"com.graphhopper.reader.OSMReaderTest.testFerry":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":184,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":293,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":326,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":257,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":397,"com.graphhopper.util.BitUtilBigTest.testReverse":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":361,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":269,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":181,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":210,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":208,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":61,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":185,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":57,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":46,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":338,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":356,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":416,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":270,"com.graphhopper.routing.DijkstraTest.initializationError":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":370,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":21,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":275,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":124,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":377,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":16,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":280,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":339,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":164,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":398,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":388,"com.graphhopper.reader.OSMReaderTest.testBarriers":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":161,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":23,"com.graphhopper.routing.PathTest.testFindInstruction":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":92,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":417,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":103,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":242,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":365,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":75,"com.graphhopper.util.InstructionListTest.testWayList2":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":265,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":354,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":295,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":387,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":226,"com.graphhopper.routing.AStarTest.initializationError":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":320,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":263,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":52,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":214,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":90,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":340,"com.graphhopper.storage.GraphHopperStorageTest.testClone":390,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":363,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":138,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":135,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":252,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":155,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":44,"com.graphhopper.reader.OSMReaderTest.testWithBounds":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":299,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":202,"com.graphhopper.util.InstructionListTest.testWayList":66,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":272,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":310,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":177,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":410,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":213,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":8,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":220,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":197,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":378,"com.graphhopper.routing.PathTest.testWayList":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":192,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":403,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":89,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":319,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":389,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":54,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":111,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":332,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":262,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":83,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":296,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":247,"com.graphhopper.util.InstructionListTest.testEmptyList":64,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":405,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":369,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":418,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":301,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":183,"com.graphhopper.reader.OSMReaderTest.testFoot":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":12,"com.graphhopper.reader.OSMReaderTest.testOneWay":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":375,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":345,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":414,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":157,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":254,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":394,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":186,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":150,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":250,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":372,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":43,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":358,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":34,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":376,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":142,"com.graphhopper.GraphHopperTest.testFootAndCar":234,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":114,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":144,"com.graphhopper.util.BitUtilLittleTest.testReverse":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":362,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":211,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":330,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":68,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":411,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":170,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":39,"com.graphhopper.routing.AStarBidirectionTest.initializationError":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":351,"com.graphhopper.util.InstructionListTest.testFind":18,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":274},"transformations":[{"failures":[0,1,2],"tindex":"4b1547ae-82b7-11e5-bdc8-2b07136896bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"4b156ebf-82b7-11e5-bdc8-6b27cc505cc5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"arrayLength"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"status":0},{"failures":[],"tindex":"4b156ec0-82b7-11e5-bdc8-f39337ec3605","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:257","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"4b156ec1-82b7-11e5-bdc8-7bc7847aad8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:898","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.WeightingMap.getWeighting().toLowerCase()"},"status":-2},{"failures":[],"tindex":"4b156ec2-82b7-11e5-bdc8-ab3ec3235cb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"status":-1},{"failures":[],"tindex":"4b15e3f3-82b7-11e5-bdc8-73750ab52ca7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:930","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"wayPointMaxDistance\", 1.0)"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12],"tindex":"4b160b04-82b7-11e5-bdc8-cb2aa489bb43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:256","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"4b163215-82b7-11e5-bdc8-fba92c48b553","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:286","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[],"tindex":"4b163216-82b7-11e5-bdc8-a1e4fc681e0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"TC_NEXT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:135","type":"CtIfImpl","sourcecode":"if (int == (int)) {\n    com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int);\n} else {\n    int int = 0;\n    int int = int;\n    while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n        int = int;\n        if ((int++) > 1000) {\n            throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n        } \n    }\n    com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int);\n}"},"status":0},{"failures":[],"tindex":"4b163217-82b7-11e5-bdc8-654578bf0175","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:116","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"4b165928-82b7-11e5-bdc8-8dc8fa6d57e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:707","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"4b165929-82b7-11e5-bdc8-77bc45dc9ced","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":0},{"failures":[],"tindex":"4b16592a-82b7-11e5-bdc8-076a78f898fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_LOCATION_IDX":"com.graphhopper.util.Constants.VERSION_EDGE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"4b16592b-82b7-11e5-bdc8-93b8e263d77d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"a_lon_deg","weight":"r_lat_deg","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"a_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:149","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double);\n"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,18,64,65,66,67,68,69],"tindex":"4b16592c-82b7-11e5-bdc8-f1d2bebb9983","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-1},{"failures":[70],"tindex":"4b16592d-82b7-11e5-bdc8-fd634d98b204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime())"},"status":-1},{"failures":[71,32,33,72,73,74,75],"tindex":"4b16803e-82b7-11e5-bdc8-0b7b01cdda8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","from":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","end":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:157","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[22,23,24],"tindex":"4b16803f-82b7-11e5-bdc8-d96920be9d9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:55","type":"CtAssignmentImpl","sourcecode":"this.double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double)"},"status":-1},{"failures":[],"tindex":"4b168040-82b7-11e5-bdc8-27cfb47951d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:410","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getName\")"},"variableMap":{"this":"outEdgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.fillEdges(com.graphhopper.routing.AStar.AStarEdge, java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>, gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>, com.graphhopper.util.EdgeExplorer, false)"},"status":-2},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,14,210,211,212,213,15,16,214,215,17,216,217,218,219,220,221,222,223,224,25,26,225,226,0,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,43,52,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],"tindex":"4b168041-82b7-11e5-bdc8-3700a84ee3e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"encoderList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4b165929-82b7-11e5-bdc8-77bc45dc9ced","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]}]}