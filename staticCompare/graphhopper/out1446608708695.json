{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":167,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":67,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":341,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":342,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":31,"com.graphhopper.routing.QueryGraphTest.testOneWay":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":311,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":230,"com.graphhopper.storage.VLongStorageTest.testWrite":365,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":174,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":360,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":95,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":173,"com.graphhopper.coll.CompressedArrayTest.testCompress":364,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":172,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":259,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":312,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":183,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":73,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":209,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":223,"com.graphhopper.util.InstructionListTest.testWayList":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":58,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":335,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":357,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":340,"com.graphhopper.GraphHopperAPITest.testDisconnected179":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":160,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":231,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":110,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":332,"com.graphhopper.util.HelperTest.testUnzip":355,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":296,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":186,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":141,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":262,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":232,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":291,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":61,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":307,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":82,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":115,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":330,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":101,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":188,"com.graphhopper.routing.PathTest.testWayList":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":320,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":112,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":369,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":56,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":304,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":273,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":327,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":22,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":109,"com.graphhopper.util.GHUtilityTest.testSort":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":161,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":324,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":150,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":135,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":249,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":283,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":321,"com.graphhopper.coll.CompressedArrayTest.testCompress2":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":275,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":114,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":211,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":126,"com.graphhopper.GraphHopperAPITest.testLoad":328,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":370,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":132,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":288,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":194,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.routing.PathTest.testFound":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":308,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":157,"com.graphhopper.util.GHUtilityTest.testCopy":345,"com.graphhopper.routing.PathTest.testFindInstruction":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":118,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":128,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":162,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":201,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":221,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":210,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":130,"com.graphhopper.reader.PrinctonReaderTest.testRead":331,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":300,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":287,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":158,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":315,"com.graphhopper.util.InstructionListTest.testWayList2":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":265,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":179,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":240,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":237,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":226,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":305,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":297,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":127,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":169,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":193,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":200,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":269,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":316,"com.graphhopper.routing.PathBidirRefTest.testExtract":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":278,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":235,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":352,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":366,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":271,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":350,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":244,"com.graphhopper.util.GHUtilityTest.testSort2":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":165,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":285,"com.graphhopper.routing.PathBidirRefTest.testExtract2":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":241,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":274,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":309,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":139,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":81,"com.graphhopper.storage.GraphHopperStorageTest.testClone":196,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":180,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":314,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":205,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":159,"com.graphhopper.routing.PathTest.testTime":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":260,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":313,"com.graphhopper.util.GHUtilityTest.testSortDirected":347,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":303,"com.graphhopper.GraphHopperTest.testVia":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":254,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":59,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":258,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":286,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":338,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":361,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":264,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":266,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":168,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":302,"com.graphhopper.util.InstructionListTest.testFind":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":294},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"719f85bb-82a6-11e5-b5a1-21b77cee294a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:520","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\""},"variableMap":{"graphHopperFolder":"osmFileStr","osmFile":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:424","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,26,17,18,19,20,21,23,24,25,27],"tindex":"719faccc-82a6-11e5-b5a1-d321788ed3a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = gnu.trove.list.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                gnu.trove.list.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,0,1,2,3,4,5,6,7,8,9,10,11,12,13,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,14,15,348,349,350,351,352,353,16,26,17,18,19,20,21,23,24,25,27],"tindex":"719faccd-82a6-11e5-b5a1-0ba9e86a0a42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:298","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"719fd3de-82a6-11e5-b5a1-e3de7d0423f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:60","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[83,84,87,281],"tindex":"719fd3df-82a6-11e5-b5a1-31eb02a9ec36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:461","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-1},{"failures":[354],"tindex":"719fd3e0-82a6-11e5-b5a1-7d30fa8bafe5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-1},{"failures":[0,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,20,21,23,24],"tindex":"719ffaf1-82a6-11e5-b5a1-e333b6375ec6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:599","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[355],"tindex":"719ffaf2-82a6-11e5-b5a1-8dfbfb8148db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:214","type":"CtInvocationImpl","sourcecode":"java.io.File.delete()"},"variableMap":{"lockFile":"toFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:54","type":"CtInvocationImpl","sourcecode":"java.io.File.mkdirs()"},"status":-1},{"failures":[],"tindex":"719ffaf3-82a6-11e5-b5a1-a9bd3564e617","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":0},{"failures":[],"tindex":"719ffaf4-82a6-11e5-b5a1-5b530bc1ddb4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"v_u_dist","yend":"v_u_dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:617","type":"CtLocalVariableImpl","sourcecode":"double double = double + (com.graphhopper.util.EdgeIterator.getDistance())"},"status":0},{"failures":[],"tindex":"719ffaf5-82a6-11e5-b5a1-2342dc40d8d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:155","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.clear()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,26,17,18,19,20,21,22,23,24,25,27,356],"tindex":"719ffaf6-82a6-11e5-b5a1-93202b286dc9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:151","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPoint method.\"));\n"},"variableMap":{"possibleToAdd":"chEnabled"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:748","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.GraphHopper.initCHAlgoFactories();\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(new java.util.ArrayList<com.graphhopper.routing.util.Weighting>(java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.keySet()) , com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n} else\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n"},"status":-1},{"failures":[357],"tindex":"71a02207-82a6-11e5-b5a1-359c7f1a002a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:233","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLatitude(1)"},"variableMap":{"nextLat":"nextLon","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:234","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLongitude(1)"},"status":-1},{"failures":[],"tindex":"71a02208-82a6-11e5-b5a1-e33fffcdc2fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:843","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.storage.index.QueryResult.getQueryDistance()))"},"status":-2},{"failures":[358,359,360,361],"tindex":"71a02209-82a6-11e5-b5a1-d1035fe7b596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:88","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.int) == (int)) {\n    (long)++;\n    if (((long) % 1000000) == 0)\n        com.graphhopper.coll.GHLongIntBTree.optimize();\n    \n} "},"status":-1},{"failures":[362],"tindex":"71a0220a-82a6-11e5-b5a1-7f04e1f0918b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:192","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(((java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[],"tindex":"71a0220b-82a6-11e5-b5a1-d5fda8e45e6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1131","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[363,364,365,366],"tindex":"71a0220c-82a6-11e5-b5a1-0969df282ab1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:132","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[367,368,369,370,371],"tindex":"71a0220d-82a6-11e5-b5a1-7b1c3dc4d781","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"variableMap":{"size":"indexDivisor","i":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"71a0491e-82a6-11e5-b5a1-8f104f237c01","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:343","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int);\n}"},"variableMap":{"max":"index","fullPL":"nodeAccess","prevWayIndex":"index","basePoints":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"719ffaf4-82a6-11e5-b5a1-5b530bc1ddb4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.getDistance"]},"type":"staticDiff"}]},{"transformation":"719ffaf3-82a6-11e5-b5a1-a9bd3564e617","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().e1","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().b"],"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().e1","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().b"],"com.graphhopper.util.InstructionListTest.testFind":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().e1","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().b"]},"type":"branch"}]}]}