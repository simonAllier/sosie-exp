{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":8,"com.graphhopper.reader.OSMReaderTest.testFoot":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":14,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":25,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":1,"com.graphhopper.GraphHopperTest.testFootOnly":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":18,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":20,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":7},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"7df9e222-7924-11e5-85db-751e9fc689d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"7dfa0933-7924-11e5-85db-756fc100665c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:286","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"variableMap":{"dijkstra":"this","finishedFrom":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:76","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":0},{"failures":[],"tindex":"7dfa3044-7924-11e5-85db-57156e0f2502","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:272","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-2},{"failures":[],"tindex":"7dfa3045-7924-11e5-85db-efcd98543f46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:94","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[],"tindex":"7dfa3046-7924-11e5-85db-57a885840a7a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"y2","speed":"y2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:46","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-2},{"failures":[],"tindex":"7dfa3047-7924-11e5-85db-03e00a03fb32","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"7dfa3048-7924-11e5-85db-9f5e2acc6eab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:416","type":"CtReturnImpl","sourcecode":"return ((((((\"t(dijk):\" + (com.graphhopper.util.Helper.round2(double))) + \", t(period):\") + (com.graphhopper.util.Helper.round2(double))) + \", t(lazy):\") + (com.graphhopper.util.Helper.round2(double))) + \", t(neighbor):\") + (com.graphhopper.util.Helper.round2(double))"},"status":-2},{"failures":[],"tindex":"7dfa5759-7924-11e5-85db-9b2cfa8cf02a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(new java.util.HashMap<java.lang.String, java.lang.String>(int))"},"status":-2},{"failures":[],"tindex":"7dfa575a-7924-11e5-85db-f14045f38dc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.NaN","speed":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:98","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"7dfa575b-7924-11e5-85db-fdc3f06139d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:414","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-2},{"failures":[],"tindex":"7dfa575c-7924-11e5-85db-b5d8092aacc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"value","nextEdgeOther":"i","nodeOther":"value","nextEdge":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:145","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"7dfa7e6d-7924-11e5-85db-374c1597bcd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"WIDTH","green":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:249","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    byte[] byte[] = new byte[(2 * (int)) * (int)];\n    com.graphhopper.storage.DataAccess.create(byte[].int);\n    try {\n        java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n        java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n        java.io.InputStream java.io.InputStream;\n        if (!(java.io.File.exists())) {\n            for (int int = 0 ; int < 3 ; int++) {\n                try {\n                    com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                    break;\n                } catch (java.net.SocketTimeoutException ex) {\n                    java.lang.Thread.sleep(2000);\n                    continue;\n                } catch (java.io.FileNotFoundException ex) {\n                    java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                    continue;\n                }\n            }\n        } \n        java.io.InputStream = new java.io.FileInputStream(java.io.File);\n        java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n        java.util.zip.ZipInputStream.getNextEntry();\n        java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n        int int;\n        while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n            for (int int = 0 ; int < int ; int += 2) {\n                short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                if ((short < (-1000)) || (short > 12000))\n                    short = java.lang.Short.short;\n                \n                com.graphhopper.storage.DataAccess.setShort(int, short);\n            }\n        }\n        com.graphhopper.storage.DataAccess.flush();\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"status":-2},{"failures":[],"tindex":"7dfa7e6e-7924-11e5-85db-ff317801a8a9","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"variableMap":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"index","valueIfKeyNotFound":"index","i":"index","mValues":"mKeys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"7dfaa57f-7924-11e5-85db-4302175e99da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"i","degree":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:113","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"7dfaa580-7924-11e5-85db-e7c5554d1fbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:602","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"7dfaa581-7924-11e5-85db-ed24b35bd3d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:353","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"7dfaa582-7924-11e5-85db-e164bff9813c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"variableMap":{"offset":"value","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"status":-2},{"failures":[],"tindex":"7dfacc93-7924-11e5-85db-a3fc1264963e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"com.graphhopper.reader.OSMElement.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:288","type":"CtSwitchImpl","sourcecode":"switch (com.graphhopper.reader.OSMElement.getType()) {\n    case com.graphhopper.reader.OSMElement.int :\n        if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n            com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n        } \n        break;\n    case com.graphhopper.reader.OSMElement.int :\n        if (long < 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.reader.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n            long = long;\n        } \n        com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n        break;\n    case com.graphhopper.reader.OSMElement.int :\n        if (long < 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.reader.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n            long = long;\n        } \n        com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n        break;\n}"},"status":-2},{"failures":[],"tindex":"7dfacc94-7924-11e5-85db-0555769a010d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n    com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n"},"status":-2},{"failures":[],"tindex":"7dfacc95-7924-11e5-85db-590fc6ebcac0","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:524","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}