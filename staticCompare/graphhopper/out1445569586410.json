{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":6,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":2,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":27,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":31,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":0},"transformations":[{"failures":[],"tindex":"0c7ba194-7933-11e5-a10d-3f4b5e587442","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"0c7befb5-7933-11e5-a10d-119e8f4357fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"nodeCount","maxGeoRef":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:764","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"0c7befb6-7933-11e5-a10d-e91ee0d472b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:598","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n        continue;\n    \n    double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n    if (java.lang.Double.isNaN(double))\n        throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n    \n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n    com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n    com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n    com.graphhopper.util.StopWatch.start();\n    (long)++;\n    int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n    com.graphhopper.util.StopWatch.stop();\n    if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n        continue;\n    \n    com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n}"},"status":-2},{"failures":[],"tindex":"0c7c16c7-7933-11e5-a10d-a1593324e5e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-2},{"failures":[],"tindex":"0c7c16c8-7933-11e5-a10d-a1fd47784bf5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:122","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0)"},"status":-2},{"failures":[],"tindex":"0c7c16c9-7933-11e5-a10d-7f1902d1bf9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:257","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"0c7c3dda-7933-11e5-a10d-3fc876f1881f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"flags1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"0c7c3ddb-7933-11e5-a10d-45faeae82324","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"queryLon","incDist2DSum":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:744","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int)"},"status":-2},{"failures":[],"tindex":"0c7c3ddc-7933-11e5-a10d-27dcd20ab22c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.ensureCapacity(long)"},"status":-2},{"failures":[],"tindex":"0c7c3ddd-7933-11e5-a10d-5dc3e073afd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:101","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"variableMap":{"width":"newSize","latSimilar":"newSize","lonSimilar":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:108","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"status":-2},{"failures":[],"tindex":"0c7c64ee-7933-11e5-a10d-4d177b1a2ba1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"shortTripsSpeed","logMessagesPercentage":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:539","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[],"tindex":"0c7c64ef-7933-11e5-a10d-d503d4aa1f3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"variableMap":{"name":"fromStr","location":"fromStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0c7c64f0-7933-11e5-a10d-49305f5f0804","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:243","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"0c7c64f1-7933-11e5-a10d-8b9e73da0fd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:270","type":"CtIfImpl","sourcecode":"if (!((double >= 0) || ((int - double) < (double))))\n    int = int - (int);\n"},"status":-2},{"failures":[],"tindex":"0c7c64f2-7933-11e5-a10d-7be53540a354","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"0c7c8c03-7933-11e5-a10d-c7528def2f7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"0c7c8c04-7933-11e5-a10d-639eb4c89ba8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"status":-2},{"failures":[],"tindex":"0c7c8c05-7933-11e5-a10d-e34aa4a7eb10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:285","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"variableMap":{"adj":"tmpNode","toGraph":"graph","eIter":"edgeBase","base":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-2},{"failures":[],"tindex":"0c7c8c06-7933-11e5-a10d-5b2a24c1c0e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"0c7c8c07-7933-11e5-a10d-19723ab393ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"dist","x":"dist","absY":"min"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:772","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}