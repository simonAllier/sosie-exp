{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":60,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":0,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":40,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":76,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":59,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":12,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":19,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":7,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":61,"com.graphhopper.util.HelperTest.testGetLocale":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":62,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":66,"com.graphhopper.GraphHopperAPITest.testDisconnected179":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":42,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":55,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":41,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":14,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":75,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":32,"com.graphhopper.reader.OSMReaderTest.testBarriers":72,"com.graphhopper.GraphHopperTest.testLoadOSM":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":29,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":67},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"e794077f-8284-11e5-9af4-73fda4169d77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"b_lat_deg","r_lat":"b_lat_deg","a_lat":"b_lat_deg","delta_lon":"a_lat_deg","r_lon":"a_lat_deg","a_lon":"a_lat_deg","norm":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:175","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-1},{"failures":[17,18,19,20,21,22],"tindex":"e7942d90-8284-11e5-9af4-61c71312d5a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"swapIndex","weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:249","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-1},{"failures":[],"tindex":"e79454a1-8284-11e5-9af4-33ab434701f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:258","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"variableMap":{"item":"item"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:265","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)) > 0"},"status":-2},{"failures":[23],"tindex":"e79454a2-8284-11e5-9af4-eb72ddca855c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:416","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[],"tindex":"e79454a3-8284-11e5-9af4-834c19282e7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:102","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getShort(int)"},"status":-2},{"failures":[],"tindex":"e79454a4-8284-11e5-9af4-6b3e5bb61108","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"current","capacity":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:46","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n            gnu.trove.stack.array.TIntArrayStack.push(int);\n        } \n    }\n    com.graphhopper.coll.GHBitSet.add(int);\n} "},"status":0},{"failures":[],"tindex":"e7947bb5-8284-11e5-9af4-5b6e55d0b26f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:199","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += ((\",\" + (double)) + \",\") + (double)"},"status":0},{"failures":[],"tindex":"e7947bb6-8284-11e5-9af4-7b44bd5562e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:173","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef = new com.graphhopper.routing.PathBidirRef(com.graphhopper.storage.Graph , com.graphhopper.routing.util.FlagEncoder)"},"status":-1},{"failures":[24,25,26],"tindex":"e7947bb7-8284-11e5-9af4-4d8da6afc00c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:380","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"variableMap":{"java.lang.Double.MAX_VALUE":"radian"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:100","type":"CtReturnImpl","sourcecode":"return ((java.lang.Math.double) * (int)) - (double)"},"status":-1},{"failures":[27,28,29,30,31,32,2,3,4,5,33,34,35,36,37,38,39,40,41,42,43,44,45,46,6,47,48,49,50,51,52,53,54,55,56,57,58,59,60,7,61,62,63,64,65,66,67,68,9,69,10,11,70,71,72],"tindex":"e7947bb8-8284-11e5-9af4-03b180d76e54","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    \n}"},"status":-1},{"failures":[],"tindex":"e794a2c9-8284-11e5-9af4-2782731dde70","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"status":-2},{"failures":[],"tindex":"e794a2ca-8284-11e5-9af4-e5a89462f09d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"capacity","i":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e794a2cb-8284-11e5-9af4-dd0c6c73d054","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"prevEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":-2},{"failures":[],"tindex":"e794c9dc-8284-11e5-9af4-1576f32614d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:315","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"e794c9dd-8284-11e5-9af4-e3670f79d6e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:84","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.WeightApproximator.approximate(int)"},"status":-2},{"failures":[],"tindex":"e794c9de-8284-11e5-9af4-415c715a4dc4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:134","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = com.graphhopper.storage.index.Location2IDQuadtree.fillQuadtree(((int) * (int)))"},"status":-2},{"failures":[],"tindex":"e794c9df-8284-11e5-9af4-c35f09051c71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:51","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[73,74,75],"tindex":"e794f0f0-8284-11e5-9af4-d10327d187aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:245","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.BTreeEntry"},"variableMap":{"downTreeRV":"rv","tree":"root","returnTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry"},"status":-1},{"failures":[76],"tindex":"e794f0f1-8284-11e5-9af4-b747829ff017","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-1},{"failures":[77],"tindex":"e794f0f2-8284-11e5-9af4-a3161bc26f22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}