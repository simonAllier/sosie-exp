{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":35,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":207,"com.graphhopper.GraphHopperAPITest.testNoLoad":214,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":244,"com.graphhopper.reader.OSMReaderTest.testFerry":221,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":217,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":143,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":479,"com.graphhopper.coll.CompressedArrayTest.testCompress":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":56,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":467,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":264,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":443,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":406,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":491,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":276,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":201,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":496,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":483,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":199,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":346,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":475,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":175,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":242,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":493,"com.graphhopper.GraphHopperTest.testLoadOSM":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":347,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":385,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":69,"com.graphhopper.reader.OSMReaderTest.testSort":224,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":403,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":462,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":277,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":39,"com.graphhopper.routing.DijkstraTest.initializationError":64,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":319,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":417,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":281,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":341,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":427,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":424,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":3,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":116,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":308,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":285,"com.graphhopper.coll.CompressedArrayTest.testCompress2":57,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":386,"com.graphhopper.GraphHopperAPITest.testLoad":212,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":444,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":434,"com.graphhopper.reader.OSMReaderTest.testBarriers":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":81,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":248,"com.graphhopper.util.GHUtilityTest.testCopy":494,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":151,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":290,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":358,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":463,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":90,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":249,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":490,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":411,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":412,"com.graphhopper.util.InstructionListTest.testWayList2":498,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":353,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":388,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":401,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":16,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":433,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":226,"com.graphhopper.routing.AStarTest.initializationError":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":297,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":164,"com.graphhopper.routing.PathBidirRefTest.testExtract":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":178,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":499,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":381,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":270,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":205,"com.graphhopper.reader.OSMReaderTest.testMain":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":476,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":77,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":387,"com.graphhopper.storage.GraphHopperStorageTest.testClone":436,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":273,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":128,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":12,"com.graphhopper.reader.OSMReaderTest.testRelation":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":399,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":36,"com.graphhopper.GraphHopperTest.testFootOnly":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":9,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":32,"com.graphhopper.routing.QueryGraphTest.testOneWay":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":328,"com.graphhopper.storage.VLongStorageTest.testWrite":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":345,"com.graphhopper.reader.OSMReaderTest.testWithBounds":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":93,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":321,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":478,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":432,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":194,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":27,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":465,"com.graphhopper.util.InstructionListTest.testWayList":497,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":166,"com.graphhopper.GraphHopperAPITest.testDisconnected179":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":251,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":480,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":88,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":482,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":279,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":51,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":315,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":167,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":456,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":204,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":336,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":337,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":211,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":187,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":31,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":182,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":449,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":10,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":324,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":15,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":82,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":365,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":98,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":117,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":477,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":269,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":70,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":326,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":191,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":301,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":21,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":254,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":118,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":451,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":416,"com.graphhopper.reader.PrinctonReaderTest.testRead":219,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":464,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":173,"com.graphhopper.reader.OSMReaderTest.testFoot":222,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":137,"com.graphhopper.reader.OSMReaderTest.testOneWay":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":422,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":445,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":392,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":460,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":318,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":147,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":454,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":261,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":440,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":486,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":338,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":492,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":485,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":140,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":60,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":257,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":419,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":428,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":377,"com.graphhopper.routing.PathBidirRefTest.testExtract2":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":11,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":363,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":342,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":458,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":405,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":488,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":423,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":132,"com.graphhopper.GraphHopperTest.testFootAndCar":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":409,"com.graphhopper.GraphHopperTest.testPrepareOnly":236,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":362,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":202,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":378,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":457,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":160,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":6,"com.graphhopper.routing.AStarBidirectionTest.initializationError":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":260,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":398,"com.graphhopper.util.InstructionListTest.testFind":495,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0},"transformations":[{"failures":[0,1,2],"tindex":"b7a57bbf-829d-11e5-8c6e-55ba927a35a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:190","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"allRemoved":"maxGeoRef","removedEdges":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:228","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-1},{"failures":[],"tindex":"b7a57bc0-829d-11e5-8c6e-418df667f515","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"E_NODEA","maxEdgesCount":"E_NODEA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:46","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"b7a5a2d1-829d-11e5-8c6e-597ff1731fb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"variableMap":{"defaultUTurnCost":"queryDistance","weight":"queryDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:89","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[16,13,14,17,18,15],"tindex":"b7a5a2d2-829d-11e5-8c6e-29f49069cd91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:356","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:215","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-1},{"failures":[],"tindex":"b7a5a2d3-829d-11e5-8c6e-4d86e435eab6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"node","maxLeafEntries":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"b7a5a2d4-829d-11e5-8c6e-a537009ecdaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"to","nodeId":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:103","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) != null) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n} "},"status":-2},{"failures":[19,20],"tindex":"b7a5a2d5-829d-11e5-8c6e-df20acf540dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:596","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.clear()"},"variableMap":{"prepareAlgo":"prepareAlgo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100))"},"status":-1},{"failures":[],"tindex":"b7a5a2d6-829d-11e5-8c6e-b58a863add5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    com.graphhopper.storage.GraphHopperStorage.close();\n"},"variableMap":{"ghStorage":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:52","type":"CtTryImpl","sourcecode":"try {\n    int++;\n    int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine());\n    int++;\n    int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine());\n    for (int int = 0 ; int < int ; int++) {\n        int++;\n        java.lang.String java.lang.String = java.io.BufferedReader.readLine();\n        java.lang.String[] java.lang.String[] = java.lang.String.split(\" \");\n        int int = -1;\n        int int = -1;\n        double double = -1;\n        int int = 0;\n        for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n            if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n                continue;\n            } \n            if (int == 0) {\n                int = java.lang.Integer.parseInt(java.lang.String[][int]);\n            } else if (int == 1) {\n                int = java.lang.Integer.parseInt(java.lang.String[][int]);\n            } else {\n                double = java.lang.Double.parseDouble(java.lang.String[][int]);\n            }\n            int++;\n        }\n        if (int != 3) {\n            throw new java.lang.RuntimeException((((((\"incorrect read!? from:\" + int) + \", to:\") + int) + \", dist:\") + double));\n        } \n        com.graphhopper.storage.Graph.edge(int, int, double, false);\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Problem in line \" + int) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(java.io.BufferedReader);\n}"},"status":-2},{"failures":[],"tindex":"b7a5c9e7-829d-11e5-8c6e-d7b5c7b856d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"double = -double"},"variableMap":{"eleDelta":"periodTime","decEleSum":"periodTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:290","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[21,22,23,24,25,26,27],"tindex":"b7a5c9e8-829d-11e5-8c6e-a1e5e38aac98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:75","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 7)] = ((byte)(long >> 56))"},"variableMap":{"offset":"offset","bytes":"values","value":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:248","type":"CtAssignmentImpl","sourcecode":"byte[][int] = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getByte((((long) + long) + int))"},"status":-1},{"failures":[28,29,30,3,4,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"b7a5c9e9-829d-11e5-8c6e-4f1ff98b9c7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:680","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(10)"},"variableMap":{"existingIter":"existingIter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:681","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.put(int, com.graphhopper.routing.VirtualEdgeIterator)"},"status":-1},{"failures":[57,58,59,60],"tindex":"b7a5c9ea-829d-11e5-8c6e-174e4dc258ae","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:126","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[],"tindex":"b7a5f0fb-829d-11e5-8c6e-bd571d37e4c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"adjEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.util.EdgeIteratorState))\n    com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState);\n"},"status":-2},{"failures":[],"tindex":"b7a5f0fc-829d-11e5-8c6e-31f086c3ab09","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":0},{"failures":[],"tindex":"b7a5f0fd-829d-11e5-8c6e-3db9174d80fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"variableMap":{"a":"to","b":"to","distance":"dist","this":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Graph.edge(int, int, double, false)"},"status":-2},{"failures":[0,61],"tindex":"b7a5f0fe-829d-11e5-8c6e-dbb83cc345ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,28,199,200,29,201,202,203,204,30,3,205,206,4,207,208,209,210,211,31,32,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,49,50,51,52,53,54,238,239,55,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,281,282,283,61,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,5,335,6,336,337,338,339,7,8,340,341,342,343,344,345,346,347,348,9,349,10,350,351,352,353,11,12,354,355,356,357,358,359,360,361,362,363,364,16,13,14,17,18,15,365,366,367,368,369,370,371,372,373,374,56,375,376,377,378,379,380,381,1,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,2,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"b7a5f0ff-829d-11e5-8c6e-b1e9bf1808c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"variableMap":{"str":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"b7a61810-829d-11e5-8c6e-81e4ae943aa6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:276","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"b7a61811-829d-11e5-8c6e-615207bdc7f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"weightApproximation","speed":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:37","type":"CtIfImpl","sourcecode":"if (boolean)\n    double *= -1;\n"},"status":-1},{"failures":[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,189,190,19,485,20,486,487,488,489,490,491,492,493,192,195,196,197,198,28,199,200,29,201,3,205,206,4,209,210,211,31,41,212,494,217,218,495,496,497,498,219,220,44,45,46,47,48,499,244,245,247,248,252,259,261,267,269,272,274,279,0,289,290,292,293,297,304,306,312,314,317,319,324,5,342,9,356,363,371,372,375,1,388,389,391,392,396,403,405,411,413,416,418,423,2,433,434,436,437,441,448,450,456,458,461,463,468],"tindex":"b7a63f22-829d-11e5-8c6e-3f11b8895c8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:318","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b7a5c9e7-829d-11e5-8c6e-d7b5c7b856d4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}