{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":52,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":58,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":39,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":33,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":54,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":34,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":2,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":35,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":49,"com.graphhopper.GraphHopperTest.testPrepare":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":37,"com.graphhopper.util.InstructionListTest.testWayList2":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":6,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":31,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":83,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":59,"com.graphhopper.util.InstructionListTest.testWayList":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":48,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":60,"com.graphhopper.coll.OSMIDMapTest.testGet":64,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":89,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":29,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":90,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":96,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":36,"com.graphhopper.reader.OSMReaderTest.testSort":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":72,"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":47,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":84,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":46,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":13,"com.graphhopper.routing.PathTest.testWayList":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":101,"com.graphhopper.coll.OSMIDMapTest.testGet2":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":86,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":78,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":103,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":75,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":80,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":91,"com.graphhopper.GraphHopperTest.testFootAndCar":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":81,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":57,"com.graphhopper.coll.OSMIDMapTest.testGetLong":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":42,"com.graphhopper.reader.OSMReaderTest.testRelation":8,"com.graphhopper.GraphHopperTest.testVia":97,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":53,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":14,"com.graphhopper.util.InstructionListTest.testFind":20,"com.graphhopper.reader.OSMReaderTest.testBarriers":63,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.util.GHUtilityTest.testCopy":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":98},"transformations":[{"failures":[0],"tindex":"24cfa28c-8275-11e5-8963-cf748633e09a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"speed","angleXY":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long))\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[],"tindex":"24cfc99d-8275-11e5-8963-971a0477a9a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"fwdSlower","x":"fwdSlower","absY":"fwdSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:230","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"24cfc99e-8275-11e5-8963-15ef0ecaf4be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:246","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.isEmpty()))\n    java.lang.StringBuilder.append(\"<gh:direction>\").append(java.lang.String).append(\"<\/gh:direction>\");\n"},"status":-2},{"failures":[1],"tindex":"24cff0af-8275-11e5-8963-1dfc171ebcde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-1},{"failures":[],"tindex":"24cff0b0-8275-11e5-8963-5f20f29a4971","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:45","type":"CtAssignmentImpl","sourcecode":"int = gnu.trove.stack.array.TIntArrayStack.pop()"},"status":-2},{"failures":[2,3,4,5,6,7,8],"tindex":"24cff0b1-8275-11e5-8963-9de1dd97bfce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:728","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17],"tindex":"24cff0b2-8275-11e5-8963-9d67a11728a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.calcDirection(com.graphhopper.util.Instruction)"},"variableMap":{"instruction":"this","nextI":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:261","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.getName()"},"status":-1},{"failures":[],"tindex":"24cff0b3-8275-11e5-8963-239a67dccdac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"deltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:694","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[18],"tindex":"24cff0b4-8275-11e5-8963-a18ff1e2c2c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-1},{"failures":[0],"tindex":"24d017c5-8275-11e5-8963-9b9659ca714e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long))\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[19,20,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,16,61,62,63],"tindex":"24d017c6-8275-11e5-8963-eb13aff2ef4f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:905","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double)"},"status":-1},{"failures":[],"tindex":"24d017c7-8275-11e5-8963-6dbb329a9012","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[5],"tindex":"24d017c8-8275-11e5-8963-f50016c6ade7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:150","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"24d017c9-8275-11e5-8963-f512a2585254","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:92","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:366","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"24d03eda-8275-11e5-8963-abce8bf149f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":0},{"failures":[64,65,66,67,68],"tindex":"24d03edb-8275-11e5-8963-5b60d1cf88ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"tmp","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8)"},"status":-1},{"failures":[69,70,71,72,73,74,26,75,76,77,78,79,80,81,82,83,84,85,86,87,54,58,88,89,90,91,92,93,94],"tindex":"24d03edc-8275-11e5-8963-fd7b3d0bf8eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"edgeCount","S_SKIP_EDGE2":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[71,72,73,95,96,97,21,22,74,23,24,25,57,58,98,99,100,91,92,93],"tindex":"24d03edd-8275-11e5-8963-638892942f30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:72","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"24d03ede-8275-11e5-8963-67229d3dc539","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:536","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[101,102,103],"tindex":"24d03edf-8275-11e5-8963-ebfbfdfd3386","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:172","type":"CtAssignmentImpl","sourcecode":"int = gnu.trove.list.array.TIntArrayList.size()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"24d03eda-8275-11e5-8963-abce8bf149f2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]}]}