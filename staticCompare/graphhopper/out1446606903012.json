{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":57,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.reader.OSMReaderTest.testFerry":100,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":96,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":97,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":54,"com.graphhopper.routing.QueryGraphTest.testOneWay":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":166,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":267,"com.graphhopper.reader.OSMReaderTest.testWithBounds":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":205,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":348,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":137,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":203,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":291,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":117,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":287,"com.graphhopper.GraphHopperTest.testPrepare":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":214,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":240,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.util.InstructionListTest.testWayList":92,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":91,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":356,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":89,"com.graphhopper.GraphHopperAPITest.testDisconnected179":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":191,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":265,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":268,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":52,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":78,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":350,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":217,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":128,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":342,"com.graphhopper.GraphHopperTest.testLoadOSM":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":294,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":146,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":269,"com.graphhopper.reader.OSMReaderTest.testSort":103,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":77,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":162,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":62,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":116,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":219,"com.graphhopper.routing.PathTest.testWayList":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":175,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":26,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":56,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":322,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":139,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":305,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":182,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":51,"com.graphhopper.util.GHUtilityTest.testSort":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":192,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":179,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":67,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":138,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":282,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":315,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":327,"com.graphhopper.GraphHopperAPITest.testLoad":98,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":333,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":143,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":225,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":80,"com.graphhopper.reader.OSMReaderTest.testBarriers":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.routing.PathTest.testFound":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":207,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.util.GHUtilityTest.testCopy":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":188,"com.graphhopper.routing.PathTest.testFindInstruction":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":329,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":193,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":252,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":83,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":331,"com.graphhopper.reader.PrinctonReaderTest.testRead":114,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":11,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":189,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":170,"com.graphhopper.util.InstructionListTest.testWayList2":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":297,"com.graphhopper.reader.OSMReaderTest.testFoot":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":210,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":274,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":257,"com.graphhopper.reader.OSMReaderTest.testOneWay":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":160,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":152,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":10,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":200,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":224,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":231,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":105,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":3,"com.graphhopper.routing.PathBidirRefTest.testExtract":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":285,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":209,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":352,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":303,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":120,"com.graphhopper.util.GHUtilityTest.testSort2":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":196,"com.graphhopper.reader.OSMReaderTest.testMain":102,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":140,"com.graphhopper.routing.PathBidirRefTest.testExtract2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":172,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":306,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":164,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":218,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":340,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphHopperStorageTest.testClone":227,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":211,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":169,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":236,"com.graphhopper.GraphHopperTest.testFootAndCar":129,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":190,"com.graphhopper.routing.PathTest.testTime":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":202,"com.graphhopper.reader.OSMReaderTest.testRelation":353,"com.graphhopper.util.GHUtilityTest.testSortDirected":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":321,"com.graphhopper.GraphHopperTest.testPrepareOnly":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":158,"com.graphhopper.GraphHopperTest.testVia":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":263,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":290,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":141,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":94,"com.graphhopper.GraphHopperTest.testFootOnly":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":296,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":298,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":47,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":199,"com.graphhopper.util.InstructionListTest.testFind":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":312},"transformations":[{"failures":[],"tindex":"3d5bd78c-82a2-11e5-92d9-bde91d9dd836","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"variableMap":{"name":"dataAccess","refName":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:169","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"3d5c25ad-82a2-11e5-92d9-3faffbf4fdcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.CHEdgeIteratorState.getWeight()"},"variableMap":{"tmp":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:52","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"3d5c25ae-82a2-11e5-92d9-1976bef6dfd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"shortcutCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:615","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"3d5c4cbf-82a2-11e5-92d9-19a6c18ad2e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"E_LINKB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:49","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"3d5c73d0-82a2-11e5-92d9-fdd2cffc371b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"maxLat","lat":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((6 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"3d5c73d1-82a2-11e5-92d9-61e027dea062","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:128","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"3d5c73d2-82a2-11e5-92d9-9d2749196a05","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"))"},"status":-2},{"failures":[353],"tindex":"3d5c9ae3-82a2-11e5-92d9-658a0d11f631","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:392","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.addBarrierNode(long)"},"variableMap":{"this":"this","nodeId":"osmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:623","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long)"},"status":-1},{"failures":[],"tindex":"3d5c9ae4-82a2-11e5-92d9-73aa01ed87f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += gnu.trove.map.hash.TLongIntHashMap[][int].size()"},"status":-2},{"failures":[24,27,32,33,36,42,53,56,57,66,119,120,121,122,123,126,127,128,129,130,131,133],"tindex":"3d5c9ae5-82a2-11e5-92d9-43904691744e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:571","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"variableMap":{"originalEdgesCount":"edgeId","edgeDifference":"edgeId","contractedNeighbors":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:590","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"3d5c9ae6-82a2-11e5-92d9-81c4716c2960","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getDistance\")"},"status":0},{"failures":[72,73,75,77,78,149,158,159,165,172,173,185,194,195,201,208,209,225,234,235,241,248,249,319,328,329,335,342,343],"tindex":"3d5cc1f7-82a2-11e5-92d9-c962a48b0dc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"removeNodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:764","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"3d5cc1f8-82a2-11e5-92d9-5f94c3c2f7a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeWrapper.ensureCapacity(int)"},"status":0},{"failures":[354,355,101,129],"tindex":"3d5cc1f9-82a2-11e5-92d9-39b264a2cded","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"allowed","len":"allowed","start":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3d5cc1fa-82a2-11e5-92d9-f7c2f33cbb74","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"status":0},{"failures":[73,79],"tindex":"3d5cc1fb-82a2-11e5-92d9-c73c5f61322a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"node","y2":"node","x1":"node","x2":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"3d5ce90c-82a2-11e5-92d9-238d2f727fc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"variableMap":{"code":"code","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE","relation":"relation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[356,94],"tindex":"3d5ce90d-82a2-11e5-92d9-31a0eaf81967","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-1},{"failures":[],"tindex":"3d5ce90e-82a2-11e5-92d9-9b194279e5a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,118,125,126,127,128,129,130,131,132,133,134,135],"tindex":"3d5d101f-82a2-11e5-92d9-c38cb258c4cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.writeOsm2Graph(java.io.File)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3d5cc1fa-82a2-11e5-92d9-f7c2f33cbb74","diffs":[{"branches":{"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]},{"transformation":"3d5c25ae-82a2-11e5-92d9-1976bef6dfd4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getHeader"]},"type":"staticDiff"}]},{"transformation":"3d5cc1f8-82a2-11e5-92d9-5f94c3c2f7a2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeWrapper.ensureCapacity"]},"type":"staticDiff"},{"branches":{"com.graphhopper.util.EdgeWrapperTest.testPut":["com.graphhopper.util.EdgeWrapper_void_ensureCapacity(int).b","com.graphhopper.util.EdgeWrapper_void_ensureCapacity(int).t1"]},"type":"branch"}]}]}