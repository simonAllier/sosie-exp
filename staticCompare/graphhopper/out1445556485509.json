{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":25,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.reader.OSMReaderTest.testFerry":153,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":147,"com.graphhopper.reader.OSMReaderTest.testWithBounds":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":69,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":340,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":352,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":226,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":7,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":140,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":278,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":355,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":207,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":32,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":250,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":279,"com.graphhopper.reader.OSMReaderTest.testSort":156,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":19,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":163,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":297,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":256,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":117,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":29,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":225,"com.graphhopper.routing.DijkstraTest.initializationError":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":311,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":14,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":132,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":102,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":231,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":318,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":216,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":175,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":273,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":228,"com.graphhopper.reader.OSMReaderTest.testBarriers":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":345,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":56,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":73,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":45,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":193,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":330,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":83,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":131,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":257,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":209,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":195,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":188,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":272,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":38,"com.graphhopper.reader.OSMReaderTest.testFoot":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":343,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":57,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":262,"com.graphhopper.reader.OSMReaderTest.testOneWay":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":124,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":220,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":295,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":210,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":192,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":126,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":227,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":337,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":158,"com.graphhopper.routing.AStarTest.initializationError":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":33,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":333,"com.graphhopper.reader.OSMReaderTest.testMain":155,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":314,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":350,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":167,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":299,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":129,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":266,"com.graphhopper.storage.GraphHopperStorageTest.testClone":230,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":263,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":114,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":240,"com.graphhopper.GraphHopperTest.testFootAndCar":151,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":96,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":17,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":271,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":59,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":111,"com.graphhopper.routing.AStarBidirectionTest.initializationError":149,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":336,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":283},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"8bbaccc6-7914-11e5-b443-8f456f58b97f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"encoderList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"8bbaf3d7-7914-11e5-b443-3347d4c33f6a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:98","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> != null)\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n    }\n"},"status":-2},{"failures":[],"tindex":"8bbaf3d8-7914-11e5-b443-adc0083d661a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:422","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    if (int < (int - 1)) {\n        long[] long[] = com.graphhopper.reader.TLongList.toArray(int, (int - int));\n        TLongList TLongList = new TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n    } \n} else {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.OSMWay.getNodes(), long, long));\n}"},"status":-2},{"failures":[],"tindex":"8bbb1ae9-7914-11e5-b443-f14fc4eff8a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10).flush()"},"variableMap":{"heights":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = -1;\n    int int = -1;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n            int = int;\n            int = int + 1;\n        } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n            int = int;\n            int = int + (int);\n        } \n    } else {\n        if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n            int = int + 1;\n            int = int;\n        } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n            int = int + (int);\n            int = int;\n        } \n    }\n    if (int >= 0) {\n        if ((int[][int]) >= 0) {\n            if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                continue;\n            } \n        } \n        com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n        int[][int] = int[][int];\n        com.graphhopper.coll.GHBitSet.add(int);\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"8bbb1aea-7914-11e5-b443-3de996bb91f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:211","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"8bbb1aeb-7914-11e5-b443-1bed5725c1a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:377","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8bbb1aec-7914-11e5-b443-f9d82e89191b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:66","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8bbb1aed-7914-11e5-b443-a9d83b187f20","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"8bbb1aee-7914-11e5-b443-e769eed1281e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:90","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"variableMap":{"visitedCountFrom":"size","visitedCountTo":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:51","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8bbb1aef-7914-11e5-b443-95f7fcb38631","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:79","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"8bbb4200-7914-11e5-b443-cbb2cf934a03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:762","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"8bbb4201-7914-11e5-b443-77a1e8032776","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"variableMap":{"a":"from","b":"from","distance":"dist","this":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Graph.edge(int, int, double, false)"},"status":-2},{"failures":[],"tindex":"8bbb4202-7914-11e5-b443-c9e0bc15815c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"8bbb4203-7914-11e5-b443-c18121113a9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:182","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"closed":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"8bbb4204-7914-11e5-b443-335a4b969722","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtInvocationImpl","sourcecode":"super.close()"},"status":-2},{"failures":[],"tindex":"8bbb4205-7914-11e5-b443-973eec4c4bb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:268","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(long)"},"variableMap":{"maxCapacity":"tmp","nodesCH":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + (int)))"},"status":-2},{"failures":[],"tindex":"8bbb4206-7914-11e5-b443-fff33e5e6811","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:605","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometryHeader()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:260","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-2},{"failures":[],"tindex":"8bbb6917-7914-11e5-b443-4dd4aa035d58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:182","type":"CtWhileImpl","sourcecode":"while (int != (javax.xml.stream.XMLStreamConstants.int)) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n        if (java.lang.String != null) {\n            java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n            long long = 0;\n            switch (java.lang.String.charAt(0)) {\n                case 'n' :\n                    if (\"node\".equals(java.lang.String)) {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                    } \n                    break;\n                case 'w' :\n                    {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                    }\n                case 'r' :\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        } \n    } \n    int = javax.xml.stream.XMLStreamReader.next();\n}"},"status":-2},{"failures":[],"tindex":"8bbb6918-7914-11e5-b443-a12d1fbb8ffa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:392","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getBaseNode()"},"variableMap":{"allIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:113","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"8bbb6919-7914-11e5-b443-373567814705","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}