{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":312,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":236,"com.graphhopper.util.BitUtilBigTest.testToDouble":252,"com.graphhopper.GraphHopperAPITest.testNoLoad":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":112,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.reader.OSMReaderTest.testFerry":58,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":74,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":259,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":303,"com.graphhopper.routing.QueryGraphTest.testOneWay":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":195,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":44,"com.graphhopper.reader.OSMReaderTest.testWithBounds":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":186,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":313,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":201,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":92,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":284,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":160,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":88,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":133,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":148,"com.graphhopper.util.InstructionListTest.testWayList":7,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":41,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":255,"com.graphhopper.GraphHopperAPITest.testDisconnected179":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":171,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":278,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":203,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":54,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":111,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":178,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":216,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":204,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":295,"com.graphhopper.reader.OSMReaderTest.testSort":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":156,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":260,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":240,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":45,"com.graphhopper.routing.PathTest.testWayList":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":163,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":154,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":192,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":76,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":223,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":158,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":53,"com.graphhopper.util.GHUtilityTest.testSort":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":104,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":177,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":129,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":233,"com.graphhopper.util.BitUtilBigTest.testToLong":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":316,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":30,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":183,"com.graphhopper.storage.MMapDirectoryTest.testSynched":243,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":81,"com.graphhopper.GraphHopperAPITest.testLoad":55,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":26,"com.graphhopper.util.TranslationMapTest.testToString":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":162,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":166,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":90,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":314,"com.graphhopper.routing.PathTest.testFound":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":108,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":212,"com.graphhopper.util.GHUtilityTest.testCopy":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":152,"com.graphhopper.routing.PathTest.testFindInstruction":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":78,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":174,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":105,"com.graphhopper.util.InstructionListTest.testEmptyList":4,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":238,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":175,"com.graphhopper.reader.PrinctonReaderTest.testRead":172,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":141,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":227,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":127,"com.graphhopper.util.InstructionListTest.testWayList2":11,"com.graphhopper.reader.OSMReaderTest.testFoot":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":208,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":285,"com.graphhopper.util.HelperTest.testGetLocale":2,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":99,"com.graphhopper.reader.OSMReaderTest.testOneWay":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":267,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.RAMDirectoryTest.testSynched":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":264,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":274,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":247,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":106,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":271,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":1,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":135,"com.graphhopper.routing.PathBidirRefTest.testExtract":241,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":283,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":20,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":164,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":191,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":221,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":190,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":113,"com.graphhopper.util.GHUtilityTest.testSort2":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":159,"com.graphhopper.reader.OSMReaderTest.testMain":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":226,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":176,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":197,"com.graphhopper.routing.PathBidirRefTest.testExtract2":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":116,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":126,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":82,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":205,"com.graphhopper.storage.GraphHopperStorageTest.testClone":269,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":130,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":246,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":277,"com.graphhopper.routing.PathTest.testTime":48,"com.graphhopper.util.InstructionListTest.testCreateGPX":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":297,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":311,"com.graphhopper.util.GHUtilityTest.testSortDirected":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":300,"com.graphhopper.GraphHopperTest.testPrepareOnly":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":299,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":290,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":102,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":310,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":67,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":214,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":294,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.GraphHopperTest.testFootOnly":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":218,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":49,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":124,"com.graphhopper.util.InstructionListTest.testFind":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":211},"transformations":[{"failures":[],"tindex":"f33e2d4d-829e-11e5-98f7-019d7ad18e78","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f33e545e-829e-11e5-98f7-01fe452d4302","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:564","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.minOneWayNetworkSize\", int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"f33e545f-829e-11e5-98f7-77255da74a40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"pointIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:68","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"status":-1},{"failures":[],"tindex":"f33e5460-829e-11e5-98f7-938e1d4c9bea","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:37","type":"CtIfImpl","sourcecode":"if (boolean)\n    double *= -1;\n"},"status":-1},{"failures":[72,73,6,7,11,74,15,16,17,18,19,22,23,24,25,26,27,30,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,45,46,49,50,51,53,54,55,172,173,58,59,60,61,62,65,66,67,68,69,71],"tindex":"f33e7b71-829e-11e5-98f7-df30526990ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"flags","nanoTime":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[78,174,175,176,177,178,179,90,180,181,182,183,184,185,102,186,187,188,189,190,191,121,192,193,194,195,196,197,165,166,167,169,170,71],"tindex":"f33e7b72-829e-11e5-98f7-957468df37bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BreadthFirstSearch:46","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:749","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"f33e7b73-829e-11e5-98f7-7d6dd9b38b6c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"acceptBit","tmpValue":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:179","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[165,167,169,170],"tindex":"f33e7b74-829e-11e5-98f7-9f4db380a284","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"maxCount","com.graphhopper.storage.EdgeAccess.NO_NODE":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:170","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = gnu.trove.list.array.TIntArrayList.size();\n    gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"f33ec995-829e-11e5-98f7-e3ead17396ca","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"tmpWeight","orientation":"tmpWeight","java.lang.Math.PI":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"f33ec996-829e-11e5-98f7-2119a6483b01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:520","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:51","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f33ec997-829e-11e5-98f7-b967a1b94655","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"status":-2},{"failures":[15,16,17,18,19,20,24,25,26,30,140,145,147,148,149,150,152,154,157,158,159,160,198,162,163,55],"tindex":"f33ec998-829e-11e5-98f7-91214505f4d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:171","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[3,7,11,12,15,16,17,18,19,22,23,24,25,26,27,30,31,75,199,85,87,200,98,201,110,202,203,204,205,112,206,207,208,209,210,211,113,212,213,214,215,216,217,115,218,219,220,221,222,223,116,224,118,225,226,227,228,229,230,231,232,233,234,132,235,236,237,145,148,149,152,238,155,157,158,239,160,198,161,240,163,51,52,55,56,60,61,62,63,64],"tindex":"f33ec999-829e-11e5-98f7-d3c564b36e40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:882","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n} else {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[7,12,138,145,147,241,242,55],"tindex":"f33ef0aa-829e-11e5-98f7-a75e1876fd25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"distance","angleXY":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:226","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[13,14,21,22,23,24,25,26,27,29,30,31,32,243,244,245,246,247,248,249,250,251,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"f33ef0ab-829e-11e5-98f7-f1035d31ab59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[22,23,24,25,26,27,30,31],"tindex":"f33ef0ac-829e-11e5-98f7-6bbfaf17afad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"fullyLoaded","approx":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1149","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[252,253],"tindex":"f33ef0ad-829e-11e5-98f7-f9ca7cfd952a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:81","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(long >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-1},{"failures":[72,254,255,256,73,257,258,3,6,7,11,12,74,259,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,75,260,76,77,78,261,262,263,80,264,174,175,265,176,177,266,82,83,178,179,84,85,267,87,268,88,89,90,269,270,271,272,273,180,181,93,182,183,274,94,95,184,185,96,98,275,100,101,102,276,277,278,104,279,186,187,106,188,189,280,107,108,190,191,109,110,281,282,283,284,202,203,204,205,112,206,285,286,208,209,210,211,113,287,288,289,290,114,212,213,214,215,216,217,115,218,291,292,220,221,222,223,116,249,250,117,293,294,118,295,119,120,121,296,297,298,123,299,192,193,126,194,195,300,127,301,196,197,128,226,302,227,303,228,304,229,231,232,233,234,132,235,236,237,133,305,134,135,136,137,138,306,139,307,140,141,142,308,143,144,145,146,147,148,149,150,309,151,152,153,154,238,155,310,311,156,157,158,159,239,160,312,198,161,162,240,163,241,242,164,165,166,313,167,168,169,170,171,314,315,316,45,46,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,71],"tindex":"f33f17be-829e-11e5-98f7-ddfdb7125234","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"E_FLAGS","indexDivisor":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:51","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[243,245],"tindex":"f33f17bf-829e-11e5-98f7-eb3164513d91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:320","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"variableMap":{"dataAccess":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"f33f17c0-829e-11e5-98f7-7ba697c5b865","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"y1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f33f17c0-829e-11e5-98f7-7ba697c5b865","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.BresenhamLine.fix"]},"type":"staticDiff"}]},{"transformation":"f33e545e-829e-11e5-98f7-01fe452d4302","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}