{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":74,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":98,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":191,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":344,"com.graphhopper.reader.OSMReaderTest.testFerry":8,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":24,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":25,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":302,"com.graphhopper.routing.QueryGraphTest.testOneWay":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":325,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":187,"com.graphhopper.reader.OSMReaderTest.testWithBounds":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":82,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":356,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":365,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":364,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":207,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":122,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":326,"com.graphhopper.GraphHopperTest.testPrepare":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":376,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":40,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":165,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":56,"com.graphhopper.util.InstructionListTest.testWayList":35,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":180,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":224,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":39,"com.graphhopper.GraphHopperAPITest.testDisconnected179":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":315,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":351,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":62,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":188,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":119,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":287,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":379,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":133,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":227,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":279,"com.graphhopper.GraphHopperTest.testLoadOSM":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":210,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":189,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":304,"com.graphhopper.reader.OSMReaderTest.testSort":11,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":68,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":321,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":49,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":78,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":103,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":110,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":141,"com.graphhopper.routing.PathTest.testWayList":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":378,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":335,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":63,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":97,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":318,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":295,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":222,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":342,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":70,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":118,"com.graphhopper.util.GHUtilityTest.testSort":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":352,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":339,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":108,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":288,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":294,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":238,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":249,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":263,"com.graphhopper.GraphHopperAPITest.testLoad":120,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":299,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":149,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":253,"com.graphhopper.routing.PathTest.testFound":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":369,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":5,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":203,"com.graphhopper.util.GHUtilityTest.testCopy":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":348,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":235,"com.graphhopper.routing.PathTest.testFindInstruction":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":53,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":265,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":354,"com.graphhopper.util.InstructionListTest.testEmptyList":33,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":232,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":178,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":69,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":26,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":267,"com.graphhopper.reader.PrinctonReaderTest.testRead":6,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":1,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":94,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":330,"com.graphhopper.util.InstructionListTest.testWayList2":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":213,"com.graphhopper.reader.OSMReaderTest.testFoot":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":372,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":194,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":183,"com.graphhopper.reader.OSMReaderTest.testOneWay":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":90,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":143,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":319,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":310,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":358,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":0,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":225,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":361,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":43,"com.graphhopper.routing.PathBidirRefTest.testExtract":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":241,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":129,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":371,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":289,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":370,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":125,"com.graphhopper.util.GHUtilityTest.testSort2":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":357,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":338,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":296,"com.graphhopper.routing.PathBidirRefTest.testExtract2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":198,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":223,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":323,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":276,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":292,"com.graphhopper.storage.GraphHopperStorageTest.testClone":151,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":190,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":161,"com.graphhopper.GraphHopperTest.testFootAndCar":134,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":350,"com.graphhopper.routing.PathTest.testTime":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":363,"com.graphhopper.util.GHUtilityTest.testSortDirected":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":327,"com.graphhopper.GraphHopperTest.testPrepareOnly":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":317,"com.graphhopper.GraphHopperTest.testVia":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":236,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":66,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":206,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":297,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":37,"com.graphhopper.GraphHopperTest.testFootOnly":139,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":212,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":214,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":114,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":360,"com.graphhopper.util.InstructionListTest.testFind":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":307},"transformations":[{"failures":[],"tindex":"a896c236-7938-11e5-9b9a-75a9ce178950","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"a8971057-7938-11e5-9b9a-fbec507bf18e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"a8971058-7938-11e5-9b9a-335aabbacd7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:193","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"variableMap":{"newValue":"i","values":"elem","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[5],"tindex":"a8971059-7938-11e5-9b9a-6576fe1218fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long))\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,50,51,2,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380],"tindex":"a897376a-7938-11e5-9b9a-83fa909718ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"byteCount","pointer":"byteCount","maxCapacity":"byteCount","baseCapacity":"byteCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:186","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.create(long);\n}"},"status":-1},{"failures":[28,40,41,42,43,44,45,46,47,48,49,0,1,50,51,2,52,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,78,79,123,131,132,135,136,137,139,204,291],"tindex":"a8975e7b-7938-11e5-9b9a-b37946b5f003","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[198,219,232,233,234,236],"tindex":"a8975e7c-7938-11e5-9b9a-d99745b92fdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:144","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"a8975e7d-7938-11e5-9b9a-eb377bf0cc63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:189","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"status":-2},{"failures":[],"tindex":"a8975e7e-7938-11e5-9b9a-8b467d785b18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:101","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"variableMap":{"width":"lonSize","latSimilar":"latSize","lonSimilar":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"status":-2},{"failures":[],"tindex":"a897858f-7938-11e5-9b9a-33c9e94cd0c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:400","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"a8978590-7938-11e5-9b9a-452c294406ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"a8978591-7938-11e5-9b9a-4da6fc5bf9be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:293","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"a8978592-7938-11e5-9b9a-ff7b6783e40a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:132","type":"CtIfImpl","sourcecode":"if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"a897aca3-7938-11e5-9b9a-d7194396a0d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"nodeId","i":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:379","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int)))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"a897aca4-7938-11e5-9b9a-25df52f75d48","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:280","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.Set<java.lang.String>))))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"a897aca5-7938-11e5-9b9a-8fbfe0cedac6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:289","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"a897aca6-7938-11e5-9b9a-afc066bb3af0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:305","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage.getDirectory()) instanceof com.graphhopper.storage.MMapDirectory) {\n    throw new java.lang.IllegalStateException(\"not supported yet: mmap will overwrite existing storage at the same location\");\n} else {\n    boolean boolean = ((com.graphhopper.storage.GHDirectory)(com.graphhopper.storage.GraphStorage.getDirectory())).isStoring();\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n}"},"status":-2},{"failures":[],"tindex":"a897d3b7-7938-11e5-9b9a-f7906ecd33e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"a897d3b8-7938-11e5-9b9a-ede63692519c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"nextSC"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:198","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.storage.BaseGraph.int)"},"status":-2},{"failures":[],"tindex":"a897d3b9-7938-11e5-9b9a-07221c0f2d80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:81","type":"CtOperatorAssignmentImpl","sourcecode":"long += int * double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}