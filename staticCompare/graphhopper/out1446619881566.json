{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":69,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.reader.OSMReaderTest.testFerry":105,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":96,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":295,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":194,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":286,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":160,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":353,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":319,"com.graphhopper.GraphHopperTest.testPrepare":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":3,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":268,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":65,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":352,"com.graphhopper.coll.BitSetImplTest.testCopy":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":43,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":219,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":35,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":10,"com.graphhopper.GraphHopperTest.testLoadOSM":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":247,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":297,"com.graphhopper.reader.OSMReaderTest.testSort":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":51,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":314,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":372,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":173,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":81,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":178,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":241,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":335,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":204,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":382,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":195,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":54,"com.graphhopper.reader.OSMReaderTest.testBarriers":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":18,"com.graphhopper.util.GHUtilityTest.testCopy":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":265,"com.graphhopper.routing.PathTest.testFindInstruction":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":186,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":262,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":373,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":358,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":145,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":323,"com.graphhopper.util.InstructionListTest.testWayList2":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":255,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":190,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":312,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":269,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":324,"com.graphhopper.routing.PathBidirRefTest.testExtract":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":128,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":293,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":221,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":238,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":124,"com.graphhopper.util.GHUtilityTest.testSort2":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":24,"com.graphhopper.reader.OSMReaderTest.testMain":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":208,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":298,"com.graphhopper.storage.GraphHopperStorageTest.testClone":346,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":146,"com.graphhopper.routing.PathTest.testTime":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":159,"com.graphhopper.util.GHUtilityTest.testSortDirected":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":310,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":78,"com.graphhopper.GraphHopperTest.testFootOnly":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":231,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":270,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":155,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":249,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":73,"com.graphhopper.routing.QueryGraphTest.testOneWay":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":245,"com.graphhopper.reader.OSMReaderTest.testWithBounds":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":48,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":200,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":342,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.util.InstructionListTest.testWayList":31,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":375,"com.graphhopper.GraphHopperAPITest.testDisconnected179":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":147,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":384,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":175,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":131,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":62,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":366,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":235,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":28,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":336,"com.graphhopper.routing.PathTest.testWayList":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":66,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":284,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":191,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":347,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":42,"com.graphhopper.util.GHUtilityTest.testSort":92,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":220,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":345,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":287,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":275,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":181,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":292,"com.graphhopper.routing.PathTest.testFound":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":165,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":11,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":197,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":150,"com.graphhopper.util.InstructionListTest.testEmptyList":99,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":22,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":327,"com.graphhopper.reader.PrinctonReaderTest.testRead":103,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":139,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":202,"com.graphhopper.reader.OSMReaderTest.testFoot":106,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":252,"com.graphhopper.reader.OSMReaderTest.testOneWay":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":333,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":303,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":370,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":8,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":157,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":350,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":57,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":278,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":102,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":153,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":289,"com.graphhopper.routing.PathBidirRefTest.testExtract2":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":256,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":242,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":316,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":223,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":334,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":371,"com.graphhopper.GraphHopperTest.testFootAndCar":132,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":320,"com.graphhopper.GraphHopperTest.testPrepareOnly":122,"com.graphhopper.GraphHopperTest.testVia":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":266,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":67,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":115,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":290,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":32,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":367,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":156,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":309,"com.graphhopper.util.InstructionListTest.testFind":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":177},"transformations":[{"failures":[0],"tindex":"752c57c6-82c0-11e5-a5ec-d77387b86f58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"lat","com.graphhopper.util.AngleCalc.PI3_4":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double + ((double) / 2)"},"status":-1},{"failures":[],"tindex":"752c7ed7-82c0-11e5-a5ec-114d728dd2ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"752c7ed8-82c0-11e5-a5ec-a7e1f5a2a6ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"distance","weight":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:141","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,56,4,57,58,5,6,59,60,7,8,9,61,62,63,10,11,12,13,14,15,16,17,64,18,65,66,19,20,67,68,21,22,23,24,25,26,69,70,71,27,28,29,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,30,88,89,90,91,92,93,94,95,96,97,98,99,100,31,101,32,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,33,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379],"tindex":"752ca5e9-82c0-11e5-a5ec-91639c490156","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"752cccfa-82c0-11e5-a5ec-71af0c12b3ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"segmentsToCreate","mSize":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:108","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"752cf40b-82c0-11e5-a5ec-e19b81932e6d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"skippedLocations","nanoTime":"skippedLocations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:579","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":0},{"failures":[380],"tindex":"752cf40c-82c0-11e5-a5ec-fbfee4a8ca66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:96","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"752cf40d-82c0-11e5-a5ec-cd49ac686840","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:709","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"variableMap":{"osmId":"tmp","com.graphhopper.reader.OSMReader.TOWER_NODE":"N_ADDITIONAL","tmpNode":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), int)"},"status":-2},{"failures":[],"tindex":"752cf40e-82c0-11e5-a5ec-33e60f8bc377","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:233","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.dem.SRTMProvider.down(double)"},"status":-2},{"failures":[381],"tindex":"752cf40f-82c0-11e5-a5ec-4577d11b2dad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:69","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet instanceof com.graphhopper.coll.GHBitSetImpl) {\n    ((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this);\n} else {\n    int int = java.util.BitSet.size();\n    for (int int = super.nextSetBit(0) ; int >= 0 ; int = super.nextSetBit((int + 1))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"752d1b20-82c0-11e5-a5ec-8949a906cad4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"752d1b21-82c0-11e5-a5ec-b12e627542eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:179","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":0},{"failures":[],"tindex":"752d1b22-82c0-11e5-a5ec-99f1cef2b6b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:750","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initCHAlgoFactories()"},"status":-2},{"failures":[],"tindex":"752d1b23-82c0-11e5-a5ec-f9c910dfc675","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"toLon","yend":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:65","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-2},{"failures":[],"tindex":"752d1b24-82c0-11e5-a5ec-cf9980548225","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"weight","speed":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityWeighting:52","type":"CtReturnImpl","sourcecode":"return double / (0.5 + (com.graphhopper.routing.util.FlagEncoder.getDouble(com.graphhopper.util.EdgeIteratorState.getFlags(), com.graphhopper.routing.util.PriorityWeighting.int)))"},"status":-2},{"failures":[382,383,384],"tindex":"752d1b25-82c0-11e5-a5ec-cf2b503956a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:248","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.MotorcycleFlagEncoder.setLowSpeed(long, double, true);\n"},"variableMap":{"speedEncoder":"speedEncoder","flags":"flags","this":"this","factor":"speed","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false);\n"},"status":-1},{"failures":[105,106,107,108,109,110,111,113,115,116,117,118,119,121,122,129,33,130,131,132,133,134,135,136,137,138],"tindex":"752d4236-82c0-11e5-a5ec-4d916d2a7c06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:225","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"variableMap":{"bm":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:572","type":"CtIfImpl","sourcecode":"if (long != 0)\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n"},"status":-1},{"failures":[],"tindex":"752d4237-82c0-11e5-a5ec-490c878623d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:613","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:677","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.get(int)"},"status":-2},{"failures":[122,133,134,135,136,177,181,285,289,294,337,339],"tindex":"752d4238-82c0-11e5-a5ec-bded1ecfe04d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:275","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"status":-1},{"failures":[117],"tindex":"752d4239-82c0-11e5-a5ec-99eaeef375cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:699","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"752d1b21-82c0-11e5-a5ec-b12e627542eb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.checkNodeId"]},"type":"staticDiff"}]}]}