{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":67,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":190,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":270,"com.graphhopper.GraphHopperAPITest.testNoLoad":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":322,"com.graphhopper.reader.OSMReaderTest.testFerry":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":43,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":131,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":209,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":449,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":342,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":425,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":244,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":354,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":138,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":55,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":306,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":153,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":20,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":289,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":307,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":201,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":362,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":444,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":355,"com.graphhopper.routing.DijkstraTest.initializationError":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":253,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":360,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":448,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":301,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":409,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":260,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":123,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":365,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":96,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":379,"com.graphhopper.GraphHopperAPITest.testLoad":452,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":186,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":426,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":416,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":110,"com.graphhopper.util.GHUtilityTest.testCopy":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":269,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":445,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":430,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":115,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":327,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":315,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":224,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":237,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":262,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":415,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.routing.AStarTest.initializationError":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":377,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":249,"com.graphhopper.routing.PathBidirRefTest.testExtract":77,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":156,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":349,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":405,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":298,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":348,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":102,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":223,"com.graphhopper.storage.GraphHopperStorageTest.testClone":418,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":177,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":317,"com.graphhopper.reader.OSMReaderTest.testRelation":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":235,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":309,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":243,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":305,"com.graphhopper.reader.OSMReaderTest.testWithBounds":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":140,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":384,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":233,"com.graphhopper.GraphHopperAPITest.testDisconnected179":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":329,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":113,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":357,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":395,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":145,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":438,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":61,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":294,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":165,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":390,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":160,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":431,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":375,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":404,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":417,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":275,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":81,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":124,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":347,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":46,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":381,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":332,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":167,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":433,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":252,"com.graphhopper.reader.PrinctonReaderTest.testRead":36,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":446,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":151,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":125,"com.graphhopper.reader.OSMReaderTest.testOneWay":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":313,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":427,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":228,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":442,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":398,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":74,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":339,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":422,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":278,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":189,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":128,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":335,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":255,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":212,"com.graphhopper.routing.PathBidirRefTest.testExtract2":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":302,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":440,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":241,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":208,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":259,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":181,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":84,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":372,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":164,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":59,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":213,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":439,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":192,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":293,"com.graphhopper.routing.AStarBidirectionTest.initializationError":45,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":338,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":359},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454],"tindex":"cce5b985-792b-11e5-b060-35d97e693583","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:314","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"variableMap":{"str":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:155","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"status":-1},{"failures":[],"tindex":"cce62eb6-792b-11e5-b060-4da45f435d7a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"weight","resultOrientation":"tmpWeight","baseOrientation":"weight","java.lang.Math.PI":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:95","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"cce62eb7-792b-11e5-b060-8f2663d4a7ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.clear()"},"variableMap":{"map":"newTags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:99","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"cce62eb8-792b-11e5-b060-2939c9a9ee2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"tmp","low":"tmp","guess":"tmp","guessedKey":"tmp","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"cce655c9-792b-11e5-b060-bb3b85d5dd80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:640","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.GraphHopper.importData();\n    com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"cce655ca-792b-11e5-b060-179965b5441f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:105","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    java.io.RandomAccessFile.writeInt(int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"cce655cb-792b-11e5-b060-6fa6e962261d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:49","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"cce655cc-792b-11e5-b060-efb112ae3e80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"cce67cdd-792b-11e5-b060-63392b528ef7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"cce67cde-792b-11e5-b060-cfc1e5cccd6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getDistance\")"},"status":-2},{"failures":[],"tindex":"cce67cdf-792b-11e5-b060-07b79a635103","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:216","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"cce67ce0-792b-11e5-b060-d126cc743bcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"names","index":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"cce67ce1-792b-11e5-b060-db1f2b8147e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return super.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"cce6a3f2-792b-11e5-b060-f5947333f5fe","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"cce6a3f3-792b-11e5-b060-ad58d780665d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:70","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[],"tindex":"cce6a3f4-792b-11e5-b060-e32dc236316d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(false)"},"status":-2},{"failures":[],"tindex":"cce6cb05-792b-11e5-b060-170bf731788d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime()).append(\"<\/gh:time>\")"},"status":-2},{"failures":[],"tindex":"cce6cb06-792b-11e5-b060-459e1d650cb8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:39","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(1, ((int) / 3))"},"variableMap":{"counts":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"cce6cb07-792b-11e5-b060-6becc23a1832","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"ele","dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:342","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.shapes.GHPoint3D.double, com.graphhopper.util.shapes.GHPoint3D.double, com.graphhopper.util.shapes.GHPoint3D.double)"},"status":-2},{"failures":[],"tindex":"cce6cb08-792b-11e5-b060-2b75e6ceef98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:703","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}