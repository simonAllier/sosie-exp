{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":167,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":160,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":166,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":165,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":81,"com.graphhopper.reader.OSMReaderTest.testWithBounds":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":133,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":146,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":45,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":144,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":34,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":149,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":61,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":50,"com.graphhopper.util.InstructionListTest.testWayList2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":134,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":140,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":117,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":87,"com.graphhopper.util.BitUtilLittleTest.testToBitString":96,"com.graphhopper.util.InstructionListTest.testWayList":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":27,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":44,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":164,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":80,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":105,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":136,"com.graphhopper.coll.OSMIDMapTest.testGet":110,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":150,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":143,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":18,"com.graphhopper.storage.RAMDataAccessTest.testCopy":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":151,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":172,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":60,"com.graphhopper.reader.OSMReaderTest.testSort":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.storage.RAMDataAccessTest.testSegments":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":132,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":21,"com.graphhopper.reader.OSMReaderTest.testMain":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":40,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":173,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":138,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":39,"com.graphhopper.routing.PathTest.testWayList":162,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":79,"com.graphhopper.coll.OSMIDMapTest.testGet2":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":63,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":124,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":84,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":131,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":26,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":86,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":159,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":121,"com.graphhopper.coll.OSMIDMapTest.testGetLong":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":120,"com.graphhopper.util.BitUtilLittleTest.testToFloat":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":30,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":128,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":174,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":75,"com.graphhopper.GraphHopperAPITest.testLoad":101,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":25,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":33,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":137,"com.graphhopper.util.BitUtilLittleTest.testToInt":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":35,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":104,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":62,"com.graphhopper.util.GHUtilityTest.testCopy":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":93},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"efaaa655-7924-11e5-a943-43594a644b1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[163,7,8,11,12,164,165,166,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,167,135,136,137,138,139,141,142,143,144,145,146,168,147,169,170,149,171,150,151],"tindex":"efaaa656-7924-11e5-a943-130d5d43efa2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"toSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"efaacd67-7924-11e5-a943-cf571a86e0b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[172],"tindex":"efaacd68-7924-11e5-a943-c13b925aa683","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"allSegments","segmentSizeIntsPower":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:272","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[15,17,36,38,41,43,59,105,106,126,139,173,174],"tindex":"efaacd69-7924-11e5-a943-b3f0c6f376c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[],"tindex":"efaacd6a-7924-11e5-a943-6d416a5eb6aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:89","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.LinkedHashMap<java.lang.String, java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:140","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.TranslationMap.get(\"en\").asMap()"},"status":-2},{"failures":[],"tindex":"efaacd6b-7924-11e5-a943-51f148abcdc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:930","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"wayPointMaxDistance\", 1.0)"},"variableMap":{"request":"request"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1022","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"defaultWeightLimit\", double)"},"status":-2},{"failures":[],"tindex":"efaacd6c-7924-11e5-a943-a78ff1f1c34e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"toWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:926","type":"CtIfImpl","sourcecode":"if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"efaacd6d-7924-11e5-a943-876392c4cb8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:376","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"efaaf47e-7924-11e5-a943-a3c3ed464408","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:445","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-2},{"failures":[],"tindex":"efaaf47f-7924-11e5-a943-cf37d886689d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:327","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"efaaf480-7924-11e5-a943-273a797f7f5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"efaaf481-7924-11e5-a943-4bec281faf6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:570","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph"},"variableMap":{"g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:567","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.Graph.getClass().equals(java.lang.Object.getClass())) {\n    com.graphhopper.storage.BaseGraph._copyTo(((com.graphhopper.storage.BaseGraph)(com.graphhopper.storage.Graph)));\n    return com.graphhopper.storage.Graph;\n} else {\n    return com.graphhopper.util.GHUtility.copyTo(this, com.graphhopper.storage.Graph);\n}"},"status":-2},{"failures":[],"tindex":"efaaf482-7924-11e5-a943-21136720d755","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:108","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.util.List<byte[]>.get(int)"},"status":-2},{"failures":[],"tindex":"efaaf483-7924-11e5-a943-93c2fdb30836","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:128","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"efaaf484-7924-11e5-a943-c7a0d7da0d10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:658","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"efaaf485-7924-11e5-a943-ed029b52f2d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:594","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double)"},"status":-2},{"failures":[],"tindex":"efaaf486-7924-11e5-a943-f7442d2fc468","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.getRemovedNodes()"},"status":-2},{"failures":[],"tindex":"efab1b97-7924-11e5-a943-99df9219bcd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:670","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int);\n    long long = com.graphhopper.util.EdgeIterator.int;\n    while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n        if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n            int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n            long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n            com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n            com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n        } else {\n            long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"efab1b98-7924-11e5-a943-ede60cf9f485","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:361","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}