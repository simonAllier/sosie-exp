{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"793bc2a8-7942-11e5-ad59-e720d6a7a68a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"toMoveNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:657","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n    break;\n"},"status":0},{"failures":[],"tindex":"793c10c9-7942-11e5-ad59-9572e17ca9a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.geohash.KeyAlgo = new com.graphhopper.geohash.LinearKeyAlgo(int , int).setBounds(com.graphhopper.util.shapes.BBox)"},"status":-2},{"failures":[],"tindex":"793c10ca-7942-11e5-ad59-ffa494fccd43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"orientation","weight":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:121","type":"CtReturnImpl","sourcecode":"return java.lang.Math.toDegrees(double)"},"status":-2},{"failures":[],"tindex":"793c37db-7942-11e5-ad59-ab8944eb812a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(10)"},"variableMap":{"this":"currentWriter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)))"},"status":-2},{"failures":[],"tindex":"793c37dc-7942-11e5-ad59-0f483d3ad6c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:689","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.BaseGraph.EdgeIterable.long"},"status":-2},{"failures":[],"tindex":"793c37dd-7942-11e5-ad59-096875996631","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"variableMap":{"daPointer":"daPointer","this":"this","counter":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:113","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[],"tindex":"793c37de-7942-11e5-ad59-cbd7f8b33a5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"start","index":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n    com.graphhopper.routing.util.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"793c5eef-7942-11e5-ad59-c1a844536ba5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:475","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"793c5ef0-7942-11e5-ad59-3b135fd71564","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >>> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:82","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long))"},"status":-2},{"failures":[],"tindex":"793c5ef1-7942-11e5-ad59-bd60b42d1709","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:713","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"793c5ef2-7942-11e5-ad59-478a6e4e486a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"variableMap":{"tmp":"lon","tmpNo":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:129","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"793c8603-7942-11e5-ad59-ed9643f6a26e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:273","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"793c8604-7942-11e5-ad59-f96a7cb4fc01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:97","type":"CtWhileImpl","sourcecode":"while (true) {\n    int int = com.graphhopper.routing.AStar.AStarEdge.int;\n    (int)++;\n    if (com.graphhopper.routing.AStar.isWeightLimitExceeded())\n        return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n    \n    if (com.graphhopper.routing.AStar.finished())\n        break;\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n            continue;\n        \n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n        float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n        if (java.lang.Double.isInfinite(float))\n            continue;\n        \n        com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n        if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n            double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n            double = float + double;\n            if (com.graphhopper.routing.AStar.AStarEdge == null) {\n                com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n                com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n            } else {\n                assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n                java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n                com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n                com.graphhopper.routing.AStar.AStarEdge.double = double;\n                com.graphhopper.routing.AStar.AStarEdge.double = float;\n            }\n            com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n        } \n    }\n    if (java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.isEmpty())\n        return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n    \n    com.graphhopper.routing.AStar.AStarEdge = java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.poll();\n    if ((com.graphhopper.routing.AStar.AStarEdge) == null)\n        throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n    \n}"},"status":-2},{"failures":[],"tindex":"793cad15-7942-11e5-ad59-97fe9d8ff412","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.this(10, false)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"793cad16-7942-11e5-ad59-eb53345b3143","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:834","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-2},{"failures":[],"tindex":"793cad17-7942-11e5-ad59-31ba8e3a204a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:505","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot copy EMPTY PointList\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:176","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"793cd428-7942-11e5-ad59-01324dc39947","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"prevEle","com.graphhopper.util.AngleCalc.PI3_4":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":-2},{"failures":[],"tindex":"793cd429-7942-11e5-ad59-371409fc5f42","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:89","type":"CtIfImpl","sourcecode":"if (double == int)\n    return int;\n"},"variableMap":{"val":"ele","intVal":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:391","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Integer.int))\n    return java.lang.Integer.int;\n"},"status":-2},{"failures":[],"tindex":"793cd42a-7942-11e5-ad59-5d5fd5607c64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:267","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-2},{"failures":[],"tindex":"793cd42b-7942-11e5-ad59-c7d92fab4028","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}