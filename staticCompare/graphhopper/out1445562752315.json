{"failureDictionary":{"com.graphhopper.routing.util.EncodedValueTest.testSwap":1,"com.graphhopper.util.shapes.GHPointTest.testIsValid":0},"transformations":[{"failures":[],"tindex":"23095ae5-7923-11e5-aa4d-cdcddb6fb02a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"fromLat","tmp":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:64","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-2},{"failures":[],"tindex":"230981f6-7923-11e5-aa4d-e1555c7363f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"dist","angleXY":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"status":0},{"failures":[0],"tindex":"230981f7-7923-11e5-aa4d-936003f3a4d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:52","type":"CtReturnImpl","sourcecode":"return (!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))"},"status":-1},{"failures":[1],"tindex":"230981f8-7923-11e5-aa4d-b5027eed6f85","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"230981f9-7923-11e5-aa4d-5f39e9fc9b77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"ee","cl":"ee","tmpPrev":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:219","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"230a1e3a-7923-11e5-aa4d-d5a76292c434","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"minutes","speed":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-2},{"failures":[],"tindex":"230a1e3b-7923-11e5-aa4d-23a5c476efeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"230a1e3c-7923-11e5-aa4d-5b722d17efcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"prevEle","fullDist2D":"prevEle","decDist2DSum":"prevEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"230a1e3d-7923-11e5-aa4d-85e6b9ba0214","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"time","ferryBit":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:158","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"230a1e3e-7923-11e5-aa4d-3991ce8287ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:369","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.done\", boolean)"},"status":-2},{"failures":[],"tindex":"230a1e3f-7923-11e5-aa4d-1515a137ac06","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"prepareContractedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:577","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.contracted-nodes\", int)"},"status":-2},{"failures":[],"tindex":"230a1e40-7923-11e5-aa4d-77c987fdd1c0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"variableMap":{"fromDist":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:597","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.setNode(int, double, double, double)"},"status":-2},{"failures":[],"tindex":"230a4551-7923-11e5-aa4d-75b17bcce944","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"230a4552-7923-11e5-aa4d-bd34c4eb4e35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:413","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int])"},"status":-2},{"failures":[],"tindex":"230a4553-7923-11e5-aa4d-41c2d098b3bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:610","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.copyTo(com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension)"},"variableMap":{"extStorage":"wrappedExtension","clonedG":"mainGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension()"},"status":-2},{"failures":[],"tindex":"230a4554-7923-11e5-aa4d-65fdaf4dc388","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"E_GEO"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:867","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-2},{"failures":[],"tindex":"230a4555-7923-11e5-aa4d-0d89748609ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:123","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"230a4556-7923-11e5-aa4d-2b1e0c4f9628","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:83","type":"CtTryImpl","sourcecode":"try {\n    if (int == (com.graphhopper.reader.OSMReader.int))\n        return java.util.Collections.emptyList();\n    \n    int int = com.graphhopper.util.EdgeIterator.int;\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n            int = com.graphhopper.util.EdgeIterator.getEdge();\n            break;\n        } \n    }\n    if (int == (com.graphhopper.util.EdgeIterator.int))\n        return java.util.Collections.emptyList();\n    \n    final java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new java.util.ArrayList<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>();\n    com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getEdge();\n        long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int);\n        if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n            final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n            if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n                break;\n            \n        } \n    }\n    return java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>;\n} catch (java.lang.Exception e) {\n    throw new java.lang.IllegalStateException((\"Could not built turn table entry for relation of node with osmId:\" + (this.long)) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"230a4557-7923-11e5-aa4d-03f97f1a8490","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"decDist2DSum","logMessagesPercentage":"fwdDecline"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}