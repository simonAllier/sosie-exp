{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":382,"com.graphhopper.GraphHopperAPITest.testNoLoad":109,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.reader.OSMReaderTest.testFerry":446,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":104,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":332,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":338,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":183,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":255,"com.graphhopper.GraphHopperTest.testPrepare":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":46,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":339,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":57,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":155,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":423,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":67,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":51,"com.graphhopper.GraphHopperTest.testLoadOSM":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":156,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":240,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":321,"com.graphhopper.reader.OSMReaderTest.testSort":448,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":89,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":456,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":269,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":221,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":192,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":65,"com.graphhopper.routing.DijkstraTest.initializationError":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":261,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":267,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":357,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":143,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":266,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":60,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":324,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":287,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":272,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":390,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":241,"com.graphhopper.GraphHopperAPITest.testLoad":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":378,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":75,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":64,"com.graphhopper.reader.OSMReaderTest.testBarriers":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":403,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":352,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":387,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":398,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":222,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":408,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":440,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":173,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":164,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":297,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":419,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":118,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":17,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":450,"com.graphhopper.routing.AStarTest.initializationError":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":388,"com.graphhopper.routing.PathBidirRefTest.testExtract":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":188,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":310,"com.graphhopper.reader.OSMReaderTest.testMain":447,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":427,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":396,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":458,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":27,"com.graphhopper.storage.GraphHopperStorageTest.testClone":203,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":189,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":257,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":377,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":182,"com.graphhopper.reader.OSMReaderTest.testRelation":454,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":79,"com.graphhopper.GraphHopperTest.testFootOnly":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":158,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":154,"com.graphhopper.reader.OSMReaderTest.testWithBounds":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":389,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":128,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":283,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":415,"com.graphhopper.GraphHopperAPITest.testDisconnected179":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":175,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":406,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":459,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":431,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":94,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":293,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":379,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":416,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":309,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":444,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":372,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":137,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":273,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":435,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":430,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":380,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":346,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":45,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":274,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":392,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":344,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":325,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":96,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":316,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":187,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":102,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":52,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":10,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":359,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":33,"com.graphhopper.reader.PrinctonReaderTest.testRead":70,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":397,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":421,"com.graphhopper.reader.OSMReaderTest.testFoot":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":161,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":326,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":265,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":76,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":336,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":180,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":424,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":148,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":177,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":34,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":232,"com.graphhopper.routing.PathBidirRefTest.testExtract2":442,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":144,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":219,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":125,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":383,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":228,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":157,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":373,"com.graphhopper.GraphHopperTest.testFootAndCar":95,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":171,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":319,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":375,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":276,"com.graphhopper.GraphHopperTest.testPrepareOnly":91,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":308,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":455,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":233,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":218,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":384,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":453,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":135,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":179,"com.graphhopper.routing.AStarBidirectionTest.initializationError":445,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":36},"transformations":[{"failures":[],"tindex":"405ceeb5-791e-11e5-a82e-f10c10fbc170","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"405d15c6-791e-11e5-a82e-85bd4aecc75b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:300","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":0},{"failures":[0,1],"tindex":"405d15c7-791e-11e5-a82e-c9977aaaa9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"405d15c8-791e-11e5-a82e-0775a996fce4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"resFlags","guess":"edgePointer","low":"resFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:120","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[],"tindex":"405d3cd9-791e-11e5-a82e-fdd63d510934","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,62,88,89,90,69],"tindex":"405d3cda-791e-11e5-a82e-f97f1da2e391","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:677","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n    int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n    if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n        long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n        com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n        com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n    } else {\n        long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n    }\n}"},"status":-1},{"failures":[],"tindex":"405d3cdb-791e-11e5-a82e-056dd955b7ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:126","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"calcPoints":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:76","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[91,92,2,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,5,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,6,7,8,170,171,172,173,174,175,9,176,10,71,72,177,73,178,179,180,181,182,183,184,185,11,186,187,188,74,12,189,190,13,191,192,193,14,194,195,15,196,197,198,199,200,201,16,17,18,202,203,204,205,206,207,19,208,20,75,76,209,77,210,211,212,213,214,215,216,217,21,218,219,220,78,22,221,222,23,223,224,225,24,226,25,227,228,229,230,231,232,233,234,235,236,26,237,238,239,240,241,27,28,29,242,243,244,245,246,247,30,248,31,79,80,249,81,250,251,252,253,254,255,256,257,32,258,259,260,82,33,261,262,34,263,264,265,35,266,36,267,268,269,270,271,272,273,274,37,38,39,275,276,277,278,279,280,40,281,41,83,84,282,85,283,284,285,286,287,288,289,290,42,291,292,293,86,43,294,295,44,296,297,298,45,299,300,52,53,54,55,301,302,303,56,304,57,305,306,307,308,58,309,59,60,310,311,312,313,314,315,316,317,61,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,0,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,1,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,68,447,448,449,450,451,452,453,454,455,456,457,458,69,70,459],"tindex":"405d3cdc-791e-11e5-a82e-5bcfd96b7e30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"405d63ed-791e-11e5-a82e-59d26617a976","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:92","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:242","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(long) : com.graphhopper.routing.util.FlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"405d63ee-791e-11e5-a82e-55c1c5369fd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:62","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":-2},{"failures":[],"tindex":"405d63ef-791e-11e5-a82e-3b1401dc66b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:212","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"405d8b00-791e-11e5-a82e-810811d8a361","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"wayBitMask","flags":"wayBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:563","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-2},{"failures":[],"tindex":"405d8b01-791e-11e5-a82e-45db12019391","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"405d8b02-791e-11e5-a82e-b94f1f8bd100","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:99","type":"CtForImpl","sourcecode":"for (int int = 0, int int ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < 0)\n        continue;\n    \n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        double = double;\n    } \n    if (int > 0)\n        continue;\n    \n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n            if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            \n            double = double;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"405d8b03-791e-11e5-a82e-47efa8510741","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"status":-2},{"failures":[],"tindex":"405d8b04-791e-11e5-a82e-7517bde2d104","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"status":-2},{"failures":[],"tindex":"405db215-791e-11e5-a82e-87ecf773e981","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:67","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"405db216-791e-11e5-a82e-d5cd3f2a59cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"weight","dY":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"status":-2},{"failures":[],"tindex":"405db217-791e-11e5-a82e-efbcf30d82c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:234","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:144","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.Translation.asMap()"},"status":-2},{"failures":[],"tindex":"405db218-791e-11e5-a82e-c138bf4deca7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"nextTowerId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:651","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double, double);\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double);\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}