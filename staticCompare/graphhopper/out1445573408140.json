{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":304,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":185,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":203,"com.graphhopper.reader.OSMReaderTest.testFerry":224,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":207,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":208,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":240,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":9,"com.graphhopper.routing.QueryGraphTest.testOneWay":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":372,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":181,"com.graphhopper.reader.OSMReaderTest.testWithBounds":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":149,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":346,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":258,"com.graphhopper.coll.CompressedArrayTest.testCompress":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":17,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":271,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":163,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":322,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":279,"com.graphhopper.GraphHopperTest.testPrepare":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":303,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":267,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":286,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":104,"com.graphhopper.util.InstructionListTest.testWayList":212,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":295,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":221,"com.graphhopper.GraphHopperAPITest.testDisconnected179":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":262,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":337,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":287,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":182,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":223,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":319,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":230,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":311,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":355,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":333,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":282,"com.graphhopper.GraphHopperTest.testLoadOSM":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":280,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":166,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":27,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":183,"com.graphhopper.reader.OSMReaderTest.testSort":227,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":298,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":44,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":101,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":115,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":308,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":8,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":238,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":310,"com.graphhopper.routing.PathTest.testWayList":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":353,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":285,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":180,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":362,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":177,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":65,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":300,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":349,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":318,"com.graphhopper.util.GHUtilityTest.testSort":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":187,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":289,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":152,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":200,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":156,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":59,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":247,"com.graphhopper.coll.CompressedArrayTest.testCompress2":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":112,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":113,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":127,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":335,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":307,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.reader.OSMReaderTest.testBarriers":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":263,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":110,"com.graphhopper.routing.PathTest.testFound":312,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":160,"com.graphhopper.util.GHUtilityTest.testCopy":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":374,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":350,"com.graphhopper.routing.PathTest.testFindInstruction":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":118,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":129,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":109,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":80,"com.graphhopper.util.InstructionListTest.testEmptyList":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":294,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":202,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":102,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":299,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":145,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":273,"com.graphhopper.reader.PrinctonReaderTest.testRead":222,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":103,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":31,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":70,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":134,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":344,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":53,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":13,"com.graphhopper.util.InstructionListTest.testWayList2":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":371,"com.graphhopper.reader.OSMReaderTest.testFoot":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":191,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":188,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":189,"com.graphhopper.reader.OSMReaderTest.testOneWay":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":42,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":196,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":361,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":270,"com.graphhopper.routing.PathBidirRefTest.testExtract":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":375,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":153,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":175,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":327,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":347,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":195,"com.graphhopper.util.GHUtilityTest.testSort2":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":301,"com.graphhopper.reader.OSMReaderTest.testMain":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":60,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":61,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":20,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":10,"com.graphhopper.routing.PathBidirRefTest.testExtract2":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":192,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":178,"com.graphhopper.GHResponseTest.testToString":351,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":367,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":161,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":140,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":5,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":16,"com.graphhopper.storage.GraphHopperStorageTest.testClone":75,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":64,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":51,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":85,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":92,"com.graphhopper.GraphHopperTest.testFootAndCar":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":366,"com.graphhopper.routing.PathTest.testTime":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":120,"com.graphhopper.util.GHUtilityTest.testSortDirected":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":40,"com.graphhopper.GraphHopperTest.testPrepareOnly":323,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":205,"com.graphhopper.GraphHopperTest.testVia":331,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":296,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":21,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":245,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":96,"com.graphhopper.GraphHopperTest.testFootOnly":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":168,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":358,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":170,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":314,"com.graphhopper.util.InstructionListTest.testFind":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":288,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":194},"transformations":[{"failures":[],"tindex":"f2695a0d-793b-11e5-9e71-2d4b81ffa5ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"s":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:81","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"status":0},{"failures":[0],"tindex":"f269a82e-793b-11e5-9e71-9f7fac5ab02e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"azimuth","eleDelta":"azimuth","incDist2DSum":"azimuth","decEleSum":"azimuth","fullDist2D":"azimuth","decDist2DSum":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:250","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double)).append(\"<\/gh:azimuth>\");\n"},"status":-1},{"failures":[],"tindex":"f269a82f-793b-11e5-9e71-c75de2be2a73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"f269cf40-793b-11e5-9e71-cfe04fac0489","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"turnCosts","java.lang.Math.PI":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:82","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int)"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,0,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"f269cf41-793b-11e5-9e71-a977a956b853","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[341,342],"tindex":"f269f652-793b-11e5-9e71-a5453a5bc45c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n    long long = com.graphhopper.storage.VLongStorage.readVLong();\n    if (int == int) {\n        com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n        com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n        return com.graphhopper.util.shapes.GHPoint;\n    } \n}"},"status":-1},{"failures":[343],"tindex":"f269f653-793b-11e5-9e71-2705bef4b264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-1},{"failures":[],"tindex":"f26a1d64-793b-11e5-9e71-3d6276c815e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"i","tmpErr":"i","y1":"i","dLon":"i","sLat":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:353","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int])"},"status":0},{"failures":[344,345,346,347],"tindex":"f26a1d65-793b-11e5-9e71-d72dce58d745","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:419","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"status":-1},{"failures":[348,349,350,351],"tindex":"f26a1d66-793b-11e5-9e71-e9806bbef5d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"size","edgeId":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:272","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0)\n        java.lang.StringBuilder.append(\", \");\n    \n    java.lang.StringBuilder.append('(');\n    java.lang.StringBuilder.append(double[][int]);\n    java.lang.StringBuilder.append(',');\n    java.lang.StringBuilder.append(double[][int]);\n    if (boolean) {\n        java.lang.StringBuilder.append(',');\n        java.lang.StringBuilder.append(double[][int]);\n    } \n    java.lang.StringBuilder.append(')');\n}"},"status":-1},{"failures":[],"tindex":"f26a1d67-793b-11e5-9e71-3f5575a1a41b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"bwSlower","shortTripsSpeed":"bwSlower","durationInHours":"bwSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:241","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[30,38,40,41,43,47,55,73,81,83,84,86,90,98,352,345,353,346,354,355,347,118,126,128,129,131,135,143,255,256,258,260,261],"tindex":"f26a4478-793b-11e5-9e71-7d635d30afb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:356","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:937","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-1},{"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"f26a4479-793b-11e5-9e71-13aa333abee4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"f26a447a-793b-11e5-9e71-01f72721d936","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:156","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[111],"tindex":"f26a447b-793b-11e5-9e71-994aa3757efb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"turnCostsEntryBytes","segmentSizeIntsPower":"turnCostsEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:113","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-1},{"failures":[],"tindex":"f26a6b8c-793b-11e5-9e71-69250a1c63f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:259","type":"CtIfImpl","sourcecode":"if ((((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>)))) && (!(com.graphhopper.reader.OSMNode.hasTag(\"ford\", \"no\")))) {\n    return long;\n} "},"status":-2},{"failures":[],"tindex":"f26a6b8d-793b-11e5-9e71-156b373efe0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"f26a6b8e-793b-11e5-9e71-bb88efee551c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:66","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir()"},"status":-2},{"failures":[],"tindex":"f26a6b8f-793b-11e5-9e71-259212946fd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:77","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"f26a6b90-793b-11e5-9e71-0fbb54357731","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"value","tmpErr":"value","y1":"value","dLon":"value","sLat":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:64","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.TIntHashSet.isEmpty()) {\n    java.util.TreeMap<java.lang.Integer, com.graphhopper.coll.TIntHashSet>.remove(int);\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}