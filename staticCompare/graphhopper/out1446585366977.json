{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":144,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":214,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":220,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":53,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":197,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":186,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":36,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":112,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":51,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.GraphHopperAPITest.testDisconnected179":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":132,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":151,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":194,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":55,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":158,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":184,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":111,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":80,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":131,"com.graphhopper.util.BitUtilBigTest.testToBitString":181,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":58,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":193,"com.graphhopper.util.BitUtilBigTest.testToInt":183,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":138,"com.graphhopper.GraphHopperAPITest.testLoad":82,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":122,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":155,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":135,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":190,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":180,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":147,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":140,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":191,"com.graphhopper.reader.PrinctonReaderTest.testRead":172,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":41,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":148,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":161,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":164,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":204,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":178,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":189,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":89,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":202,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":201,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":65,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":127,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":46,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":139,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":110,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":56,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":93,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.util.BitUtilBigTest.testToFloat":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":42,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":115,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":200,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":210,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":145,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":68,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":73,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":130,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":165},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"18e02968-8270-11e5-878f-317050b7cc6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:286","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    switch (com.graphhopper.reader.OSMElement.getType()) {\n        case com.graphhopper.reader.OSMElement.int :\n            if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n            } \n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n            break;\n    }\n    if (((++long) % 100000000) == 0) {\n        com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n}"},"status":-1},{"failures":[],"tindex":"18e05079-8270-11e5-878f-f5d360cfd3a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:197","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35],"tindex":"18e0507a-8270-11e5-878f-df92c61b079a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"18e0507b-8270-11e5-878f-65aa9c6201a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int)"},"status":0},{"failures":[36,37,38,27,28,39,40,41,42,43,44,29,45,46,47,48],"tindex":"18e0507c-8270-11e5-878f-5f7651176147","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:142","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:154","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap)"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,2,3,4,84,85,86,87,88,89,17,18,19,20,21,22,24,25],"tindex":"18e0507d-8270-11e5-878f-395a6ddf4f1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"subqueryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:736","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,84,85,86,87,88,89],"tindex":"18e0778e-8270-11e5-878f-0d05180b00ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:449","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":-1},{"failures":[90,91,92,93,94,95,0,1,2,3,4,6,7,8,9,10,11,12,96,13,14,16,17,18,19,20,21,22,23,24,26],"tindex":"18e0778f-8270-11e5-878f-4761c221ff41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"variableMap":{"sacScale":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:186","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"18e07790-8270-11e5-878f-bda93ddb7b71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:84","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-1},{"failures":[],"tindex":"18e07791-8270-11e5-878f-170ac0694551","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:299","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[15,16,17,18,21,22,23,25],"tindex":"18e09ea2-8270-11e5-878f-d38902b4845d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:805","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.isEmpty())\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n        com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n        java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n    }\n"},"status":-1},{"failures":[],"tindex":"18e09ea3-8270-11e5-878f-05f1aea6bf74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[],"tindex":"18e09ea4-8270-11e5-878f-cd9916c1ec12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:112","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[97,98,99,100,101,102,103,104,105,49,50,106,107,108,109,110,111,112,113,114,115,116,37,117,118,119,120,121,122,123,124,125,126,127,91,95,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,82,172,173,0,1,2,3,4,5,6,7,8,9,10,11,13,174,175,176,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"18e09ea5-8270-11e5-878f-a72861112282","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"directionBitMask","nodeFlags":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:183","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"18e09ea6-8270-11e5-878f-2d9edb32b0c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((((((\"time(pass1): \" + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" pass2: \") + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" total:\") + ((int)(((com.graphhopper.util.StopWatch.getSeconds()) + (com.graphhopper.util.StopWatch.getSeconds()))))))"},"status":-2},{"failures":[],"tindex":"18e0c5b7-8270-11e5-878f-af6364b97a39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[177,178,179,180,181,182,183],"tindex":"18e0c5b8-8270-11e5-878f-41f81af36352","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"status":-1},{"failures":[184],"tindex":"18e0c5b9-8270-11e5-878f-a717f8258fed","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:76","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"variableMap":{"finishedTo":"finishedFrom","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:79","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[185,122,186,187,188,136,189,190,191,192,193,194,195,145,196,197,198,199,200,201,202,155,203,204,205,206,207,208,209,165,210,211,212,213,214,215,216],"tindex":"18e0c5ba-8270-11e5-878f-ab929dfc3f22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[217,218,219,220,221,222,35,223,224],"tindex":"18e0c5bb-8270-11e5-878f-f169509465da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"super.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"18e09ea3-8270-11e5-878f-05f1aea6bf74","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}