{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":239,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":231,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":6,"com.graphhopper.routing.QueryGraphTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":176,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":194,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":215,"com.graphhopper.reader.OSMReaderTest.testWithBounds":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":139,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":68,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":3,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":37,"com.graphhopper.GraphHopperTest.testPrepare":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":43,"com.graphhopper.util.InstructionListTest.testWayList":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":52,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":252,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":0,"com.graphhopper.GraphHopperAPITest.testDisconnected179":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":156,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":216,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":25,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":240,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":149,"com.graphhopper.GraphHopperTest.testLoadOSM":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":224,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":199,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":217,"com.graphhopper.reader.OSMReaderTest.testSort":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":69,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":85,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":34,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":249,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":110,"com.graphhopper.routing.PathTest.testWayList":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":133,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":50,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":211,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":24,"com.graphhopper.util.GHUtilityTest.testSort":259,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":159,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":135,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":122,"com.graphhopper.GraphHopperAPITest.testLoad":89,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":62,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":164,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":243,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.util.GHUtilityTest.testCopy":258,"com.graphhopper.routing.PathTest.testFindInstruction":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":137,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":55,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":143,"com.graphhopper.reader.PrinctonReaderTest.testRead":73,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":177,"com.graphhopper.util.InstructionListTest.testWayList2":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":202,"com.graphhopper.reader.OSMReaderTest.testFoot":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":246,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":1,"com.graphhopper.reader.OSMReaderTest.testOneWay":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":154,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":126,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":186,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":178,"com.graphhopper.routing.PathBidirRefTest.testExtract":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":245,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":244,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":230,"com.graphhopper.util.GHUtilityTest.testSort2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":237,"com.graphhopper.reader.OSMReaderTest.testMain":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":161,"com.graphhopper.routing.PathBidirRefTest.testExtract2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":212,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":174,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":147,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":33,"com.graphhopper.storage.GraphHopperStorageTest.testClone":115,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":218,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":119,"com.graphhopper.GraphHopperTest.testFootAndCar":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":138,"com.graphhopper.util.GHUtilityTest.testSortDirected":260,"com.graphhopper.GraphHopperTest.testPrepareOnly":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":171,"com.graphhopper.GraphHopperTest.testVia":100,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":53,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":195,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":162,"com.graphhopper.GraphHopperTest.testFootOnly":108,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":201,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":203,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":20,"com.graphhopper.util.InstructionListTest.testFind":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":229},"transformations":[{"failures":[0,1,2,3],"tindex":"9c0e85b1-792b-11e5-929a-939926d8c1db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n        return long;\n    \n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"9c0eacc2-792b-11e5-929a-5d315950dac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:327","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[81,261,262,263],"tindex":"9c0ed3d3-792b-11e5-929a-49ba87bc9698","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"variableMap":{"bufferIndex":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int).putShort(int, short)"},"status":-1},{"failures":[],"tindex":"9c0ed3d4-792b-11e5-929a-fb3ff9906e25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"9c0ed3d5-792b-11e5-929a-a7dd2e7a1484","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:251","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:azimuth>\")"},"variableMap":{"output":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\")"},"status":-2},{"failures":[],"tindex":"9c0ed3d6-792b-11e5-929a-8d788690a305","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"flags","guess":"flags","low":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:243","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"9c0ed3d7-792b-11e5-929a-9524e87c66e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"9c0efae8-792b-11e5-929a-03ff4c2d1d41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":-2},{"failures":[],"tindex":"9c0efae9-792b-11e5-929a-836d329ccb02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"hash","backwardBit":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"9c0efaea-792b-11e5-929a-2dfdea1c1fff","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge2","b":"from","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"9c0efaeb-792b-11e5-929a-e7cc19d72f38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:171","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9c0efaec-792b-11e5-929a-dd2ae2531939","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"9c0efaed-792b-11e5-929a-6ff590628433","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:56","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"9c0f21fe-792b-11e5-929a-7905998fd2e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"9c0f21ff-792b-11e5-929a-4f55af2a37c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"lon","java.lang.Math.PI":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"status":-2},{"failures":[],"tindex":"9c0f2200-792b-11e5-929a-19152fbb006a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"tmpNewShortcuts","nextEdgeId":"tmpNewShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:698","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"9c0f2201-792b-11e5-929a-71ae3bad4c89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:109","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DAType.MemRef) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef)"},"variableMap":{"com.graphhopper.storage.DAType.MemRef.HEAP":"this","memRef":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:400","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"9c0f2202-792b-11e5-929a-c7fbfdda2c8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:73","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"9c0f2203-792b-11e5-929a-db29ba0c95c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:228","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-2},{"failures":[],"tindex":"9c0f2204-792b-11e5-929a-b9201d4061a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:265","type":"CtTryImpl","sourcecode":"try {\n    if (java.io.Closeable != null)\n        java.io.Closeable.close();\n    \n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(\"Couldn\\'t close resource\" , java.io.IOException);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}