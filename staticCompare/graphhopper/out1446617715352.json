{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":296,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":331,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":257,"com.graphhopper.reader.OSMReaderTest.testFerry":345,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":70,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":71,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":328,"com.graphhopper.routing.QueryGraphTest.testOneWay":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":159,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":253,"com.graphhopper.reader.OSMReaderTest.testWithBounds":40,"com.graphhopper.storage.MMapDataAccessTest.testSegments":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":268,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":6,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":131,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":306,"com.graphhopper.util.BitUtilLittleTest.testToDouble":43,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":218,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":314,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":295,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":91,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":302,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":278,"com.graphhopper.util.InstructionListTest.testWayList":61,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":123,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":287,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":73,"com.graphhopper.GraphHopperAPITest.testDisconnected179":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":269,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":279,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":254,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":326,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":31,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":143,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":319,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":317,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":315,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":221,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":115,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":255,"com.graphhopper.reader.OSMReaderTest.testSort":34,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":290,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":30,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":155,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":120,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":300,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":336,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":42,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":89,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":318,"com.graphhopper.routing.PathTest.testWayList":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":148,"com.graphhopper.coll.OSMIDMapTest.testGet2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":168,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":277,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":285,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":183,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":178,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":133,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":232,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":175,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":292,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":325,"com.graphhopper.util.GHUtilityTest.testSort":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":259,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":282,"com.graphhopper.coll.OSMIDMapTest.testGetLong":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":281,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":213,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":341,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":236,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":132,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":169,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":335,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":272,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":56,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":111,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":189,"com.graphhopper.GraphHopperAPITest.testLoad":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":136,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":270,"com.graphhopper.reader.OSMReaderTest.testBarriers":346,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":156,"com.graphhopper.routing.PathTest.testFound":320,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":11,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":215,"com.graphhopper.util.GHUtilityTest.testCopy":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":283,"com.graphhopper.routing.PathTest.testFindInstruction":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":275,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":191,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":128,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":5,"com.graphhopper.util.InstructionListTest.testEmptyList":59,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":286,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":121,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":291,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":308,"com.graphhopper.reader.PrinctonReaderTest.testRead":343,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":147,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":186,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":135,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":313,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":163,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":88,"com.graphhopper.util.InstructionListTest.testWayList2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":224,"com.graphhopper.reader.OSMReaderTest.testFoot":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":263,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":260,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":126,"com.graphhopper.reader.OSMReaderTest.testOneWay":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":211,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":144,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":246,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":99,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":298,"com.graphhopper.coll.OSMIDMapTest.testGet":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":316,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":237,"com.graphhopper.routing.PathBidirRefTest.testExtract":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":305,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":79,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":230,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":75,"com.graphhopper.util.GHUtilityTest.testSort2":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":293,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.util.BitUtilLittleTest.testToLong":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":170,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":52,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":85,"com.graphhopper.routing.PathBidirRefTest.testExtract2":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":165,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":233,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":157,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":202,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":82,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":139,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":310,"com.graphhopper.storage.GraphHopperStorageTest.testClone":95,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":256,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":162,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":105,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":53,"com.graphhopper.routing.PathTest.testTime":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":289,"com.graphhopper.util.GHUtilityTest.testSortDirected":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":182,"com.graphhopper.GraphHopperTest.testPrepareOnly":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":151,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":244,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":288,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":347,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":134,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":333,"com.graphhopper.GraphHopperTest.testFootOnly":24,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":63,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":223,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":225,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":321,"com.graphhopper.util.InstructionListTest.testFind":58,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":266},"transformations":[{"failures":[],"tindex":"6a03fe65-82bb-11e5-a8ad-2540d52df4de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"variableMap":{"cg":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:447","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n    if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n        com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n        for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n            com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n        }\n    } \n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"6a042576-82bb-11e5-a8ad-69a8d745cc5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:216","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"6a044c87-82bb-11e5-a8ad-ed2ed7ad329a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:71","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(boolean))) {\n    if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    else\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n} else if (!(boolean)) {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n} else {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n}"},"status":-2},{"failures":[],"tindex":"6a044c88-82bb-11e5-a8ad-c74073a77cd6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"inner":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:76","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"6a044c89-82bb-11e5-a8ad-5987ad1ea332","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:590","type":"CtReturnImpl","sourcecode":"return (int) < (com.graphhopper.util.PointList.this.getSize())"},"variableMap":{"counter":"adj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:53","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.CHGraph.getLevel(int)) <= (com.graphhopper.storage.CHGraph.getLevel(int))"},"status":-2},{"failures":[],"tindex":"6a04739a-82bb-11e5-a8ad-5bae2e501ab5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:220","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"6a04739b-82bb-11e5-a8ad-9165df31073e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"6a04739c-82bb-11e5-a8ad-4d886d55efe2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:299","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"6a04739d-82bb-11e5-a8ad-63d6caeb0a3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"allowWrites","hasRel":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:494","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[42,37],"tindex":"6a049aae-82bb-11e5-a8ad-e57887481ecb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"edgeIdFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:96","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n    int = com.graphhopper.util.EdgeIterator.getEdge();\n    break;\n} "},"status":-1},{"failures":[],"tindex":"6a049aaf-82bb-11e5-a8ad-691bcb1872d6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:402","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[43,44,45,46,47,48,49],"tindex":"6a049ab0-82bb-11e5-a8ad-89452892b00c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:78","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 32))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:78","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 4)] = ((byte)(long >> 32))"},"status":-1},{"failures":[],"tindex":"6a049ab1-82bb-11e5-a8ad-d1120c0568ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:251","type":"CtIfImpl","sourcecode":"if ((double) > (double))\n    return false;\n"},"variableMap":{"maxEle":"queryLon","minEle":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:742","type":"CtIfImpl","sourcecode":"if (!(gnu.trove.set.hash.TIntHashSet.isEmpty())) {\n    double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n    double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, gnu.trove.set.hash.TIntHashSet);\n    if (double < double)\n        return true;\n    \n} "},"status":0},{"failures":[],"tindex":"6a04c1c2-82bb-11e5-a8ad-93da73063b37","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, double, double, double)"},"variableMap":{"this":"copyPL","lon":"java.lang.Double.NaN","nodeId":"i","lat":"java.lang.Double.NaN","ele":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:381","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"6a04c1c3-82bb-11e5-a8ad-ff59379a92be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:111","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.needsTurnCostsSupport()) || ((com.graphhopper.routing.util.Weighting) == null))\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension());\nelse\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(java.util.Arrays.asList(com.graphhopper.routing.util.Weighting) , com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.GraphExtension.NoOpExtension());\n"},"status":-2},{"failures":[],"tindex":"6a04c1c4-82bb-11e5-a8ad-31cdd159331d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:157","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[50,51,52,53,54,55,56,57],"tindex":"6a04e8d5-82bb-11e5-a8ad-4dd4b9dc7fa6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:122","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,13,14,74,75,76,77,78,79,16,17,18,19,20,21,22,23,24,25,80,81,82,83,84,85,86,87,88,89,50,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,52,134,135,136,137,53,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,54,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,26,27,268,28,29,30,31,269,270,271,272,2,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,12,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,42,343,344,345,32,33,34,346,35,36,37,38,347,39,40,348,41],"tindex":"6a04e8d6-82bb-11e5-a8ad-e7f38746ca19","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"variableMap":{"from":"indexDivisor","lonSize":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"6a050fe7-82bb-11e5-a8ad-f3c2a1575316","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"nodeCount","id":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:339","type":"CtReturnImpl","sourcecode":"return int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6a049ab1-82bb-11e5-a8ad-d1120c0568ca","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.calcMinDistance","com.graphhopper.storage.index.LocationIndexTree.calculateRMin"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t3","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t3","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t3","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"]},"type":"branch"}]}]}