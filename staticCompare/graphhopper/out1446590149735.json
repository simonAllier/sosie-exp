{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":44,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":54,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":67,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":7,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":8,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":19,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":40,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":9,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":16,"com.graphhopper.util.InstructionListTest.testWayList2":64,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":68,"com.graphhopper.util.InstructionListTest.testWayList":4,"com.graphhopper.util.InstructionListTest.testCreateGPX":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":35,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":13,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":27,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":53,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":52,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":31,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":22,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":1,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":59,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":60,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":55,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":79,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":18,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":10,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":46,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":56,"com.graphhopper.util.InstructionListTest.testFind":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":36,"com.graphhopper.GraphHopperTest.testLoadOSM":75,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":65},"transformations":[{"failures":[],"tindex":"3b9ef6fb-827b-11e5-85b7-9be679d44614","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:115","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[0],"tindex":"3b9f1e0c-827b-11e5-85b7-897ca3faab07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"variableMap":{"high":"com.graphhopper.reader.OSMReader.TOWER_NODE","len":"com.graphhopper.reader.OSMReader.TOWER_NODE","start":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"status":-1},{"failures":[],"tindex":"3b9f1e0d-827b-11e5-85b7-5bd6c7029f76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:360","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[1,2,3],"tindex":"3b9f1e0e-827b-11e5-85b7-67f8e2514282","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:225","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkseg>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"status":-1},{"failures":[],"tindex":"3b9f451f-827b-11e5-85b7-df1bef7f5431","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PillarInfo:122","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(int)"},"variableMap":{"intVal":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:177","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.Double>.get(int)"},"status":-2},{"failures":[4],"tindex":"3b9f4520-827b-11e5-85b7-7df6d5e003b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:189","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[5,6,7,8,9],"tindex":"3b9f4521-827b-11e5-85b7-6199fe9ed4e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:533","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.EdgeAccess.isInBounds(int)))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"));\n"},"status":-1},{"failures":[],"tindex":"3b9f4522-827b-11e5-85b7-3f965637a24e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:410","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"variableMap":{"edge":"mainEdgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.CHEdgeIteratorState.getEdge())"},"status":-2},{"failures":[],"tindex":"3b9f4523-827b-11e5-85b7-8d76076d8edb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"3b9f4524-827b-11e5-85b7-473da80c8bdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-2},{"failures":[10,11,12,13,14,15,16],"tindex":"3b9f6c35-827b-11e5-85b7-4ffe5a10bb87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:768","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLon(int)"},"variableMap":{"node":"node","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:98","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"3b9f6c36-827b-11e5-85b7-b541d03c2b9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":-2},{"failures":[],"tindex":"3b9f6c37-827b-11e5-85b7-619d967c32e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:236","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>) == (gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>)"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"3b9f6c38-827b-11e5-85b7-db921da0f326","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[54,55,56,57,58,59,60,61,62,63,4,64,3,65],"tindex":"3b9f6c39-827b-11e5-85b7-83c5df2eef35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"traversalId","nextTurnCostIndex":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:111","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int)"},"status":-1},{"failures":[],"tindex":"3b9f6c3a-827b-11e5-85b7-e5d4f9993490","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-2},{"failures":[66],"tindex":"3b9f934b-827b-11e5-85b7-af68c3066ea8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:574","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[67,68,69,70,71],"tindex":"3b9f934c-827b-11e5-85b7-5d337c00ec28","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:56","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[72],"tindex":"3b9f934d-827b-11e5-85b7-f907fe1d8115","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"status":-1},{"failures":[73,74,75,76,77,78,79],"tindex":"3b9f934e-827b-11e5-85b7-5bd8ffd3d464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:737","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3b9f1e0d-827b-11e5-85b7-5bd6c7029f76","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}