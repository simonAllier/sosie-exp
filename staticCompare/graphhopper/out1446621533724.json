{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":65,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":34,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.reader.OSMReaderTest.testMain":26,"com.graphhopper.reader.OSMReaderTest.testFerry":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":51,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":37,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":84,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":72,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":17,"com.graphhopper.routing.PathTest.testWayList":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":66,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":12,"com.graphhopper.reader.OSMReaderTest.testWithBounds":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":31,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":60,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":85,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":75,"com.graphhopper.storage.GraphHopperStorageTest.testClone":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":78,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":10,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":11,"com.graphhopper.reader.OSMReaderTest.testFoot":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":73,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":83,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":58,"com.graphhopper.routing.PathTest.testTime":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":57,"com.graphhopper.reader.OSMReaderTest.testOneWay":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":62,"com.graphhopper.GraphHopperAPITest.testDisconnected179":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":64,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":43,"com.graphhopper.GraphHopperTest.testPrepareOnly":16,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":63,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":29,"com.graphhopper.util.HelperTest.testUnzip":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":30,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":49,"com.graphhopper.GraphHopperAPITest.testLoad":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":39,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":71,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":89,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":50,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":79,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":9,"com.graphhopper.util.GHUtilityTest.testCopy":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.reader.OSMReaderTest.testSort":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1},"transformations":[{"failures":[],"tindex":"4df06832-82c4-11e5-abc5-551085ad0a51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:116","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"4df08f43-82c4-11e5-abc5-4941a3cd6f0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:124","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[15,16,17,18,19,5,6,7,20,21,8,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"4df0b654-82c4-11e5-abc5-4d8e0a74e073","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = gnu.trove.list.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                gnu.trove.list.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47],"tindex":"4df0b655-82c4-11e5-abc5-ed74ef100b72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"node","tmpSize":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n"},"status":-1},{"failures":[48],"tindex":"4df0b656-82c4-11e5-abc5-a7cd938b4ed4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:242","type":"CtInvocationImpl","sourcecode":"java.io.File.createNewFile()"},"variableMap":{"file":"toFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:66","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir()"},"status":-1},{"failures":[],"tindex":"4df0dd67-82c4-11e5-abc5-afaa92ec749b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"com.graphhopper.reader.OSMElement.NODE","NO_TURN_ENTRY":"com.graphhopper.reader.OSMElement.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:919","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : com.graphhopper.reader.OSMRelation.getMembers()) {\n    if ((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) {\n        if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n            long = com.graphhopper.reader.OSMRelation.Member.ref();\n        } else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n            long = com.graphhopper.reader.OSMRelation.Member.ref();\n        } \n    } else if (((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) && (\"via\".equals(com.graphhopper.reader.OSMRelation.Member.role()))) {\n        long = com.graphhopper.reader.OSMRelation.Member.ref();\n    } \n}"},"status":-2},{"failures":[49],"tindex":"4df0dd68-82c4-11e5-abc5-a7363e4b7802","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"daPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:115","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n"},"status":-1},{"failures":[0,1,2,3,4,50,18,19,5,6,7,20,8,22,51,52,53,54,55,56,57,58,9,59,60,61,62,63,64,65,66,10,67,68,11,69,70,71,72,12,73,74,75,76,77,78,79,80,81],"tindex":"4df0dd69-82c4-11e5-abc5-fdd0fbfafd85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"traversalId","edgeId":"traversalId","com.graphhopper.storage.EdgeAccess.NO_NODE":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int)"},"status":-1},{"failures":[82,83,84,85,86,87,13,88],"tindex":"4df1047a-82c4-11e5-abc5-334e6532b48f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double)"},"status":-1},{"failures":[],"tindex":"4df1047b-82c4-11e5-abc5-5d93837e3a63","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"size":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:179","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.NodeAccess.getAdditionalNodeField(int)"},"status":-2},{"failures":[],"tindex":"4df1047c-82c4-11e5-abc5-35485693e5c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"i","from":"i","end":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"4df1047d-82c4-11e5-abc5-b1d768187c35","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName())"},"variableMap":{"from":"iter","to":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:805","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setWayGeometry(com.graphhopper.util.PointList)"},"status":0},{"failures":[],"tindex":"4df1047e-82c4-11e5-abc5-3dd642dd10a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"skippedEdge2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[0,1,2,3,4,50,5,6,7,8,51,53,54,55,56,57,58,9,59,60,62,63,66,10,67,68,11,70,71,72,12,74,75,77,79,80],"tindex":"4df1047f-82c4-11e5-abc5-53d562cd34fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"currTo","fromHeap":"openSetTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:99","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"4df12b90-82c4-11e5-abc5-0735629740ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"minLat","fullDist2D":"minLat","decDist2DSum":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"4df12b91-82c4-11e5-abc5-458db6a69e2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:87","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(java.io.File) , 50000)"},"variableMap":{"file":"file","ips":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:281","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.FileInputStream(java.io.File)"},"status":0},{"failures":[],"tindex":"4df12b92-82c4-11e5-abc5-199b6b4dff60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","nodeCount":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:58","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n    gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"4df12b93-82c4-11e5-abc5-9584a170c50b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[16,17,18,19,7,20,21,22],"tindex":"4df12b94-82c4-11e5-abc5-55fda66a9c7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:819","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.clear()"},"variableMap":{"algoFactories":"algoFactories"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:805","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.isEmpty())\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n        com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n        java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n    }\n"},"status":-1},{"failures":[89,90,91,51,52,53,54,62,65,12],"tindex":"4df152a5-82c4-11e5-abc5-0b1f3308d461","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4df1047c-82c4-11e5-abc5-35485693e5c3","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":["com.graphhopper.storage.index.Location2IDFullWithEdgesIndex_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t6"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":["com.graphhopper.storage.index.Location2IDFullWithEdgesIndex_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t6"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":["com.graphhopper.storage.index.Location2IDFullWithEdgesIndex_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t6"]},"type":"branch"}]},{"transformation":"4df1047d-82c4-11e5-abc5-b1d768187c35","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.search.NameIndex_java.lang.String_get(long).e1","com.graphhopper.search.NameIndex_java.lang.String_get(long).t2","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_getName().b","com.graphhopper.search.NameIndex_java.lang.String_get(long).b"]},"type":"branch"}]}]}