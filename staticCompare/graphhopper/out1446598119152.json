{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":88,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":91,"com.graphhopper.reader.OSMReaderTest.testMain":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":77,"com.graphhopper.routing.PathTest.testFindInstruction":81,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":83,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":59,"com.graphhopper.routing.QueryGraphTest.testOneWay":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":18,"com.graphhopper.routing.PathBidirRefTest.testExtract2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":79,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":60,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":42,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":9,"com.graphhopper.coll.CompressedArrayTest.testCompress":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":6,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":74,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":66,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":4,"com.graphhopper.GraphHopperTest.testPrepare":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":1,"com.graphhopper.GraphHopperTest.testFootAndCar":23,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":61,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":78,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":46,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":15,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":85,"com.graphhopper.GraphHopperTest.testPrepareOnly":13,"com.graphhopper.coll.CompressedArrayTest.testCompress2":20,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":76,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":49,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":72,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":57,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":84,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":58,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":62,"com.graphhopper.routing.PathBidirRefTest.testExtract":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":71,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":32,"com.graphhopper.reader.OSMReaderTest.testBarriers":11,"com.graphhopper.util.InstructionListTest.testFind":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":67,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":27,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":80},"transformations":[{"failures":[],"tindex":"c9c52c4b-828d-11e5-a6ea-715b171a35a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":0},{"failures":[0,1,2,3,4,5,6],"tindex":"c9c5535c-828d-11e5-a6ea-336d7b703d95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"tmpOffset","entityType":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:854","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[7,8,9,10],"tindex":"c9c5535d-828d-11e5-a6ea-19acca14ec20","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"variableMap":{"pavementName":"str","wayTypeName":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:189","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"status":-1},{"failures":[11,12],"tindex":"c9c57a6e-828d-11e5-a6ea-d595948d0d6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"towerNodeDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:784","type":"CtIfImpl","sourcecode":"if (double < 1.0E-4) {\n    (long)++;\n    double = 1.0E-4;\n} "},"status":-1},{"failures":[13,14,15,16,0,17,18,3,5,19],"tindex":"c9c57a6f-828d-11e5-a6ea-4d2ded3a6203","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:599","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadEdgesHeader()"},"variableMap":{"clonedG":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:466","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadNodesHeader()"},"status":-1},{"failures":[],"tindex":"c9c57a70-828d-11e5-a6ea-1d18143241be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"bytes":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:67","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.Math.abs(((int)((long >> 32) ^ long)))) % (gnu.trove.map.hash.TLongIntHashMap[].int)"},"status":-2},{"failures":[20,21],"tindex":"c9c5a181-828d-11e5-a6ea-63ca6dcf3ff3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeVLong(long)"},"status":-1},{"failures":[],"tindex":"c9c5a182-828d-11e5-a6ea-8772583a6c50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:315","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"status":0},{"failures":[],"tindex":"c9c5a183-828d-11e5-a6ea-0d45a85ebeae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"weightApproximation","lat":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:37","type":"CtIfImpl","sourcecode":"if (boolean)\n    double *= -1;\n"},"status":-1},{"failures":[],"tindex":"c9c5a184-828d-11e5-a6ea-cf4383ef0921","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:416","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setEdgesHeader()"},"status":-2},{"failures":[],"tindex":"c9c5a185-828d-11e5-a6ea-0734f97e6b95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator)"},"status":0},{"failures":[22,23,24,25,26],"tindex":"c9c5c896-828d-11e5-a6ea-0d11db5c4f78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:773","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-1},{"failures":[],"tindex":"c9c5c897-828d-11e5-a6ea-2960402602dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.printInfo(\"way\")"},"status":0},{"failures":[],"tindex":"c9c5c898-828d-11e5-a6ea-4b0bf41b31cd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"variableMap":{"dLat":"fromNode","dLon":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:176","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getOtherNode(int, long)"},"status":-2},{"failures":[],"tindex":"c9c5efa9-828d-11e5-a6ea-137462857804","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:835","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"status":-2},{"failures":[],"tindex":"c9c5efaa-828d-11e5-a6ea-eb72deb6840f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"factor","fwdSpeed":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":0},{"failures":[27,28,29,30,31,32,22,33,34,23,35,14,16,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"c9c5efab-828d-11e5-a6ea-355fdfe1af57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-1},{"failures":[68,69,28,29,30,31,32,37,70,71,72,73,74,75,76,77,78,79,80,48,50,52,53,56,60,81,82,83,84,85,86,87,88,89,11],"tindex":"c9c5efac-828d-11e5-a6ea-ab3ff8a06888","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"a_lat_deg","r_lat":"a_lat_deg","a_lat":"a_lat_deg","delta_lon":"a_lat_deg","r_lon":"a_lat_deg","a_lon":"a_lat_deg","norm":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:219","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-1},{"failures":[90,10],"tindex":"c9c616bd-828d-11e5-a6ea-47b17404fdf2","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(false)"},"status":-1},{"failures":[91],"tindex":"c9c616be-828d-11e5-a6ea-fb66948c72e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:278","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(double[][int])"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c9c5a185-828d-11e5-a6ea-0734f97e6b95","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.QueryResult.setClosestEdge"]},"type":"staticDiff"}]},{"transformation":"c9c5c897-828d-11e5-a6ea-2960402602dc","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.coll.GHLongIntBTree_int_getMemoryUsage().b","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().e1","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().b","com.graphhopper.reader.OSMReader_void_printInfo(java.lang.String).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.coll.GHLongIntBTree_int_getMemoryUsage().b","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().e1","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().b","com.graphhopper.reader.OSMReader_void_printInfo(java.lang.String).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.OSMReader.printInfo"]},"type":"staticDiff"}]},{"transformation":"c9c5efaa-828d-11e5-a6ea-eb72deb6840f","diffs":[{"methodsDiff":{"delete":["java.util.zip.ZipEntry.getCompressedSize","java.util.zip.ZipEntry.getSize"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.util.HelperTest.testUnzip":["com.graphhopper.util.Unzipper_void_unzip(java.io.InputStream,java.io.File,com.graphhopper.util.ProgressListener).t3"]},"type":"branch"}]}]}