{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":126,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":187,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":164,"com.graphhopper.reader.OSMReaderTest.testFerry":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":47,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":225,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":181,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":224,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":183,"com.graphhopper.reader.OSMReaderTest.testWithBounds":154,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":93,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":18,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":101,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":89,"com.graphhopper.search.NameIndexTest.testFlush":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":108,"com.graphhopper.util.InstructionListTest.testWayList":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":223,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":177,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":215,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":104,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":21,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":48,"com.graphhopper.reader.OSMReaderTest.testSort":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":98,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":130,"com.graphhopper.storage.RAMDataAccessTest.testHeader":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":218,"com.graphhopper.storage.MMapDataAccessTest.testHeader":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":58,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":131,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":33,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":122,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":135,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":79,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":191,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":44,"com.graphhopper.reader.OSMReaderTest.testBarriers":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":65,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":142,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":14,"com.graphhopper.util.GHUtilityTest.testCopy":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":232,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":158,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":207,"com.graphhopper.reader.OSMReaderTest.testFoot":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":83,"com.graphhopper.reader.OSMReaderTest.testOneWay":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":99,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":211,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":220,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":123,"com.graphhopper.reader.OSMReaderTest.testMain":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":81,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":150,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":168,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":138,"com.graphhopper.GraphHopperTest.testFootAndCar":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":70,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":60,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":118,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":42,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":23,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":25,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":166,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":238},"transformations":[{"failures":[],"tindex":"f982e39e-82be-11e5-af93-e94bba2595ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:716","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"variableMap":{"flags":"directionBitMask","value":"blockByDefault","forwardBit":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"f98331bf-82be-11e5-af93-910bac847ada","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:280","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n        throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n    \n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:137","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting());\n}"},"status":-1},{"failures":[],"tindex":"f98331c0-82be-11e5-af93-45859a06c49d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"variableMap":{"newName":"line","name":"line","com.graphhopper.search.NameIndex.logger":"com.graphhopper.util.Helper.logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:104","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n        continue;\n    } \n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        continue;\n    } \n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0) {\n        com.graphhopper.util.Helper.org.slf4j.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n        continue;\n    } \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n}"},"status":-2},{"failures":[132],"tindex":"f98358d1-82be-11e5-af93-0535cabb4cb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"f98358d2-82be-11e5-af93-1bdb3558028a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:62","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"f98358d3-82be-11e5-af93-19a87ec8be50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[133,134],"tindex":"f9837fe4-82be-11e5-af93-851ee77ccbc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:137","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"variableMap":{"cp":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\")"},"status":-1},{"failures":[135,136],"tindex":"f9837fe5-82be-11e5-af93-6d3bafd51ab1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"lat","x":"lat","absY":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:95","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"f9837fe6-82be-11e5-af93-032070a734a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:91","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:136","type":"CtTryImpl","sourcecode":"try {\n    return com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode.valueOf(java.lang.String.toUpperCase());\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalArgumentException(((((\"TraversalMode \" + java.lang.String) + \" not supported. \") + \"Supported are: \") + (java.util.Arrays.asList(com.graphhopper.routing.util.TraversalMode.values()))));\n}"},"status":-2},{"failures":[],"tindex":"f9837fe7-82be-11e5-af93-a9c4e7caceac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"status":-1},{"failures":[],"tindex":"f983a6f8-82be-11e5-af93-8fdbaa4e2b56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"unvisitedDeadEnds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"optimize to remove subnetworks (\" + (int)) + \"), \") + \"unvisited-dead-end-nodes (\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[137,135,136,138],"tindex":"f983a6f9-82be-11e5-af93-9f9b00277b38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:171","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(int)"},"variableMap":{"wayIndex":"i","fullPL":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:145","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"f983a6fa-82be-11e5-af93-b718b25aa557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:114","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(4)"},"status":0},{"failures":[],"tindex":"f983a6fb-82be-11e5-af93-09e058d64743","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:324","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.flush()"},"status":0},{"failures":[],"tindex":"f983ce0c-82be-11e5-af93-a7b8d8c2f409","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[139,0,7,8,9,137,140,10,11,12,141,13,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,134,158,159,160,161,132,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"tindex":"f983ce0d-82be-11e5-af93-49def887b362","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"backSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"f983ce0e-82be-11e5-af93-6d331eb36388","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"neighborTime","x":"neighborTime","absY":"neighborTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:292","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[149,233,234,235],"tindex":"f983f51f-82be-11e5-af93-53ce0b02f768","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:180","type":"CtIfImpl","sourcecode":"if ((double >= 0) || ((int - double) < (double)))\n    return int;\n"},"status":-1},{"failures":[0,11,12,141,236,237,238,239,240,241,242,243,37,41,46,244,245],"tindex":"f983f520-82be-11e5-af93-11fb7645b25d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"segmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:104","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int)"},"status":-1},{"failures":[6],"tindex":"f983f521-82be-11e5-af93-118edbb31e1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:379","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int)))\n    return false;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f983a6f8-82be-11e5-af93-8fdbaa4e2b56","diffs":[{"methodsDiff":{"delete":["java.util.concurrent.atomic.AtomicInteger.get","org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"f983a6fb-82be-11e5-af93-09e058d64743","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.flush"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.index.LocationIndexTree_void_flush().b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.AbstractDataAccess_void_setHeader(int,int).b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.index.LocationIndexTree_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.AbstractDataAccess_void_setHeader(int,int).b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.index.LocationIndexTree_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":["com.graphhopper.storage.AbstractDataAccess_void_setHeader(int,int).b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.index.LocationIndexTree_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.AbstractDataAccess_void_setHeader(int,int).b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.index.LocationIndexTree_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.AbstractDataAccess_void_setHeader(int,int).b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.index.LocationIndexTree_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"]},"type":"branch"}]},{"transformation":"f983a6fa-82be-11e5-af93-b718b25aa557","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getHeader"]},"type":"staticDiff"}]},{"transformation":"f982e39e-82be-11e5-af93-e94bba2595ad","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":["com.graphhopper.reader.OSMElement_boolean_hasTag(java.lang.String,java.lang.String[]).b","com.graphhopper.reader.OSMElement_boolean_hasTag(java.lang.String,java.lang.String[]).t1"],"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":["com.graphhopper.reader.OSMElement_boolean_hasTag(java.lang.String,java.lang.String[]).b","com.graphhopper.reader.OSMElement_boolean_hasTag(java.lang.String,java.lang.String[]).t1"],"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":["com.graphhopper.reader.OSMElement_boolean_hasTag(java.lang.String,java.lang.String[]).b","com.graphhopper.reader.OSMElement_boolean_hasTag(java.lang.String,java.lang.String[]).t1"]},"type":"branch"}]}]}