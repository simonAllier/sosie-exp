{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":347,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":369,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":73,"com.graphhopper.reader.OSMReaderTest.testFerry":285,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":399,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":27,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":387,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":306,"com.graphhopper.coll.CompressedArrayTest.testCompress":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":20,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":93,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":232,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":322,"com.graphhopper.GraphHopperTest.testPrepare":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":346,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":338,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":117,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":330,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":155,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":362,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":212,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":279,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":325,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":138,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":156,"com.graphhopper.reader.OSMReaderTest.testSort":288,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":172,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":251,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":106,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":374,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":307,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":62,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":328,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":182,"com.graphhopper.reader.OSMNodeTest.testSetTags":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":150,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":69,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":343,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":333,"com.graphhopper.coll.OSMIDMapTest.testGetLong":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":191,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":174,"com.graphhopper.coll.CompressedArrayTest.testCompress2":415,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":188,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":233,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":178,"com.graphhopper.reader.OSMReaderTest.testBarriers":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":392,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":334,"com.graphhopper.util.GHUtilityTest.testCopy":408,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":114,"com.graphhopper.routing.PathTest.testFindInstruction":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":179,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":111,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":252,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":206,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":78,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":57,"com.graphhopper.util.InstructionListTest.testWayList2":405,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":164,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":46,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":118,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":349,"com.graphhopper.coll.OSMIDMapTest.testGet":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":58,"com.graphhopper.routing.PathBidirRefTest.testExtract":363,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":282,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":159,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":267,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.util.GHUtilityTest.testSort2":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":344,"com.graphhopper.reader.OSMReaderTest.testMain":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":424,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":201,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":32,"com.graphhopper.storage.StorablePropertiesTest.testStore":259,"com.graphhopper.storage.GraphHopperStorageTest.testClone":225,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":55,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":262,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":79,"com.graphhopper.routing.PathTest.testTime":356,"com.graphhopper.util.InstructionListTest.testCreateGPX":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":92,"com.graphhopper.reader.OSMReaderTest.testRelation":294,"com.graphhopper.util.GHUtilityTest.testSortDirected":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":44,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":0,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":70,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":371,"com.graphhopper.GraphHopperTest.testFootOnly":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":119,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":263,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":88,"com.graphhopper.search.NameIndexTest.testCreate":397,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":378,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":158,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":366,"com.graphhopper.routing.QueryGraphTest.testOneWay":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":420,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":133,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":417,"com.graphhopper.reader.OSMReaderTest.testWithBounds":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":210,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":200,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":193,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":221,"com.graphhopper.search.NameIndexTest.testFlush":395,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":329,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":254,"com.graphhopper.util.InstructionListTest.testWayList":404,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":3,"com.graphhopper.GraphHopperAPITest.testDisconnected179":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":80,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":75,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":390,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":108,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":274,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":323,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":175,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":351,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":215,"com.graphhopper.routing.PathTest.testWayList":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":41,"com.graphhopper.coll.OSMIDMapTest.testGet2":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":352,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":336,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":368,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":19,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":226,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":361,"com.graphhopper.util.GHUtilityTest.testSort":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":160,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":425,"com.graphhopper.search.NameIndexTest.testPut":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":213,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":63,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":373,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":382,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":8,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":303,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":98,"com.graphhopper.routing.PathTest.testFound":355,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":326,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":190,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":396,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":83,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.util.InstructionListTest.testEmptyList":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":342,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":61,"com.graphhopper.reader.PrinctonReaderTest.testRead":308,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":82,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":35,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":195,"com.graphhopper.reader.OSMReaderTest.testFoot":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":96,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":304,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":161,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":422,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":162,"com.graphhopper.reader.OSMReaderTest.testOneWay":301,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":90,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":358,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":315,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":414,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":324,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":313,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":383,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":64,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":370,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":217,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":300,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":5,"com.graphhopper.routing.PathBidirRefTest.testExtract2":364,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":151,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":393,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":132,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":68,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":242,"com.graphhopper.GraphHopperTest.testFootAndCar":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":181,"com.graphhopper.storage.StorablePropertiesTest.testLoad":260,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":115,"com.graphhopper.GraphHopperTest.testVia":272,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":339,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":296,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":23,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":2,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":246,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":142,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":89,"com.graphhopper.util.InstructionListTest.testFind":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7},"transformations":[{"failures":[0,1,2],"tindex":"3493d76e-828a-11e5-9375-5b5d912a1238","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:380","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\":\")"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()))"},"status":-1},{"failures":[],"tindex":"3494258f-828a-11e5-9375-0d0a7b1bd64d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:230","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.close()"},"status":-2},{"failures":[3,2],"tindex":"34942590-828a-11e5-9375-397daa4cadc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"34942591-828a-11e5-9375-95ff05cd1502","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:272","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\")"},"status":-1},{"failures":[16,17,18,19,4,20,21,22,5,23,24,25,26,6,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,7,170,171,172,8,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,9,216,10,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,11,265,266,267,268,269,270,271,272,273,274,275,12,13,276,14,15,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,380,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,2,406,407,408,409,410,411,412],"tindex":"34944ca2-828a-11e5-9375-715f1a4b0fda","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:128","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"daType":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[],"tindex":"349473b3-828a-11e5-9375-c5d96b85b010","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:182","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)));\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)));\n} "},"variableMap":{"nodes":"nodes","maxEle":"maxLat","minEle":"maxLat","bounds":"bounds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((6 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"34949ac4-828a-11e5-9375-ffbb25d54a99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:86","type":"CtIfImpl","sourcecode":"if ((!(java.util.Locale.getCountry().isEmpty())) && (!(java.util.Map<java.lang.String, com.graphhopper.util.Translation>.containsKey(com.graphhopper.util.Translation.getLanguage()))))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation);\n"},"status":-2},{"failures":[413],"tindex":"34949ac5-828a-11e5-9375-571a345178b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:105","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue()"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-1},{"failures":[],"tindex":"34949ac6-828a-11e5-9375-fdc6cf6d81cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"index","com.graphhopper.storage.EdgeAccess.NO_NODE":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:256","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    int[][][int][int] = short;\nelse\n    int[][][int][int] = short << 16;\n"},"status":-2},{"failures":[],"tindex":"34949ac7-828a-11e5-9375-9573cdc6808f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.NumHelper:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.compare(double, double)"},"variableMap":{"d1":"lon","d2":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:81","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDFullWithEdgesIndex.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-2},{"failures":[],"tindex":"3494c1d8-828a-11e5-9375-8505d36f6d90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.isFrozen())\n    throw new java.lang.IllegalStateException(\"do not optimize after graph was frozen\");\n"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:630","type":"CtTryImpl","sourcecode":"try {\n    if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    try {\n        com.graphhopper.GraphHopper.importData();\n        com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n    } catch (java.io.IOException ex) {\n        throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n    }\n    com.graphhopper.GraphHopper.cleanUp();\n    com.graphhopper.GraphHopper.postProcessing();\n    com.graphhopper.GraphHopper.flush();\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-2},{"failures":[290,291],"tindex":"3494c1d9-828a-11e5-9375-6f44ca7fae9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"ele","orientation":"ele","java.lang.Math.PI":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:769","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getElevation(int)"},"status":-1},{"failures":[],"tindex":"3494c1da-828a-11e5-9375-d7f1b2c9ba1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:856","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.LongIntMap = null"},"status":0},{"failures":[414,134,141,143,144,152,159,161,162,415,416,417,418,419,420,421,422,423,424,425],"tindex":"3494e8eb-828a-11e5-9375-8f1866f46e82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"3494e8ec-828a-11e5-9375-07b20a35ac68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"version","configuredCHWeightings":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":0},{"failures":[],"tindex":"3494e8ed-828a-11e5-9375-55cd5c48543f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"EMPTY_FLAGS","ferryBit":"EMPTY_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[16,6,33,34,40,41,48,56,64,68,73,74,80,81,88,96,104,108,7,178,179,185,186,193,201,209,213,9,222,223,229,230,237,245,253,257,286,287,288,289,290,292,293,296,297,298,301,308,309,326,353,357,361,362,385,387,389,390,391,392,399],"tindex":"34950ffe-828a-11e5-9375-eb289a5d628c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:433","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer()"},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:427","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)"},"status":-1},{"failures":[264,11,271,272,273,274,275,12,13,14,15,277,278,285,286,287,288,289,290,291,292,293,296,297,298,299,301],"tindex":"34950fff-828a-11e5-9375-519b1d7e77be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:209","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader)"},"variableMap":{"parser":"parser","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:198","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"34951000-828a-11e5-9375-fb20a9fc79cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:277","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"34953711-828a-11e5-9375-57692c013e0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:158","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[int][]"},"variableMap":{"segmentCount":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}