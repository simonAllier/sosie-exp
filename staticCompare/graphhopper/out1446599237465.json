{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":469,"com.graphhopper.GraphHopperAPITest.testNoLoad":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.reader.OSMReaderTest.testFerry":476,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":127,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":430,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":283,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":69,"com.graphhopper.coll.CompressedArrayTest.testCompress":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":436,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":83,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":87,"com.graphhopper.GraphHopperTest.testPrepare":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":211,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":402,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":96,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":334,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":25,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":20,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":139,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":122,"com.graphhopper.GraphHopperTest.testLoadOSM":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":59,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":230,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":420,"com.graphhopper.reader.OSMReaderTest.testSort":478,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":70,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":483,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":268,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":175,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":212,"com.graphhopper.routing.DijkstraTest.initializationError":471,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":259,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":458,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":452,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":54,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":265,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":423,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":271,"com.graphhopper.coll.CompressedArrayTest.testCompress2":28,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":341,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":284,"com.graphhopper.GraphHopperAPITest.testLoad":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":364,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":159,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":274,"com.graphhopper.reader.OSMReaderTest.testBarriers":479,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":448,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":326,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":437,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":373,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":349,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":176,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":358,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":473,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":224,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":255,"com.graphhopper.util.InstructionListTest.testWayList2":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":63,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":401,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":422,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":342,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":330,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":114,"com.graphhopper.routing.AStarTest.initializationError":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":374,"com.graphhopper.routing.PathBidirRefTest.testExtract":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":407,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":307,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":426,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":468,"com.graphhopper.reader.OSMReaderTest.testMain":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":408,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":270,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":347,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":485,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":86,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":31,"com.graphhopper.storage.GraphHopperStorageTest.testClone":151,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":388,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":253,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":447,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":394,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":331,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":201,"com.graphhopper.reader.OSMReaderTest.testRelation":481,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":243,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":125,"com.graphhopper.GraphHopperTest.testFootOnly":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":427,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":383,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":60,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":432,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":308,"com.graphhopper.storage.VLongStorageTest.testWrite":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":58,"com.graphhopper.reader.OSMReaderTest.testWithBounds":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":360,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":202,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":375,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":438,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":295,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":289,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":78,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":95,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":123,"com.graphhopper.util.InstructionListTest.testWayList":3,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":397,"com.graphhopper.GraphHopperAPITest.testDisconnected179":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":189,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":356,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":475,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":412,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":132,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":92,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":365,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":398,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":467,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":456,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":389,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":117,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":396,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":102,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":415,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":141,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":445,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":103,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":463,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":411,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":366,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":431,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":124,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":343,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":424,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":133,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":372,"com.graphhopper.util.TranslationMapTest.testToString":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":470,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":206,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":138,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":421,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":94,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":286,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":192,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":376,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":258,"com.graphhopper.reader.PrinctonReaderTest.testRead":474,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":403,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":425,"com.graphhopper.reader.OSMReaderTest.testOneWay":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":263,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":236,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":434,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":344,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":199,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":405,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":318,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":428,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":27,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":195,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":417,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":89,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":107,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":144,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":222,"com.graphhopper.routing.PathBidirRefTest.testExtract2":455,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":457,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":314,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":451,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":45,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":76,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":215,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":218,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":335,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":390,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":185,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":466,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":277,"com.graphhopper.GraphHopperTest.testPrepareOnly":129,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":327,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":465,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":482,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":223,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":6,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":171,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":370,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":480,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":198,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":242,"com.graphhopper.routing.AStarBidirectionTest.initializationError":339,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":113},"transformations":[{"failures":[0],"tindex":"645658c5-8290-11e5-9f64-615cc0782290","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    com.graphhopper.storage.GraphHopperStorage.close();\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"64567fd6-8290-11e5-9f64-8560b82c1a9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:262","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.TranslationHashMap.put(java.lang.String, java.lang.String)"},"variableMap":{"this":"trMap","value":"locale","key":"locale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.TranslationHashMap.doImport(com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.getResourceAsStream((java.lang.String + \".txt\")))"},"status":-1},{"failures":[26,27,28,29],"tindex":"64567fd7-8290-11e5-9f64-1363886c31de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"status":-1},{"failures":[],"tindex":"6456a6e8-8290-11e5-9f64-0fd37e4da4ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:333","type":"CtLocalVariableImpl","sourcecode":"int int = (double[].int) / 2"},"status":-2},{"failures":[],"tindex":"6456a6e9-8290-11e5-9f64-07763f668ddb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.initFromGraph()"},"variableMap":{"this":"tmpPrepareCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int)"},"status":-2},{"failures":[],"tindex":"6456a6ea-8290-11e5-9f64-4b9e78ddfa22","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"val","weight":"val","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[30,31],"tindex":"6456a6eb-8290-11e5-9f64-595b3f0f2422","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"6456cdfc-8290-11e5-9f64-cbbac6fc3650","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"startNode","currentIndex":"startNode","bucketSize":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-1},{"failures":[],"tindex":"6456cdfd-8290-11e5-9f64-a531ef813ed7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"oldRelationFlags","len":"oldRelationFlags","start":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:318","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6456cdfe-8290-11e5-9f64-5b7b682d25d7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:424","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"fetchWayGeometry\")"},"variableMap":{"this":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"6456cdff-8290-11e5-9f64-8ded368c8e24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:114","type":"CtLocalVariableImpl","sourcecode":"byte byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"6456f510-8290-11e5-9f64-b3585c1ce096","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:140","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], com.graphhopper.util.EdgeIterator.int)"},"status":0},{"failures":[],"tindex":"6456f511-8290-11e5-9f64-012d75f6c57c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"status":-2},{"failures":[3,42,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,52,60,64,94,95,96,97,98,72,73,99,74,100,101,102,103,23,104,105,106,107,108,109,110],"tindex":"6456f512-8290-11e5-9f64-27c140c8908f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.trimToSize(((com.graphhopper.util.PointList.getSize()) - int))"},"variableMap":{"removed":"baseNode","points":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:911","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[111,112,113,114,110],"tindex":"6456f513-8290-11e5-9f64-092c75d72d46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:116","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[111,79,83,112,87,113,91,107,114,110],"tindex":"64571c24-8290-11e5-9f64-4b93f859acba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"elev","lon":"maxEle","lat":"elev"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:116","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[115,116,117,118,119,120],"tindex":"64571c25-8290-11e5-9f64-19f3cdee3021","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:208","type":"CtAssignmentImpl","sourcecode":"long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int])"},"status":-1},{"failures":[121,122,123,124,125,126,127,128,32,33,129,130,40,131,132,41,133,0,134,135,136,137,138,139,42,43,140,141,111,142,143,144,145,146,147,78,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,79,168,169,170,171,172,80,173,174,175,176,81,177,178,179,180,181,82,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,83,202,203,204,205,206,84,207,208,209,210,85,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,112,227,228,229,230,231,86,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,87,252,253,254,255,256,88,257,258,259,260,89,261,262,263,264,265,113,266,267,268,269,270,271,272,273,90,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,91,294,295,296,297,298,92,299,300,301,302,93,303,304,305,306,307,44,45,308,115,309,46,310,47,311,48,312,49,116,117,50,51,52,53,313,54,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,55,56,57,331,332,118,333,58,334,59,335,60,336,61,119,120,62,63,64,65,337,66,338,339,340,341,342,343,344,345,346,347,348,349,9,350,351,10,352,353,354,355,356,357,358,359,11,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,12,403,404,13,405,406,407,408,409,410,411,412,14,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,15,429,430,431,432,433,434,435,436,16,437,438,439,440,441,442,17,443,444,445,446,447,448,449,18,450,451,452,453,454,455,456,94,457,458,95,96,459,460,461,97,462,463,464,98,465,466,467,72,73,468,99,74,469,100,101,470,102,103,471,472,473,474,475,476,75,477,478,479,114,110,76,480,481,482,483,484,485,77],"tindex":"64574336-8290-11e5-9f64-7f8b8ff36524","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"index","edgeId":"index","com.graphhopper.storage.EdgeAccess.NO_NODE":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"64576a47-8290-11e5-9f64-d149159b266c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"current","newSize":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:46","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n            gnu.trove.stack.array.TIntArrayStack.push(int);\n        } \n    }\n    com.graphhopper.coll.GHBitSet.add(int);\n} "},"status":0},{"failures":[330,55,56,57,331,332],"tindex":"64576a48-8290-11e5-9f64-7372dac54146","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"latSize","currentIndex":"lonSize","bucketSize":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:132","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initAlgo(int, int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6456f510-8290-11e5-9f64-b3585c1ce096","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]}]}