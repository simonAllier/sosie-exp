{"failureDictionary":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":40,"com.graphhopper.routing.PathTest.testFindInstruction":61,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":16,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":0,"com.graphhopper.routing.PathBidirRefTest.testExtract2":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":56,"com.graphhopper.routing.PathTest.testWayList":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":28,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":17,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":29,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":51,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":39,"com.graphhopper.GraphHopperTest.testFootAndCar":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":42,"com.graphhopper.util.InstructionListTest.testWayList2":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":33,"com.graphhopper.util.InstructionListTest.testWayList":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":20,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":22,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":9,"com.graphhopper.GraphHopperTest.testVia":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":31,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":49,"com.graphhopper.GraphHopperAPITest.testLoad":80,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":43,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":57,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.GraphHopperTest.testFootOnly":74,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":48,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":4,"com.graphhopper.routing.PathBidirRefTest.testExtract":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":71,"com.graphhopper.util.InstructionListTest.testFind":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":66,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":67},"transformations":[{"failures":[],"tindex":"131aa20a-7913-11e5-ba78-318f6d96572d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"131ac91b-7913-11e5-ba78-612cbe65494b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:97","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"variableMap":{"minLat":"factor","lat":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"131af02c-7913-11e5-ba78-f3c0634b685b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"dLon","delta":"dLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[9,10,11],"tindex":"131af02d-7913-11e5-ba78-71fb8c4db704","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"firstValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:215","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.isEmpty())) {\n    if (java.util.Set<java.lang.String>.contains(java.lang.String))\n        return 0;\n    \n    if (java.util.Set<java.lang.String>.contains(java.lang.String))\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"131af02e-7913-11e5-ba78-97e89ffadb8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"key","lastKey":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"131b655f-7913-11e5-ba78-192719daded6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"variableMap":{"ar_y":"java.lang.Double.NaN","ab_y":"java.lang.Double.NaN","ar_x":"java.lang.Double.NaN","ab_x":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:170","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"131b6560-7913-11e5-ba78-5d39580673d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"edgeId","nodeCount":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:533","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.EdgeAccess.isInBounds(int)))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"));\n"},"status":-1},{"failures":[],"tindex":"131b8c71-7913-11e5-ba78-f763eabd700d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:616","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member = com.graphhopper.reader.OSMRelation.getMembers().get(int);\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) != (com.graphhopper.reader.OSMRelation.Member.int))\n        continue;\n    \n    long long = com.graphhopper.reader.OSMRelation.Member.ref();\n    long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long);\n    long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n    if (long != long)\n        com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n    \n}"},"status":-2},{"failures":[],"tindex":"131b8c72-7913-11e5-ba78-ed0d496b284a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"minResolutionInMeter","hash":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:104","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"131b8c73-7913-11e5-ba78-7d7bbe24ca3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:180","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"variableMap":{"this":"this","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"131b8c74-7913-11e5-ba78-7ddcb2df2106","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"131bb385-7913-11e5-ba78-896c8c2cb0cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"131bb386-7913-11e5-ba78-a721eae3166b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"edgeId","factor":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:66","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"131bb387-7913-11e5-ba78-25e1b3376078","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"currentBucket","y2":"currentBucket","x1":"currentBucket","x2":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:79","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n} "},"status":-2},{"failures":[],"tindex":"131bb388-7913-11e5-ba78-1f82d7ead627","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"variableMap":{"em":"this","encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"131bda99-7913-11e5-ba78-e1ab8a615d62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:376","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:159","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"131bda9a-7913-11e5-ba78-71e4c3682bf0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rte>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"status":-2},{"failures":[],"tindex":"131c28bb-7913-11e5-ba78-69556d75594d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:143","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity()"},"status":-2},{"failures":[],"tindex":"131c28bc-7913-11e5-ba78-791741a9f2b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:225","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkseg>\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}