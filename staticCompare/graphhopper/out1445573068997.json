{"failureDictionary":{"com.graphhopper.util.InstructionListTest.testWayList2":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":8,"com.graphhopper.routing.PathTest.testFindInstruction":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":4,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.util.InstructionListTest.testCreateGPX":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":2,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":16,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":13,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":3,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":1,"com.graphhopper.util.InstructionListTest.testFind":9,"com.graphhopper.routing.PathTest.testWayList":5,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"2843792f-793b-11e5-ba36-773966ed02b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:58","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.Instruction>.add(com.graphhopper.util.Instruction)"},"status":-1},{"failures":[],"tindex":"2843a040-793b-11e5-ba36-bd4293a34b76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:584","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(new com.graphhopper.routing.util.EncodingManager(java.lang.String , int))"},"status":-2},{"failures":[],"tindex":"2843a041-793b-11e5-ba36-89cee891a67c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"unvisitedDeadEnds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:80","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"2843c752-793b-11e5-ba36-25411222b5e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:45","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"2843c753-793b-11e5-ba36-d7dda23bca8c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_LOCATION_IDX":"com.graphhopper.util.Constants.VERSION_SHORTCUT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"shortcuts.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"2843c754-793b-11e5-ba36-5b50a0d09b39","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:353","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:537","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"2843ee65-793b-11e5-ba36-c5ea7676ad20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:107","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int[][int])"},"status":-2},{"failures":[],"tindex":"2843ee66-793b-11e5-ba36-61dda4ac0b44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:953","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.GraphHopper.getDefaultVehicle().toString()"},"status":-2},{"failures":[],"tindex":"2843ee67-793b-11e5-ba36-7ff0ab4f7d39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:272","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"2843ee68-793b-11e5-ba36-576f1eab4143","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1034","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(0), false)"},"variableMap":{"queryGraph":"queryGraph","request":"request","fromQResult":"toQResult"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1045","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(int), true)"},"status":-2},{"failures":[],"tindex":"28441579-793b-11e5-ba36-655b6051b680","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"bLen","to":"bLen","lonSize":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"2844157a-793b-11e5-ba36-1d8790e15ce0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setEndNode(int)"},"variableMap":{"this":"this","nodeTo":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"2844157b-793b-11e5-ba36-07af6f37e958","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:250","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"2844157c-793b-11e5-ba36-d17eca8bde6e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:100","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"variableMap":{"ret":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:215","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"2844157d-793b-11e5-ba36-21a2596f3ebb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:50","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer();\n    for ( ; int < int ; int++) {\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        if ((double > 90) || (double < (-90)))\n            java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n        \n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if ((double > 180) || (double < (-180)))\n            java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n        \n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n                java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n            } \n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n                java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n            } \n        }\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"problem with node \" + int) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"28443c8e-793b-11e5-ba36-6f3f8cc50686","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:166","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"28443c8f-793b-11e5-ba36-e9f16ede6820","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:63","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"28443c90-793b-11e5-ba36-89a69c347e7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"maxEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:182","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)));\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)));\n} "},"status":-2},{"failures":[],"tindex":"284463a1-793b-11e5-ba36-377a10131893","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"284463a2-793b-11e5-ba36-d177c448d049","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:151","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}