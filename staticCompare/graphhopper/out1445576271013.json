{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":41,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":37,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.GraphHopperTest.testPrepareOnly":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":10,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":68,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.util.GHUtilityTest.testCopy":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4},"transformations":[{"failures":[],"tindex":"9cd1901f-7942-11e5-bc40-6336d73e3273","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[0,1,2,3],"tindex":"9cd1b730-7942-11e5-bc40-15a5c95757d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:605","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"9cd1de41-7942-11e5-bc40-5335a316c9cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:91","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"status":-2},{"failures":[],"tindex":"9cd1de42-7942-11e5-bc40-a50173141d60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"9cd1de43-7942-11e5-bc40-d73888a287bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"r_lon_deg","dy":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:226","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[4,5,6],"tindex":"9cd1de44-7942-11e5-bc40-57220de15306","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"frozen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:188","type":"CtAssignmentImpl","sourcecode":"boolean = (com.graphhopper.storage.DataAccess.getHeader((9 * 4))) == 1"},"status":-1},{"failures":[],"tindex":"9cd20555-7942-11e5-bc40-6b444e8ea799","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM_STORE","defaultType":"com.graphhopper.storage.DAType.RAM_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,5,54,55,56,57,58,59,60,61],"tindex":"9cd20556-7942-11e5-bc40-55c122f5b74a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.create(long)"},"status":-1},{"failures":[62,63,64,65,66,67,68],"tindex":"9cd20557-7942-11e5-bc40-c721db5a2363","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"orientation":"queryLon","java.lang.Math.PI":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:84","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n        continue;\n    \n    for (int int, int int = 0 ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            if (double <= 0)\n                break;\n            \n            com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"9cd22c68-7942-11e5-bc40-8169c6e7d71f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"9cd22c69-7942-11e5-bc40-493bddc12036","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:622","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-2},{"failures":[],"tindex":"9cd22c6a-7942-11e5-bc40-bba1da61c678","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints())"},"status":-2},{"failures":[],"tindex":"9cd22c6b-7942-11e5-bc40-e57615b968c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-2},{"failures":[],"tindex":"9cd2537c-7942-11e5-bc40-5b1a8ae09772","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:169","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"9cd2537d-7942-11e5-bc40-4519a3f53f66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"status":-2},{"failures":[],"tindex":"9cd2537e-7942-11e5-bc40-8bcc71178500","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:100","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" };\n    for (java.lang.String java.lang.String : java.lang.String[]) {\n        java.io.InputStream java.io.InputStream = java.lang.Object.getClass().getResourceAsStream((java.lang.String + \"_names.txt\"));\n        for (java.lang.String java.lang.String : com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(java.io.InputStream , com.graphhopper.util.Helper.java.nio.charset.Charset))) {\n            int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3));\n            if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n                int = -int;\n            \n            int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7));\n            if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n                int = -int;\n            \n            int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(int, int);\n            java.lang.String java.lang.String = com.graphhopper.reader.dem.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String);\n            if (java.lang.String != null)\n                throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n            \n        }\n    }\n    return this;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalStateException(\"Cannot load area names from classpath\" , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"9cd27a8f-7942-11e5-bc40-bfc61dba0b97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"segmentCount","maxEdgesCount":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"9cd27a90-7942-11e5-bc40-ab7086807213","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:218","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int);\n} else {\n    long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int);\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n}"},"status":-2},{"failures":[],"tindex":"9cd27a91-7942-11e5-bc40-fda6ffb77a2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"9cd27a92-7942-11e5-bc40-53007e7f1e51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"numTiles","maxLeafEntries":"numTiles"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:122","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}