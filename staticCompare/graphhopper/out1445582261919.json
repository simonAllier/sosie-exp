{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":44,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":214,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":34,"com.graphhopper.reader.OSMReaderTest.testFerry":240,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":230,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":231,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":165,"com.graphhopper.routing.QueryGraphTest.testOneWay":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":107,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":134,"com.graphhopper.reader.OSMReaderTest.testWithBounds":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":280,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":55,"com.graphhopper.GraphHopperTest.testPrepare":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":213,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":8,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":177,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":196,"com.graphhopper.util.InstructionListTest.testWayList":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":205,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":233,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":229,"com.graphhopper.GraphHopperAPITest.testDisconnected179":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":40,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":202,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":135,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":226,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":161,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":56,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":263,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":192,"com.graphhopper.GraphHopperTest.testLoadOSM":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":122,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":25,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":136,"com.graphhopper.reader.OSMReaderTest.testSort":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":160,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":103,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":59,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":130,"com.graphhopper.coll.OSMIDMapTest.testGet2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":195,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":101,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":60,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":116,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":210,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":225,"com.graphhopper.util.GHUtilityTest.testSort":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":139,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":199,"com.graphhopper.coll.OSMIDMapTest.testGetLong":274,"com.graphhopper.coll.IntIntBinHeapTest.testSize":3,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":113,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":154,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":268,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":23,"com.graphhopper.GraphHopperAPITest.testLoad":151,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":217,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":157,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":163,"com.graphhopper.reader.OSMReaderTest.testBarriers":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":104,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":62,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":204,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":29,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":209,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":183,"com.graphhopper.reader.PrinctonReaderTest.testRead":252,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":67,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":89,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":95,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":279,"com.graphhopper.util.InstructionListTest.testWayList2":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":281,"com.graphhopper.reader.OSMReaderTest.testFoot":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":142,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":286,"com.graphhopper.coll.IntIntBinHeapTest.test0":4,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":140,"com.graphhopper.reader.OSMReaderTest.testOneWay":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":66,"com.graphhopper.coll.IntIntBinHeapTest.testClear":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":93,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":153,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":97,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":147,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":9,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":46,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":245,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":216,"com.graphhopper.coll.OSMIDMapTest.testGet":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":180,"com.graphhopper.routing.PathBidirRefTest.testExtract":220,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":273,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":227,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":260,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":285,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":129,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":257,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":146,"com.graphhopper.util.GHUtilityTest.testSort2":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":211,"com.graphhopper.reader.OSMReaderTest.testMain":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":88,"com.graphhopper.routing.PathBidirRefTest.testExtract2":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":143,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":132,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":26,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":118,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":77,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":185,"com.graphhopper.storage.GraphHopperStorageTest.testClone":12,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":115,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":24,"com.graphhopper.GraphHopperTest.testFootAndCar":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":64,"com.graphhopper.util.GHUtilityTest.testSortDirected":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":100,"com.graphhopper.GraphHopperTest.testPrepareOnly":255,"com.graphhopper.GraphHopperTest.testVia":261,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":206,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":119,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":169,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":236,"com.graphhopper.GraphHopperTest.testFootOnly":269,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":124,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":223,"com.graphhopper.util.InstructionListTest.testFind":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":145},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"8fab4a17-7950-11e5-90fc-1fc9f0c8d807","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:51","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"8fab7128-7950-11e5-90fc-717fddf6c9d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"variableMap":{"dataAccess":"edges","MAGIC_INT":"nextEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[10,17,18,22,27,28,35,42,43,47,52,53,62,69,70,74,79,80,94,101,102,106,111,112,160,161,251],"tindex":"8fab9839-7950-11e5-90fc-d955d3ee8730","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"status":-1},{"failures":[271,272,273,274,275],"tindex":"8fab983a-7950-11e5-90fc-cd3bab5212dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8)"},"status":-1},{"failures":[6,276,277,58,278,90,279,117,118,119,280,120,121,122,123,124,281,125,282,126,127,128,129,130,283,131,132,133,284,134,135,136,137,138,285,139,286,140,141,142,143,144,287,145,146,151,152,204,209,210,213,240,241,242,243,244,245,246,247,248,288,249,250,289,251,254,255,290,256,257,258,259,260,291,261,262,263,264,265,266,267,268,269,270],"tindex":"8fab983b-7950-11e5-90fc-39e9a7e7d6cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"8fabbf4c-7950-11e5-90fc-239ce6fe736b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:290","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8fabbf4d-7950-11e5-90fc-db7b66064cc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:282","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open()"},"status":-2},{"failures":[],"tindex":"8fabbf4e-7950-11e5-90fc-6fc69495770f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"flags","tmpValue":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:370","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleNodeTags(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[],"tindex":"8fabbf4f-7950-11e5-90fc-0572fdd4d673","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:606","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"8fabbf50-7950-11e5-90fc-1fb31e1b4801","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:146","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0)\n        return false;\n    \n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    byte[][] = new byte[int][];\n    for (int int = 0 ; int < int ; int++) {\n        byte[] byte[] = new byte[int];\n        int int = java.io.RandomAccessFile.read(byte[]);\n        if (int <= 0)\n            throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n        \n        byte[][][int] = byte[];\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[],"tindex":"8fabbf51-7950-11e5-90fc-051a09f06f8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:126","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"8fabbf52-7950-11e5-90fc-ef468814e7e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:112","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"8fabe563-7950-11e5-90fc-33e3e7ad2d95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[],"tindex":"8fabe564-7950-11e5-90fc-8b645ab74d21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"8fabe565-7950-11e5-90fc-715f2e7d894f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:421","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"8fabe566-7950-11e5-90fc-75e188405d0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"8fabe567-7950-11e5-90fc-63eab6d69c13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:105","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String);\nelse\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n"},"status":-2},{"failures":[],"tindex":"8fabe568-7950-11e5-90fc-db66c7f19325","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:122","type":"CtIfImpl","sourcecode":"if ((java.lang.String.contains(\"_\")) && (com.graphhopper.util.Translation == null))\n    com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2));\n"},"status":-2},{"failures":[],"tindex":"8fac0c79-7950-11e5-90fc-5597505fa5c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n    com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n"},"status":-2},{"failures":[],"tindex":"8fac0c7a-7950-11e5-90fc-e5799330d253","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}