{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":21,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":10,"com.graphhopper.reader.OSMReaderTest.testMain":50,"com.graphhopper.reader.OSMReaderTest.testFerry":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":19,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":6,"com.graphhopper.reader.OSMReaderTest.testWithBounds":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":27,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":43,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":44,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":62,"com.graphhopper.GraphHopperTest.testPrepare":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":2,"com.graphhopper.GraphHopperTest.testFootAndCar":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":35,"com.graphhopper.reader.OSMReaderTest.testFoot":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":14,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":18,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":30,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":65,"com.graphhopper.GraphHopperTest.testVia":73,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":7,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":40,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":28,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":3,"com.graphhopper.GraphHopperTest.testFootOnly":81,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":34,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":52,"com.graphhopper.GraphHopperTest.testLoadOSM":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":66,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":69,"com.graphhopper.reader.OSMReaderTest.testSort":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":67},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"29ab070c-7910-11e5-8580-45caaaaa17a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double)"},"status":-1},{"failures":[],"tindex":"29ab2e1d-7910-11e5-8580-35f400f8c857","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"tmp","entityType":"nextEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:190","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"29ab2e1e-7910-11e5-8580-d94b4bf5a4cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:695","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"29ab552f-7910-11e5-8580-636554646fad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"29ab5530-7910-11e5-8580-c19e36f49a6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"currFrom","edgeEntry":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":-2},{"failures":[],"tindex":"29ab5531-7910-11e5-8580-65b0f4df6e42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"edgeTo","cl":"edgeTo","tmpPrev":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:55","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"29ab5532-7910-11e5-8580-67760a5e2c1b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"nextEdgeId","index":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-2},{"failures":[],"tindex":"29ab5533-7910-11e5-8580-93732be20c57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:903","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"variableMap":{"equalNormedDelta":"queryLat","currNormedDist":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:739","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1) {\n    if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n        double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n        double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n        if (double < double)\n            return true;\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"29ab5534-7910-11e5-8580-e3ab0c2ffe5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"29ab5535-7910-11e5-8580-77ab63b4003a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"com.graphhopper.util.EdgeIterator.NO_EDGE","nodeCount":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:299","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge.int) != (com.graphhopper.routing.AStar.AStarEdge.int)) {\n    com.graphhopper.routing.AStar.AStarEdge = ((com.graphhopper.routing.AStar.AStarEdge)(com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry));\n    double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n} else {\n    if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n        return ;\n    \n}"},"status":-2},{"failures":[],"tindex":"29ab7c46-7910-11e5-8580-53fef2dd9379","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:445","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"29ab7c47-7910-11e5-8580-0114fb5aaf7e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"delta","nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:364","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.get(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.get(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.get(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"29ab7c48-7910-11e5-8580-1949a3693ec4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:188","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"29ab7c49-7910-11e5-8580-e1ed44e46a27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"tmpWeight","resultOrientation":"weight","baseOrientation":"tmpWeight","java.lang.Math.PI":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:208","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"29ab7c4a-7910-11e5-8580-b1cf0dca91e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1084","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.index.LocationIndexTree.loadExisting())) {\n    com.graphhopper.GraphHopper.ensureWriteAccess();\n    com.graphhopper.storage.index.LocationIndexTree.prepareIndex();\n} "},"status":-2},{"failures":[],"tindex":"29ab7c4b-7910-11e5-8580-d53bbc427be7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"29aba35c-7910-11e5-8580-7d33c04144b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[],"tindex":"29aba35d-7910-11e5-8580-4505cf3db366","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"to","dLat":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"29aba35e-7910-11e5-8580-179cf4fe378f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:312","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:239","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"29aba35f-7910-11e5-8580-c50075622c80","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:159","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"variableMap":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:835","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}