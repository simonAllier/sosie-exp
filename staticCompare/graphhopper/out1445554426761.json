{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":22,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":31,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":88,"com.graphhopper.routing.PathTest.testFindInstruction":35,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":36,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":19,"com.graphhopper.routing.QueryGraphTest.testOneWay":30,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":84,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":44,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":114,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":18,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":50,"com.graphhopper.GraphHopperTest.testPrepare":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":45,"com.graphhopper.util.InstructionListTest.testWayList2":72,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":121,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":92,"com.graphhopper.util.InstructionListTest.testWayList":70,"com.graphhopper.reader.OSMReaderTest.testOneWay":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":41,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":0,"com.graphhopper.GraphHopperAPITest.testDisconnected179":82,"com.graphhopper.util.PointListTest.testAddPL":79,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":65,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":85,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":108,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":117,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":110,"com.graphhopper.reader.OSMReaderTest.testSort":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":115,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":53,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":96,"com.graphhopper.reader.OSMReaderTest.testMain":6,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":23,"com.graphhopper.util.PointListTest.testReverse":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":120,"com.graphhopper.routing.PathTest.testWayList":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":49,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":99,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":102,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":43,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":74,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":77,"com.graphhopper.GraphHopperTest.testFootAndCar":62,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":89,"com.graphhopper.util.InstructionListTest.testCreateGPX":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":101,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":26,"com.graphhopper.GraphHopperTest.testPrepareOnly":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":33,"com.graphhopper.GraphHopperTest.testVia":59,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":20,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":66,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":13,"com.graphhopper.util.DouglasPeuckerTest.testParse":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":109,"com.graphhopper.GraphHopperAPITest.testLoad":81,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":100,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":24,"com.graphhopper.GraphHopperTest.testFootOnly":67,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":105,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":106,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.util.InstructionListTest.testFind":69,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":68,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":95},"transformations":[{"failures":[0,1,2,3],"tindex":"c0a0ec5c-790f-11e5-9788-25628879df1f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:265","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"continue\") : com.graphhopper.util.Translation.tr(\"continue_onto\", java.lang.String)"},"variableMap":{"str":"wayTypeName","streetName":"wayTypeName","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"c0a1136d-790f-11e5-9788-0da20fa85e5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"c0a1136e-790f-11e5-9788-97337ada8235","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:134","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"c0a13a7f-790f-11e5-9788-a78796e15305","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:193","type":"CtIfImpl","sourcecode":"if (int > ((com.graphhopper.storage.GraphHopperStorage.getAllEdges().getMaxId()) / 2))\n    throw new java.lang.IllegalStateException((((\"Too many total edges were removed: \" + int) + \", all edges:\") + (com.graphhopper.storage.GraphHopperStorage.getAllEdges().getMaxId())));\n"},"variableMap":{"allRemoved":"edgeTo","ghStorage":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:447","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n    if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n        com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n        for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n            com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"c0a13a80-790f-11e5-9788-d14a773985f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:79","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"c0a16191-790f-11e5-9788-87e461d5782b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:279","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"c0a16192-790f-11e5-9788-5d370d9464b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"variableMap":{"res":"longSegmentSize","value":"byteCount","maxBits":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:121","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"c0a16193-790f-11e5-9788-17e4237b3602","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtReturnImpl","sourcecode":"return \"hiking\".equals(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c0a16194-790f-11e5-9788-dba7b045b49d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:269","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"c0a16195-790f-11e5-9788-f5653c7c509a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:231","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"variableMap":{"delNodes":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"c0a188a6-790f-11e5-9788-396b8fe2e6ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:109","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc)"},"variableMap":{"tmpLon":"lat","dist":"lat","calc":"com.graphhopper.util.Helper.DIST_EARTH","circle":"this","tmpLat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.Circle.this(double, double, double, com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc)"},"status":-2},{"failures":[],"tindex":"c0a188a7-790f-11e5-9788-69b1ff7a36cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"variableMap":{"name":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"c0a188a8-790f-11e5-9788-3b92d0e0725a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"c0a188a9-790f-11e5-9788-f7fb587fdc09","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"c0a1afba-790f-11e5-9788-8d851648bb5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:117","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-2},{"failures":[],"tindex":"c0a1afbb-790f-11e5-9788-fb9d2eee33dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1020","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = java.util.List<com.graphhopper.storage.index.QueryResult>.get(0)"},"variableMap":{"qResults":"qResults"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1042","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = java.util.List<com.graphhopper.storage.index.QueryResult>.get(int)"},"status":-2},{"failures":[],"tindex":"c0a1afbc-790f-11e5-9788-4717fa16f5e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:345","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int)"},"variableMap":{"i":"removed","fullPL":"points","basePoints":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.trimToSize(((com.graphhopper.util.PointList.getSize()) - int))"},"status":-2},{"failures":[],"tindex":"c0a1afbd-790f-11e5-9788-2972a74d93ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"c0a1afbe-790f-11e5-9788-c98d81fb358f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:426","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"variableMap":{"str":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-2},{"failures":[],"tindex":"c0a1d6cf-790f-11e5-9788-1df1e0865df6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:65","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String, boolean).release();\n    java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String);\n    if ((java.io.File.exists()) && (!(java.io.File.delete())))\n        throw new java.lang.RuntimeException((\"Cannot delete \" + java.io.File));\n    \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}