{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":146,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":5,"com.graphhopper.routing.PathTest.testFindInstruction":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":16,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":109,"com.graphhopper.routing.QueryGraphTest.testOneWay":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":25,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":75,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":97,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":36,"com.graphhopper.reader.OSMReaderTest.testWithBounds":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":17,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":57,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":77,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":131,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":119,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":79,"com.graphhopper.search.NameIndexTest.testFlush":107,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":61,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":84,"com.graphhopper.util.InstructionListTest.testWayList":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":69,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":38,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":139,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":1,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":30,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":46,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":134,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":125,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":144,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":26,"com.graphhopper.routing.PathTest.testWayList":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":23,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":44,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":118,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":4,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":6,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":102,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":143,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":113,"com.graphhopper.GraphHopperTest.testPrepareOnly":151,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":89,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":28,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":68,"com.graphhopper.GraphHopperAPITest.testLoad":3,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":149,"com.graphhopper.GraphHopperTest.testFootOnly":154,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":71,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":34,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":73,"com.graphhopper.storage.EdgeTest.testCloneFull":15,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":136,"com.graphhopper.util.GHUtilityTest.testCopy":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":43},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"02868fde-8291-11e5-9353-29048a69c6ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"status":-1},{"failures":[],"tindex":"0286ddff-8291-11e5-9353-c351d2bda9b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:541","type":"CtIfImpl","sourcecode":"if (((int < 0) && (int != (java.lang.Integer.int))) || (int >= (int)))\n    throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"));\n"},"status":0},{"failures":[],"tindex":"0286de00-8291-11e5-9353-f51dbc9ad0f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"queryLat","r_lat":"deltaLat","a_lat":"queryLat","delta_lon":"deltaLat","r_lon":"queryLat","a_lon":"queryLat","norm":"deltaLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:720","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[],"tindex":"0286de01-8291-11e5-9353-5b64ee8d1c98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"02870512-8291-11e5-9353-89c0118a19d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:986","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) ; int++) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = java.util.List<com.graphhopper.util.shapes.GHPoint>.get(int);\n    com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = com.graphhopper.storage.index.LocationIndex.findClosest(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.routing.util.EdgeFilter);\n    if (!(com.graphhopper.storage.index.QueryResult.isValid()))\n        com.graphhopper.GHResponse.addError(new java.lang.IllegalArgumentException((((\"Cannot find point \" + int) + \": \") + com.graphhopper.util.shapes.GHPoint)));\n    \n    java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult);\n}"},"status":-2},{"failures":[14],"tindex":"02870513-8291-11e5-9353-fb5b5cf3d021","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"variableMap":{"file":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:190","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-1},{"failures":[15],"tindex":"02870514-8291-11e5-9353-59930e3aa109","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:54","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"02870515-8291-11e5-9353-870a27b0943e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"fileLockName","name":"fileLockName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1166","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.forceRemove(java.lang.String, true)"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"02872c26-8291-11e5-9353-97304b705d47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:416","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[1,2,41,42,43,44,45,20,46,47,48,49,26,50,51,52,32,53,54,55,56,38,57,58,59,60,61,62,63],"tindex":"02872c27-8291-11e5-9353-f306f2c465c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"i","tmpSize":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:851","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n    int += 4;\n} "},"status":-1},{"failures":[64],"tindex":"02872c28-8291-11e5-9353-29cc22295014","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"status":-1},{"failures":[65],"tindex":"02872c29-8291-11e5-9353-2d8976271ff5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"fromWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:925","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[66,44,67,68,46,69,70,71,48,72,73,50,51,74,75,53,55,76,77,57,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,63,94],"tindex":"0287533a-8291-11e5-9353-512c10071868","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"variableMap":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:352","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"0287533b-8291-11e5-9353-75d94ed4ec16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[107],"tindex":"0287533c-8291-11e5-9353-310c19296c31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:59","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.combineIntsToLong(com.graphhopper.storage.DataAccess.getHeader(0), com.graphhopper.storage.DataAccess.getHeader(4))"},"status":-1},{"failures":[],"tindex":"02877a4d-8291-11e5-9353-15b6820ebc92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getOsmWayIdSet().size()"},"status":-2},{"failures":[108,109,110,59,60,111,112,113,78,61,114,115,62,116,117,86,118,119,120,121,122,123,124,125,7,8,9,10,11,12,13],"tindex":"02877a4e-8291-11e5-9353-9bf2fdcbf31f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:632","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int)"},"status":-1},{"failures":[126,127,128,129,130,131,132,133,134,81,83,84,135,136,137,138,116,139,140,117,141,142,143,85,86,118,144,145,119,146,147,148,149,150,120,151,152,7,8,11,12,153,154],"tindex":"02877a4f-8291-11e5-9353-bf9b903f6e4b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:312","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.close()"},"variableMap":{"cg":"prepareGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:352","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.disconnect(com.graphhopper.util.CHEdgeExplorer, com.graphhopper.util.CHEdgeIterator)"},"status":-1},{"failures":[65],"tindex":"0287a160-8291-11e5-9353-59b475ca320d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.readMembers(javax.xml.stream.XMLStreamReader)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0286ddff-8291-11e5-9353-c351d2bda9b0","diffs":[{"branches":{"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":["com.graphhopper.storage.BaseGraph$EdgeIterable_boolean_init(int,int).t2","com.graphhopper.util.Helper_java.lang.String_nf(long).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.nf"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}