{"failureDictionary":{"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":15,"com.graphhopper.routing.PathTest.testFindInstruction":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":111,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":22,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":50,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":47,"com.graphhopper.reader.OSMReaderTest.testWithBounds":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":98,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":73,"com.graphhopper.reader.PrinctonReaderTest.testRead":105,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":51,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":65,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":40,"com.graphhopper.reader.OSMReaderTest.testFoot":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":45,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":104,"com.graphhopper.reader.OSMReaderTest.testOneWay":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":95,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":21,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":56,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":106,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":100,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":71,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":87,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":28,"com.graphhopper.reader.OSMReaderTest.testSort":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":46,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":97,"com.graphhopper.reader.OSMReaderTest.testMain":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":41,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":102,"com.graphhopper.routing.PathBidirRefTest.testExtract2":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":16,"com.graphhopper.routing.PathTest.testWayList":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":103,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":11,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":96,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":18,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":75,"com.graphhopper.routing.PathTest.testTime":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":20,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.GraphHopperTest.testPrepareOnly":66,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":48,"com.graphhopper.GraphHopperAPITest.testLoad":76,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.GraphHopperTest.testFootOnly":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":101,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":33,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":17,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":49,"com.graphhopper.reader.OSMReaderTest.testBarriers":55,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":89,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":34,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":31},"transformations":[{"failures":[],"tindex":"1bde93fa-827e-11e5-83ab-097446a50ee5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"r_lat_deg","incDist2DSum":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:225","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"1bdebb0b-827e-11e5-83ab-db1a20d77ffe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"flags","ferryBit":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"1bdebb0c-827e-11e5-83ab-5191a70cd41c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:50","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.Weighting = com.graphhopper.routing.util.Weighting"},"variableMap":{"singleCHWeighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1017","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createTurnWeighting(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.QueryGraph, com.graphhopper.routing.util.FlagEncoder)"},"status":0},{"failures":[],"tindex":"1bdebb0d-827e-11e5-83ab-077ab9e72e79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:60","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.OSMInputFile.openPBFReader(java.io.InputStream);\n} else {\n    com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream);\n}"},"status":-2},{"failures":[],"tindex":"1bdebb0e-827e-11e5-83ab-773df16d3446","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:237","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[1,52,53,54,55,56,57,58,59,60,61,62,2,63,64,65,66,67,3,4,5,6,7,8,68,9,69,70,71,72,73,74,75],"tindex":"1bdebb0f-827e-11e5-83ab-172605754714","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"key","maxBit":"key","delta":"low","maxBits":"high","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    long long = long[][int];\n    if (long < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[76,77,78,79,80,81,82,3,4,5,6,7,8,9,83,40,84,85,41,86,87,42,43,44,45,88,89,90,91,92,93,94,95,47,96,97,98,99,100,101,102,103],"tindex":"1bdee220-827e-11e5-83ab-9dfd8c232c89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"currEdge","ase":"currEdge","currEdge":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:87","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"1bdee221-827e-11e5-83ab-0bfb09794e68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:47","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[],"tindex":"1bdee222-827e-11e5-83ab-0924d7149bc3","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"latlon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"1bdee223-827e-11e5-83ab-cf6a8cdfe0a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"origEdgeId","b":"origEdgeId","baseGraph":"mainGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"status":-2},{"failures":[76,3,4,5,6,7,8,9,69],"tindex":"1bdee224-827e-11e5-83ab-9fed18c5f983","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1073","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setDebugInfo(java.lang.String)"},"status":-1},{"failures":[11,21,25,28],"tindex":"1bdf0935-827e-11e5-83ab-f33b6cbf8cca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"highwayTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    int = java.lang.Integer;\n    if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n        if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n            int = java.lang.Integer;\n        else\n            int = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"1bdf0936-827e-11e5-83ab-27627f80b01d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"prepareLazyUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:575","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.updates.lazy\", int)"},"status":0},{"failures":[],"tindex":"1bdf0937-827e-11e5-83ab-a57780722d25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:206","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[104],"tindex":"1bdf0938-827e-11e5-83ab-019467acce12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-1},{"failures":[58],"tindex":"1bdf0939-827e-11e5-83ab-0b260a7741dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"fromWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:925","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[],"tindex":"1bdf093a-827e-11e5-83ab-d352e014ab38","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"status":-2},{"failures":[105,106],"tindex":"1bdf304b-827e-11e5-83ab-67872348ecb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:79","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String[][int])"},"status":-1},{"failures":[],"tindex":"1bdf304c-827e-11e5-83ab-2f6834516b73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:928","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"instructions\", boolean)"},"variableMap":{"request":"request","enableInstructions":"calcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:929","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"calcPoints\", boolean)"},"status":0},{"failures":[11,107,108,109,21,110,111,112,25,113,114,30,115],"tindex":"1bdf304d-827e-11e5-83ab-a11e17d1b730","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:542","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1bdebb0c-827e-11e5-83ab-5191a70cd41c","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).e1","com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).e1","com.graphhopper.GraphHopper_com.graphhopper.routing.util.Weighting_createTurnWeighting(com.graphhopper.routing.util.Weighting,com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.createTurnWeighting"]},"type":"staticDiff"}]},{"transformation":"1bdf304c-827e-11e5-83ab-2f6834516b73","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHRequest.getHints","com.graphhopper.util.PMap.getBool"]},"type":"staticDiff"}]},{"transformation":"1bdf0936-827e-11e5-83ab-27627f80b01d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}