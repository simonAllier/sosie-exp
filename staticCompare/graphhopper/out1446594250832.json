{"failureDictionary":{"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":0,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":17,"com.graphhopper.coll.OSMIDMapTest.testGetLong":7,"com.graphhopper.coll.OSMIDMapTest.testGet":5,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":3,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":9,"com.graphhopper.routing.PathTest.testWayList":2,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":12,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":1,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":11,"com.graphhopper.coll.OSMIDMapTest.testGet2":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":13},"transformations":[{"failures":[0,1],"tindex":"c810dbd4-8284-11e5-8bbf-d93b70fce901","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:91","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-1},{"failures":[],"tindex":"c81102e5-8284-11e5-8bbf-01e9b3d1bada","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:263","type":"CtForEachImpl","sourcecode":"for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force();\n}"},"status":0},{"failures":[],"tindex":"c81102e6-8284-11e5-8bbf-8fe7a75c8023","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:240","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.DijkstraBidirectionRef.(getName())));\n    \n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n        com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-1},{"failures":[2],"tindex":"c81102e7-8284-11e5-8bbf-334a9e2a2aca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:207","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"variableMap":{"str":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:287","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\")"},"status":-1},{"failures":[3,4],"tindex":"c81102e8-8284-11e5-8bbf-27d7a7e75127","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:280","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n        throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n    \n}"},"status":-1},{"failures":[],"tindex":"c81129f9-8284-11e5-8bbf-830f0ee3c7a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"c81129fa-8284-11e5-8bbf-0db5df975b0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:262","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(int, boolean)"},"status":-2},{"failures":[],"tindex":"c81129fb-8284-11e5-8bbf-61ffcd321f2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:249","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    byte[] byte[] = new byte[(2 * (int)) * (int)];\n    com.graphhopper.storage.DataAccess.create(byte[].int);\n    try {\n        java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n        java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n        java.io.InputStream java.io.InputStream;\n        if (!(java.io.File.exists())) {\n            for (int int = 0 ; int < 3 ; int++) {\n                try {\n                    com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                    break;\n                } catch (java.net.SocketTimeoutException ex) {\n                    java.lang.Thread.sleep(2000);\n                    continue;\n                } catch (java.io.FileNotFoundException ex) {\n                    java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                    continue;\n                }\n            }\n        } \n        java.io.InputStream = new java.io.FileInputStream(java.io.File);\n        java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n        java.util.zip.ZipInputStream.getNextEntry();\n        java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n        int int;\n        while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n            for (int int = 0 ; int < int ; int += 2) {\n                short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                if ((short < (-1000)) || (short > 12000))\n                    short = java.lang.Short.short;\n                \n                com.graphhopper.storage.DataAccess.setShort(int, short);\n            }\n        }\n        com.graphhopper.storage.DataAccess.flush();\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"status":-2},{"failures":[5,6,7,8],"tindex":"c81129fc-8284-11e5-8bbf-455c7a85bac9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16],"tindex":"c811510d-8284-11e5-8bbf-3bd093cf4d50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"c811510e-8284-11e5-8bbf-0bbdd7ddb791","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":0},{"failures":[],"tindex":"c811510f-8284-11e5-8bbf-4f094ce03c28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","destination":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[17],"tindex":"c8117820-8284-11e5-8bbf-31f5c08b47cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:932","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[],"tindex":"c8117821-8284-11e5-8bbf-87e2f1f18f8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"status":-2},{"failures":[],"tindex":"c8117822-8284-11e5-8bbf-d5a82f896197","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:572","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setCHWeighting(java.lang.String)"},"variableMap":{"tmpCHWeighting":"graphHopperFolder","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:524","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":0},{"failures":[],"tindex":"c8117823-8284-11e5-8bbf-63b9e491ed99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:183","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double))) / (double))));\nelse\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double))) / (double))));\n"},"status":-2},{"failures":[],"tindex":"c8117824-8284-11e5-8bbf-617edf248748","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:925","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.search.NameIndex.put(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"c8119f35-8284-11e5-8bbf-37ca22a03901","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"optimize to remove subnetworks (\" + (int)) + \"), \") + \"unvisited-dead-end-nodes (\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c8117822-8284-11e5-8bbf-d5a82f896197","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.setGraphHopperLocation"]},"type":"staticDiff"}]},{"transformation":"c811510e-8284-11e5-8bbf-0bbdd7ddb791","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.ensureNotLoaded"]},"type":"staticDiff"}]},{"transformation":"c81102e5-8284-11e5-8bbf-01e9b3d1bada","diffs":[{"methodsDiff":{"delete":["java.nio.MappedByteBuffer.force"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]},{"transformation":"c8119f35-8284-11e5-8bbf-37ca22a03901","diffs":[{"methodsDiff":{"delete":["java.util.concurrent.atomic.AtomicInteger.get","org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}