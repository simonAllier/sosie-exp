{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":156,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":162,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":6,"com.graphhopper.util.BitUtilBigTest.testToDouble":65,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":171,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":293,"com.graphhopper.reader.OSMReaderTest.testFerry":103,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":94,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":95,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":159,"com.graphhopper.routing.QueryGraphTest.testOneWay":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":275,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":67,"com.graphhopper.reader.OSMReaderTest.testWithBounds":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":135,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":136,"com.graphhopper.coll.CompressedArrayTest.testCompress":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":313,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":312,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":184,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":276,"com.graphhopper.GraphHopperTest.testPrepare":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":323,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":18,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":349,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.util.InstructionListTest.testWayList":98,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":44,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":97,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":89,"com.graphhopper.GraphHopperAPITest.testDisconnected179":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":300,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":198,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":118,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":153,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":109,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":326,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":72,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":126,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":238,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":199,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":255,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":355,"com.graphhopper.reader.OSMReaderTest.testSort":106,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":47,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":271,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":27,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":55,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":167,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":144,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":328,"com.graphhopper.routing.PathTest.testWayList":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":284,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":43,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":196,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":268,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":220,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":194,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":291,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":152,"com.graphhopper.util.GHUtilityTest.testSort":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":301,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":288,"com.graphhopper.coll.IntIntBinHeapTest.testSize":59,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":247,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":249,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":285,"com.graphhopper.coll.CompressedArrayTest.testCompress2":83,"com.graphhopper.util.BitUtilBigTest.testToLong":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":177,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":211,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":223,"com.graphhopper.GraphHopperAPITest.testLoad":100,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":229,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":343,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":134,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":334,"com.graphhopper.reader.OSMReaderTest.testBarriers":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":214,"com.graphhopper.routing.PathTest.testFound":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":316,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":183,"com.graphhopper.util.GHUtilityTest.testCopy":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":297,"com.graphhopper.routing.PathTest.testFindInstruction":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":154,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":225,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":302,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":155,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":174,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":361,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":48,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":227,"com.graphhopper.reader.PrinctonReaderTest.testRead":117,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":221,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":29,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":298,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":279,"com.graphhopper.util.InstructionListTest.testWayList2":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":76,"com.graphhopper.reader.OSMReaderTest.testFoot":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":319,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":315,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":81,"com.graphhopper.coll.IntIntBinHeapTest.test0":9,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":82,"com.graphhopper.reader.OSMReaderTest.testOneWay":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":269,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":261,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":358,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":224,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":309,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":333,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":340,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":108,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":23,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":280,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":21,"com.graphhopper.routing.PathBidirRefTest.testExtract":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":180,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":125,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":80,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":318,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":317,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":121,"com.graphhopper.util.GHUtilityTest.testSort2":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":305,"com.graphhopper.reader.OSMReaderTest.testMain":105,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":251,"com.graphhopper.routing.PathBidirRefTest.testExtract2":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":281,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":195,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":356,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":57,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":236,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":200,"com.graphhopper.storage.GraphHopperStorageTest.testClone":336,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":320,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":278,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":345,"com.graphhopper.GraphHopperTest.testFootAndCar":127,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":299,"com.graphhopper.routing.PathTest.testTime":147,"com.graphhopper.util.InstructionListTest.testCreateGPX":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":311,"com.graphhopper.util.GHUtilityTest.testSortDirected":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":277,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":267,"com.graphhopper.GraphHopperTest.testVia":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":175,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":45,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":85,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":75,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":252,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":189,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":190,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":308,"com.graphhopper.util.InstructionListTest.testFind":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":258},"transformations":[{"failures":[0,1,2,3,4],"tindex":"0d7f796c-8284-11e5-a3c7-03471e62fd6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"node","edge2":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:115","type":"CtIfImpl","sourcecode":"if (double < double) {\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    double = double;\n} "},"status":-1},{"failures":[5,6],"tindex":"0d7fa07d-8284-11e5-a3c7-a120ef9a25a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"remainingSegments","hash":"remainingSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:335","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0d7fa07e-8284-11e5-a3c7-413b23a71f82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:754","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, int, int)"},"variableMap":{"edgeAccess":"this","edgeId":"newEdgeId","updatedB":"fromNodeId","updatedA":"com.graphhopper.util.EdgeIterator.NO_EDGE","linkA":"fromNodeId","linkB":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:143","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[7],"tindex":"0d7fa07f-8284-11e5-a3c7-118f4208d0fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"0d7fa080-8284-11e5-a3c7-2beae15df610","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:480","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"0d7fa081-8284-11e5-a3c7-2daa5cbf00c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:173","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[8,9],"tindex":"0d7fc792-8284-11e5-a3c7-21f61196db01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"start":"key","delta":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"0d7fc793-8284-11e5-a3c7-b1b31a4f54f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"N_LEVEL","nextEdgeId":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[59],"tindex":"0d7fc794-8284-11e5-a3c7-27c6e0d03dee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","nextEdgeId":"lastElem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:127","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"0d7fc795-8284-11e5-a3c7-c7f446b2a4fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:249","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.io.InputStream.read()"},"variableMap":{"java.lang.System.in":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:96","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.read(byte[])"},"status":0},{"failures":[],"tindex":"0d7fc796-8284-11e5-a3c7-a9f826578f51","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"code","nodeId":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[60,61,62,63,64],"tindex":"0d7feea7-8284-11e5-a3c7-9b62bc35470a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"from","guess":"i","low":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:258","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[65,66],"tindex":"0d7feea8-8284-11e5-a3c7-3be7070cb622","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"0d7feea9-8284-11e5-a3c7-fbfec0faed7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:248","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"0d7feeaa-8284-11e5-a3c7-e70ffb17612f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"hash","nodeFlags":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"0d7feeab-8284-11e5-a3c7-477b152d78b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:83","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(new com.graphhopper.util.shapes.GHPoint(double , double))"},"status":-2},{"failures":[85,86,87],"tindex":"0d7feeac-8284-11e5-a3c7-97e306083675","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:200","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rte>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"status":-1},{"failures":[],"tindex":"0d8015bd-8284-11e5-a3c7-7ff960d6217e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"edgeEntry","entryCurrent":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:314","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[88,89,90,91,10,92,93,94,95,96,97,98,99,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,11,120,121,122,123,124,125,12,13,126,127,14,15,16,128,17,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,19,20,21,22,23,24,25,26,28,29,30,31,33,154,35,36,37,38,39,40,41,42,43,155,44,45,46,47,48,49,50,51,52,156,157,53,54,55,56,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,0,174,1,2,175,176,60,61,62,63,64,177,178,179,180,181,182,183,57,75,184,185,186,187,188,189,76,190,77,78,191,192,3,193,194,195,79,196,197,198,199,200,201,80,202,81,82,203,204,4,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"tindex":"0d8015be-8284-11e5-a3c7-673645f11797","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:39","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(1, ((int) / 3))"},"variableMap":{"counts":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:498","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-1},{"failures":[],"tindex":"0d803ccf-8284-11e5-a3c7-4b650c0fdac4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0d7fc795-8284-11e5-a3c7-c7f446b2a4fc","diffs":[{"methodsDiff":{"delete":["java.io.InputStream.read"]},"type":"staticDiff"}]}]}