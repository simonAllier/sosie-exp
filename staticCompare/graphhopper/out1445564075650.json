{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":68,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":176,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":134,"com.graphhopper.reader.OSMReaderTest.testFerry":238,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":98,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":99,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":36,"com.graphhopper.routing.QueryGraphTest.testOneWay":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":127,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":172,"com.graphhopper.reader.OSMReaderTest.testWithBounds":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":27,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":75,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":160,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":149,"com.graphhopper.GraphHopperTest.testPrepare":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":67,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":71,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":164,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":18,"com.graphhopper.util.InstructionListTest.testWayList":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":103,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":138,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":91,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":1,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":150,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.GraphHopperTest.testLoadOSM":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":191,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":114,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":174,"com.graphhopper.reader.OSMReaderTest.testSort":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":0,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":70,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":251,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":84,"com.graphhopper.routing.PathTest.testWayList":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":21,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":50,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":110,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":201,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":64,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":90,"com.graphhopper.util.GHUtilityTest.testSort":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":139,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":109,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":34,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":165,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":226,"com.graphhopper.GraphHopperAPITest.testLoad":237,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":20,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":161,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":26,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":220,"com.graphhopper.reader.OSMReaderTest.testBarriers":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":147,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":55,"com.graphhopper.util.GHUtilityTest.testCopy":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":136,"com.graphhopper.routing.PathTest.testFindInstruction":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":228,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":140,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":229,"com.graphhopper.reader.PrinctonReaderTest.testRead":252,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":23,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":35,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":128,"com.graphhopper.util.InstructionListTest.testWayList2":105,"com.graphhopper.reader.OSMReaderTest.testFoot":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":148,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":178,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":179,"com.graphhopper.reader.OSMReaderTest.testOneWay":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":33,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":162,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":118,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":144,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":158,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":243,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":74,"com.graphhopper.routing.PathBidirRefTest.testExtract":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":214,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":107,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":261,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":258,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":257,"com.graphhopper.util.GHUtilityTest.testSort2":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":65,"com.graphhopper.reader.OSMReaderTest.testMain":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":5,"com.graphhopper.routing.PathBidirRefTest.testExtract2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":202,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":187,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":79,"com.graphhopper.storage.GraphHopperStorageTest.testClone":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":132,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":168,"com.graphhopper.GraphHopperTest.testFootAndCar":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":145,"com.graphhopper.util.GHUtilityTest.testSortDirected":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":123,"com.graphhopper.GraphHopperTest.testPrepareOnly":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":207,"com.graphhopper.GraphHopperTest.testVia":263,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":60,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":188,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":111,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":106,"com.graphhopper.GraphHopperTest.testFootOnly":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":193,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":246,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":194,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":86,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":122,"com.graphhopper.util.InstructionListTest.testFind":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":217},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"37cf2acd-7926-11e5-a0d3-2ba79a6e29ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:520","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"37cf51de-7926-11e5-a0d3-3d108f72a9f4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:88","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n    if (com.graphhopper.util.PointList.isEmpty())\n        com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n    \n    if (boolean) {\n        int = com.graphhopper.util.PointList.getSize();\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    } \n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n} "},"status":0},{"failures":[18,19,20,21,22,23,24],"tindex":"37cf51df-7926-11e5-a0d3-15006eece3a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true)"},"status":-1},{"failures":[25,26,27,28,29,0,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,18,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,19,20,70,21,71,72,73,74,75,76,77,78,79,80,22,23,81,82,83,24,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,2,117,118,119,120,121,122,123,124,125,126,3,127,128,129,4,5,130,131,132,133,134,6,135,136,137,138,139,140,141,142,143,144,7,145,146,147,8,9,148,149,150,151,152,153,154,10,155,156,157,158,159,160,161,162,163,164,11,165,166,167,12,13,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,14,221,222,223,224,225,226,227,228,229,230,15,231,232,233,16,17,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"37cf51e0-7926-11e5-a0d3-75d107f518ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:51","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"37cf78f1-7926-11e5-a0d3-a92184102285","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:326","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)"},"status":-2},{"failures":[],"tindex":"37cf78f2-7926-11e5-a0d3-efe5dc235c1f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:405","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"37cf78f3-7926-11e5-a0d3-d5399be140ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"37cf78f4-7926-11e5-a0d3-813f78777e78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"start","to":"prevConnectedId","lonSize":"prevConnectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"37cfa005-7926-11e5-a0d3-2d8d794cf400","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"nodes","da":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:200","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n    com.graphhopper.storage.DataAccess.setHeader((8 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n} "},"status":-2},{"failures":[],"tindex":"37cfa006-7926-11e5-a0d3-0fbe2907e994","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"offset":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:310","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"37cfa007-7926-11e5-a0d3-17b9de329ce1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:596","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.clear()"},"status":-2},{"failures":[],"tindex":"37cfa008-7926-11e5-a0d3-917666439529","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:261","type":"CtIfImpl","sourcecode":"if ((!(java.util.List<java.nio.ByteBuffer>.isEmpty())) && ((java.util.List<java.nio.ByteBuffer>.get(0)) instanceof java.nio.MappedByteBuffer)) {\n    for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n        ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force();\n    }\n} "},"status":-2},{"failures":[],"tindex":"37cfa009-7926-11e5-a0d3-ff979643d9c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"parent","edgeEntry":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"37cfc71a-7926-11e5-a0d3-fd39ecc6de95","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"toNode","nodeThis":"toNode","edgeId":"toNode","nodeOther":"toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-2},{"failures":[],"tindex":"37cfc71b-7926-11e5-a0d3-eb0f1a8da910","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"basePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"status":-2},{"failures":[],"tindex":"37cfc71c-7926-11e5-a0d3-199969312f23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"prevEle","java.lang.Math.PI":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:411","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int])"},"status":-2},{"failures":[],"tindex":"37cfc71d-7926-11e5-a0d3-cd61c23cf33b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.ensureCapacity(long)"},"variableMap":{"bytes":"tmp","this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + (int)))"},"status":-2},{"failures":[],"tindex":"37cfc71e-7926-11e5-a0d3-637639a03bd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"37cfc71f-7926-11e5-a0d3-1151fba1bdb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"37cfc720-7926-11e5-a0d3-0d2098a291b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.io.RandomAccessFile.readInt()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}