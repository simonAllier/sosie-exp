{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":20,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":38,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":77,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":41,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":17,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":78,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":54,"com.graphhopper.storage.GraphHopperStorageTest.testClone":5,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":40,"com.graphhopper.util.InstructionListTest.testWayList2":75,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":69,"com.graphhopper.util.BitUtilLittleTest.testToBitString":81,"com.graphhopper.util.InstructionListTest.testWayList":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":12,"com.graphhopper.reader.OSMReaderTest.testOneWay":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":48,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":73,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":80,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":59,"com.graphhopper.reader.OSMReaderTest.testRelation":14,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":58,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":13,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":70,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":19,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":57,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":76,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":3,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":67,"com.graphhopper.util.InstructionListTest.testFind":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":31,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":64},"transformations":[{"failures":[],"tindex":"27e3d424-82b2-11e5-8538-ed7d048e2a45","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"27e3fb35-82b2-11e5-8538-673dc690c259","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:570","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.this.setWeight(this, double)"},"variableMap":{"weight":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:651","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double, double);\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double);\n"},"status":-2},{"failures":[],"tindex":"27e42246-82b2-11e5-8538-55e9589488a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"variableMap":{"lazySW":"sw1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[],"tindex":"27e42247-82b2-11e5-8538-ad4f0a13d01e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:87","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"currFrom":"edgeEntry","edgeEntry":"edgeEntry","bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"27e42248-82b2-11e5-8538-b3bc66b46e62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"variableMap":{"from":"from","to":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()).setWayGeometry(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.fetchWayGeometry(0))"},"status":-1},{"failures":[13],"tindex":"27e44959-82b2-11e5-8538-71ede6a4b05e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:673","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:247","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\")"},"status":-1},{"failures":[],"tindex":"27e4495a-82b2-11e5-8538-c7c24f28cf0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\")"},"status":0},{"failures":[14],"tindex":"27e4495b-82b2-11e5-8538-6372d048cb78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"variableMap":{"len":"osmId","start":"osmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:623","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long)"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"27e4495c-82b2-11e5-8538-71e05c2d9523","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:89","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:699","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int)"},"status":-1},{"failures":[36,37,38,39,40,41,42],"tindex":"27e4706d-82b2-11e5-8538-518373ab0bf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:103","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult)"},"status":-1},{"failures":[],"tindex":"27e4706e-82b2-11e5-8538-ad4658dd75b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setEndNode(com.graphhopper.storage.EdgeEntry.int)"},"variableMap":{"adjNode":"adjNode","goalEdge":"currEdge","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[43,15,16,17,18,19,20,44,45,21,46,47,48,22,23,24,49,50,25,51,52,53,26,27,28,54,55,29,56,57,58,30,31,32,59,60,33,61,62,63,34,35],"tindex":"27e4706f-82b2-11e5-8538-f15f09d5df7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"27e49780-82b2-11e5-8538-e997542551a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"tmpWeight","fwdSpeed":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:95","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-1},{"failures":[],"tindex":"27e49781-82b2-11e5-8538-8d734ce164ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[])"},"status":-2},{"failures":[77,78,79,80],"tindex":"27e49782-82b2-11e5-8538-11fb58016b05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"variableMap":{"size":"indexDivisor","i":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:320","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"27e4be93-82b2-11e5-8538-a9b4e347deaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:329","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Directory) != null)\n    return com.graphhopper.storage.Directory;\n"},"status":0},{"failures":[81,82],"tindex":"27e4be94-82b2-11e5-8538-e7ab121a9f56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:125","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[],"tindex":"27e4be95-82b2-11e5-8538-8b6be2ecf3c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"27e4be96-82b2-11e5-8538-fd4cb4d2c4b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:296","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"variableMap":{"index":"start","entrySize":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"27e4be93-82b2-11e5-8538-a9b4e347deaf","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":["com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).l3","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).b"],"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).l8","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).l9","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).b","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e5","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e4","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).e6","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.util.BitUtilBig_short_toShort(byte[],int).b","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).t4","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).l3","com.graphhopper.reader.dem.SRTMProvider_double_getEle(double,double).t6","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e4","com.graphhopper.storage.MMapDataAccess_void_setShort(long,short).b"]},"type":"branch"}]},{"transformation":"27e42246-82b2-11e5-8538-55e9589488a5","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]},{"transformation":"27e4495a-82b2-11e5-8538-c7c24f28cf0f","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"type":"staticDiff"}]}]}