{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":213,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":223,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":121,"com.graphhopper.reader.OSMReaderTest.testFerry":142,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":266,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":267,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":220,"com.graphhopper.routing.QueryGraphTest.testOneWay":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":129,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":225,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":180,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.GraphHopperTest.testPrepare":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":212,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":76,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":176,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":195,"com.graphhopper.util.InstructionListTest.testWayList":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":204,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":262,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":126,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":156,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":148,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":191,"com.graphhopper.GraphHopperTest.testLoadOSM":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":33,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":90,"com.graphhopper.reader.OSMReaderTest.testSort":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":207,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":248,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":217,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":227,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":141,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":233,"com.graphhopper.routing.PathTest.testWayList":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":218,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":202,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":99,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":43,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":209,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":239,"com.graphhopper.util.GHUtilityTest.testSort":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":51,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":119,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":3,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":254,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":173,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":63,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":216,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":244,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":100,"com.graphhopper.reader.OSMReaderTest.testBarriers":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":135,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":200,"com.graphhopper.util.GHUtilityTest.testCopy":258,"com.graphhopper.routing.PathTest.testFindInstruction":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":101,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":108,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":203,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":208,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":182,"com.graphhopper.reader.PrinctonReaderTest.testRead":155,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":4,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":187,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":21,"com.graphhopper.util.InstructionListTest.testWayList2":264,"com.graphhopper.reader.OSMReaderTest.testFoot":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":134,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":52,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":53,"com.graphhopper.reader.OSMReaderTest.testOneWay":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":8,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":11,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":93,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":186,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":77,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":131,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":147,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":179,"com.graphhopper.routing.PathBidirRefTest.testExtract":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":164,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":252,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":161,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":59,"com.graphhopper.util.GHUtilityTest.testSort2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":210,"com.graphhopper.reader.OSMReaderTest.testMain":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":24,"com.graphhopper.routing.PathBidirRefTest.testExtract2":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":44,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":29,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.storage.GraphHopperStorageTest.testClone":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":27,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":94,"com.graphhopper.GraphHopperTest.testFootAndCar":169,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":102,"com.graphhopper.util.GHUtilityTest.testSortDirected":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":15,"com.graphhopper.GraphHopperTest.testPrepareOnly":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":67,"com.graphhopper.GraphHopperTest.testVia":166,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":205,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":30,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":224,"com.graphhopper.GraphHopperTest.testFootOnly":174,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":35,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":235,"com.graphhopper.util.InstructionListTest.testFind":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":97},"transformations":[{"failures":[0],"tindex":"fdccd8f6-793b-11e5-8c29-15fd71301661","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeVLong(long)"},"variableMap":{"latlon":"tmp","currentWriter":"buck"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(long)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"fdcd2717-793b-11e5-8c29-8f80d21e3188","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"fdcd2718-793b-11e5-8c29-79b6633029a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"com.graphhopper.storage.EdgeAccess.NO_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"fdcd4e29-793b-11e5-8c29-df94af5cfd71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.checkOne()"},"status":0},{"failures":[],"tindex":"fdcd4e2a-793b-11e5-8c29-71f2e3e490bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"encoded","guess":"encoded","low":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"))"},"status":0},{"failures":[],"tindex":"fdcd4e2b-793b-11e5-8c29-71048be3c9e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:346","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n"},"status":-2},{"failures":[],"tindex":"fdcd4e2c-793b-11e5-8c29-9978606fa76c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:410","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-2},{"failures":[],"tindex":"fdcd753d-793b-11e5-8c29-07ba33b74a7d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"fdcd753e-793b-11e5-8c29-b5f89c2af924","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"variableMap":{"closestEdge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setName(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fdcd753f-793b-11e5-8c29-2bb3040a40fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:352","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.isShortcut())\n    return (com.graphhopper.storage.BaseGraph.CommonEdgeIterator.(getDirectFlags()) & (com.graphhopper.routing.ch.PrepareEncoder.getScBwdDir())) != 0;\n"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.util.EdgeIteratorState.isForward(com.graphhopper.routing.util.FlagEncoder))) || ((boolean) && (com.graphhopper.util.EdgeIteratorState.isBackward(com.graphhopper.routing.util.FlagEncoder)))"},"status":-2},{"failures":[],"tindex":"fdcd7540-793b-11e5-8c29-938b51fa08e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"N_ADDITIONAL","nextEdgeId":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:267","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-2},{"failures":[],"tindex":"fdcd9c51-793b-11e5-8c29-d5fcff64d54e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[],"tindex":"fdcd9c52-793b-11e5-8c29-3f08ce69605d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs(0, com.graphhopper.storage.DataAccess.getCapacity())"},"status":-2},{"failures":[],"tindex":"fdcd9c53-793b-11e5-8c29-11b5222e4b53","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"originalEdgesCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:571","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"status":-2},{"failures":[],"tindex":"fdcd9c54-793b-11e5-8c29-a51ff01c5673","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:268","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(long)"},"variableMap":{"maxCapacity":"tmp","nodesCH":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:796","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 4))"},"status":-2},{"failures":[],"tindex":"fdcd9c55-793b-11e5-8c29-95b865db0223","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:115","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    int = int;\n    break;\n} "},"variableMap":{"freeIndex":"size","searchIndex":"size","points":"clonePL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:350","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int]);\n    }\n"},"status":-2},{"failures":[],"tindex":"fdcdc366-793b-11e5-8c29-2b2d09f22c51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"fdcdc367-793b-11e5-8c29-cd26f0d28cbe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"variableMap":{"defaultUTurnCost":"nextLat","weight":"nextLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:235","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[],"tindex":"fdcdc368-793b-11e5-8c29-bbe07ad62451","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-2},{"failures":[],"tindex":"fdcdc369-793b-11e5-8c29-29f347ec04f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:135","type":"CtIfImpl","sourcecode":"if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}