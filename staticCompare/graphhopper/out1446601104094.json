{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":103,"com.graphhopper.routing.PathTest.testFindInstruction":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":83,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":48,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":88,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":23,"com.graphhopper.GraphHopperTest.testPrepare":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":77,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":95,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":52,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":60,"com.graphhopper.GraphHopperTest.testLoadOSM":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":38,"com.graphhopper.reader.OSMReaderTest.testMain":51,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":81,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":33,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":73,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":104,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":79,"com.graphhopper.GraphHopperTest.testPrepareOnly":115,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":62,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":75,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":91,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":87,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":70,"com.graphhopper.util.InstructionListTest.testFind":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":78},"transformations":[{"failures":[0,1],"tindex":"bcef2cf4-8294-11e5-868f-23ef9c6c57a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1039","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false)"},"status":-1},{"failures":[],"tindex":"bcef5405-8294-11e5-868f-ef393420306c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:167","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"bcef7b16-8294-11e5-868f-a764a433423c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeIterator:59","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","edgeId":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:637","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"bcef7b17-8294-11e5-868f-35e04711ed44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"relationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[15],"tindex":"bcef7b18-8294-11e5-868f-f1516aedcaae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"variableMap":{"newSegs":"segments","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.int[][] = new int[int[][].int][]"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"bcef7b19-8294-11e5-868f-4ba8f44a8a05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"prevOrNextEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[47,48,49,50],"tindex":"bcefa22a-8294-11e5-868f-e3c8ed5e85b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"status":-1},{"failures":[],"tindex":"bcefa22b-8294-11e5-868f-ddf71c591007","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:94","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[51,52,47,53],"tindex":"bcefa22c-8294-11e5-868f-096249e82de7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:776","type":"CtIfImpl","sourcecode":"if ((int > 2) && (int < (int - 1))) {\n    if (com.graphhopper.util.PointList.is3D())\n        com.graphhopper.util.PointList.add(double, double, double);\n    else\n        com.graphhopper.util.PointList.add(double, double);\n    \n} "},"status":-1},{"failures":[],"tindex":"bcefa22d-8294-11e5-868f-39b5cde694e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:118","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"status":0},{"failures":[],"tindex":"bcefc93e-8294-11e5-868f-779675af545a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"to","lastIndex":"to","fromIndex":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"bcefc93f-8294-11e5-868f-19fa0a8d3e33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"bcefc940-8294-11e5-868f-edad952e369c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.NaN":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"bcefc941-8294-11e5-868f-8faed3070d5c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:128","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"daType":"dataAccessType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:265","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":0},{"failures":[],"tindex":"bceff052-8294-11e5-868f-eb9247da8d9c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:145","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"bceff053-8294-11e5-868f-f3e18e4b73eb","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"startNode","tmpSize":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:35","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":0},{"failures":[91,92,93,94,95,2,96,3,97,98,4,99,100,101,102,103,104,105,106,5,107,108,6,109,110,111,112],"tindex":"bceff054-8294-11e5-868f-19f67a1b24d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:1002","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[113,114],"tindex":"bceff055-8294-11e5-868f-fbc2e07c08ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:322","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[115,116,16,117,118,119,120,53],"tindex":"bcf01766-8294-11e5-868f-c350421c7fcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:806","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n}"},"status":-1},{"failures":[121],"tindex":"bcf01767-8294-11e5-868f-616641c00749","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"viaNodeID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:932","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}