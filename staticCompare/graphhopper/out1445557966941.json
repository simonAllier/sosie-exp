{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":5,"com.graphhopper.reader.OSMReaderTest.testFerry":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":147,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":247,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":172,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":321,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":327,"com.graphhopper.reader.OSMReaderTest.testWithBounds":206,"com.graphhopper.storage.MMapDataAccessTest.testSegments":290,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":84,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":227,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":25,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":108,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":269,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":97,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":115,"com.graphhopper.search.NameIndexTest.testFlush":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":252,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":305,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":12,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":76,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":253,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":258,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":149,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":40,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":78,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":217,"com.graphhopper.GraphHopperTest.testLoadOSM":324,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":121,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":150,"com.graphhopper.reader.OSMReaderTest.testSort":197,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":264,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":205,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":168,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":315,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":127,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":241,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":49,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":274,"com.graphhopper.storage.RAMDataAccessTest.testHeader":308,"com.graphhopper.routing.DijkstraTest.initializationError":276,"com.graphhopper.storage.MMapDataAccessTest.testHeader":289,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":89,"com.graphhopper.storage.MMapDataAccessTest.testCopy":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":82,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":161,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":275,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":182,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":251,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":165,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":140,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":58,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":102,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":189,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":266,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":307,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":87,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":298,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":139,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":44,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":46,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":151,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":224,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":68,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":273,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":144,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.reader.OSMReaderTest.testBarriers":198,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":283,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":169,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":193,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":257,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":15,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":260,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":128,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":80,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":129,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":160,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":14,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":10,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":69,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":177,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":284,"com.graphhopper.reader.OSMReaderTest.testFoot":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":28,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":187,"com.graphhopper.reader.OSMReaderTest.testOneWay":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":85,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":91,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":166,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":157,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":19,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":63,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":22,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":98,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":105,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":199,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":314,"com.graphhopper.routing.AStarTest.initializationError":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":272,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":239,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":226,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":219,"com.graphhopper.storage.RAMDataAccessTest.testCopy":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":31,"com.graphhopper.storage.RAMDataAccessTest.testSegments":309,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":18,"com.graphhopper.reader.OSMReaderTest.testMain":196,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":185,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":180,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":250,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":170,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":41,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":75,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":279,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":271,"com.graphhopper.storage.StorablePropertiesTest.testStore":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":137,"com.graphhopper.storage.GraphHopperStorageTest.testClone":101,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":34,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":242,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":238,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":118,"com.graphhopper.GraphHopperTest.testFootAndCar":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":8,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":164,"com.graphhopper.GraphHopperTest.testPrepareOnly":190,"com.graphhopper.GraphHopperTest.testVia":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":262,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":204,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":203,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":142,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":122,"com.graphhopper.GraphHopperTest.testFootOnly":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":222,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":294,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":21,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":163,"com.graphhopper.routing.AStarBidirectionTest.initializationError":278,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":154},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"tindex":"febbb022-7917-11e5-8678-e7b88c925649","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,42,45,46,314,315,316,317,318,319,90,91,92,137,141,146,147,320,190,321,322,323,324,325,326,193,200,327,328,329],"tindex":"febbd733-7917-11e5-8678-037f610ff2d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"segmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:104","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int)"},"status":-1},{"failures":[],"tindex":"febbfe44-7917-11e5-8678-25ea1151e414","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"visitedNodesSum","mask":"visitedNodesSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":-2},{"failures":[],"tindex":"febbfe45-7917-11e5-8678-75bcb2d0e010","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"r_lon_deg","delta":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:167","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, (double / double), double, double)"},"status":-2},{"failures":[],"tindex":"febbfe46-7917-11e5-8678-ddd25a98be91","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:372","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"base graph already frozen\");\n"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:170","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":-2},{"failures":[],"tindex":"febbfe47-7917-11e5-8678-d78b78125a4d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"capacity","flags":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:275","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-2},{"failures":[],"tindex":"febbfe48-7917-11e5-8678-cf2dd44669c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"shortTripsSpeed","eleDelta":"shortTripsSpeed","incDist2DSum":"shortTripsSpeed","decEleSum":"shortTripsSpeed","fullDist2D":"shortTripsSpeed","decDist2DSum":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:539","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[],"tindex":"febbfe49-7917-11e5-8678-3b40cc8cb6ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"variableMap":{"i":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:360","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"febc255a-7917-11e5-8678-ddc9ac913464","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"variableMap":{"entry":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","entryVal":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"febc255b-7917-11e5-8678-c12e7bcc3374","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"febc255c-7917-11e5-8678-e5e32cf0445f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"parts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:176","type":"CtOperatorAssignmentImpl","sourcecode":"long *= int[][int]"},"status":-2},{"failures":[],"tindex":"febc255d-7917-11e5-8678-d1ce78d7e31d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:150","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"febc255e-7917-11e5-8678-27800f877bcd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:286","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":-2},{"failures":[],"tindex":"febc255f-7917-11e5-8678-7bbc2b3694bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:56","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"febc4c70-7917-11e5-8678-59f19a8c829f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:817","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"febc4c71-7917-11e5-8678-17c703bd2f8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"febc4c72-7917-11e5-8678-893bdae04a04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"variableMap":{"segmentCount":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.int[][] = new int[int[][].int][]"},"status":-2},{"failures":[],"tindex":"febc4c73-7917-11e5-8678-696784c56574","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:720","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"variableMap":{"nodeEntryBytes":"retBucket","newI":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:107","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-2},{"failures":[],"tindex":"febc4c74-7917-11e5-8678-7f0644ec7fa0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:472","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"febc4c75-7917-11e5-8678-bb9dab2bc31a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","i":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:135","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n        byte[] byte[] = new byte[int];\n        for (int int = 0 ; int < int ; int++) {\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}