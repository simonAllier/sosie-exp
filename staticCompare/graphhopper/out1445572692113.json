{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":6,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":5,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":1,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":3,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"479ec6a5-793a-11e5-9444-4923f621e62d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:421","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-1},{"failures":[],"tindex":"479eedb6-793a-11e5-9444-77828b731455","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"to","nodeId":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:278","type":"CtIfImpl","sourcecode":"if ((int[][int]) >= 0) {\n    if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n        continue;\n    } \n} "},"status":-2},{"failures":[],"tindex":"479eedb7-793a-11e5-9444-e19897def491","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"479eedb8-793a-11e5-9444-01c38d35d7e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"i","retBucket":"i","i":"i","bucketSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:214","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"479eedb9-793a-11e5-9444-3b2efda961ff","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:168","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    long long = 1;\n    long long = 1;\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n            boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n            if (boolean) {\n                TLongList TLongList = com.graphhopper.reader.OSMWay.getNodes();\n                int int = com.graphhopper.reader.TLongList.size();\n                for (int int = 0 ; int < int ; int++) {\n                    com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n                }\n                if (((++long) % 5000000) == 0) {\n                    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n                } \n            } \n        } \n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n            if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n                com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n            \n            if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n                com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n            \n            if (((++long) % 50000) == 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(\"Problem while parsing file\" , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[],"tindex":"479f14ca-793a-11e5-9444-692d31de71dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:49","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"479f14cb-793a-11e5-9444-37193151ca95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:280","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.Set<java.lang.String>))))\n    return 0;\n"},"variableMap":{"acceptedRailways":"restrictedValues","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:250","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"479f14cc-793a-11e5-9444-13dc4c7ff687","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:181","type":"CtForImpl","sourcecode":"for ( ; int < 1000 ; int++) {\n    if (int == (int))\n        break;\n    \n    long long = ((long)(int)) * (int);\n    if (int == (com.graphhopper.storage.DataAccess.getInt((long + (int))))) {\n        if (int == (com.graphhopper.storage.DataAccess.getInt((long + (int)))))\n            return com.graphhopper.storage.DataAccess.getInt((long + (int)));\n        \n    } \n    int int = com.graphhopper.storage.DataAccess.getInt((long + (int)));\n    if (int == int)\n        throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n    \n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"479f14cd-793a-11e5-9444-edf98eab22bb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[],"tindex":"479f3bde-793a-11e5-9444-c3cac6edf206","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:416","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"479f3bdf-793a-11e5-9444-67678693751b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"capacity","key":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:102","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long)"},"status":-2},{"failures":[],"tindex":"479f3be0-793a-11e5-9444-cb25e9962f9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"status":-2},{"failures":[],"tindex":"479f3be1-793a-11e5-9444-213b1505d9db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"width":"lastPrio","lonSimilar":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:128","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"479f3be2-793a-11e5-9444-2d533de0b2e2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"479f3be3-793a-11e5-9444-9f7c0a7c3fa9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"ferryBit","nodeFlags":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:191","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-2},{"failures":[],"tindex":"479f3be4-793a-11e5-9444-4b262075a429","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:66","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.AlgorithmOptions.getHints().get((java.lang.String + \".approximation\"), \"BeelineSimplification\")"},"status":-2},{"failures":[],"tindex":"479f62f5-793a-11e5-9444-5fe3f17ae59a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:119","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.getNextEntry()"},"variableMap":{"zip":"zis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:91","type":"CtAssignmentImpl","sourcecode":"java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry()"},"status":-2},{"failures":[],"tindex":"479f62f6-793a-11e5-9444-0b17c05e51cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:451","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[],"tindex":"479f62f7-793a-11e5-9444-b571e16bc576","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"479f62f8-793a-11e5-9444-9ba9548cd3ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:159","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"variableMap":{"counts":"iteration","counter":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:739","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1) {\n    if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n        double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n        double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n        if (double < double)\n            return true;\n        \n    } \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}