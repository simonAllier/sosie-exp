{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":11,"com.graphhopper.util.GHUtilityTest.testSort2":53,"com.graphhopper.reader.OSMReaderTest.testMain":3,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":33,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":63,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":64,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":34,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":42,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":47,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":12,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":8,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":29,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":48,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":32,"com.graphhopper.storage.GraphHopperStorageTest.testClone":46,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":15,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.GraphHopperTest.testFootAndCar":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":38,"com.graphhopper.util.GHUtilityTest.testSort":55,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":0,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":40,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":61,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":43,"com.graphhopper.util.GHUtilityTest.testSortDirected":56,"com.graphhopper.GraphHopperTest.testPrepareOnly":16,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":57,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":28,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":7,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":49,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":50,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":44,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":36,"com.graphhopper.reader.OSMReaderTest.testBarriers":5,"com.graphhopper.GraphHopperTest.testLoadOSM":23,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":41,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.reader.OSMReaderTest.testSort":4},"transformations":[{"failures":[],"tindex":"12cedd95-82b0-11e5-9b78-89ae33cd7b19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLon()))"},"status":0},{"failures":[],"tindex":"12cf04a6-82b0-11e5-9b78-7b32a80de23f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:245","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    boolean = false;\n"},"variableMap":{"periodicUpdatesPercentage":"from","periodicUpdate":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[0],"tindex":"12cf04a7-82b0-11e5-9b78-695a86db56ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:292","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[],"tindex":"12cf04a8-82b0-11e5-9b78-7bcea944c724","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"12cf2bb9-82b0-11e5-9b78-2b9957b36670","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:311","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"variableMap":{"initialized":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-1},{"failures":[28,29],"tindex":"12cf2bba-82b0-11e5-9b78-19f56c697df4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"status":-1},{"failures":[],"tindex":"12cf2bbb-82b0-11e5-9b78-9d0374082abe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()))"},"status":0},{"failures":[30,31,32,33,34,35,36,37,38,39],"tindex":"12cf2bbc-82b0-11e5-9b78-e5f7d48ded18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"roundaboutBit","tmpValue":"roundaboutBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:185","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"12cf2bbd-82b0-11e5-9b78-c5ebfd3cace6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"sLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"12cf2bbe-82b0-11e5-9b78-bf7135967ab4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"polledNode","edgeId":"priority","nextEdgeId":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:318","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[],"tindex":"12cf52cf-82b0-11e5-9b78-b10e76272170","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:695","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.BaseGraph.createEdgeExplorer()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:642","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":0},{"failures":[],"tindex":"12cf52d0-82b0-11e5-9b78-253c3dee4f3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.this(10, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"12cf52d1-82b0-11e5-9b78-5fa1d71256ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"deltaX":"minLat","maxX":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:179","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((5 * 4)))"},"status":-2},{"failures":[],"tindex":"12cf52d2-82b0-11e5-9b78-6f93fb1fb089","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,4,20],"tindex":"12cf52d3-82b0-11e5-9b78-11a85a85e58d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-1},{"failures":[],"tindex":"12cf52d4-82b0-11e5-9b78-135aa4bf51df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1023","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.GHRequest.getAlgorithm().isEmpty() ? com.graphhopper.routing.AlgorithmOptions.java.lang.String : com.graphhopper.GHRequest.getAlgorithm()"},"status":-2},{"failures":[57,58,59,60,61,62],"tindex":"12cf79e5-82b0-11e5-9b78-e55c9b5add0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:189","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    int int = ((int)(com.graphhopper.geohash.KeyAlgo.encode(double, double)));\n    long long = ((long)(int)) * 4;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        int int = com.graphhopper.storage.DataAccess.getInt(long);\n        com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        if (double < double) {\n            com.graphhopper.storage.DataAccess.setInt(long, int);\n        } \n    } else {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-1},{"failures":[53,55,56,63,64,4,20],"tindex":"12cf79e6-82b0-11e5-9b78-3da6eaa3f203","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:46","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n            gnu.trove.stack.array.TIntArrayStack.push(int);\n        } \n    }\n    com.graphhopper.coll.GHBitSet.add(int);\n} "},"status":-1},{"failures":[],"tindex":"12cf79e7-82b0-11e5-9b78-238bcfdec582","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:181","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.zip.Deflater.deflate(byte[])"},"status":-2},{"failures":[],"tindex":"12cf79e8-82b0-11e5-9b78-8b53d1d14808","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"12cedd95-82b0-11e5-9b78-89ae33cd7b19","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Instruction.getFirstLat","java.lang.StringBuilder.append","com.graphhopper.util.Helper.round6","com.graphhopper.util.Instruction.getFirstLon"]},"type":"staticDiff"}]},{"transformation":"12cf52cf-82b0-11e5-9b78-b10e76272170","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.createEdgeExplorer"]},"type":"staticDiff"}]},{"transformation":"12cf2bbe-82b0-11e5-9b78-bf7135967ab4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.GHTreeMapComposed.insert"]},"type":"staticDiff"}]},{"transformation":"12cf2bbb-82b0-11e5-9b78-9d0374082abe","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.OSMIDSegmentedMap.getNoEntryValue"]},"type":"staticDiff"}]}]}