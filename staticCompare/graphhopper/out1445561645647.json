{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":27,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":64,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":17,"com.graphhopper.util.PointListTest.testReverse":84,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":30,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":41,"com.graphhopper.routing.QueryGraphTest.testOneWay":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":14,"com.graphhopper.routing.PathTest.testWayList":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":39,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":52,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":63,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":77,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":74,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.util.InstructionListTest.testWayList2":87,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":49,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":42,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":18,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":67,"com.graphhopper.util.InstructionListTest.testWayList":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":22,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":69,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":51,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":40,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":58,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":48,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":15,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":38,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.reader.OSMReaderTest.testBarriers":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":82,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":20,"com.graphhopper.util.GHUtilityTest.testCopy":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":70},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"8f6a7154-7920-11e5-bfd0-cddd69a16ae3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"status":-1},{"failures":[],"tindex":"8f6a9865-7920-11e5-bfd0-43cfc97f4408","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[],"tindex":"8f6a9866-7920-11e5-bfd0-1524d67f2b16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:396","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-2},{"failures":[],"tindex":"8f6a9867-7920-11e5-bfd0-09c50be9a3fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:360","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>)) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.WORST","intendedValues":"intendedValues","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.REACH_DEST","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:357","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>)) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        else\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"8f6abf78-7920-11e5-bfd0-1f6ad8573b09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"variableMap":{"dataAccess":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:291","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"status":-2},{"failures":[],"tindex":"8f6abf79-7920-11e5-bfd0-f190b11832e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:566","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long)((int + 1))) * 4))"},"variableMap":{"intIndex":"length","dataAccess":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long) + 1) + (byte[].int)))"},"status":-2},{"failures":[],"tindex":"8f6abf7a-7920-11e5-bfd0-79bdb05a00ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:31","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)"},"variableMap":{"from":"fileDetails"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:255","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"status":-2},{"failures":[],"tindex":"8f6abf7b-7920-11e5-bfd0-95420217177e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:46","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"8f6ae68c-7920-11e5-bfd0-0145b06aa3d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:243","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.coll.GHBitSet.getCardinality()"},"status":-2},{"failures":[],"tindex":"8f6ae68d-7920-11e5-bfd0-15475fb694c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:71","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"variableMap":{"key":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:261","type":"CtReturnImpl","sourcecode":"return ((int)((long) / (int)))"},"status":-2},{"failures":[],"tindex":"8f6ae68e-7920-11e5-bfd0-81a0ca72d8ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:279","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-2},{"failures":[],"tindex":"8f6ae68f-7920-11e5-bfd0-47ce74f0630b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:235","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1)"},"status":-2},{"failures":[],"tindex":"8f6ae690-7920-11e5-bfd0-d919b25c1c04","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean)"},"status":-2},{"failures":[],"tindex":"8f6b0ca1-7920-11e5-bfd0-7d1253a417ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:571","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[],"tindex":"8f6b0ca2-7920-11e5-bfd0-e7c4eba3e74f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"newEdges","newNodeId":"wayOsmId","wayOsmId":"wayOsmId","wayFlags":"flags","this":"this","nodeFlags":"wayOsmId","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:699","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":-2},{"failures":[],"tindex":"8f6b0ca3-7920-11e5-bfd0-5d25192c50b2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:346","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"8f6b0ca4-7920-11e5-bfd0-1fa9719c2348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"8f6b0ca5-7920-11e5-bfd0-89424825bfd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:60","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"8f6b0ca6-7920-11e5-bfd0-6d80f3fc4b93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:414","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failures":[],"tindex":"8f6b33b7-7920-11e5-bfd0-1f479962a806","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}