{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":9,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":27,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":62,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":64,"com.graphhopper.reader.OSMReaderTest.testMain":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":80,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":79,"com.graphhopper.routing.PathTest.testWayList":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.reader.OSMReaderTest.testWithBounds":10,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":65,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":53,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":25,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":56,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":76,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":78,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":83,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":77,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":34,"com.graphhopper.util.BitUtilLittleTest.testToBitString":15,"com.graphhopper.util.BitUtilLittleTest.testToFloat":16,"com.graphhopper.util.InstructionListTest.testWayList":14,"com.graphhopper.reader.OSMReaderTest.testOneWay":12,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":50,"com.graphhopper.GraphHopperTest.testPrepareOnly":37,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":68,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":52,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":4,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":5,"com.graphhopper.GraphHopperAPITest.testLoad":36,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":28,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":29,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.coll.OSMIDMapTest.testGet":84,"com.graphhopper.util.BitUtilLittleTest.testToInt":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":23,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":20,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":7,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":60,"com.graphhopper.reader.OSMReaderTest.testBarriers":3,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":59,"com.graphhopper.storage.RAMDataAccessTest.testCopy":61,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.util.GHUtilityTest.testCopy":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":18,"com.graphhopper.reader.OSMReaderTest.testSort":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":57,"com.graphhopper.storage.RAMDataAccessTest.testSegments":63},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"7941cc15-7914-11e5-9bde-8b55d6ca749b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"7941f326-7914-11e5-9bde-392beb272760","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:705","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"variableMap":{"graphHopperFolder":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":0},{"failures":[6],"tindex":"79421a37-7914-11e5-9bde-452cdd13ef9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:675","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int)"},"variableMap":{"adjNodesToDelIter":"edgeOutExplorer","removeNode":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:108","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"79421a38-7914-11e5-9bde-59e2e1290c8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:817","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"status":0},{"failures":[],"tindex":"79424149-7914-11e5-9bde-d1843da6340b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:450","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-2},{"failures":[],"tindex":"7942414a-7914-11e5-9bde-3d558d4fa702","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"offset","speed":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"7942414b-7914-11e5-9bde-c74c3f0012e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT","edgeId":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT","nextEdgeId":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:58","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"tag\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"k\");\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\");\n        if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n            com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n        \n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2},{"failures":[],"tindex":"7942685c-7914-11e5-9bde-5d3720863f7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n    com.graphhopper.routing.util.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"7942685d-7914-11e5-9bde-79991d46ba9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"guess","maxEdgesCount":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:485","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"7942685e-7914-11e5-9bde-a50b20aae349","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:230","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getRemovedNodes().getCardinality()"},"variableMap":{"baseGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:181","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[],"tindex":"7942685f-7914-11e5-9bde-c9a1137d4321","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:304","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"79426860-7914-11e5-9bde-1fe75f56777e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:87","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.Arrays.asList(\"OsmSchema-V0.6\", \"DenseNodes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:161","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"status":-2},{"failures":[],"tindex":"79428f71-7914-11e5-9bde-2bce8dd252c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = com.graphhopper.reader.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                TLongList TLongList = new TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                com.graphhopper.reader.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"79428f72-7914-11e5-9bde-a7b51071dc16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"adjNode":"endNode","mainGraph":"graph","origEdgeId":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:203","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.TIntList.get(((com.graphhopper.util.TIntList.size()) - 1)), int)"},"status":-2},{"failures":[],"tindex":"79428f73-7914-11e5-9bde-53d0c9a8c875","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"variableMap":{"str":"version","d":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:82","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.get(0)"},"status":-2},{"failures":[],"tindex":"7942b684-7914-11e5-9bde-b318e602a8a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"7942b685-7914-11e5-9bde-8b71827bdbcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"status":-2},{"failures":[],"tindex":"7942b686-7914-11e5-9bde-61d4eb300a1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:67","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"7942b687-7914-11e5-9bde-13f8511769c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"newBaseIndex","b":"newAdjIndex","this":"toSortedGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:257","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"status":-2},{"failures":[],"tindex":"7942dd98-7914-11e5-9bde-d117958b8b82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:111","type":"CtReturnImpl","sourcecode":"return true"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}