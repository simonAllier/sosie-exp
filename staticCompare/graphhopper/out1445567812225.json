{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":7},"transformations":[{"failures":[],"tindex":"eafa8058-792e-11e5-8da8-11b70b33183f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:147","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-2},{"failures":[0,1,2,3],"tindex":"eafaa769-792e-11e5-8da8-2fb29941417f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"ferryBit","len":"ferryBit","start":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[4,5,6,7,8,9],"tindex":"eafaa76a-792e-11e5-8da8-4796fec9b8f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"value","end":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"eafaa76b-792e-11e5-8da8-e72ae29db614","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SimpleFSLockFactory:110","type":"CtReturnImpl","sourcecode":"return java.io.File.exists()"},"variableMap":{"lockFile":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:227","type":"CtReturnImpl","sourcecode":"return java.io.File.delete()"},"status":-2},{"failures":[],"tindex":"eafaa76c-792e-11e5-8da8-bb9d1e58b50c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)"},"status":-2},{"failures":[],"tindex":"eaface7d-792e-11e5-8da8-2145f96c8d38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-2},{"failures":[],"tindex":"eaface7e-792e-11e5-8da8-05bd0cab31a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"eaface7f-792e-11e5-8da8-af85b79d8563","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:499","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.TranslationMap"},"variableMap":{"trMap":"com.graphhopper.util.TranslationMap.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:66","type":"CtTryImpl","sourcecode":"try {\n    for (java.lang.String java.lang.String : com.graphhopper.util.TranslationMap.java.util.List<java.lang.String>) {\n        com.graphhopper.util.TranslationMap.TranslationHashMap com.graphhopper.util.TranslationMap.TranslationHashMap = new com.graphhopper.util.TranslationMap.TranslationHashMap(com.graphhopper.util.Helper.getLocale(java.lang.String));\n        com.graphhopper.util.TranslationMap.TranslationHashMap.doImport(com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.getResourceAsStream((java.lang.String + \".txt\")));\n        com.graphhopper.util.TranslationMap.add(com.graphhopper.util.TranslationMap.TranslationHashMap);\n    }\n    com.graphhopper.util.TranslationMap.postImportHook();\n    return this;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"eaface80-792e-11e5-8da8-51e795b01472","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"x1","dLat":"y1","tmpErr":"y1","x1":"y1","sLon":"x1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[],"tindex":"eaface81-792e-11e5-8da8-0fc97e623fad","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"status":-2},{"failures":[],"tindex":"eaface82-792e-11e5-8da8-81eff0c94962","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"fullWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<com.graphhopper.routing.Path>.size()) ; int++) {\n    com.graphhopper.routing.Path com.graphhopper.routing.Path = java.util.List<com.graphhopper.routing.Path>.get(int);\n    long += com.graphhopper.routing.Path.getTime();\n    double += com.graphhopper.routing.Path.getDistance();\n    double += com.graphhopper.routing.Path.getWeight();\n    if (boolean) {\n        com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation);\n        if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n            if (com.graphhopper.util.PointList.isEmpty()) {\n                com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n                com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n            } \n            for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n                if (boolean) {\n                    int += com.graphhopper.util.Instruction.getPoints().size();\n                    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n                } \n                com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n                com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n            }\n            if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n                com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n                com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n                com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n            } \n        } \n    } else if (boolean) {\n        com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n        if (com.graphhopper.util.PointList.isEmpty())\n            com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n        \n        if (boolean) {\n            int = com.graphhopper.util.PointList.getSize();\n            com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n        } \n        com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n    } \n    boolean = boolean && (com.graphhopper.routing.Path.isFound());\n}"},"status":-2},{"failures":[],"tindex":"eafaf593-792e-11e5-8da8-0bca361ff336","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:621","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.trimTo(long)"},"variableMap":{"nodes":"names","nodeCap":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-2},{"failures":[],"tindex":"eafaf594-792e-11e5-8da8-9ddcf9f669d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n        continue;\n    } \n    for (int int = 0, int int ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if (double < 0)\n            continue;\n        \n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            double = double;\n        } \n        if (int > 0)\n            continue;\n        \n        int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n            if (double < double) {\n                com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n                if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                \n                double = double;\n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"eafaf595-792e-11e5-8da8-717e95d11a92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:221","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:99","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"eafb1ca6-792e-11e5-8da8-33cdf7ff265c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"eafb1ca7-792e-11e5-8da8-c7b9e3617859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"eafb1ca8-792e-11e5-8da8-f1692439bf7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:917","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"eafb1ca9-792e-11e5-8da8-1ba568081ada","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"eafb1caa-792e-11e5-8da8-295c7f4fda99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:130","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return 0;\n"},"variableMap":{"phrase":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception ex) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.util.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-2},{"failures":[],"tindex":"eafb1cab-792e-11e5-8da8-f184ecce1d69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}