{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":17,"com.graphhopper.routing.PathTest.testFindInstruction":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":3,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":85,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":95,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":1,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":44,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":24,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":97,"com.graphhopper.coll.CompressedArrayTest.testCompress":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":57,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":6,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":91,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":74,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":54,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":53,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":49,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":47,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":73,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":80,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":40,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":66,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":22,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":59,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":71,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":93,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":82,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":96,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":63,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":70,"com.graphhopper.coll.CompressedArrayTest.testCompress2":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":10,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":13,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":48,"com.graphhopper.util.InstructionListTest.testFind":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":34},"transformations":[{"failures":[0],"tindex":"355e91c9-8276-11e5-968e-c1b4f8ea1f1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"newEdges","newNodeId":"wayOsmId","wayOsmId":"wayOsmId","wayFlags":"flags","this":"this","nodeFlags":"wayOsmId","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:699","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"355eb8da-8276-11e5-968e-63421d487817","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"355eb8db-8276-11e5-968e-955850054947","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize())"},"variableMap":{"pointList":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:879","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"status":-2},{"failures":[10,11,12,13,14,15,16],"tindex":"355eb8dc-8276-11e5-968e-4195bdfbe472","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:314","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false)"},"status":-1},{"failures":[17],"tindex":"355eb8dd-8276-11e5-968e-2774c2661c37","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:254","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/extensions>\")"},"variableMap":{"output":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:286","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(')')"},"status":-1},{"failures":[],"tindex":"355edfee-8276-11e5-968e-ff35953f2ba4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"flags","backwardBit":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":0},{"failures":[18,19],"tindex":"355edfef-8276-11e5-968e-d5e5b6ef14ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"foundInstruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) > 1) {\n    for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n        com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n        for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n            double double = com.graphhopper.util.PointList.getLatitude(int);\n            double double = com.graphhopper.util.PointList.getLongitude(int);\n            if (!((int == 0) && (int == 0))) {\n                double double;\n                int int = int;\n                if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                } else {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                }\n                if (double < double) {\n                    double = double;\n                    int = int;\n                } \n            } \n            double = double;\n            double = double;\n        }\n    }\n} "},"status":-1},{"failures":[],"tindex":"355edff0-8276-11e5-968e-659ed37a84e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"variableMap":{"ghStorage":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[20],"tindex":"355edff1-8276-11e5-968e-1f70cf74c119","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:683","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"loadedCHWeightings"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"355f0702-8276-11e5-968e-e51c92403f29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:182","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"intVal":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:71","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"355f0703-8276-11e5-968e-0f6b1950ec92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"variableMap":{"tmpNode":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[55,56,27,28,30,57,58,59,60,32,33,61,62,63,64,65,66,67,68,69,70,71,72,73,74,34,35,37,75,76,77,78,39,40,79,80,81,82,83,84,48,49,51,85,86,87,88,53,54,89,90,91,92],"tindex":"355f0704-8276-11e5-968e-e39206e04fb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"width":"segmentSizeInBytes","lonSimilar":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[93],"tindex":"355f0705-8276-11e5-968e-23adb12a79ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"variableMap":{"ghLocation":"entry","osmFile":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PMap.has(\"version\")) {\n    if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n        throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n    } \n} "},"status":-1},{"failures":[],"tindex":"355f0706-8276-11e5-968e-5175b55cfd49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"status":-2},{"failures":[94,95,96,97],"tindex":"355f2e17-8276-11e5-968e-01d79979a2d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:202","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[],"tindex":"355f2e18-8276-11e5-968e-436f7cb474cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return ((\"totalMB:\" + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getTotalMB())) + \", usedMB:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getUsedMB())"},"status":0},{"failures":[],"tindex":"355f2e19-8276-11e5-968e-679f5f829a88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:175","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-2},{"failures":[],"tindex":"355f2e1a-8276-11e5-968e-3d51a50c6945","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:196","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"355f2e18-8276-11e5-968e-436f7cb474cd","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.getTotalMB","com.graphhopper.util.Helper.getUsedMB"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"]},"type":"branch"}]}]}