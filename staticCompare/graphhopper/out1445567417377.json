{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":14,"com.graphhopper.util.InstructionListTest.testCreateGPX":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.GraphHopperTest.testVia":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":20,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":28,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.util.GHUtilityTest.testCopy":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":7},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"ffa2171d-792d-11e5-834c-b3e0e06f7730","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:280","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long))"},"status":-1},{"failures":[37,38,39],"tindex":"ffa2171e-792d-11e5-834c-f9a657f4deb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\")"},"variableMap":{"entry":"entry","track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":-1},{"failures":[],"tindex":"ffa23e2f-792d-11e5-834c-8b0adcdb0c42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ffa23e30-792d-11e5-834c-8157a4088d9b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:278","type":"CtIfImpl","sourcecode":"if ((int[][int]) >= 0) {\n    if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n        continue;\n    } \n} "},"status":-2},{"failures":[],"tindex":"ffa23e31-792d-11e5-834c-8793c438befc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"status":-2},{"failures":[],"tindex":"ffa23e32-792d-11e5-834c-d75c5d2dfd51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"variableMap":{"minLat":"minResolutionInMeter","lat":"maxDistInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:145","type":"CtLocalVariableImpl","sourcecode":"double double = double / (int)"},"status":-2},{"failures":[],"tindex":"ffa23e33-792d-11e5-834c-35a4a5d34b72","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:58","type":"CtLocalVariableImpl","sourcecode":"int int = double > 0 ? 1 : -1"},"variableMap":{"deltaIn":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:179","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"ffa26544-792d-11e5-834c-9b8d6aa9e54b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"ffa26545-792d-11e5-834c-5945d5766c52","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-2},{"failures":[],"tindex":"ffa26546-792d-11e5-834c-f3c2d070843c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"ffa26547-792d-11e5-834c-5dec221c5638","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:91","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"status":-2},{"failures":[],"tindex":"ffa28c58-792d-11e5-834c-fb9e6b87bcfe","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1049","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.RoutingAlgorithm.setWeightLimit(double)"},"status":-2},{"failures":[],"tindex":"ffa28c59-792d-11e5-834c-9bf7dc201dfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:228","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-2},{"failures":[],"tindex":"ffa28c5a-792d-11e5-834c-1396f0db7a4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"ffa28c5b-792d-11e5-834c-ab30b2fc732b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:292","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2},{"failures":[],"tindex":"ffa28c5c-792d-11e5-834c-492d282f5535","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:238","type":"CtLocalVariableImpl","sourcecode":"double double = double[][int]"},"status":-2},{"failures":[],"tindex":"ffa28c5d-792d-11e5-834c-4bce2c24aebe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:576","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"ffa2b36e-792d-11e5-834c-fb33c890e02d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:381","type":"CtIfImpl","sourcecode":"if (int == (-(java.lang.Integer.int)))\n    return -(java.lang.Double.double);\n"},"variableMap":{"java.lang.Double.MAX_VALUE":"java.lang.Double.POSITIVE_INFINITY","java.lang.Integer.MAX_VALUE":"maxTurnCosts","storedInt":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:643","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ffa2b36f-792d-11e5-834c-5777c6e1e061","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"width":"refCounter","lonSimilar":"refCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:136","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"ffa2b370-792d-11e5-834c-0daf9d5cfdbe","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}