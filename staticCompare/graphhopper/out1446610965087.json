{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":88,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":455,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":3,"com.graphhopper.GraphHopperAPITest.testNoLoad":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testFerry":466,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":316,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":377,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":321,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":6,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":49,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":293,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":482,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":44,"com.graphhopper.GraphHopperTest.testPrepare":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":31,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":21,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":384,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":336,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":41,"com.graphhopper.GraphHopperTest.testLoadOSM":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":58,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":119,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":402,"com.graphhopper.reader.OSMReaderTest.testSort":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":472,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":310,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":184,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":91,"com.graphhopper.routing.DijkstraTest.initializationError":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":271,"com.graphhopper.geohash.LinearKeyAlgoTest.testInstantiation":481,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":148,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":235,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":369,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":215,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":153,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":353,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":395,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":240,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":423,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":253,"com.graphhopper.GraphHopperAPITest.testLoad":463,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":388,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":294,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":284,"com.graphhopper.reader.OSMReaderTest.testBarriers":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":431,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":435,"com.graphhopper.util.GHUtilityTest.testCopy":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":364,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":429,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":311,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":440,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":459,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":159,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":144,"com.graphhopper.util.InstructionListTest.testWayList2":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":226,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":331,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":134,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":195,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":283,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":99,"com.graphhopper.routing.AStarTest.initializationError":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":145,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":398,"com.graphhopper.routing.PathBidirRefTest.testExtract":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":339,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":483,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":372,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":26,"com.graphhopper.reader.OSMReaderTest.testMain":96,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":409,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":427,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":474,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":43,"com.graphhopper.storage.GraphHopperStorageTest.testClone":286,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":142,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":363,"com.graphhopper.util.InstructionListTest.testCreateGPX":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":422,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":173,"com.graphhopper.reader.OSMReaderTest.testRelation":470,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":132,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":89,"com.graphhopper.GraphHopperTest.testFootOnly":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":373,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":196,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":449,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":425,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":169,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":220,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":86,"com.graphhopper.routing.QueryGraphTest.testOneWay":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":379,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.reader.OSMReaderTest.testWithBounds":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":443,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":174,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":399,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":258,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":66,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.util.InstructionListTest.testWayList":74,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":312,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":130,"com.graphhopper.GraphHopperAPITest.testDisconnected179":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":161,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":438,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":477,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":344,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":77,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":62,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":389,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":328,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":23,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":417,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":210,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":241,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":348,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":276,"com.graphhopper.routing.PathTest.testWayList":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":20,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":343,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":8,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":274,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":200,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":432,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":149,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":479,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":187,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":356,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":354,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":78,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":178,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":325,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":403,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":255,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":164,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":406,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":404,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":454,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":147,"com.graphhopper.reader.PrinctonReaderTest.testRead":476,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":48,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":260,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":334,"com.graphhopper.reader.OSMReaderTest.testFoot":467,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":224,"com.graphhopper.reader.OSMReaderTest.testOneWay":475,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":308,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":37,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":171,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":290,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":337,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":415,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":374,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":167,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":46,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":9,"com.graphhopper.routing.PathBidirRefTest.testExtract2":462,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":366,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":216,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":368,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":201,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":186,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":393,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":439,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":152,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":309,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":418,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":67,"com.graphhopper.GraphHopperTest.testFootAndCar":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":434,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":359,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":157,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":420,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":246,"com.graphhopper.GraphHopperTest.testPrepareOnly":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":233,"com.graphhopper.GraphHopperTest.testVia":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":347,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":453,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":471,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":10,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":111,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":306,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":394,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":469,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":208,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":170,"com.graphhopper.routing.AStarBidirectionTest.initializationError":447,"com.graphhopper.util.InstructionListTest.testFind":72,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":59},"transformations":[{"failures":[0,1,2,3,4],"tindex":"b289c5b1-82ab-11e5-b1a2-475e0bb29745","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:115","type":"CtIfImpl","sourcecode":"if (double < double) {\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"b289c5b2-82ab-11e5-b1a2-b5eb2fdecd56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"variableMap":{"lastIndex":"key","fromIndex":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"b289c5b3-82ab-11e5-b1a2-a310070f7d4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"b289ecc4-82ab-11e5-b1a2-7f21975521f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"variableMap":{"from":"b","lonSize":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:182","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.CHGraphImpl.nextShortcutId(), int, int)"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,28,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"b289ecc5-82ab-11e5-b1a2-9b70df6027a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:876","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[(int * (com.graphhopper.storage.NodeAccess.getDimension())) * 4]"},"status":-1},{"failures":[101,102,103,104,105,77,106,78,80,107,24,25,27,30,91,93],"tindex":"b289ecc6-82ab-11e5-b1a2-9f52bbcd3b40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"status":-1},{"failures":[108,109,110,111,112],"tindex":"b289ecc7-82ab-11e5-b1a2-cf84a784cd40","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"status":-1},{"failures":[5,113,114,6,7,8,9,10,11,12,115,42,116,117,118,119,120,43,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,44,141,142,143,144,145,45,146,147,148,149,46,150,151,47,152,153,48,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,49,174,175,176,177,178,50,179,180,181,182,51,183,184,52,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,13,201,202,203,204,53,54,55,205,206,207,208,209,210,211,212,0,213,214,215,216,217,218,56,57,58,219,220,221,222,223,224,225,226,1,227,228,229,230,2,231,3,4,232,233,234,59,235,236,237,238,239,240,241,242,60,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,61,263,264,265,266,267,62,268,269,270,271,63,272,273,64,274,275,276,65,277,278,279,280,281,282,66,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,67,303,304,305,306,307,68,308,309,310,311,69,312,313,70,314,315,316,317,318,319,320,321,322,76,77,106,78,79,323,324,80,81,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,82,83,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,14,15,16,17,18,449,450,19,107,451,20,452,21,453,22,23,24,25,26,454,27,455,456,28,29,457,30,458,459,460,461,462,86,463,464,465,466,467,96,97,98,99,100,468,469,470,471,472,473,474,475,476,477],"tindex":"b28a13d8-82ab-11e5-b1a2-73741ba1bb2f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"variableMap":{"cp":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"b28a13d9-82ab-11e5-b1a2-7195b730db24","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"java.lang.Double.NaN","lat2":"java.lang.Double.NaN","lon1":"java.lang.Double.NaN","lon2":"java.lang.Double.NaN","shrinkFactor":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[6,101,102,103,104,105,322,76,77,106,78,79,80,81,107,452,24,25,27,30,85,86,478,87,88,89,90,479,91,92,93,480,94,95],"tindex":"b28a3aea-82ab-11e5-b1a2-91ebf4c6f6ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:172","type":"CtIfImpl","sourcecode":"if (java.util.List<com.graphhopper.storage.index.QueryResult> == null) {\n    java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(5);\n    gnu.trove.map.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.put(int, java.util.List<com.graphhopper.storage.index.QueryResult>);\n} "},"status":-1},{"failures":[],"tindex":"b28a3aeb-82ab-11e5-b1a2-d79c638d5135","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"deltaLat","azimuth":"deltaLat","java.lang.Math.PI":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:720","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[],"tindex":"b28a3aec-82ab-11e5-b1a2-b79936e9d714","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:140","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[103,105,322,14,17,18,107,452,24,25,454,27,456,28,457],"tindex":"b28a3aed-82ab-11e5-b1a2-07ffc0cc85a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"prevLon","incDist2DSum":"prevLat","fwdSlower":"prevLon","fullDist2D":"prevLat","restDist2D":"prevLat","speed":"prevLon","decDist2DSum":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:413","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int])"},"status":-1},{"failures":[196,197,200,481],"tindex":"b28a3aee-82ab-11e5-b1a2-affc5a024ea7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double)"},"status":-1},{"failures":[101,104,105],"tindex":"b28a3aef-82ab-11e5-b1a2-f9f70318cb13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"placeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1031","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(0), false);\n} else if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-1},{"failures":[322,468],"tindex":"b28a6200-82ab-11e5-b1a2-1530f77dac6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"variableMap":{"this":"tmpIndex","minResolutionInMeter":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMaxRegionSearch(int)"},"status":-1},{"failures":[],"tindex":"b28a6201-82ab-11e5-b1a2-dd357d0bf8fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:155","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.Circle.(normDist(com.graphhopper.util.shapes.Circle.double, com.graphhopper.util.shapes.Circle.double)) <= (com.graphhopper.util.DistanceCalc.calcNormalizedDist(((double) + (com.graphhopper.util.shapes.Circle.double))))"},"status":-2},{"failures":[],"tindex":"b28a6202-82ab-11e5-b1a2-cb0facc50038","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:678","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"b28a6203-82ab-11e5-b1a2-3b2f9f87ea67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:685","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[13,201,203,204,53,54,55,205,206,207,208,209,210,211,212,0,213,214,215,216,217,218,56,57,58,219,220,221,222,223,224,225,226,1,227,228,229,230,482,320,101,102,103,104,105,483,321,322,76,77,106,78,79,324,80,81,325,452,24,25,27,463,464,466,467,96,97,98,99,100,468,469,471,472,473,474,475],"tindex":"b28a6204-82ab-11e5-b1a2-f9c0366c4600","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b289c5b3-82ab-11e5-b1a2-a310070f7d4d","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).e1","com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).b","com.graphhopper.storage.GHDirectory_void_remove(com.graphhopper.storage.DataAccess).b","com.graphhopper.storage.AbstractDataAccess_void_close().b","com.graphhopper.reader.OSMReader_void_finishedReading().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.reader.PillarInfo_void_clear().b","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().b","com.graphhopper.reader.OSMReader_void_printInfo(java.lang.String).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e1","com.graphhopper.coll.GHLongIntBTree_int_getMemoryUsage().b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).b","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().e1","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.reader.dem.ElevationProvider$1_void_release().b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getName().b","com.graphhopper.storage.RAMDataAccess_void_close().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).e1","com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).b","com.graphhopper.storage.GHDirectory_void_remove(com.graphhopper.storage.DataAccess).b","com.graphhopper.storage.AbstractDataAccess_void_close().b","com.graphhopper.reader.OSMReader_void_finishedReading().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.reader.PillarInfo_void_clear().b","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().b","com.graphhopper.reader.OSMReader_void_printInfo(java.lang.String).b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e1","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.coll.GHLongIntBTree_int_getMemoryUsage().b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).b","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_long_getCapacity().e1","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.reader.dem.ElevationProvider$1_void_release().b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getName().b","com.graphhopper.storage.RAMDataAccess_void_close().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.OSMReader.finishedReading"]},"type":"staticDiff"}]}]}