{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":59,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":69,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.reader.OSMReaderTest.testFerry":95,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":85,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":86,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":66,"com.graphhopper.routing.QueryGraphTest.testOneWay":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":241,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":192,"com.graphhopper.reader.OSMReaderTest.testWithBounds":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":12,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":138,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":26,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":259,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":219,"com.graphhopper.GraphHopperTest.testPrepare":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":58,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":22,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":263,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.util.InstructionListTest.testWayList":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":50,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":88,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":134,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":193,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":7,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":16,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":149,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":169,"com.graphhopper.GraphHopperTest.testLoadOSM":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":194,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":226,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":266,"com.graphhopper.reader.OSMReaderTest.testSort":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":15,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":31,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":63,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":108,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":0,"com.graphhopper.routing.PathTest.testWayList":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":64,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":48,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":157,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":189,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":287,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":55,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":278,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":280,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":6,"com.graphhopper.util.GHUtilityTest.testSort":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":135,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":221,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":9,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":283,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":265,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":160,"com.graphhopper.GraphHopperAPITest.testLoad":78,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":62,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":11,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":18,"com.graphhopper.reader.OSMReaderTest.testBarriers":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":144,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":46,"com.graphhopper.util.GHUtilityTest.testCopy":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":132,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":281,"com.graphhopper.routing.PathTest.testFindInstruction":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":38,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":162,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":136,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":171,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":163,"com.graphhopper.reader.PrinctonReaderTest.testRead":93,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":33,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":65,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":242,"com.graphhopper.util.InstructionListTest.testWayList2":90,"com.graphhopper.reader.OSMReaderTest.testFoot":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":147,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":198,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":272,"com.graphhopper.reader.OSMReaderTest.testOneWay":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":8,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":231,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":140,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":257,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":243,"com.graphhopper.routing.PathBidirRefTest.testExtract":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":217,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":115,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":187,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":145,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":112,"com.graphhopper.util.GHUtilityTest.testSort2":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":56,"com.graphhopper.reader.OSMReaderTest.testMain":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":247,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":286,"com.graphhopper.routing.PathBidirRefTest.testExtract2":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":202,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":190,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":239,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":167,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":30,"com.graphhopper.storage.StorablePropertiesTest.testStore":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":195,"com.graphhopper.storage.GraphHopperStorageTest.testClone":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":248,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":282,"com.graphhopper.GraphHopperTest.testFootAndCar":121,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":142,"com.graphhopper.reader.OSMReaderTest.testRelation":273,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":279,"com.graphhopper.util.GHUtilityTest.testSortDirected":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":155,"com.graphhopper.GraphHopperTest.testPrepareOnly":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":236,"com.graphhopper.GraphHopperTest.testVia":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":210,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":51,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":104,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":176,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":223,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":91,"com.graphhopper.GraphHopperTest.testFootOnly":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":181,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":182,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":2,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":235,"com.graphhopper.util.InstructionListTest.testFind":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":229},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"9a3d4211-82b7-11e5-8a30-0717280afc1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:51","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,273,274,104,105,106,275,276,107,109,110,117,118,119,120,121,122,123,124,125,126,127],"tindex":"9a3d9032-82b7-11e5-8a30-9b62098882b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"status":-1},{"failures":[],"tindex":"9a3d9033-82b7-11e5-8a30-9f0d4d803ffa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.done\", boolean)"},"status":0},{"failures":[277,278,279],"tindex":"9a3d9034-82b7-11e5-8a30-47332e3ea362","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:97","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseLongLongArray.binarySearch(long[], 0, ((int) + 1), long)"},"status":-1},{"failures":[],"tindex":"9a3d9035-82b7-11e5-8a30-3192396d4009","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:89","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(int)) {\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int);\n    int = com.graphhopper.storage.EdgeEntry.int;\n}"},"status":-2},{"failures":[],"tindex":"9a3d9036-82b7-11e5-8a30-97c408f601f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:555","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setCalcMean(boolean)"},"status":0},{"failures":[],"tindex":"9a3d9037-82b7-11e5-8a30-5183e5b08eaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"entry":"s","entryVal":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"status":0},{"failures":[],"tindex":"9a3db748-82b7-11e5-8a30-d9aa1d7d960f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"status":-2},{"failures":[],"tindex":"9a3db749-82b7-11e5-8a30-11cbf57eb246","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:424","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.clean(int, java.util.List<java.nio.ByteBuffer>.size())"},"status":0},{"failures":[],"tindex":"9a3db74a-82b7-11e5-8a30-d9804f48b555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"9a3db74b-82b7-11e5-8a30-8138f0e770a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:60","type":"CtConstructorCallImpl","sourcecode":"new com.graphhopper.util.Downloader(\"GraphHopper CGIARReader\")"},"status":0},{"failures":[65,111,115],"tindex":"9a3db74c-82b7-11e5-8a30-d90d8a226343","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"edgeOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:401","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1))"},"status":-1},{"failures":[],"tindex":"9a3db74d-82b7-11e5-8a30-d58637d4fe79","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:145","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 35"},"status":0},{"failures":[],"tindex":"9a3db74e-82b7-11e5-8a30-072b7848a704","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"_default","tmpValue":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:90","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[78,280,281,282,97,98,99,100,101,103,104,109,110,117,118,119,120,121,122,123,124,125,126],"tindex":"9a3dde5f-82b7-11e5-8a30-75c6fc7b5735","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.trimToSize(((com.graphhopper.util.PointList.getSize()) - int))"},"status":-1},{"failures":[],"tindex":"9a3dde60-82b7-11e5-8a30-1f1a5221a0fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"minLat","minLatTmp":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:657","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - double"},"status":-2},{"failures":[],"tindex":"9a3dde61-82b7-11e5-8a30-317ae1f2f4c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:110","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.toLowerCase(), java.lang.String)"},"variableMap":{"map":"map","value":"val","key":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:93","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-2},{"failures":[23,32,40,41,50,54],"tindex":"9a3dde62-82b7-11e5-8a30-cdbb33c60f12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIteratorState.isShortcut())\n    return com.graphhopper.util.CHEdgeIteratorState.getWeight();\n"},"status":-1},{"failures":[110,122,123,124,125,150,283,284,285,286,225,249,287],"tindex":"9a3dde63-82b7-11e5-8a30-1b65ff3d20a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:685","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.storage.DataAccess.loadExisting())) || (!(com.graphhopper.storage.DataAccess.loadExisting())))\n    return false;\n"},"variableMap":{"shortcuts":"da","nodesCH":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:49","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"9a3dde64-82b7-11e5-8a30-f988f5098350","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"shortcutEntryBytes","nextEdgeOther":"shortcutEntryBytes","nodeOther":"shortcutEntryBytes","nextEdge":"shortcutEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:623","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"9a3db749-82b7-11e5-8a30-11cbf57eb246","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.MMapDataAccess.clean","java.util.List<java.nio.ByteBuffer>.size"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":["com.graphhopper.storage.MMapDataAccess_void_clean(int,int).b"]},"type":"branch"}]},{"transformation":"9a3d9036-82b7-11e5-8a30-97c408f601f6","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.reader.dem.ElevationProvider$1_void_setCalcMean(boolean).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.setCalcMean"]},"type":"staticDiff"}]},{"transformation":"9a3d9033-82b7-11e5-8a30-9f0d4d803ffa","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.getProperties","com.graphhopper.storage.StorableProperties.put"]},"type":"staticDiff"}]},{"transformation":"9a3d9037-82b7-11e5-8a30-5183e5b08eaa","diffs":[{"methodsDiff":{"delete":["java.lang.String.trim"]},"type":"staticDiff"}]}]}