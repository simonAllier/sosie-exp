{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":43,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":70,"com.graphhopper.util.BitUtilBigTest.testToDouble":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":3,"com.graphhopper.reader.OSMReaderTest.testMain":62,"com.graphhopper.reader.OSMReaderTest.testFerry":60,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":42,"com.graphhopper.routing.QueryGraphTest.testOneWay":48,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":36,"com.graphhopper.reader.OSMReaderTest.testWithBounds":71,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":67,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":18,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":21,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":22,"com.graphhopper.GraphHopperTest.testPrepare":54,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":84,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":87,"com.graphhopper.GraphHopperTest.testFootAndCar":78,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.reader.OSMReaderTest.testFoot":61,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":46,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":29,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":49,"com.graphhopper.coll.IntIntBinHeapTest.testSize":13,"com.graphhopper.reader.OSMReaderTest.testOneWay":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":32,"com.graphhopper.coll.IntIntBinHeapTest.testClear":11,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":10,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":80,"com.graphhopper.GraphHopperTest.testPrepareOnly":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":5,"com.graphhopper.util.BitUtilBigTest.testToLong":9,"com.graphhopper.GraphHopperTest.testVia":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":20,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":33,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":14,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":69,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":1,"com.graphhopper.util.DouglasPeuckerTest.testParse":86,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":66,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":44,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":39,"com.graphhopper.GraphHopperTest.testFootOnly":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":23,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":17,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.GraphHopperTest.testLoadOSM":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":50,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":52,"com.graphhopper.reader.OSMReaderTest.testSort":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":51},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"f42252ea-829b-11e5-9604-67bf9d2e9845","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:141","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n"},"status":-1},{"failures":[8,9],"tindex":"f42279fb-829b-11e5-9604-0f6b7d1800b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"offset","hash":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"f42279fc-829b-11e5-9604-09169dfa7d2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:388","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"f422a10d-829b-11e5-9604-79ec4485c43e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"f422a10e-829b-11e5-9604-b1ba2de66501","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:130","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"status":-2},{"failures":[10,11,12,13,14],"tindex":"f422a10f-829b-11e5-9604-0db405ab3368","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:127","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"f422a110-829b-11e5-9604-a7e404026734","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:70","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"f422c821-829b-11e5-9604-874860609505","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:598","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n        continue;\n    \n    double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n    if (java.lang.Double.isNaN(double))\n        throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n    \n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n    com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n    com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n    com.graphhopper.util.StopWatch.start();\n    (long)++;\n    int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n    com.graphhopper.util.StopWatch.stop();\n    if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n        continue;\n    \n    com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n}"},"status":-1},{"failures":[],"tindex":"f422c822-829b-11e5-9604-8baf9087ab14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime()))))"},"status":0},{"failures":[],"tindex":"f422c823-829b-11e5-9604-1537c67a7949","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"variableMap":{"ar_y":"lat","ab_y":"lat","ar_x":"lon","ab_x":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:200","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double)"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"f422ef34-829b-11e5-9604-eb7ee3ea1fa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:687","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-1},{"failures":[],"tindex":"f422ef35-829b-11e5-9604-2fcccb123b97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:154","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>"},"status":-1},{"failures":[],"tindex":"f422ef36-829b-11e5-9604-77dc89bb88bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:292","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[59,20,21,25],"tindex":"f422ef37-829b-11e5-9604-9bc8f26e36dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:248","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.toString().toLowerCase().replaceAll(\"\\\\W+\", \"_\")"},"status":-1},{"failures":[],"tindex":"f422ef38-829b-11e5-9604-05bc443b6e2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:397","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,54,55,78,56,57,79,80,58,81,82,83],"tindex":"f4231649-829b-11e5-9604-83ee91f59d75","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1195","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"variableMap":{"fullyLoaded":"removeZipped"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:711","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"-gh\")) {\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-1},{"failures":[71],"tindex":"f423164a-829b-11e5-9604-7f56cd38a89f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:695","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[],"tindex":"f423164b-829b-11e5-9604-99e1250eb493","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:221","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"status":0},{"failures":[84,85,86,87],"tindex":"f4233d5c-829b-11e5-9604-f714f82575be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:430","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\[\")) {\n    if ((java.lang.String.trim().length()) == 0)\n        continue;\n    \n    java.lang.String[] java.lang.String[] = java.lang.String.split(\",\");\n    java.lang.String java.lang.String = java.lang.String[][1].replace(\"]\", \"\").trim();\n    com.graphhopper.util.PointList.add(java.lang.Double.parseDouble(java.lang.String), java.lang.Double.parseDouble(java.lang.String[][0].trim()), java.lang.Double.double);\n}"},"status":-1},{"failures":[],"tindex":"f4233d5d-829b-11e5-9604-43a6f69535c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f422c822-829b-11e5-9604-8baf9087ab14","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append","com.graphhopper.util.GPXEntry.getTime","java.text.Format.format"]},"type":"staticDiff"}]},{"transformation":"f422ef36-829b-11e5-9604-77dc89bb88bc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}