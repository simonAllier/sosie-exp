{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":71,"com.graphhopper.routing.PathTest.testFindInstruction":84,"com.graphhopper.reader.OSMReaderTest.testFerry":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":4,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":55,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":98,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":24,"com.graphhopper.reader.OSMReaderTest.testWithBounds":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":93,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":30,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":92,"com.graphhopper.GraphHopperTest.testPrepare":56,"com.graphhopper.util.InstructionListTest.testWayList2":78,"com.graphhopper.reader.OSMReaderTest.testFoot":37,"com.graphhopper.util.InstructionListTest.testWayList":76,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":86,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":80,"com.graphhopper.GraphHopperAPITest.testDisconnected179":36,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":25,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":69,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":18,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":57,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":7,"com.graphhopper.storage.RAMDataAccessTest.testCopy":103,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":19,"com.graphhopper.reader.OSMReaderTest.testSort":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":1,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":45,"com.graphhopper.reader.OSMReaderTest.testMain":38,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":6,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":66,"com.graphhopper.routing.PathTest.testWayList":83,"com.graphhopper.storage.MMapDataAccessTest.testCopy":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":11,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":42,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":10,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":23,"com.graphhopper.GraphHopperTest.testFootAndCar":58,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":91,"com.graphhopper.util.InstructionListTest.testCreateGPX":77,"com.graphhopper.GraphHopperTest.testPrepareOnly":48,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":81,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":34,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":96,"com.graphhopper.GraphHopperAPITest.testLoad":35,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":59,"com.graphhopper.GraphHopperTest.testFootOnly":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":33,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":79,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":43,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":67,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":73,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":97,"com.graphhopper.util.InstructionListTest.testFind":74,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":89},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"cd7eabc3-8285-11e5-90cf-5f56a6204b69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"status":-1},{"failures":[27,28,29,30,31,32,33],"tindex":"cd7ed2d4-8285-11e5-90cf-f930331c456a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currTo","entryCurrent":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:102","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"cd7ed2d5-8285-11e5-90cf-6d100a01edb5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"configuredCHWeightings","destination":"loadedCHWeightings"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"cd7ed2d6-8285-11e5-90cf-7f746bdb1df9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPoint:78","type":"CtReturnImpl","sourcecode":"return ((double) + \",\") + (double)"},"variableMap":{"lon":"azimuth","lat":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-2},{"failures":[34],"tindex":"cd7ed2d7-8285-11e5-90cf-d5d5fbb582a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,0,47,48,49,50,51,52,53,54,55,27,56,57,58,59,60,61,62,28,63,64,65,1,66,67,68,69],"tindex":"cd7ed2d8-8285-11e5-90cf-957d7de69611","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:416","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.FlagEncoder>"},"status":-1},{"failures":[70],"tindex":"cd7ef9e9-8285-11e5-90cf-cb150501b583","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[28,71],"tindex":"cd7ef9ea-8285-11e5-90cf-014458ad3c1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:190","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:352","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"cd7ef9eb-8285-11e5-90cf-4f11e268afe8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"value","noOfStates":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[72,73],"tindex":"cd7ef9ec-8285-11e5-90cf-3f09edc300eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:104","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"cd7ef9ed-8285-11e5-90cf-bdd00c7a9aef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:184","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n    if (java.lang.String != null) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n        long long = 0;\n        switch (java.lang.String.charAt(0)) {\n            case 'n' :\n                if (\"node\".equals(java.lang.String)) {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                } \n                break;\n            case 'w' :\n                {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                }\n            case 'r' :\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    } \n} "},"variableMap":{"javax.xml.stream.XMLStreamConstants.START_ELEMENT":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","parser":"parser","event":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:182","type":"CtWhileImpl","sourcecode":"while (int != (javax.xml.stream.XMLStreamConstants.int)) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n        if (java.lang.String != null) {\n            java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n            long long = 0;\n            switch (java.lang.String.charAt(0)) {\n                case 'n' :\n                    if (\"node\".equals(java.lang.String)) {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                    } \n                    break;\n                case 'w' :\n                    {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                    }\n                case 'r' :\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        } \n    } \n    int = javax.xml.stream.XMLStreamReader.next();\n}"},"status":-2},{"failures":[],"tindex":"cd7f20fe-8285-11e5-90cf-b1f210995b18","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[74,75,76,77,78,79,35,40,41,27,56,57,58,59,60,62,28,80,81,66,82,67,68,83,84,85,69,86,87,88,89,90,91,92,93,94,95],"tindex":"cd7f20ff-8285-11e5-90cf-8d9244ef8982","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:55","type":"CtAssignmentImpl","sourcecode":"double[] = new double[int]"},"status":-1},{"failures":[96,97,98,99],"tindex":"cd7f2100-8285-11e5-90cf-dd3a736b7ad1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"intLow","edgeFrom":"intHigh"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[70],"tindex":"cd7f2101-8285-11e5-90cf-83fb373148e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[],"tindex":"cd7f2102-8285-11e5-90cf-917b374055db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:868","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"cd7f4813-8285-11e5-90cf-2147730dc887","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:356","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"cd7f4814-8285-11e5-90cf-5f5d93422d68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:171","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.PointList.is3D()"},"status":-2},{"failures":[100,101,102,103,104],"tindex":"cd7f4815-8285-11e5-90cf-49a9f8606f6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:132","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((int[].int) * 4) ; int += 4) {\n    com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int));\n}"},"status":-1},{"failures":[],"tindex":"cd7f4816-8285-11e5-90cf-bd3d481acf56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"chWeightingStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:806","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}