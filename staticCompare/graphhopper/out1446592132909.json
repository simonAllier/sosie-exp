{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":339,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":137,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":257,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":258,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":271,"com.graphhopper.routing.QueryGraphTest.testOneWay":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":198,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":28,"com.graphhopper.reader.OSMReaderTest.testWithBounds":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":130,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":167,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":309,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":148,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":317,"com.graphhopper.GraphHopperTest.testPrepare":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":220,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":305,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":280,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":324,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":252,"com.graphhopper.util.InstructionListTest.testWayList":262,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":333,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":41,"com.graphhopper.GraphHopperAPITest.testDisconnected179":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":290,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":325,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":157,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":302,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":182,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":294,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":69,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":38,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":320,"com.graphhopper.GraphHopperTest.testLoadOSM":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":20,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":29,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":177,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":244,"com.graphhopper.reader.OSMReaderTest.testSort":77,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":336,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":46,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":194,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":249,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":97,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":343,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":83,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":215,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":293,"com.graphhopper.routing.PathTest.testWayList":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":156,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":253,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":191,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":105,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":27,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":214,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":49,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":301,"com.graphhopper.util.GHUtilityTest.testSort":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":31,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":133,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":223,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":143,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":208,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":287,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":176,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":109,"com.graphhopper.GraphHopperAPITest.testLoad":15,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":70,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":342,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":173,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":222,"com.graphhopper.reader.OSMReaderTest.testBarriers":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":291,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":195,"com.graphhopper.routing.PathTest.testFound":295,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":17,"com.graphhopper.util.GHUtilityTest.testCopy":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":329,"com.graphhopper.routing.PathTest.testFindInstruction":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":321,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":40,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":111,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":52,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":163,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":229,"com.graphhopper.util.InstructionListTest.testEmptyList":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":332,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":136,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":250,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":239,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":311,"com.graphhopper.reader.PrinctonReaderTest.testRead":84,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":219,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":202,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":92,"com.graphhopper.util.InstructionListTest.testWayList2":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":151,"com.graphhopper.reader.OSMReaderTest.testFoot":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":160,"com.graphhopper.coll.IntIntBinHeapTest.test0":61,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":255,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":192,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":183,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":247,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":110,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":62,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":228,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":319,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":144,"com.graphhopper.routing.PathBidirRefTest.testExtract":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":308,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":292,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":134,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":162,"com.graphhopper.util.GHUtilityTest.testSort2":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":337,"com.graphhopper.reader.OSMReaderTest.testMain":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":209,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":210,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":170,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":89,"com.graphhopper.routing.PathBidirRefTest.testExtract2":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":154,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":245,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":196,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":122,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":86,"com.graphhopper.util.SimpleIntDequeTest.testPush":42,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":158,"com.graphhopper.storage.GraphHopperStorageTest.testClone":224,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":213,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":201,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":234,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":175,"com.graphhopper.routing.PathTest.testTime":296,"com.graphhopper.util.InstructionListTest.testCreateGPX":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":200,"com.graphhopper.util.GHUtilityTest.testSortDirected":269,"com.graphhopper.GraphHopperTest.testPrepareOnly":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":190,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":139,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":55,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":272,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":334,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":171,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":276,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":59,"com.graphhopper.GraphHopperTest.testFootOnly":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":21,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":22,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":189,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":297,"com.graphhopper.util.InstructionListTest.testFind":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":180},"transformations":[{"failures":[0,1],"tindex":"d9b148d5-827f-11e5-b977-eb389aee0b6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:386","type":"CtIfImpl","sourcecode":"if ((long & long) > 0) {\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n    long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n    if (int > 0) {\n        if (int < 0)\n            int = 0;\n        \n        long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n        long[][((long[].int) - 1)] = long;\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    } else {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        gnu.trove.list.TLongList.set(0, long);\n    }\n    int = int;\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"d9b196f6-827f-11e5-b977-a3548745b05f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d9b196f7-827f-11e5-b977-5bba8e7fbf01","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"variableMap":{"y1":"i","y2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:179","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"status":-2},{"failures":[],"tindex":"d9b1be08-827f-11e5-b977-2139eff6e8b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:830","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getElevation(int)"},"status":-2},{"failures":[],"tindex":"d9b1be09-827f-11e5-b977-31c0219494e3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"minNetworkSize","nodeCount":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtIfImpl","sourcecode":"if (((int) <= 0) && ((int) <= 0))\n    return ;\n"},"status":0},{"failures":[],"tindex":"d9b1be0a-827f-11e5-b977-d7e0988e4c4f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"java.lang.Double.NaN","angle":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:218","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[51,52,53,54,55,56],"tindex":"d9b2a86b-827f-11e5-b977-67121c749ad9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"variableMap":{"heap":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.insert_(java.lang.Number.doubleValue(), java.lang.Integer)"},"status":-1},{"failures":[],"tindex":"d9b2a86c-827f-11e5-b977-7b514faf2ced","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:188","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.CHEdgeIteratorState)(java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int))).getWeight()"},"status":-2},{"failures":[57,58,59],"tindex":"d9b2a86d-827f-11e5-b977-83b592752912","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trk>\")"},"status":-1},{"failures":[],"tindex":"d9b2a86e-827f-11e5-b977-654604a8fabc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:747","type":"CtIfImpl","sourcecode":"if (double < double)\n    return true;\n"},"variableMap":{"minDistance":"ab_rb","rMin":"ab_rb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:242","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"status":-2},{"failures":[],"tindex":"d9b2a86f-827f-11e5-b977-47666408a8ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:389","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0)"},"status":-2},{"failures":[60,61],"tindex":"d9b2a870-827f-11e5-b977-cd28578f22a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"value","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:145","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"d9b2cf81-827f-11e5-b977-fdd6e7dcd086","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:594","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"d9b2cf82-827f-11e5-b977-43338d8f3a7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"variableMap":{"this":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[58,59],"tindex":"d9b2cf83-827f-11e5-b977-fbdc5b6cc0cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"time","tmpValue":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"status":-1},{"failures":[62,37,38,39,63,64],"tindex":"d9b2cf84-827f-11e5-b977-ebaca4773aef","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"counter","index":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:140","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"filled quadtree index array in \" + float) + \"s. size is \") + com.graphhopper.storage.index.Location2IDQuadtree.(getCapacity())) + \" (\") + int) + \"). filled empty \") + int) + \" in \") + float) + \"s\"))"},"status":-1},{"failures":[65,66,2,3,4,5,6,7,67,8,68,69,9,70,71,72,73,74,10,75,11,76,77,0,78,12,13,79,1,80,81,82,14,83,84,85,15,16,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,17,18,147,148,19,149,20,150,21,151,22,152,153,23,24,25,26,27,154,155,156,28,157,29,158,30,159,31,160,161,32,33,34,35,36,162,62,37,38,39,64,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,59,40,41,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,43,288,44,45,289,46,47,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,48,49,337,338,50,339,340,341,342,343,344],"tindex":"d9b2f695-827f-11e5-b977-2519fd8efd83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:284","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"variableMap":{"maxBits":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[134,136,138,140,142,144,146,17,147,148,20,150,151,22,153,23,26,154,155,156,29,158,159,31,161,32,35,162,62,39,345,214,256],"tindex":"d9b2f696-827f-11e5-b977-359bbdef4a9e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:97","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"d9b31da7-827f-11e5-b977-cd92405ac88f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"i","degree":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:113","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"d9b31da8-827f-11e5-b977-4f1841dd9192","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:286","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"variableMap":{"dijkstra":"this","finishedFrom":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:74","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}