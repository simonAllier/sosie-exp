{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":134,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":59,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":71,"com.graphhopper.GraphHopperAPITest.testNoLoad":225,"com.graphhopper.reader.OSMReaderTest.testFerry":139,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":156,"com.graphhopper.routing.QueryGraphTest.testOneWay":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":200,"com.graphhopper.storage.VLongStorageTest.testWrite":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":236,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":198,"com.graphhopper.reader.OSMReaderTest.testWithBounds":150,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":43,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":118,"com.graphhopper.coll.CompressedArrayTest.testCompress":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":78,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":107,"com.graphhopper.GraphHopperTest.testPrepare":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":133,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":232,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":34,"com.graphhopper.search.NameIndexTest.testFlush":227,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":125,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":223,"com.graphhopper.util.InstructionListTest.testWayList":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":129,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":101,"com.graphhopper.GraphHopperAPITest.testDisconnected179":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":191,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":187,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":154,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":230,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.reader.OSMReaderTest.testSort":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":183,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":149,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":137,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":240,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":186,"com.graphhopper.routing.PathTest.testWayList":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":89,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":207,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":55,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":112,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":163,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":60,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":162,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":119,"com.graphhopper.coll.CompressedArrayTest.testCompress2":194,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":48,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":69,"com.graphhopper.GraphHopperAPITest.testLoad":192,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":31,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":218,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.reader.OSMReaderTest.testBarriers":143,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":45,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":75,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":23,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":213,"com.graphhopper.util.InstructionListTest.testEmptyList":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":130,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":173,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":40,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":176,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":239,"com.graphhopper.util.InstructionListTest.testWayList2":170,"com.graphhopper.reader.OSMReaderTest.testFoot":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":64,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":62,"com.graphhopper.reader.OSMReaderTest.testOneWay":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":155,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":32,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":39,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":92,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":144,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":136,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":172,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":51,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":206,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":216,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":26,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":166,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":220,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":234,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":184,"com.graphhopper.reader.OSMReaderTest.testMain":141,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":111,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":202,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":91,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":212,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":76,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":174,"com.graphhopper.storage.GraphHopperStorageTest.testClone":29,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":208,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":153,"com.graphhopper.util.InstructionListTest.testCreateGPX":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":182,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":102,"com.graphhopper.GraphHopperTest.testVia":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":73,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":114,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":77,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":117,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":171,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":82,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":83,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":188,"com.graphhopper.util.InstructionListTest.testFind":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":99},"transformations":[{"failures":[],"tindex":"63b7f26d-828c-11e5-bf39-41ddb295e76a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:700","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.clear()"},"variableMap":{"pointList":"copyPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:373","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double);\n    }\n"},"status":0},{"failures":[0],"tindex":"63b8197e-828c-11e5-bf39-ad21ecb4faa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:133","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"63b8197f-828c-11e5-bf39-2bf44bcbf136","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"nodeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:303","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,146],"tindex":"63b84090-828c-11e5-bf39-d70da2280f4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"63b84091-828c-11e5-bf39-77d98cfd0eb5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:352","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(com.graphhopper.reader.OSMWay.getId())"},"status":-2},{"failures":[],"tindex":"63b84092-828c-11e5-bf39-b5cc51439e65","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:474","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"63b84093-828c-11e5-bf39-2381f2f9804f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:194","type":"CtIfImpl","sourcecode":"if ((!(java.lang.Double.isNaN(double))) && (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)))\n    throw new java.lang.IllegalArgumentException(((\"Heading \" + double) + \" must be in range (0,360) or NaN\"));\n"},"variableMap":{"heading":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":0},{"failures":[165,166],"tindex":"63b867a4-828c-11e5-bf39-515ec787bd02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:115","type":"CtIfImpl","sourcecode":"if (byte >= 0) {\n    return byte;\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:140","type":"CtIfImpl","sourcecode":"if (byte >= 0) {\n    return long;\n} "},"status":-1},{"failures":[152,162,163,164],"tindex":"63b867a5-828c-11e5-bf39-c30e8b68bde0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"flags","mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:101","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"63b867a6-828c-11e5-bf39-592a95df6675","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.reset()"},"variableMap":{"changedNodes":"component"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:254","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.TIntList.size()) ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(gnu.trove.list.TIntList.get(int));\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false));\n        int++;\n    }\n}"},"status":-2},{"failures":[167,168,169,170,171,4,5,6,7,8,9,10,11,12,13,14,15,17,18,172,173,174,175,176,124,177,178,125,126,179,180,127,181,128,129,182,183,130,131,184,132,133,136,185,137,138,186,187,188,189,190,191,192,193],"tindex":"63b867a7-828c-11e5-bf39-4f3281b9c02e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[194,195],"tindex":"63b88eb8-828c-11e5-bf39-33821a7e7092","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:115","type":"CtIfImpl","sourcecode":"if (byte >= 0) {\n    return byte;\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:164","type":"CtIfImpl","sourcecode":"if (byte >= 0) {\n    return long;\n} "},"status":-1},{"failures":[196,197,198,199,200,201,202,203],"tindex":"63b88eb9-828c-11e5-bf39-09eb75273981","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:208","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,204,205,206,207,208,209,210,211,192],"tindex":"63b88eba-828c-11e5-bf39-3d103aad9697","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:157","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"63b88ebb-828c-11e5-bf39-9b71c576f3d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName())"},"status":0},{"failures":[212,213,214,215,216,217,218,219,220,221,222,223],"tindex":"63b88ebc-828c-11e5-bf39-d5766b30d78a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"address","pointer":"address","maxCapacity":"address","baseCapacity":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.freeMemory(long)"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,17,18,224,192,193,225],"tindex":"63b88ebd-828c-11e5-bf39-8d103e5433c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:64","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"variableMap":{"reverse":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:945","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.GraphHopperStorage) == null) || (!(boolean)))\n    throw new java.lang.IllegalStateException(\"Call load or importOrLoad before routing\");\n"},"status":-1},{"failures":[226,171],"tindex":"63b8b5ce-828c-11e5-bf39-3d516cc740f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"status":-1},{"failures":[227],"tindex":"63b8b5cf-828c-11e5-bf39-bd4ad56a4203","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-1},{"failures":[169,170,18,20,228,229,230,231,27,232,36,38,40,233,44,234,235,236,57,237,80,98,238,107,109,111,239,115,116,118,240,120,121,241,123,136,242,141,144,145],"tindex":"63b8b5d0-828c-11e5-bf39-dbcdf5aefa97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:899","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D()) {\n    com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)));\n    int += 4;\n} else {\n    com.graphhopper.util.PointList.add(double, double);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"63b7f26d-828c-11e5-bf39-41ddb295e76a","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e2","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e4","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t3","com.graphhopper.routing.Path$3_void_next(com.graphhopper.util.EdgeIteratorState,int).l1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e5","com.graphhopper.routing.Path$3_void_next(com.graphhopper.util.EdgeIteratorState,int).l3","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).l6"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.PointList.add"]},"branchesDiff":{"delete":["l2","l3","t0","e1"]},"type":"staticDiff"}]},{"transformation":"63b88ebb-828c-11e5-bf39-9b71c576f3d7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance","com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName","com.graphhopper.util.EdgeIteratorState.setDistance","com.graphhopper.util.EdgeIteratorState.setName"]},"type":"staticDiff"}]},{"transformation":"63b84093-828c-11e5-bf39-2381f2f9804f","diffs":[{"methodsDiff":{"delete":["java.util.zip.ZipEntry.getCompressedSize","java.util.zip.ZipEntry.getSize"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.util.HelperTest.testUnzip":["com.graphhopper.util.Unzipper_void_unzip(java.io.InputStream,java.io.File,com.graphhopper.util.ProgressListener).t3"]},"type":"branch"}]}]}