{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":42,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":80,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":88,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":35,"com.graphhopper.routing.PathTest.testFindInstruction":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":48,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":81,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.routing.QueryGraphTest.testOneWay":87,"com.graphhopper.routing.PathTest.testWayList":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":18,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":13,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":34,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":44,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":12,"com.graphhopper.GraphHopperTest.testFootAndCar":57,"com.graphhopper.util.InstructionListTest.testWayList2":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":36,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":85,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":63,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":89,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":67,"com.graphhopper.coll.IntIntBinHeapTest.testClear":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":40,"com.graphhopper.GraphHopperAPITest.testDisconnected179":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":31,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":60,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":4,"com.graphhopper.GraphHopperAPITest.testLoad":5,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":19,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":82,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":10,"com.graphhopper.GraphHopperTest.testFootOnly":61,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":24,"com.graphhopper.reader.OSMReaderTest.testBarriers":2,"com.graphhopper.util.InstructionListTest.testFind":7,"com.graphhopper.GraphHopperTest.testLoadOSM":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":52,"com.graphhopper.reader.OSMReaderTest.testSort":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":50},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"dc4b2d42-7910-11e5-b83f-f30cedfba374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:882","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n} else {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[],"tindex":"dc4b5453-7910-11e5-b83f-c19270688d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SimpleFSLockFactory:45","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":0},{"failures":[],"tindex":"dc4b5454-7910-11e5-b83f-7fcb21288dbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"count","mSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:39","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[90,91,92,93,94],"tindex":"dc4b5455-7910-11e5-b83f-0138e76641e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:656","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[95],"tindex":"dc4b5456-7910-11e5-b83f-df8160a5f1da","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-1},{"failures":[],"tindex":"dc4b5457-7910-11e5-b83f-cbf572b3c8e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:284","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"dc4b7b68-7910-11e5-b83f-53a860a8eda3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"dist2goal","dy":"dist2goal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:46","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Weighting.getMinWeight(double)"},"status":-2},{"failures":[],"tindex":"dc4b7b69-7910-11e5-b83f-315e6c0634bb","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"bytePos","key":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"dc4b7b6a-7910-11e5-b83f-8368fb5108db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:775","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"dc4b7b6b-7910-11e5-b83f-bfc69c61b740","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"trackType","fileStr":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:156","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"dc4b7b6c-7910-11e5-b83f-83f983f6def7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"status":-2},{"failures":[],"tindex":"dc4b7b6d-7910-11e5-b83f-f1da1ff20e21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"status":-2},{"failures":[],"tindex":"dc4b7b6e-7910-11e5-b83f-65ad82418cb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:815","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.isEmpty())\n    throw new java.lang.IllegalStateException(\"No algorithm factories found. Call load before?\");\n"},"variableMap":{"algoFactories":"algoFactories"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:819","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.clear()"},"status":-2},{"failures":[],"tindex":"dc4ba27f-7910-11e5-b83f-67b1b30e06e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"end","edgeId":"end"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:379","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double);\n}"},"status":-2},{"failures":[],"tindex":"dc4ba280-7910-11e5-b83f-950d648f4d9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"adjNode","edgeTo":"to","edgeFrom":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:110","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"dc4ba281-7910-11e5-b83f-77d9f952d251","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"variableMap":{"index":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:658","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.storage.EdgeAccess.int) + 4"},"status":-2},{"failures":[],"tindex":"dc4ba282-7910-11e5-b83f-9f5e3f1d4fda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:106","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-2},{"failures":[],"tindex":"dc4ba283-7910-11e5-b83f-0903f1b11d1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"newShortcuts","size":"newShortcuts","lonSize":"newShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:287","type":"CtIfImpl","sourcecode":"if (((long) % long) == 0) {\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    com.graphhopper.util.Logger.info((((((((((((((((((com.graphhopper.util.Helper.nf(long)) + \", updates:\") + int) + \", nodes: \") + (com.graphhopper.util.Helper.nf(com.graphhopper.coll.GHTreeMapComposed.getSize()))) + \", shortcuts:\") + (com.graphhopper.util.Helper.nf(int))) + \", dijkstras:\") + (com.graphhopper.util.Helper.nf(long))) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", algo:\") + (com.graphhopper.routing.DijkstraOneToMany.getMemoryUsageAsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())));\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n} "},"status":-2},{"failures":[],"tindex":"dc4ba284-7910-11e5-b83f-e39ec9f85ec5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:110","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[],"tindex":"dc4bc995-7910-11e5-b83f-9d900819430a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:533","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CmdArgs.get(\"graph.locktype\", \"native\").equals(\"simple\"))\n    com.graphhopper.storage.LockFactory = new com.graphhopper.storage.SimpleFSLockFactory();\nelse\n    com.graphhopper.storage.LockFactory = new com.graphhopper.storage.NativeFSLockFactory();\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}