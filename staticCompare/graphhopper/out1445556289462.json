{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":93,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":263,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":276,"com.graphhopper.reader.OSMReaderTest.testFerry":347,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":327,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":328,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":170,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":371,"com.graphhopper.routing.QueryGraphTest.testOneWay":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":193,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":67,"com.graphhopper.reader.OSMReaderTest.testWithBounds":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":134,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":163,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":7,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":55,"com.graphhopper.util.shapes.BBoxTest.testContains":2,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":296,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":194,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":285,"com.graphhopper.GraphHopperTest.testPrepare":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":33,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":86,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":237,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":252,"com.graphhopper.util.InstructionListTest.testWayList":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":26,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":45,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":183,"com.graphhopper.GraphHopperAPITest.testDisconnected179":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":149,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":257,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":260,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":105,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":364,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":177,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":365,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":339,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":225,"com.graphhopper.routing.util.EncodedValueTest.testSwap":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":151,"com.graphhopper.GraphHopperTest.testLoadOSM":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":299,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":369,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":172,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":261,"com.graphhopper.reader.OSMReaderTest.testSort":350,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":113,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":189,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":123,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":95,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":362,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":96,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":213,"com.graphhopper.routing.PathTest.testWayList":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":203,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":24,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":71,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":63,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":131,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":224,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":310,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":210,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":104,"com.graphhopper.util.GHUtilityTest.testSort":318,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":379,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":207,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":160,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":222,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":291,"com.graphhopper.util.shapes.BBoxTest.testCreate":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":164,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":373,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":119,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":121,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":171,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":135,"com.graphhopper.GraphHopperAPITest.testLoad":312,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":341,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":141,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":231,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":167,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.reader.OSMReaderTest.testBarriers":351,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":374,"com.graphhopper.routing.PathTest.testFound":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":212,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":346,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":41,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":377,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":44,"com.graphhopper.routing.PathTest.testFindInstruction":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":126,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":137,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":211,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":228,"com.graphhopper.util.InstructionListTest.testEmptyList":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":275,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":250,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":238,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":202,"com.graphhopper.util.shapes.CircleTest.testContains":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":139,"com.graphhopper.reader.PrinctonReaderTest.testRead":363,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":12,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":176,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":198,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":375,"com.graphhopper.util.InstructionListTest.testWayList2":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":62,"com.graphhopper.reader.OSMReaderTest.testFoot":348,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":266,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":267,"com.graphhopper.reader.OSMReaderTest.testOneWay":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":187,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":215,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":178,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":247,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":136,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":241,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":287,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":220,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":227,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":352,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":6,"com.graphhopper.routing.PathBidirRefTest.testExtract":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":283,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":326,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":336,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":264,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":161,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":335,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":380,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":308,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":334,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":273,"com.graphhopper.util.GHUtilityTest.testSort2":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":31,"com.graphhopper.reader.OSMReaderTest.testMain":349,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":206,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":217,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":39,"com.graphhopper.routing.PathBidirRefTest.testExtract2":85,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":372,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":300,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":311,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":191,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":293,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":148,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":367,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":162,"com.graphhopper.storage.GraphHopperStorageTest.testClone":223,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":209,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":196,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":233,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":378,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":240,"com.graphhopper.GraphHopperTest.testFootAndCar":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":169,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":58,"com.graphhopper.routing.PathTest.testTime":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":195,"com.graphhopper.util.GHUtilityTest.testSortDirected":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":185,"com.graphhopper.GraphHopperTest.testPrepareOnly":330,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":278,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":27,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":357,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":295,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":166,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":244,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":325,"com.graphhopper.GraphHopperTest.testFootOnly":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":301,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":355,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":303,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":100,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":184,"com.graphhopper.util.InstructionListTest.testFind":320,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":272},"transformations":[{"failures":[0,1,2,3],"tindex":"16e28a10-7914-11e5-9df2-51eb7fb70c21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"lat","x1":"lat","x2":"radiusInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:104","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / (com.graphhopper.util.DistanceCalcEarth.(calcCircumference(double)) / double)"},"status":-1},{"failures":[],"tindex":"16e2b121-7914-11e5-9df2-ddc4e7a924b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:831","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.NodeAccess.getDimension()"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"16e2b122-7914-11e5-9df2-cbb6b98c6576","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:250","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getNodes()"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"16e2d833-7914-11e5-9df2-cb3cc0fc6233","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"status":-1},{"failures":[68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,85,86,4,5,6,7,8,9,87,10,88,11,12,13,89,14,15,90,91,16,17,18,19,20,21,22,23,24,25,26,27,92,28,29,30,31,32,33,93,94,34,35,95,36,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,37,38,162,163,164,165,39,166,40,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,41,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,42,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"16e2d834-7914-11e5-9df2-c9b6341ec18b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"edges","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"16e32655-7914-11e5-9df2-13c4f0447f87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:137","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[],"tindex":"16e32656-7914-11e5-9df2-ab91c6fb8a58","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:102","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,85,86,4,5,6,7,8,9,87,10,88,11,12,13,89,14,15,90,91,16,17,18,19,20,21,22,23,24,25,26,27,92,28,29,30,31,32,33,93,94,34,35,95,36,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,37,38,162,163,164,165,39,166,40,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,365,366,367,368,369,370,371,372,373,374,375,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,41,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,42,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"16e34d67-7914-11e5-9df2-abbbabb4daeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[376,377,378],"tindex":"16e37478-7914-11e5-9df2-27b190b7cedf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:922","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"variableMap":{"pointIndex":"fromIndex","pointList":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:135","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[379],"tindex":"16e37479-7914-11e5-9df2-9b905daec14e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:348","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(byte[], int, int)"},"variableMap":{"bb":"bb","values":"values","length":"length","delta":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-1},{"failures":[380],"tindex":"16e3747a-7914-11e5-9df2-4d365facb854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:275","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[],"tindex":"16e3747b-7914-11e5-9df2-d34ca84cf211","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"16e3747c-7914-11e5-9df2-b5019631d75b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:102","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:171","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = com.graphhopper.routing.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.get(int)"},"status":-2},{"failures":[],"tindex":"16e39b8d-7914-11e5-9df2-67ec73b8ba5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:106","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.io.InputStream java.io.InputStream = java.lang.Object.getClass().getResourceAsStream((java.lang.String + \"_names.txt\"));\n    for (java.lang.String java.lang.String : com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(java.io.InputStream , com.graphhopper.util.Helper.java.nio.charset.Charset))) {\n        int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3));\n        if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n            int = -int;\n        \n        int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7));\n        if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n            int = -int;\n        \n        int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(int, int);\n        java.lang.String java.lang.String = com.graphhopper.reader.dem.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String);\n        if (java.lang.String != null)\n            throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n        \n    }\n}"},"status":-2},{"failures":[],"tindex":"16e39b8e-7914-11e5-9df2-a3c76cd972b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = super.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-2},{"failures":[],"tindex":"16e3c29f-7914-11e5-9df2-7d62491f3249","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"16e3c2a0-7914-11e5-9df2-fbda9f7d1b48","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:761","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"16e3c2a1-7914-11e5-9df2-6713d0fcc4da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:309","type":"CtIfImpl","sourcecode":"if ((double < 0) || (java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative or NaN: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-2},{"failures":[],"tindex":"16e3c2a2-7914-11e5-9df2-6fd6ce110ebf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:297","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.util.EdgeIterator.getFlags())) || (com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.util.EdgeIterator.getFlags())))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"16e3c2a3-7914-11e5-9df2-2992382482db","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"relationStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:286","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    switch (com.graphhopper.reader.OSMElement.getType()) {\n        case com.graphhopper.reader.OSMElement.int :\n            if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n            } \n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n            break;\n    }\n    if (((++long) % 100000000) == 0) {\n        com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}