{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":32,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":267,"com.graphhopper.GraphHopperAPITest.testNoLoad":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":374,"com.graphhopper.reader.OSMReaderTest.testFerry":429,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":413,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":414,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":47,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":184,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":275,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":394,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":310,"com.graphhopper.GraphHopperTest.testPrepare":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":406,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":250,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":112,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":428,"com.graphhopper.GraphHopperTest.testLoadOSM":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":251,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":287,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":63,"com.graphhopper.reader.OSMReaderTest.testSort":432,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":305,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":365,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":407,"com.graphhopper.routing.DijkstraTest.initializationError":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":319,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":166,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":231,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":326,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":28,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":162,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":4,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.coll.OSMIDMapTest.testGetLong":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":171,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":288,"com.graphhopper.GraphHopperAPITest.testLoad":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":347,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.reader.OSMReaderTest.testBarriers":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":269,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":366,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":96,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":280,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":259,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":107,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":303,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":234,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":336,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":434,"com.graphhopper.routing.AStarTest.initializationError":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":34,"com.graphhopper.coll.OSMIDMapTest.testGet":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":315,"com.graphhopper.routing.PathBidirRefTest.testExtract":38,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":29,"com.graphhopper.reader.OSMReaderTest.testMain":431,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":83,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":442,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":289,"com.graphhopper.storage.GraphHopperStorageTest.testClone":339,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":312,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":136,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":380,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":393,"com.graphhopper.reader.OSMReaderTest.testRelation":438,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":301,"com.graphhopper.GraphHopperTest.testFootOnly":426,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":253,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":249,"com.graphhopper.reader.OSMReaderTest.testWithBounds":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":395,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":216,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":190,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":299,"com.graphhopper.GraphHopperAPITest.testDisconnected179":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":381,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":94,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":445,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":409,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":419,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":341,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":201,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":104,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":359,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":26,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":224,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":36,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":124,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":298,"com.graphhopper.coll.OSMIDMapTest.testGet2":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":119,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":352,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":181,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":210,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":167,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":169,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":146,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":163,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":421,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":399,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":64,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":427,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":11,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":187,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":384,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":318,"com.graphhopper.reader.PrinctonReaderTest.testRead":444,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":182,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":292,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":110,"com.graphhopper.reader.OSMReaderTest.testFoot":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":324,"com.graphhopper.reader.OSMReaderTest.testOneWay":443,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":363,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":51,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":80,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":391,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":243,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":44,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":387,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":321,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":278,"com.graphhopper.routing.PathBidirRefTest.testExtract2":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":260,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":232,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":361,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":213,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":33,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":274,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":325,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":140,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":356,"com.graphhopper.GraphHopperTest.testFootAndCar":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":149,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":311,"com.graphhopper.GraphHopperTest.testPrepareOnly":415,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":270,"com.graphhopper.GraphHopperTest.testVia":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":24,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":439,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":279,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":71,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":437,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":223,"com.graphhopper.routing.AStarBidirectionTest.initializationError":9,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":390,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":165},"transformations":[{"failures":[0,1,2,3],"tindex":"a5745f4b-7936-11e5-a4f6-8725f12929b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"noEntryValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:95","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return int;\n"},"status":-1},{"failures":[],"tindex":"a5745f4c-7936-11e5-a4f6-e13e45d7721e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:202","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"factor":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"status":-1},{"failures":[4,5,6],"tindex":"a5745f4d-7936-11e5-a4f6-b79d0def8eaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:170","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int)"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],"tindex":"a574865e-7936-11e5-a4f6-3d92c279731f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"index","size":"index","lonSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"a574865f-7936-11e5-a4f6-65dc5a797457","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:255","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"status":-2},{"failures":[],"tindex":"a574ac70-7936-11e5-a4f6-e53978990717","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"tmpNo","nodeA":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a574ac71-7936-11e5-a4f6-8374d7e3f096","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLon()))"},"status":-2},{"failures":[],"tindex":"a574ac72-7936-11e5-a4f6-6d073b7a11d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a574ac73-7936-11e5-a4f6-dd940f598a51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:202","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"a574ac74-7936-11e5-a4f6-2de9efb9fc97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:56","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"a574ac75-7936-11e5-a4f6-739da4c259e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"id","mask":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:208","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Long.parseLong(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a574ac76-7936-11e5-a4f6-8f6ed187add6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:597","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.setNode(int, double, double, double)"},"status":-2},{"failures":[],"tindex":"a574ac77-7936-11e5-a4f6-433cbb7c2c46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon())).append(\"\\'>\")"},"status":-2},{"failures":[],"tindex":"a574d388-7936-11e5-a4f6-f39708e421be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"durationInHours"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception ex) {\n    }\n"},"status":-2},{"failures":[],"tindex":"a574d389-7936-11e5-a4f6-63723ddf0100","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:80","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"a574d38a-7936-11e5-a4f6-0fae959524e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:170","type":"CtAssertImpl","sourcecode":"assert int < (com.graphhopper.storage.BaseGraph.getNodes()) : (((\"node \" + int) + \" is invalid. Not in [0,\") + (com.graphhopper.storage.BaseGraph.getNodes())) + \")\""},"variableMap":{"baseGraph":"graph","nodeId":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:271","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.routing.TIntList.get(int), int);\n    if (com.graphhopper.util.EdgeIteratorState == null)\n        throw new java.lang.IllegalStateException((((((((\"Edge \" + (com.graphhopper.routing.TIntList.get(int))) + \" was empty when requested with node \") + int) + \", array index:\") + int) + \", edges:\") + (com.graphhopper.routing.TIntList.size())));\n    \n    int = com.graphhopper.util.EdgeIteratorState.getBaseNode();\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int);\n    com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int);\n}"},"status":-2},{"failures":[],"tindex":"a574d38b-7936-11e5-a4f6-bfaf61d442fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:153","type":"CtIfImpl","sourcecode":"if (double >= 64) {\n    int = 64;\n} else if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"key","tmpNo":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[],"tindex":"a574d38c-7936-11e5-a4f6-4b84ba671b77","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1006","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false)"},"variableMap":{"request":"request"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1028","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"pass_through\", false)"},"status":-2},{"failures":[],"tindex":"a574d38d-7936-11e5-a4f6-a1952519212a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:31","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)"},"variableMap":{"from":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"a574fa9e-7936-11e5-a4f6-db026a5fb782","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:521","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}