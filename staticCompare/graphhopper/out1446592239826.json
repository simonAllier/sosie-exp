{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":2,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":30,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":3,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":26,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":48,"com.graphhopper.reader.OSMReaderTest.testWithBounds":6,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":22,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.storage.StorablePropertiesTest.testStore":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":25,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":46,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":34,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":27,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":52,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":37,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":19,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.GraphHopperTest.testPrepareOnly":32,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":5,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":29,"com.graphhopper.GraphHopperAPITest.testLoad":14,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":17,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":36,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":41},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"1969d89f-8280-11e5-ae44-cb5515b2d648","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:74","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.storage.EdgeEntry.int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[6],"tindex":"1969ffb0-8280-11e5-ae44-c538faa4e40d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"lastInBoundsPillarNode","edgeId":"tmpNode","nextEdgeId":"lastInBoundsPillarNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:690","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n    int = int;\n    int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n    int = (-int) - 3;\n    if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n        com.graphhopper.util.PointList.clear();\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    } \n    int = int;\n    int = -1;\n} "},"status":-1},{"failures":[],"tindex":"1969ffb1-8280-11e5-ae44-3b9efc0ce882","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"variableMap":{"lastInBoundsPillarNode":"removed","convertToTowerNode":"approx","tmpNode":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"status":0},{"failures":[7,8,9,10,11,12,13,14],"tindex":"1969ffb2-8280-11e5-ae44-2fb305194774","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"status":-1},{"failures":[],"tindex":"1969ffb3-8280-11e5-ae44-fb261355b756","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:520","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"1969ffb4-8280-11e5-ae44-a96d5c1caa6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:205","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.zip.Inflater.inflate(byte[])"},"status":-2},{"failures":[],"tindex":"196a26c5-8280-11e5-ae44-591994f76cf8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:283","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs((int - double))) < ((double) / (int)))\n    int--;\n"},"variableMap":{"latInt":"edge","degree":"edge","invPrecision":"currWeightToGoal","lat":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:108","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n        continue;\n    \n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n    float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n    if (java.lang.Double.isInfinite(float))\n        continue;\n    \n    com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n    if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n        double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n        double = float + double;\n        if (com.graphhopper.routing.AStar.AStarEdge == null) {\n            com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n            gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n        } else {\n            assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.routing.AStar.AStarEdge.double = double;\n            com.graphhopper.routing.AStar.AStarEdge.double = float;\n        }\n        com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"196a26c6-8280-11e5-ae44-a72241096bb7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:139","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"196a26c7-8280-11e5-ae44-eb584a436620","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":0},{"failures":[15,16,17,18,19,20],"tindex":"196a26c8-8280-11e5-ae44-83e3126a2d0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:320","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"variableMap":{"dataAccess":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"status":-1},{"failures":[],"tindex":"196a4dd9-8280-11e5-ae44-a9f328f15e8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"status":0},{"failures":[21,22,23,24],"tindex":"196a4dda-8280-11e5-ae44-012dadf8304b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"turnCostsEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:156","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-1},{"failures":[25,26,27,28,21,29,30,31,32,11,12,33,13],"tindex":"196a4ddb-8280-11e5-ae44-071cb456ff1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:104","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n        continue;\n    } \n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        continue;\n    } \n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0) {\n        com.graphhopper.util.Helper.org.slf4j.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n        continue;\n    } \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n}"},"status":-1},{"failures":[34],"tindex":"196a4ddc-8280-11e5-ae44-8b9c55a98748","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:373","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"196a4ddd-8280-11e5-ae44-551910800033","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:286","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"196a4dde-8280-11e5-ae44-af3f15438c02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:107","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[],"tindex":"196a74ef-8280-11e5-ae44-1d5cdbb4058f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"nextTowerId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, double, double)"},"status":-2},{"failures":[],"tindex":"196a74f0-8280-11e5-ae44-5372386546a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"currentBucket","nodeId":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:79","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n} "},"status":-2},{"failures":[35,36,37,4,5,38,39],"tindex":"196a74f1-8280-11e5-ae44-3187750de356","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[40,41,42,43,44,10,1,45,46,47,48,23,49,50,51,52,53],"tindex":"196a74f2-8280-11e5-ae44-2d3caec0433c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:482","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setAdditionalField(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getAdditionalField())"},"variableMap":{"from":"closestEdge","to":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"196a4dd9-8280-11e5-ae44-a9f328f15e8c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getSegmentSize","com.graphhopper.storage.DataAccess.setSegmentSize"]},"type":"staticDiff"}]},{"transformation":"196a26c7-8280-11e5-ae44-eb584a436620","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.getFlags","com.graphhopper.routing.util.FlagEncoder.getReverseSpeed"]},"type":"staticDiff"}]}]}