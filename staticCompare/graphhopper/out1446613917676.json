{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":51,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":309,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":153,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":166,"com.graphhopper.reader.OSMReaderTest.testFerry":323,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":259,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":260,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":307,"com.graphhopper.routing.QueryGraphTest.testOneWay":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":149,"com.graphhopper.reader.OSMReaderTest.testWithBounds":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":286,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":10,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":61,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":131,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":273,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":101,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":124,"com.graphhopper.GraphHopperTest.testPrepare":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":240,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":33,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":254,"com.graphhopper.util.InstructionListTest.testWayList":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":267,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":90,"com.graphhopper.GraphHopperAPITest.testDisconnected179":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":291,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":28,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":39,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":303,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":335,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":290,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":84,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":296,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":280,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":228,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":208,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":174,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":151,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":246,"com.graphhopper.reader.OSMReaderTest.testSort":325,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":289,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":66,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":55,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":314,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":333,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":219,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":295,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":89,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":109,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":148,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":255,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":189,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":145,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":116,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":47,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":337,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":302,"com.graphhopper.util.GHUtilityTest.testSort":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":155,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":217,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":225,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":11,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":110,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":313,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":180,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":193,"com.graphhopper.GraphHopperAPITest.testLoad":321,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":26,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":199,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":16,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":292,"com.graphhopper.reader.OSMReaderTest.testBarriers":326,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":118,"com.graphhopper.routing.PathTest.testFound":297,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":2,"com.graphhopper.util.GHUtilityTest.testCopy":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":38,"com.graphhopper.routing.PathTest.testFindInstruction":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":184,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":195,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":117,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":231,"com.graphhopper.util.InstructionListTest.testEmptyList":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":165,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":252,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":210,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":241,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":197,"com.graphhopper.reader.PrinctonReaderTest.testRead":334,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":83,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":221,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":104,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":178,"com.graphhopper.util.InstructionListTest.testWayList2":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":137,"com.graphhopper.reader.OSMReaderTest.testFoot":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":159,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":156,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":157,"com.graphhopper.reader.OSMReaderTest.testOneWay":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":94,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":194,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":125,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":230,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":327,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":122,"com.graphhopper.routing.PathBidirRefTest.testExtract":304,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":279,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":154,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":277,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":276,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":163,"com.graphhopper.util.GHUtilityTest.testSort2":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.reader.OSMReaderTest.testMain":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":111,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":13,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":175,"com.graphhopper.routing.PathBidirRefTest.testExtract2":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":160,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":146,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":98,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":206,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":171,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":152,"com.graphhopper.storage.GraphHopperStorageTest.testClone":226,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":115,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":103,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":236,"com.graphhopper.GraphHopperTest.testFootAndCar":73,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":243,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":78,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":6,"com.graphhopper.routing.PathTest.testTime":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":44,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":186,"com.graphhopper.util.GHUtilityTest.testSortDirected":264,"com.graphhopper.GraphHopperTest.testPrepareOnly":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":92,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":168,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":43,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":329,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":14,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":311,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":136,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":138,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":91,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":299,"com.graphhopper.util.InstructionListTest.testFind":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":179},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"926b405e-82b2-11e5-8433-b16cfe496bf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"encoderCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:204","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"926b676f-82b2-11e5-8433-77ff849ce4d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"dist2goal","toHeight":"dist2goal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:46","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Weighting.getMinWeight(double)"},"status":-2},{"failures":[6],"tindex":"926b8e80-82b2-11e5-8433-d513cf6d4517","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"noNumberValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:133","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[7],"tindex":"926b8e81-82b2-11e5-8433-d56dfd9c8a9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"variableMap":{"str":"dir","name":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:287","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\")"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"926b8e82-82b2-11e5-8433-6b7a446d035f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-1},{"failures":[24,73,29,74,75,76],"tindex":"926b8e83-82b2-11e5-8433-e1ec9f604d4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:245","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"variableMap":{"points":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:756","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-1},{"failures":[],"tindex":"926b8e84-82b2-11e5-8433-f168627b66b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 1) * (int)))"},"status":0},{"failures":[],"tindex":"926bb595-82b2-11e5-8433-2b31fb0588f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"visitedNodes","nodeId":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:76","type":"CtWhileImpl","sourcecode":"while (true) {\n    (int)++;\n    if (com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded()) || com.graphhopper.routing.Dijkstra.(finished()))\n        break;\n    \n    int int = com.graphhopper.storage.EdgeEntry.int;\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n            continue;\n        \n        int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n        double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n        if (com.graphhopper.storage.EdgeEntry == null) {\n            com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n            com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n            gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n        } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n            com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.storage.EdgeEntry.double = double;\n            com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n        } else\n            continue;\n        \n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    }\n    if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n        break;\n    \n    com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll();\n    if ((com.graphhopper.storage.EdgeEntry) == null)\n        throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n    \n}"},"status":-2},{"failures":[],"tindex":"926bb596-82b2-11e5-8433-49f21bffa044","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo._setNode(int, double, double, double)"},"status":-2},{"failures":[],"tindex":"926bb597-82b2-11e5-8433-2542c846fa62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.ensureNode(int)"},"status":0},{"failures":[],"tindex":"926bb598-82b2-11e5-8433-c9de12423f26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"prevLat","x":"lat","absY":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":0},{"failures":[],"tindex":"926bdca9-82b2-11e5-8433-9fd4e74d2eae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:239","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"926bdcaa-82b2-11e5-8433-012c6d863b40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"currentIndex","lonSimilar":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:107","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int))"},"status":-2},{"failures":[],"tindex":"926bdcab-82b2-11e5-8433-a38aa20c4b8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:104","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"926bdcac-82b2-11e5-8433-c7933dc8fcb1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"status":-2},{"failures":[],"tindex":"926bdcad-82b2-11e5-8433-c381e3088d51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"parent","ase":"entryCurrent","currEdge":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[8,10,11,12,13,14,15,16,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,17,18,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,21,263,264,265,266,267,268,269,270,22,271,272,273,23,274,275,276,277,278,279,24,25,280,73,26,27,28,281,29,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,7,301,302,303,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,304,305,306,307,3,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,74,325,326,327,328,4,75,329,330,76,331,332,333,334,335],"tindex":"926c03be-82b2-11e5-8433-45a9f0835aa2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"bufferIndex","speed":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"926c03bf-82b2-11e5-8433-7f20e39ccf31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"status":-2},{"failures":[336,337,338],"tindex":"926c03c0-82b2-11e5-8433-476b3261a05a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:157","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.storage.VLongStorage[].int) ; int++) {\n    if ((com.graphhopper.storage.VLongStorage[][int]) != null) {\n        long += com.graphhopper.storage.VLongStorage[][int].getLength();\n    } \n}"},"variableMap":{"bytes":"lastKey","buckets":"buckets","length":"bucketSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:76","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.VLongStorage[][int]) == null) {\n    long[][int] = long;\n    if ((int) > 0) {\n        com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n    } \n    com.graphhopper.storage.VLongStorage[][int] = new com.graphhopper.storage.VLongStorage(int);\n} else {\n    long long = long - (long);\n    com.graphhopper.storage.VLongStorage[][int].writeVLong(long);\n}"},"status":-1},{"failures":[],"tindex":"926c03c1-82b2-11e5-8433-f5863861769f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:91","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"926bb598-82b2-11e5-8433-c9de12423f26","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalc3D.calcDist"]},"type":"staticDiff"}]},{"transformation":"926c03c1-82b2-11e5-8433-f5863861769f","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"926bb597-82b2-11e5-8433-2542c846fa62","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.reader.PillarInfo_void_ensureNode(int).b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.reader.PillarInfo_void_ensureNode(int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.PillarInfo.ensureNode"]},"type":"staticDiff"}]},{"transformation":"926b8e84-82b2-11e5-8433-f168627b66b3","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.ensureCapacity"]},"type":"staticDiff"}]}]}