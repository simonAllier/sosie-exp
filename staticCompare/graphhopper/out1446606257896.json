{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":82,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":61,"com.graphhopper.reader.OSMReaderTest.testFerry":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":28,"com.graphhopper.reader.OSMReaderTest.testWithBounds":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":53,"com.graphhopper.coll.CompressedArrayTest.testCompress":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":2,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":6,"com.graphhopper.GraphHopperTest.testPrepare":93,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":8,"com.graphhopper.reader.OSMReaderTest.testFoot":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":100,"com.graphhopper.reader.OSMReaderTest.testOneWay":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":81,"com.graphhopper.util.PointListTest.testAddPL":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":59,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":9,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":60,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":4,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":38,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":33,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":37,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":63,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":70,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":104,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":106,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":51,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":1,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":24,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":107,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":31,"com.graphhopper.GraphHopperTest.testFootOnly":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":84,"com.graphhopper.reader.OSMReaderTest.testBarriers":90,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":87,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":69},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"bcd6f37f-82a0-11e5-991e-077f6965229f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator)"},"variableMap":{"res":"res","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:84","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n        continue;\n    \n    for (int int, int int = 0 ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            if (double <= 0)\n                break;\n            \n            com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n        } \n    }\n}"},"status":-1},{"failures":[7],"tindex":"bcd741a0-82a0-11e5-991e-a345adcd473f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:284","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"variableMap":{"maxBits":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:270","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"bcd741a1-82a0-11e5-991e-a134d34f7a57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\nelse\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[46],"tindex":"bcd768b2-82a0-11e5-991e-a31298a4f06b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:694","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true)"},"status":-1},{"failures":[],"tindex":"bcd768b3-82a0-11e5-991e-01b0fc686024","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:116","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:646","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint(double , double)"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,88,89,90,91,92],"tindex":"bcd768b4-82a0-11e5-991e-f72bd05b1486","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:277","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"variableMap":{"str":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\"))"},"status":-1},{"failures":[93,40,41,44,94,45],"tindex":"bcd78fc5-82a0-11e5-991e-35fd93431fd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:160","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"bcd78fc6-82a0-11e5-991e-5d1a91e5ccda","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Lock.release()"},"status":-2},{"failures":[95,96,97,98,99,100],"tindex":"bcd78fc7-82a0-11e5-991e-ff5b2e27e54d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:189","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int)"},"status":-1},{"failures":[101,84,85],"tindex":"bcd78fc8-82a0-11e5-991e-a9459ee7bf54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.hasTag(java.lang.String))\n    return com.graphhopper.reader.OSMElement.getTag(java.lang.String);\n"},"status":-1},{"failures":[39,102],"tindex":"bcd7b6d9-82a0-11e5-991e-c104b05527a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"variableMap":{"message":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:512","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[48,57,66,103],"tindex":"bcd7b6da-82a0-11e5-991e-91deb4435c88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"speed","S_SKIP_EDGE2":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:371","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[104,105,106],"tindex":"bcd7b6db-82a0-11e5-991e-c11ec8ad0c84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"removed","bytes":"removed","segmentSizeInBytes":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.compressNew(com.graphhopper.util.PointList, int)"},"status":-1},{"failures":[107,108,109],"tindex":"bcd7b6dc-82a0-11e5-991e-2f432de8146c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:48","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"initial size or increasing grow-factor too low!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:321","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"The graph has not yet been initialized.\")"},"status":-1},{"failures":[],"tindex":"bcd7dded-82a0-11e5-991e-eb1d0c915342","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"status":-2},{"failures":[],"tindex":"bcd7ddee-82a0-11e5-991e-694c9571a490","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"status":-1},{"failures":[110,111,112],"tindex":"bcd7ddef-82a0-11e5-991e-2bddf9a85a17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:176","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"bcd7ddf0-82a0-11e5-991e-4308e6c9ca30","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"silent":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"bcd7ddf1-82a0-11e5-991e-0140cd8917bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"status":-2},{"failures":[],"tindex":"bcd80502-82a0-11e5-991e-dd17303b212b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:84","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}