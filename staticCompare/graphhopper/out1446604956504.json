{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.util.GHUtilityTest.testSort2":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":35,"com.graphhopper.reader.OSMReaderTest.testMain":5,"com.graphhopper.routing.PathTest.testFindInstruction":61,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":18,"com.graphhopper.routing.PathTest.testWayList":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":66,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":69,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":25,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":75,"com.graphhopper.storage.StorablePropertiesTest.testStore":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":24,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":67,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":72,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":20,"com.graphhopper.util.GHUtilityTest.testSort":43,"com.graphhopper.reader.OSMReaderTest.testFoot":4,"com.graphhopper.routing.PathTest.testTime":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":73,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":65,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":53,"com.graphhopper.util.GHUtilityTest.testSortDirected":44,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":15,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":34,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":54,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":36,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":14,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":3,"com.graphhopper.GraphHopperTest.testFootOnly":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":48,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.storage.RAMDataAccessTest.testCopy":31,"com.graphhopper.GraphHopperTest.testLoadOSM":52,"com.graphhopper.routing.PathTest.testFound":58,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":1,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":22,"com.graphhopper.util.GHUtilityTest.testCopy":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":46,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.storage.RAMDataAccessTest.testSegments":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"b5249d90-829d-11e5-befc-53230de40504","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"b524c4a1-829d-11e5-befc-8928229f05bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"b524c4a2-829d-11e5-befc-ab0684e284cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"variableMap":{"priorityWayEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"b524c4a3-829d-11e5-befc-19f382f94e7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:108","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b524c4a4-829d-11e5-befc-d5d73e766fb9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"newFileLength"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:131","type":"CtTryImpl","sourcecode":"try {\n    if (boolean) {\n        int = int;\n        com.graphhopper.storage.MMapDataAccess.clean(0, java.util.List<java.nio.ByteBuffer>.size());\n        com.graphhopper.util.Helper.cleanHack();\n        java.util.List<java.nio.ByteBuffer>.clear();\n    } else {\n        long += (java.util.List<java.nio.ByteBuffer>.size()) * long;\n        int = int - (java.util.List<java.nio.ByteBuffer>.size());\n    }\n    for ( ; int < int ; int++) {\n        java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long));\n        long += long;\n    }\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((((((((((((\"Couldn\\'t map buffer \" + int) + \" of \") + int) + \" at position \") + long) + \" for \") + long) + \" bytes with offset \") + long) + \", new fileLength:\") + long) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"b524c4a5-829d-11e5-befc-7ddb1fb602db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"mmap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:68","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"b524ebb6-829d-11e5-befc-4d392047e651","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:742","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[20,33,37,45,52,53,54],"tindex":"b524ebb7-829d-11e5-befc-a5593cee855c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:179","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((5 * 4)))"},"status":-1},{"failures":[],"tindex":"b524ebb8-829d-11e5-befc-130bc9bf0ff8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:93","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.closeEntry()"},"variableMap":{"zis":"bis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:60","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.OSMInputFile.openPBFReader(java.io.InputStream);\n} else {\n    com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream);\n}"},"status":-2},{"failures":[],"tindex":"b524ebb9-829d-11e5-befc-099ab89977ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:139","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[],"tindex":"b524ebba-829d-11e5-befc-8bae617a3446","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:672","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double);\n} else {\n    double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double);\n}"},"status":-2},{"failures":[],"tindex":"b524ebbb-829d-11e5-befc-a904bb227de3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:81","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"b52512cc-829d-11e5-befc-e1ae40cc8994","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:78","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"variableMap":{"heights":"names","da":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"b52512cd-829d-11e5-befc-31bc9598d94b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\")"},"variableMap":{"dir":"streetName","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:141","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String)"},"status":-2},{"failures":[],"tindex":"b52512ce-829d-11e5-befc-1d6746a248b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:252","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> == null) {\n    java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n} "},"variableMap":{"tags":"map"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter)"},"status":-2},{"failures":[],"tindex":"b52512cf-829d-11e5-befc-b733d7a71167","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"deltaLon","x1":"lon","x2":"deltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:654","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":0},{"failures":[],"tindex":"b52512d0-829d-11e5-befc-49648c71608d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[72,73,74,75,76],"tindex":"b52512d1-829d-11e5-befc-f72541c5c899","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-1},{"failures":[],"tindex":"b52538e2-829d-11e5-befc-ab8ca22aeadc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"origPoints","hash":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:72","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.Instruction.getPoints().size()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b524c4a5-829d-11e5-befc-7ddb1fb602db","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":["com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().e1","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e1","com.graphhopper.storage.GraphBuilder_com.graphhopper.storage.GraphHopperStorage_build().e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t7","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess(java.lang.String,java.lang.String,java.nio.ByteOrder,boolean).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e6","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e5","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e3","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().b","com.graphhopper.storage.MMapDataAccess_long_getCapacity().l1","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).l5","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.MMapDirectory_com.graphhopper.storage.MMapDirectory(java.lang.String).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.GraphBuilder_com.graphhopper.storage.GraphHopperStorage_build().t1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).l7","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e3","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().b","com.graphhopper.storage.DAType_boolean_isMMap().b","com.graphhopper.storage.MMapDataAccess_void_setInt(long,int).b"]},"type":"branch"}]},{"transformation":"b52538e2-829d-11e5-befc-ab8ca22aeadc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.size","com.graphhopper.util.Instruction.getPoints"]},"type":"staticDiff"}]},{"transformation":"b524ebb9-829d-11e5-befc-099ab89977ee","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]},{"transformation":"b52512cf-829d-11e5-befc-b733d7a71167","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"]},"type":"branch"}]}]}