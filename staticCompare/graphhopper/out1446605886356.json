{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":106,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":111,"com.graphhopper.util.BitUtilBigTest.testToDouble":20,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":242,"com.graphhopper.reader.OSMReaderTest.testFerry":140,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":129,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":130,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":266,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":312,"com.graphhopper.routing.QueryGraphTest.testOneWay":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":289,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":205,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":225,"com.graphhopper.reader.OSMReaderTest.testWithBounds":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":94,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":95,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":259,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":4,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":207,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":257,"com.graphhopper.GraphHopperTest.testPrepare":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":68,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":34,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":339,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.util.InstructionListTest.testWayList":134,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":60,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":246,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":128,"com.graphhopper.GraphHopperAPITest.testDisconnected179":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":279,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":258,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":191,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":226,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":89,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":139,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":201,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":273,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":306,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":327,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":193,"com.graphhopper.GraphHopperTest.testLoadOSM":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":210,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":227,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":268,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":344,"com.graphhopper.reader.OSMReaderTest.testSort":143,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":285,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":350,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":116,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":151,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":311,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":80,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":317,"com.graphhopper.routing.PathTest.testWayList":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":298,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":224,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":282,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":174,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":326,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":221,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":305,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":65,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":88,"com.graphhopper.util.GHUtilityTest.testSort":125,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":302,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":202,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":251,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":260,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":314,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":299,"com.graphhopper.util.BitUtilBigTest.testToLong":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":252,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":25,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":267,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":178,"com.graphhopper.GraphHopperAPITest.testLoad":15,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":184,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":264,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":323,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":168,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":315,"com.graphhopper.routing.PathTest.testFound":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":286,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":1,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.util.GHUtilityTest.testCopy":73,"com.graphhopper.routing.PathTest.testFindInstruction":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":104,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":180,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":161,"com.graphhopper.util.InstructionListTest.testEmptyList":132,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":351,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":64,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":195,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":182,"com.graphhopper.reader.PrinctonReaderTest.testRead":138,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":45,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":272,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":293,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":316,"com.graphhopper.util.InstructionListTest.testWayList2":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":213,"com.graphhopper.reader.OSMReaderTest.testFoot":141,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":232,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":356,"com.graphhopper.reader.OSMReaderTest.testOneWay":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":283,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":318,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":274,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":348,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":179,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":247,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":322,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":329,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":144,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":37,"com.graphhopper.routing.PathBidirRefTest.testExtract":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":255,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":265,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":203,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":154,"com.graphhopper.util.GHUtilityTest.testSort2":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":66,"com.graphhopper.reader.OSMReaderTest.testMain":142,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":301,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":28,"com.graphhopper.routing.PathBidirRefTest.testExtract2":103,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":295,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":222,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":287,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":77,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":190,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":308,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":42,"com.graphhopper.storage.StorablePropertiesTest.testStore":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":27,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":228,"com.graphhopper.storage.GraphHopperStorageTest.testClone":325,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":304,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":291,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":335,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":29,"com.graphhopper.routing.PathTest.testTime":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":62,"com.graphhopper.util.GHUtilityTest.testSortDirected":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":290,"com.graphhopper.GraphHopperTest.testPrepareOnly":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":281,"com.graphhopper.GraphHopperTest.testVia":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":244,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":61,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":33,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":206,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":262,"com.graphhopper.GraphHopperTest.testFootOnly":76,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":136,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":212,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":214,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":84,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":280,"com.graphhopper.util.InstructionListTest.testFind":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":271},"transformations":[{"failures":[],"tindex":"df60ec67-829f-11e5-8ee5-f5d0b5ba836d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:281","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) == 0) {\n    return null;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:339","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.get(int)"},"status":-2},{"failures":[],"tindex":"df60ec68-829f-11e5-8ee5-7162d9e3ecca","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:183","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[0],"tindex":"df611379-829f-11e5-8ee5-87b036a18eee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())))"},"status":-1},{"failures":[1,2,3],"tindex":"df61137a-829f-11e5-8ee5-4b73733e7a1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:495","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"variableMap":{"edgePointer":"encoded","edgeId":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","shortcutEntryBytes":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:298","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[4,5,6,7],"tindex":"df61137b-829f-11e5-8ee5-c1743ead615c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:105","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLatitude(int)"},"variableMap":{"this":"this","nodeId":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getElevation(int)"},"status":-1},{"failures":[8,9,10],"tindex":"df61137c-829f-11e5-8ee5-9b200c401346","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"turnCostIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"status":-1},{"failures":[11,12,13,14],"tindex":"df61137d-829f-11e5-8ee5-293df61d89d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:81","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"variableMap":{"str":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:205","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"status":-1},{"failures":[15,16,17,3,18,19],"tindex":"df61137e-829f-11e5-8ee5-e5c9e73f5e47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1009","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"request":"request","this":"this","weighting":"weighting","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1012","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder)"},"status":-1},{"failures":[20,21],"tindex":"df613a8f-829f-11e5-8ee5-4b80490e01bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:82","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long))"},"status":-1},{"failures":[22,18,23,24,19,10,25,26,27,28,29,30,31],"tindex":"df613a90-829f-11e5-8ee5-7d9a790cd4fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:104","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"variableMap":{"name":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"df613a91-829f-11e5-8ee5-7dd7d2cdebc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:42","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.Dijkstra(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode())"},"variableMap":{"opts":"opts","g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:49","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":0},{"failures":[32,33],"tindex":"df613a92-829f-11e5-8ee5-5f061585d3f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinOneWayNetworkSize(int)"},"variableMap":{"minOneWayNetworkSize":"minNetworkSize","preparation":"preparation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinNetworkSize(int)"},"status":-1},{"failures":[],"tindex":"df613a93-829f-11e5-8ee5-d166c97eed10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:135","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"variableMap":{"ase":"nEdge","weight":"tmpWeight","distEstimation":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,22,74,75,18,23,24,76,77,78],"tindex":"df6160a4-829f-11e5-8ee5-dbf1e42fd725","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[],"tindex":"df6160a5-829f-11e5-8ee5-ef1fc11d5cf7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1112","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"df6160a6-829f-11e5-8ee5-ff70b5ab7fad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"df6160a7-829f-11e5-8ee5-5b80e1ae4115","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1106","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (boolean) && (boolean)"},"status":-2},{"failures":[79],"tindex":"df6160a8-829f-11e5-8ee5-57d898830e36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:359","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,104,50,51,52,53,54,55,56,57,58,59,105,60,61,62,63,64,65,66,67,68,106,107,69,70,71,72,108,108,109,109,8,8,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,15,16,123,124,73,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,32,144,11,9,145,146,33,147,148,149,150,151,152,22,153,154,155,156,157,158,159,74,75,17,3,18,23,24,19,76,160,161,162,10,163,164,25,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,5,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,77,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,78,27,259,260,261,28,262,263,264,265,29,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,6,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,30,318,31,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,7,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"df6187b9-829f-11e5-8ee5-6fe5670ea530","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"variableMap":{"segNumber":"i","segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[57,105,64,65,68,72,110,111,120,153,154,155,156,157,74,75,17,3,18,23,19],"tindex":"df6187ba-829f-11e5-8ee5-9b9943d4ad2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:573","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.QueryGraph.getPosOfReverseEdge(int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"df613a91-829f-11e5-8ee5-7dd7d2cdebc5","diffs":[{"methodsDiff":{"delete":["java.lang.Class<? extends com.graphhopper.routing.RoutingAlgorithmFactorySimple>.getName","com.graphhopper.routing.AlgorithmOptions.getTraversalMode","com.graphhopper.routing.AlgorithmOptions.getFlagEncoder","java.lang.Object.getClass","com.graphhopper.routing.AStar.setApproximation","com.graphhopper.storage.Graph.getNodeAccess","com.graphhopper.routing.AlgorithmOptions.getWeighting","java.lang.String.equalsIgnoreCase","com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation"]},"branchesDiff":{"delete":["t0","e1","t2","e3"]},"type":"staticDiff"}]}]}