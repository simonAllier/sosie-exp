{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":10,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":179,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":23,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":147,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":125,"com.graphhopper.reader.OSMReaderTest.testFerry":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":1,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":9,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":170,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":187,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":79,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":180,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":168,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":18,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":135,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":173,"com.graphhopper.util.EdgeWrapperTest.testClear":25,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.util.EdgeWrapperTest.testPut":24,"com.graphhopper.util.InstructionListTest.testWayList2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":163,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":76,"com.graphhopper.reader.OSMReaderTest.testFoot":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":164,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":130,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":127,"com.graphhopper.util.InstructionListTest.testWayList":72,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":158,"com.graphhopper.GraphHopperAPITest.testDisconnected179":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":81,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":78,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":120,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":122,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":62,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":136,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":109,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":45,"com.graphhopper.coll.OSMIDMapTest.testGet":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":19,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":166,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":33,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":94,"com.graphhopper.storage.RAMDataAccessTest.testCopy":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":175,"com.graphhopper.GraphHopperTest.testLoadOSM":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30,"com.graphhopper.reader.OSMReaderTest.testSort":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":29,"com.graphhopper.storage.RAMDataAccessTest.testSegments":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":161,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":8,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":137,"com.graphhopper.reader.OSMReaderTest.testMain":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":118,"com.graphhopper.routing.PathTest.testWayList":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":152,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":114,"com.graphhopper.coll.OSMIDMapTest.testGet2":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":157,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":102,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":124,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":52,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":162,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":142,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":22,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":77,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":126,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":154,"com.graphhopper.coll.OSMIDMapTest.testGetLong":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":171,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":160,"com.graphhopper.GraphHopperTest.testPrepareOnly":27,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":21,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":56,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":159,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":110,"com.graphhopper.GraphHopperAPITest.testLoad":46,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":39,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":141,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":13,"com.graphhopper.GraphHopperTest.testFootOnly":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":105,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":106,"com.graphhopper.reader.OSMReaderTest.testBarriers":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":4,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":5,"com.graphhopper.util.GHUtilityTest.testCopy":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":133},"transformations":[{"failures":[0],"tindex":"301af32f-8282-11e5-b46c-89f5a29a8fc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:705","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"variableMap":{"graphHopperFolder":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:102","type":"CtIfImpl","sourcecode":"if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n    byte |= 1;\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"301b1a40-8282-11e5-b46c-bd6804978faf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"i","nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-1},{"failures":[22,23],"tindex":"301b4151-8282-11e5-b46c-2f8be2a365da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"freeIndex","mSize":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:117","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[24,25],"tindex":"301b4152-8282-11e5-b46c-2b9e2661abd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"status":-1},{"failures":[26],"tindex":"301b4153-8282-11e5-b46c-1d841d90d0ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-1},{"failures":[],"tindex":"301b4154-8282-11e5-b46c-b52d686caab0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:378","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"301b6865-8282-11e5-b46c-23be81f0d79a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:265","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)) > 0"},"status":-2},{"failures":[],"tindex":"301b6866-8282-11e5-b46c-b1a234ec2e5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"301b6867-8282-11e5-b46c-0b04fc34b337","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:881","type":"CtIfImpl","sourcecode":"if (\"shortest\".equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder);\n} else if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-1},{"failures":[48,49],"tindex":"301b6868-8282-11e5-b46c-8371df1a061f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"nextTurnCostIndex","maxLeafEntries":"turnCostIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:196","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[27,35,36,37,38,39,40,42,43,44,50,51,52,53,54,55,48,56,57,58,59,60,61,62,63,49,64,65,66,67,68,69],"tindex":"301b8f79-8282-11e5-b46c-177e21b4a3f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:594","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadNodesHeader()"},"variableMap":{"clonedG":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:415","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setNodesHeader()"},"status":-1},{"failures":[],"tindex":"301b8f7a-8282-11e5-b46c-e1cf97564213","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:376","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"301b8f7b-8282-11e5-b46c-3fc03ebac62b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[35,36,39,40,44],"tindex":"301b8f7c-8282-11e5-b46c-1588bfc1c376","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"prepareLogMessages","speed":"prepareLogMessages"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:820","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting : java.util.Set<com.graphhopper.routing.util.Weighting>) {\n    com.graphhopper.routing.ch.PrepareContractionHierarchies com.graphhopper.routing.ch.PrepareContractionHierarchies = new com.graphhopper.routing.ch.PrepareContractionHierarchies(new com.graphhopper.storage.GHDirectory(\"\" , com.graphhopper.storage.DAType.com.graphhopper.storage.DAType) , com.graphhopper.storage.GraphHopperStorage , com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting) , com.graphhopper.routing.util.Weighting.getFlagEncoder() , com.graphhopper.routing.util.Weighting , com.graphhopper.routing.util.TraversalMode);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int).setNeighborUpdates(int).setLogMessages(double);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies);\n}"},"status":-1},{"failures":[],"tindex":"301bb68d-8282-11e5-b46c-4ba6564b7459","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:849","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":0},{"failures":[27,40,43,70,71,54],"tindex":"301bb68e-8282-11e5-b46c-530d27d39565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[72,73,74,75,27,28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,46,51,76,77,78,79,80,81,82,83,84,54,85,86,55,87,88,89,90,91,48,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,1,152,2,3,153,4,154,155,5,156,157,6,158,159,160,161,7,162,8,9,163,10,11,12,13,14,15,164,165,166,167,168,169,170,171,16,172,173,174,19,175,176,177,178,179,180,181,182,183,184,185,186,57,59,60,61,62,63,49,64,65,66,67,68,69],"tindex":"301bdd9f-8282-11e5-b46c-214680d6a79f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:235","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[187,188,189,190],"tindex":"301bdda0-8282-11e5-b46c-f9e8b88e8f35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"variableMap":{"sacScale":"bikeTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:246","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[44],"tindex":"301c04b1-8282-11e5-b46c-6b8e9141750d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"301c04b2-8282-11e5-b46c-b5d0c2ec9999","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.freeze()"},"variableMap":{"ghStorage":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:111","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.needsTurnCostsSupport()) || ((com.graphhopper.routing.util.Weighting) == null))\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension());\nelse\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(java.util.Arrays.asList(com.graphhopper.routing.util.Weighting) , com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.GraphExtension.NoOpExtension());\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}