{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":49,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":31,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":8,"com.graphhopper.reader.OSMReaderTest.testMain":24,"com.graphhopper.reader.OSMReaderTest.testFerry":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":65,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":16,"com.graphhopper.storage.VLongStorageTest.testWrite":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":54,"com.graphhopper.coll.CompressedArrayTest.testCompress":5,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":48,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":36,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":9,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.GraphHopperTest.testFootAndCar":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":59,"com.graphhopper.reader.OSMReaderTest.testFoot":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":47,"com.graphhopper.util.InstructionListTest.testCreateGPX":34,"com.graphhopper.reader.OSMReaderTest.testOneWay":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.reader.OSMReaderTest.testRelation":6,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":52,"com.graphhopper.coll.CompressedArrayTest.testCompress2":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":15,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":50,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":7,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":33,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":28,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":11,"com.graphhopper.GraphHopperTest.testFootOnly":23,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":56,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":63,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":30,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":10,"com.graphhopper.reader.OSMReaderTest.testBarriers":26,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":41,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":12,"com.graphhopper.reader.OSMReaderTest.testSort":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":58},"transformations":[{"failures":[],"tindex":"2dc34fdd-8274-11e5-ab0c-0749ab76737d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:527","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.REACH_DEST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,1],"tindex":"2dc376ee-8274-11e5-ab0c-879977941447","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"2dc376ef-8274-11e5-ab0c-0bd27904ebd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int)"},"status":-2},{"failures":[],"tindex":"2dc376f0-8274-11e5-ab0c-53e9ccdffc1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":-2},{"failures":[2,3,4,5],"tindex":"2dc376f1-8274-11e5-ab0c-b52d450a4130","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:127","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 14"},"status":-1},{"failures":[6],"tindex":"2dc376f2-8274-11e5-ab0c-0573dd0350e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >> 1"},"variableMap":{"bytePos":"osmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:623","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long)"},"status":-1},{"failures":[],"tindex":"2dc39e03-8274-11e5-ab0c-6167b175c755","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":0},{"failures":[7,8,9,10,11],"tindex":"2dc39e04-8274-11e5-ab0c-8b4b2caa4ac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:209","type":"CtTryImpl","sourcecode":"try {\n    if (!(java.io.File.renameTo(new java.io.File(((java.lang.String) + java.lang.String))))) {\n        throw new java.lang.IllegalStateException((((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object to \") + java.lang.String));\n    } \n    java.lang.String = java.lang.String;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object!\") , java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"2dc39e05-8274-11e5-ab0c-a5913d0a8c00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[12,13,14,15,16],"tindex":"2dc39e06-8274-11e5-ab0c-a982266bbaba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":-1},{"failures":[],"tindex":"2dc39e07-8274-11e5-ab0c-d12b51c73abd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = -1;\n    int int = -1;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n            int = int;\n            int = int + 1;\n        } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n            int = int;\n            int = int + (int);\n        } \n    } else {\n        if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n            int = int + 1;\n            int = int;\n        } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n            int = int + (int);\n            int = int;\n        } \n    }\n    if (int >= 0) {\n        if ((int[][int]) >= 0) {\n            if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                continue;\n            } \n        } \n        com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n        int[][int] = int[][int];\n        com.graphhopper.coll.GHBitSet.add(int);\n        int++;\n    } \n}"},"status":-2},{"failures":[2,3,4,5],"tindex":"2dc3c518-8274-11e5-ab0c-01b3cc4b9e24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"2dc3c519-8274-11e5-ab0c-3ffe869fab6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"status":-1},{"failures":[33,34,35],"tindex":"2dc3c51a-8274-11e5-ab0c-bfbf5e7878e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()))"},"status":-1},{"failures":[36,37,38,17,18,19,39,20,21,40,22,23,41,42,43,24,25,26,27,28,29,30,44,31,32,45,46],"tindex":"2dc3c51b-8274-11e5-ab0c-e59ef55da217","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:98","type":"CtIfImpl","sourcecode":"if ((java.io.File.exists()) && (!(java.io.File.isDirectory())))\n    throw new java.lang.IllegalArgumentException(\"Cache path has to be a directory\");\n"},"variableMap":{"cacheDir":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:150","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.preProcess(java.io.File)"},"status":-1},{"failures":[29,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"2dc3c51c-8274-11e5-ab0c-8f86aefb500d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:239","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"2dc3ec2d-8274-11e5-ab0c-49899c284d9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.util.EdgeIteratorState))\n    com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState);\n"},"status":-2},{"failures":[],"tindex":"2dc3ec2e-8274-11e5-ab0c-d1fbaf20faa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"store","finishedFrom":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:57","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"2dc3ec2f-8274-11e5-ab0c-c518488d32ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1195","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"variableMap":{"fullyLoaded":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:71","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(boolean))) {\n    if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    else\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n} else if (!(boolean)) {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n} else {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n}"},"status":-2},{"failures":[],"tindex":"2dc3ec30-8274-11e5-ab0c-c5356efb7270","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\")"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2dc39e03-8274-11e5-ab0c-6167b175c755","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append","com.graphhopper.util.Helper.round6","com.graphhopper.util.shapes.GHPoint.getLon"]},"type":"staticDiff"}]},{"transformation":"2dc39e05-8274-11e5-ab0c-a5913d0a8c00","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.close"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.RAMIntDataAccess_void_close().b","com.graphhopper.storage.AbstractDataAccess_void_close().b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.storage.RAMIntDataAccess_void_close().b"]},"type":"branch"}]},{"transformation":"2dc3ec30-8274-11e5-ab0c-c5356efb7270","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Instruction.getFirstLat","java.lang.StringBuilder.append","com.graphhopper.util.Helper.round6"]},"type":"staticDiff"}]}]}