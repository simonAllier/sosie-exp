{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":169,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":70,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":128,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":66,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":13,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":125,"com.graphhopper.reader.OSMReaderTest.testWithBounds":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":6,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":158,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":31,"com.graphhopper.coll.CompressedArrayTest.testCompress":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":85,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":167,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":161,"com.graphhopper.GraphHopperTest.testPrepare":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":46,"com.graphhopper.util.InstructionListTest.testWayList2":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":91,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":156,"com.graphhopper.reader.OSMReaderTest.testFoot":135,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":76,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":73,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":131,"com.graphhopper.coll.IntIntBinHeapTest.test0":149,"com.graphhopper.util.InstructionListTest.testWayList":150,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":127,"com.graphhopper.reader.OSMReaderTest.testOneWay":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":40,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":12,"com.graphhopper.GraphHopperAPITest.testDisconnected179":122,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":16,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":129,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":14,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":67,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":140,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":56,"com.graphhopper.GraphHopperTest.testLoadOSM":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":88,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":68,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":108,"com.graphhopper.reader.OSMReaderTest.testSort":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":81,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":45,"com.graphhopper.reader.OSMReaderTest.testMain":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":162,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":93,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":23,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":21,"com.graphhopper.routing.PathTest.testWayList":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":83,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":65,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":87,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":164,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":44,"com.graphhopper.GraphHopperTest.testFootAndCar":114,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":157,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":72,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":18,"com.graphhopper.GraphHopperTest.testPrepareOnly":105,"com.graphhopper.coll.CompressedArrayTest.testCompress2":123,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":62,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":118,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":148,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":143,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":96,"com.graphhopper.GraphHopperAPITest.testLoad":121,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":48,"com.graphhopper.GraphHopperTest.testFootOnly":119,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":90,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":92,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":3,"com.graphhopper.reader.OSMReaderTest.testBarriers":138,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":163},"transformations":[{"failures":[0,1],"tindex":"4ccf65a5-82b5-11e5-b841-437a1a6ee553","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:115","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"variableMap":{"newSegs":"segments","i":"bufferIndex","segmentSizePower":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:271","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[][][(int + 1)]"},"status":-1},{"failures":[2],"tindex":"4ccfb3c6-82b5-11e5-b841-b956b6ebcf37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:281","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[3,4],"tindex":"4ccfb3c7-82b5-11e5-b841-a5c7125dd276","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:31","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)"},"variableMap":{"from":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"4ccfb3c8-82b5-11e5-b841-cb2eedcbeb06","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:501","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"4ccfb3c9-82b5-11e5-b841-e3e8e01234f2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:427","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)"},"variableMap":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"4ccfdada-82b5-11e5-b841-496f6c9d0a0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"4ccfdadb-82b5-11e5-b841-4fc1c63e8de6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:722","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < (int) ; long += 4) {\n    com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n}"},"variableMap":{"nodes":"edges","newOffset":"edgeToUpdatePointer","nodeEntryBytes":"baseNode","oldOffset":"edgeToUpdatePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:218","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int);\n} else {\n    long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int);\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n}"},"status":-1},{"failures":[],"tindex":"4ccfdadc-82b5-11e5-b841-114043b85024","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:234","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:140","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.TranslationMap.get(\"en\").asMap()"},"status":-2},{"failures":[58],"tindex":"4cd001ed-82b5-11e5-b841-f1d7f94eb7d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction)"},"status":-1},{"failures":[],"tindex":"4cd001ee-82b5-11e5-b841-57c812472d24","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\")"},"status":0},{"failures":[],"tindex":"4cd001ef-82b5-11e5-b841-410b33681382","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[59,60,61,62,63],"tindex":"4cd001f0-82b5-11e5-b841-d55a5ec84e43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"turnRestrictionBit","flags":"turnRestrictionBit","dir":"turnRestrictionBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:659","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,43,44,46,104,105,106,107,108,109,110,111,58,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,4,135,136,137,138,139,140,141,142,143,144,145,146,57],"tindex":"4cd02901-82b5-11e5-b841-8f85c6b65309","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[104,147,58,112,113,115,116,117,118,119,4,136,137,138,139,140,141,142,143,144,145,146,57],"tindex":"4cd02902-82b5-11e5-b841-af25bc4a7c77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:595","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-1},{"failures":[148],"tindex":"4cd02903-82b5-11e5-b841-01eb6c0fa4e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1195","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"variableMap":{"fullyLoaded":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:216","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.GPXEntry com.graphhopper.util.GPXEntry : com.graphhopper.util.InstructionList.createGPXList()) {\n    java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()));\n    java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon())).append(\"\\'>\");\n    if (boolean)\n        java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n    \n    java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime())))).append(\"<\/time>\");\n    java.lang.StringBuilder.append(\"<\/trkpt>\");\n}"},"status":-1},{"failures":[116],"tindex":"4cd05014-82b5-11e5-b841-09fae72d81b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1162","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndex.close()"},"status":-1},{"failures":[149],"tindex":"4cd05015-82b5-11e5-b841-19e0ee3a9281","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:80","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_key()"},"status":-1},{"failures":[113],"tindex":"4cd05016-82b5-11e5-b841-439927d6feae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:154","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.PointList.is3D()))\n    throw new java.lang.IllegalStateException(\"To support speed calculation based on elevation data it is necessary to enable import of it.\");\n"},"variableMap":{"pl":"fullPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:91","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty())\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n"},"status":-1},{"failures":[150,151,66,68,86,88,152,153,8,154,155,156,157,14,158,159,160,161,21,162,163,164,165,27,166,167,168,169,170,171,172,173,174,175,176,47,119,136,139,140],"tindex":"4cd07727-82b5-11e5-b841-191c2b59b0da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:872","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"status":-1},{"failures":[116,177],"tindex":"4cd07728-82b5-11e5-b841-2d77c00e27a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:952","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    java.lang.String = com.graphhopper.GraphHopper.getDefaultVehicle().toString();\n"},"variableMap":{"this":"this","vehicle":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:739","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String));\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}