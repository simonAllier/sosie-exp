{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":27,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":89,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":220,"com.graphhopper.reader.OSMReaderTest.testFerry":90,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":150,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":151,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":116,"com.graphhopper.routing.QueryGraphTest.testOneWay":121,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.reader.OSMReaderTest.testWithBounds":98,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":234,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":265,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":133,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":9,"com.graphhopper.util.InstructionListTest.testWayList":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":18,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":157,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":226,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":57,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":132,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":147,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":242,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":52,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":186,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":210,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":249,"com.graphhopper.reader.OSMReaderTest.testSort":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":21,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":262,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":31,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":114,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":16,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":260,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":168,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":85,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":274,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":131,"com.graphhopper.util.GHUtilityTest.testSort":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":61,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":12,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":191,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":246,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":140,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":105,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":181,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":142,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":196,"com.graphhopper.reader.OSMReaderTest.testBarriers":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":263,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":14,"com.graphhopper.util.GHUtilityTest.testCopy":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":178,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":17,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":215,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":179,"com.graphhopper.util.shapes.CircleTest.testContains":276,"com.graphhopper.reader.PrinctonReaderTest.testRead":112,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":115,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":266,"com.graphhopper.util.InstructionListTest.testWayList2":159,"com.graphhopper.reader.OSMReaderTest.testFoot":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":65,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":62,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":139,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":204,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":255,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":177,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":233,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":92,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":267,"com.graphhopper.routing.PathBidirRefTest.testExtract":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":51,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":152,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":149,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":238,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":192,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":69,"com.graphhopper.util.GHUtilityTest.testSort2":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":24,"com.graphhopper.reader.OSMReaderTest.testMain":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":272,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":110,"com.graphhopper.routing.PathBidirRefTest.testExtract2":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":141,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":86,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":71,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":184,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":35,"com.graphhopper.storage.StorablePropertiesTest.testStore":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":59,"com.graphhopper.storage.GraphHopperStorageTest.testClone":198,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":218,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":273,"com.graphhopper.GraphHopperTest.testFootAndCar":53,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":172,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":259,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":19,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":72,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":247,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":77,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":232,"com.graphhopper.util.InstructionListTest.testFind":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":252},"transformations":[{"failures":[],"tindex":"96cc2454-827a-11e5-84e2-b33f552df1dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:532","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":0},{"failures":[],"tindex":"96cc4b65-827a-11e5-84e2-098116808edf","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"this","newGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.this(java.util.Collections.<com.graphhopper.routing.util.Weighting>emptyList(), com.graphhopper.storage.Directory, com.graphhopper.routing.util.EncodingManager, boolean, com.graphhopper.storage.GraphExtension)"},"status":-2},{"failures":[],"tindex":"96cc4b66-827a-11e5-84e2-a7b0bb9ff51c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:121","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"96cc7277-827a-11e5-84e2-3ba9c034a573","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:326","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,1,2,52,53,3,4,54,6,17,22,23,26,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"96cc7278-827a-11e5-84e2-2784c8e4a637","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:329","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"variableMap":{"segmentSizeInBytes":"value","capacity":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:594","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    gnu.trove.set.hash.TIntHashSet.add(-(int + 1));\n} else {\n    long long = ((long)(int)) * 4;\n    for (long long = long + 4 ; long < long ; long += 4) {\n        gnu.trove.set.hash.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n    }\n}"},"status":-1},{"failures":[46,47,48,49,50,1,2,52,53,3,4,54,87,88,89,14,17,22,23,26,32],"tindex":"96cc9989-827a-11e5-84e2-75137809ba0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"current","factor":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:72","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getEdge()"},"status":-1},{"failures":[90,91,42,43,44,92,93,94,95,96,97,98,99,100,101,0,102,1,2,52,53,3,4,5,54,6,103],"tindex":"96cc998a-827a-11e5-84e2-2354435a5c14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMWay:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\")"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:186","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\")"},"status":-1},{"failures":[],"tindex":"96cc998b-827a-11e5-84e2-3de457fe9ef5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"hash","speed":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:90","type":"CtAssignmentImpl","sourcecode":"int = (71 * int) + (com.graphhopper.routing.util.FastestWeighting.toString().hashCode())"},"status":0},{"failures":[0,3,4,5,54,104,105,106,107,108,109,110,111],"tindex":"96ccc09c-827a-11e5-84e2-9d3a085aa357","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"96ccc09d-827a-11e5-84e2-75c479036065","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:125","type":"CtIfImpl","sourcecode":"if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n    break;\n"},"status":0},{"failures":[],"tindex":"96ccc09e-827a-11e5-84e2-0b7667338524","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:386","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"Cannot add edge or node after baseGraph.freeze was called\");\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:397","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":-2},{"failures":[112,113,114,90,91,42,43,44,92,93,94,95,96,97,98,99,100,45,101,0,46,47,48,49,50,102,1,2,52,53,3,4,5,54,6,103,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,25,26,29,30,31,32,133,134,33,135,34,136,137,35,138,36,37,38,40,41,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,56,57,60,61,66,67,69,164,165,71,73,74,77,78,83,84,86,166,104,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,106,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,110,247,248,111,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"96cce7af-827a-11e5-84e2-438965b1cac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[],"tindex":"96cce7b0-827a-11e5-84e2-1f96fbf76a1f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:80","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"96cd0ec1-827a-11e5-84e2-915f95c064c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"variableMap":{"ghStorage":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:267","type":"CtIfImpl","sourcecode":"if (java.io.Closeable != null)\n    java.io.Closeable.close();\n"},"status":-2},{"failures":[],"tindex":"96cd0ec2-827a-11e5-84e2-05f3c2b390a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:89","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[275,276],"tindex":"96cd0ec3-827a-11e5-84e2-b1e56645caee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"lon1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:74","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":-1},{"failures":[],"tindex":"96cd0ec4-827a-11e5-84e2-872a8df79fbf","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"status":0},{"failures":[],"tindex":"96cd0ec5-827a-11e5-84e2-697f0ae3959a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"long = long | com.graphhopper.routing.util.AbstractFlagEncoder.(handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int))"},"status":0},{"failures":[],"tindex":"96cd35d6-827a-11e5-84e2-872f852822c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"originalEdges","index":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:683","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"96cd35d7-827a-11e5-84e2-79a764ec8200","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:715","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) + (com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"shortcuts":"index","nodesCH":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:80","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) / 4"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"96cd0ec4-827a-11e5-84e2-872a8df79fbf","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e2","com.graphhopper.geohash.SpatialKeyAlgo_long_encode(double,double).e6","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.geohash.SpatialKeyAlgo_long_encode(double,double).e3","com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).l4"]},"type":"branch"}]},{"transformation":"96cc998b-827a-11e5-84e2-3de457fe9ef5","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.routing.util.FastestWeighting_java.lang.String_toString().b"]},"type":"branch"},{"methodsDiff":{"delete":["java.lang.String.hashCode","com.graphhopper.routing.util.FastestWeighting.toString"]},"type":"staticDiff"}]},{"transformation":"96cc2454-827a-11e5-84e2-b33f552df1dd","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointAccess.getLatitude"]},"type":"staticDiff"}]},{"transformation":"96ccc09d-827a-11e5-84e2-75c479036065","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"96cd0ec5-827a-11e5-84e2-697f0ae3959a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags"]},"type":"staticDiff"}]}]}