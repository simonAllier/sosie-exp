{"failureDictionary":{"com.graphhopper.util.InstructionListTest.testCreateGPX":0,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1},"transformations":[{"failures":[0,1],"tindex":"6f5cc9f2-794e-11e5-9b9a-7d25dabc67d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"status":-1},{"failures":[],"tindex":"6f5cf103-794e-11e5-9b9a-8133baf6836d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"NO_TURN_ENTRY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"status":0},{"failures":[],"tindex":"6f5cf104-794e-11e5-9b9a-73c8e91a7449","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-2},{"failures":[],"tindex":"6f5cf105-794e-11e5-9b9a-29d077987c92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:181","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[],"tindex":"6f5cf106-794e-11e5-9b9a-337b658811f0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"contractedNeighbors"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:554","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int++;\n    if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n        int++;\n    \n}"},"status":-2},{"failures":[],"tindex":"6f5cf107-794e-11e5-9b9a-bb46588b2c57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:641","type":"CtAssignmentImpl","sourcecode":"double = (((double) * 2) + long) / 3"},"status":-2},{"failures":[],"tindex":"6f5cf108-794e-11e5-9b9a-03a1abae578c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:64","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"6f5cf109-794e-11e5-9b9a-91361deeb12d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:147","type":"CtAssignmentImpl","sourcecode":"int = int - (java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"6f5d181a-794e-11e5-9b9a-6d7e5e3c6d7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:633","type":"CtReturnImpl","sourcecode":"return ((\"distance:\" + com.graphhopper.routing.Path.(getDistance())) + \", edges:\") + (com.graphhopper.routing.TIntList.size())"},"status":-2},{"failures":[],"tindex":"6f5d181b-794e-11e5-9b9a-271b35ca6b2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:752","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"class:bicycle:\" + (java.lang.String.toString())"},"status":-2},{"failures":[],"tindex":"6f5d181c-794e-11e5-9b9a-e55582ec1c72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-2},{"failures":[],"tindex":"6f5d181d-794e-11e5-9b9a-536b5f57b746","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"firstValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"6f5d181e-794e-11e5-9b9a-5b303126a5cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:255","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"6f5d181f-794e-11e5-9b9a-c740cda4d0fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"variableMap":{"cg":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:52","type":"CtTryImpl","sourcecode":"try {\n    int++;\n    int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine());\n    int++;\n    int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine());\n    for (int int = 0 ; int < int ; int++) {\n        int++;\n        java.lang.String java.lang.String = java.io.BufferedReader.readLine();\n        java.lang.String[] java.lang.String[] = java.lang.String.split(\" \");\n        int int = -1;\n        int int = -1;\n        double double = -1;\n        int int = 0;\n        for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n            if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n                continue;\n            } \n            if (int == 0) {\n                int = java.lang.Integer.parseInt(java.lang.String[][int]);\n            } else if (int == 1) {\n                int = java.lang.Integer.parseInt(java.lang.String[][int]);\n            } else {\n                double = java.lang.Double.parseDouble(java.lang.String[][int]);\n            }\n            int++;\n        }\n        if (int != 3) {\n            throw new java.lang.RuntimeException((((((\"incorrect read!? from:\" + int) + \", to:\") + int) + \", dist:\") + double));\n        } \n        com.graphhopper.storage.Graph.edge(int, int, double, false);\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Problem in line \" + int) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(java.io.BufferedReader);\n}"},"status":-2},{"failures":[],"tindex":"6f5d3f30-794e-11e5-9b9a-cdd18e537da0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"6f5d3f31-794e-11e5-9b9a-cd21b9dccb30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:637","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    com.graphhopper.routing.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, false, int, int);\n} "},"status":-2},{"failures":[],"tindex":"6f5d6642-794e-11e5-9b9a-111a70a2e344","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"variableMap":{"workerThreads":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:639","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-2},{"failures":[],"tindex":"6f5d6643-794e-11e5-9b9a-6fd4adcd50eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:271","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"6f5d6644-794e-11e5-9b9a-cf32f8f68eac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"variableMap":{"adjNodesToDelIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:202","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean)"},"status":-2},{"failures":[],"tindex":"6f5d8d55-794e-11e5-9b9a-196b6f40e6ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:84","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(java.util.List<com.graphhopper.routing.util.TIntArrayList>.size(), int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}