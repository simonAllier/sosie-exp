{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":20,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":38,"com.graphhopper.GraphHopperTest.testPrepare":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":45,"com.graphhopper.util.InstructionListTest.testCreateGPX":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":51,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.GraphHopperTest.testPrepareOnly":57,"com.graphhopper.GraphHopperTest.testVia":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":31,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":55,"com.graphhopper.GraphHopperTest.testFootOnly":62,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":21,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":44,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":27,"com.graphhopper.util.GHUtilityTest.testCopy":64},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"7f50d268-7917-11e5-b518-0fdf8dce3bb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:413","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int])"},"status":-1},{"failures":[],"tindex":"7f50f979-7917-11e5-b518-3dbeaf23710d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:315","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Directory) != null)\n    return com.graphhopper.storage.Directory;\n"},"variableMap":{"dir":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:150","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Directory"},"status":-2},{"failures":[],"tindex":"7f50f97a-7917-11e5-b518-1b73b3ff03b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD","edgeFrom":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:113","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false)"},"status":0},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,42,43,1,2,44,45,46,3,47,48,4,49,50,51,52,5,6,53,7,8,54,9,10,55,11,56,57,12,58,59,60,61,62,63,64],"tindex":"7f50f97b-7917-11e5-b518-e13b61964003","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-1},{"failures":[65,66],"tindex":"7f51208c-7917-11e5-b518-71605c5bfe1c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"status":-1},{"failures":[],"tindex":"7f51208d-7917-11e5-b518-03cc0d78d038","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:250","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"7f51208e-7917-11e5-b518-51e9fb43aae3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:53","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-2},{"failures":[],"tindex":"7f51208f-7917-11e5-b518-6df5d7a4e5b0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:87","type":"CtIfImpl","sourcecode":"if (int == 3)\n    return com.graphhopper.util.PointList.clone(false);\nelse if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"variableMap":{"mode":"mode","pointList":"com.graphhopper.util.PointList.EMPTY","com.graphhopper.util.PointList.EMPTY":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:870","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    long *= 4;\n    int = com.graphhopper.storage.DataAccess.getInt(long);\n    long += 4;\n    byte[] = new byte[(int * (com.graphhopper.storage.NodeAccess.getDimension())) * 4];\n    com.graphhopper.storage.DataAccess.getBytes(long, byte[], byte[].int);\n} else if (int == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"status":-2},{"failures":[],"tindex":"7f512090-7917-11e5-b518-ab14789284b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"7f512091-7917-11e5-b518-673075096b06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"a_lat","fullDist2D":"norm","decDist2DSum":"r_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:154","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"status":-2},{"failures":[],"tindex":"7f5147a2-7917-11e5-b518-1928c50cee3d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((6 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"7f5147a3-7917-11e5-b518-c14f291a505e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-2},{"failures":[],"tindex":"7f5147a4-7917-11e5-b518-9f08f998bcf5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"variableMap":{"factor":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception ex) {\n    }\n"},"status":-2},{"failures":[],"tindex":"7f5147a5-7917-11e5-b518-19814d108860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double))"},"status":-2},{"failures":[],"tindex":"7f5147a6-7917-11e5-b518-d51b344421c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:115","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7))"},"status":-2},{"failures":[],"tindex":"7f5147a7-7917-11e5-b518-f10d504e6073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:320","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"status":-2},{"failures":[],"tindex":"7f5147a8-7917-11e5-b518-2db098bbd62c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:343","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return ;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    if (java.lang.Double.isInfinite(double)) {\n        java.lang.System.java.io.PrintStream.println((\"infinity distance? for way:\" + (com.graphhopper.reader.OSMWay.getId())));\n        return ;\n    } \n    if (double < 1)\n        return ;\n    \n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"7f516eb9-7917-11e5-b518-e9e282f5447b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:786","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.RoutingAlgorithmFactory == null)\n    com.graphhopper.GraphHopper.putAlgorithmFactory(com.graphhopper.routing.util.Weighting, (com.graphhopper.routing.RoutingAlgorithmFactory = new com.graphhopper.routing.RoutingAlgorithmFactorySimple()));\n"},"status":-2},{"failures":[],"tindex":"7f516eba-7917-11e5-b518-c515f1ac736c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"storedKey","pointer":"storedKey","maxCapacity":"storedKey","baseCapacity":"storedKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"7f516ebb-7917-11e5-b518-cf950343bf9a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:127","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}