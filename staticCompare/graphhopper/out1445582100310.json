{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":35,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":61,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":70,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":345,"com.graphhopper.reader.OSMReaderTest.testFerry":289,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":341,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":342,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":58,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":186,"com.graphhopper.routing.QueryGraphTest.testOneWay":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":162,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":201,"com.graphhopper.reader.OSMReaderTest.testWithBounds":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":100,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":131,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":45,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":230,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":306,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":221,"com.graphhopper.GraphHopperTest.testPrepare":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":41,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":269,"com.graphhopper.search.NameIndexTest.testFlush":343,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":284,"com.graphhopper.util.InstructionListTest.testWayList":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":26,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":329,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":152,"com.graphhopper.GraphHopperAPITest.testDisconnected179":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":348,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":115,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":11,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":146,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":354,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":317,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":117,"com.graphhopper.GraphHopperTest.testLoadOSM":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":210,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":233,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":203,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":275,"com.graphhopper.reader.OSMReaderTest.testSort":292,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":78,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":39,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":66,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":185,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":305,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":2,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":246,"com.graphhopper.routing.PathTest.testWayList":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":24,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":200,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":97,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":179,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":10,"com.graphhopper.util.GHUtilityTest.testSort":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":349,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":176,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":126,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":132,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":188,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":87,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":101,"com.graphhopper.GraphHopperAPITest.testLoad":325,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":319,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":107,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":137,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.reader.OSMReaderTest.testBarriers":293,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":189,"com.graphhopper.routing.PathTest.testFound":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":192,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":335,"com.graphhopper.routing.PathTest.testFindInstruction":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":92,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":191,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":260,"com.graphhopper.util.InstructionListTest.testEmptyList":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":194,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":282,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":119,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":270,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":105,"com.graphhopper.reader.PrinctonReaderTest.testRead":303,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":52,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":145,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":167,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":190,"com.graphhopper.util.InstructionListTest.testWayList2":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":236,"com.graphhopper.reader.OSMReaderTest.testFoot":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":352,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":208,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":209,"com.graphhopper.reader.OSMReaderTest.testOneWay":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":156,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":147,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":279,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":102,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":222,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":259,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":294,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":168,"com.graphhopper.routing.PathBidirRefTest.testExtract":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":313,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":338,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":206,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":242,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":311,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":310,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":215,"com.graphhopper.util.GHUtilityTest.testSort2":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":32,"com.graphhopper.reader.OSMReaderTest.testMain":291,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":175,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":134,"com.graphhopper.routing.PathBidirRefTest.testExtract2":13,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":245,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":228,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":182,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":204,"com.graphhopper.storage.GraphHopperStorageTest.testClone":255,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":178,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":165,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":265,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":272,"com.graphhopper.GraphHopperTest.testFootAndCar":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":139,"com.graphhopper.routing.PathTest.testTime":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":164,"com.graphhopper.util.GHUtilityTest.testSortDirected":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":154,"com.graphhopper.GraphHopperTest.testPrepareOnly":307,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":197,"com.graphhopper.GraphHopperTest.testVia":315,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":27,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":229,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":135,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":276,"com.graphhopper.GraphHopperTest.testFootOnly":323,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":235,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":297,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":237,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":6,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":153,"com.graphhopper.util.InstructionListTest.testFind":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":214},"transformations":[{"failures":[],"tindex":"2f598a70-7950-11e5-b466-57f5cc9413fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"com.graphhopper.util.AngleCalc.PI_4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:49","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[0,1],"tindex":"2f59b181-7950-11e5-b466-5569adf5f6c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"encoded","key":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"2f59d892-7950-11e5-b466-073945682535","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"variableMap":{"segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[323],"tindex":"2f59ffa3-7950-11e5-b466-230850aaa9b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:316","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[343,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,46,47,49,50,51,52,53,55,56,66,68,74,76,77,78,79,80,81,83,84,85,90,91,92,96,98,99,101,106,114,119,122,126,128,133,135,139,142,143,144,148,150,151,153,158,166,171,174,178,344,345,346,347,348,349,191,350,351,352,353,354,198,205,215,221,235,245,247,251,252,253,257,259,260,262,267,275,280,283,287,289,290,291,293,296,297,298,299,300,301,302,303,304,308,309,310,311,312,313,315,316,317,318,319,320,322,323,325,327,329,330,331,332,335,338,341],"tindex":"2f59ffa4-7950-11e5-b466-9b925dee3e41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:268","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[],"tindex":"2f5a26b5-7950-11e5-b466-aff426e3b319","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:181","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"variableMap":{"minLon":"weight","maxLat":"weight","minLat":"weight","maxLon":"weight","lon":"weight","lat":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:184","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) >= (com.graphhopper.routing.PathBidirRef.getWeight())"},"status":-2},{"failures":[],"tindex":"2f5a26b6-7950-11e5-b466-7341e6a84e52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:133","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"status":-2},{"failures":[],"tindex":"2f5a4dc7-7950-11e5-b466-fb51a2a0e1cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:304","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"b":"closed","updateBestPath":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:73","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"2f5a4dc8-7950-11e5-b466-d9c1896690a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1004","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false);\n    if ((!boolean) && (com.graphhopper.GHRequest.hasFavoredHeading(0)))\n        throw new java.lang.IllegalStateException(\"Heading is not (fully) supported for CHGraph. See issue #483\");\n    \n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n    com.graphhopper.storage.Graph = com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting);\n} else\n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n"},"status":-2},{"failures":[],"tindex":"2f5a4dc9-7950-11e5-b466-e507454b90b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:209","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"2f5a4dca-7950-11e5-b466-398c0d60c57c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:474","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[],"tindex":"2f5a74db-7950-11e5-b466-e37e1f0a4b24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"defaultWeightLimit","shrinkFactor":"defaultWeightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1022","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"defaultWeightLimit\", double)"},"status":-2},{"failures":[],"tindex":"2f5a74dc-7950-11e5-b466-0163c5993d03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:183","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"tMode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:966","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2f5a74dd-7950-11e5-b466-9bd47740a901","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:263","type":"CtForEachImpl","sourcecode":"for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force();\n}"},"status":-2},{"failures":[],"tindex":"2f5a74de-7950-11e5-b466-0b9f27447809","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.TIntHashSet.iterator().next()"},"status":-2},{"failures":[],"tindex":"2f5a9bef-7950-11e5-b466-a53c73bcd290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":-2},{"failures":[],"tindex":"2f5a9bf0-7950-11e5-b466-5fee235c5b91","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:146","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"2f5a9bf1-7950-11e5-b466-7b4e2b5ec578","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:122","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n    double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-2},{"failures":[],"tindex":"2f5ac302-7950-11e5-b466-190e8656c5c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, (long - (com.graphhopper.storage.AbstractDataAccess.int)), false)"},"status":-2},{"failures":[],"tindex":"2f5ac303-7950-11e5-b466-975e6603c987","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"weight","x":"distEstimation","absY":"distEstimation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:135","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}