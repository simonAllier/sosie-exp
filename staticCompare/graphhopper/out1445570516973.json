{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2},"transformations":[{"failures":[],"tindex":"3723840d-7935-11e5-b0f7-395b95f1a386","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:110","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.VLongStorage.getLength()"},"status":-2},{"failures":[],"tindex":"3723ab1e-7935-11e5-b0f7-0d8319c6d6eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:303","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"3723ab1f-7935-11e5-b0f7-67361c861457","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"lon","lon":"lat","lat":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double, java.lang.Double.double)"},"status":-2},{"failures":[0,1],"tindex":"3723ab20-7935-11e5-b0f7-b123b5182931","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:713","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-1},{"failures":[2],"tindex":"3723d231-7935-11e5-b0f7-1d9db75734d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:287","type":"CtForImpl","sourcecode":"for (long long = long + (int) ; long < long ; long += int) {\n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n}"},"status":-1},{"failures":[],"tindex":"3723d232-7935-11e5-b0f7-87d35560624a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"nodeIndex","edge2":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:164","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":0},{"failures":[],"tindex":"3723d233-7935-11e5-b0f7-87b7d0f21c26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:272","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3723d234-7935-11e5-b0f7-8f1589f31e1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"lonSimilar","capacity":"width"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"status":0},{"failures":[],"tindex":"3723f945-7935-11e5-b0f7-353cb2a1afbe","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"currTo","fromHeap":"openSetTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:99","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"3723f946-7935-11e5-b0f7-aff4594bb863","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"queryLon","delta_lon":"queryLon","a_lon":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:744","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int)"},"status":-2},{"failures":[],"tindex":"3723f947-7935-11e5-b0f7-f9a62ac40c6f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:283","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n"},"variableMap":{"sortedNodes":"sortedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n}"},"status":-2},{"failures":[],"tindex":"3723f948-7935-11e5-b0f7-2582e7eee107","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"variableMap":{"pavementName":"_default","wayTypeName":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:143","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"37242059-7935-11e5-b0f7-fb7a173d7c87","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:408","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.isClosed()"},"status":-2},{"failures":[],"tindex":"3724205a-7935-11e5-b0f7-43090f8c2a12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"variableMap":{"i":"nodeA","allBits":"nodeA","hash":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:756","type":"CtIfImpl","sourcecode":"if ((int < int) != (int < int))\n    com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false);\n"},"status":-2},{"failures":[],"tindex":"3724205b-7935-11e5-b0f7-ad47149fe680","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:167","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"3724205c-7935-11e5-b0f7-45b115bc2346","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:339","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"variableMap":{"wayIndex":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:498","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"3724476d-7935-11e5-b0f7-ed600b936a7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:53","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    if ((double > 90) || (double < (-90)))\n        java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n    \n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if ((double > 180) || (double < (-180)))\n        java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n            java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n        } \n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n            java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"3724476e-7935-11e5-b0f7-3326cf393582","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:71","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3724476f-7935-11e5-b0f7-d7c7a7b59495","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:774","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"37244770-7935-11e5-b0f7-c98806b39876","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"originalEdges":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:288","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int += 2) {\n    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n    if ((short < (-1000)) || (short > 12000))\n        short = java.lang.Short.short;\n    \n    com.graphhopper.storage.DataAccess.setShort(int, short);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}