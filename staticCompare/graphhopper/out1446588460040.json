{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":141,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":154,"com.graphhopper.reader.OSMReaderTest.testFerry":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":35,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":137,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":10,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":73,"com.graphhopper.reader.OSMReaderTest.testWithBounds":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":44,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":50,"com.graphhopper.GraphHopperTest.testPrepare":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":38,"com.graphhopper.reader.OSMReaderTest.testFoot":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":145,"com.graphhopper.util.InstructionListTest.testWayList":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":143,"com.graphhopper.reader.OSMReaderTest.testOneWay":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":66,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":151,"com.graphhopper.GraphHopperAPITest.testDisconnected179":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":92,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":12,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":138,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":163,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":43,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":52,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":134,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":53,"com.graphhopper.GraphHopperTest.testLoadOSM":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":139,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":107,"com.graphhopper.reader.OSMReaderTest.testSort":117,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":149,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":72,"com.graphhopper.reader.OSMReaderTest.testMain":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":146,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":157,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":90,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":121,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":140,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":71,"com.graphhopper.GraphHopperTest.testFootAndCar":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":60,"com.graphhopper.util.InstructionListTest.testCreateGPX":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":31,"com.graphhopper.GraphHopperTest.testPrepareOnly":81,"com.graphhopper.GraphHopperTest.testVia":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":156,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":67,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":128,"com.graphhopper.GraphHopperAPITest.testLoad":114,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":78,"com.graphhopper.GraphHopperTest.testFootOnly":88,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":100,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":133,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":125,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":172,"com.graphhopper.reader.OSMReaderTest.testBarriers":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":62,"com.graphhopper.util.GHUtilityTest.testCopy":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":148},"transformations":[{"failures":[0],"tindex":"4c7bd114-8277-11e5-8a57-1b38602a59ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:144","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.toString()"},"status":-1},{"failures":[],"tindex":"4c7bf825-8277-11e5-8a57-db4cf7cdd6a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:255","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:985","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(java.util.List<com.graphhopper.util.shapes.GHPoint>.size())"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"4c7bf826-8277-11e5-8a57-a556b40e268f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"mSize","speed":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"4c7bf827-8277-11e5-8a57-d19127e509c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:767","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLat(int)"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"4c7bf828-8277-11e5-8a57-45d302277029","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:86","type":"CtInvocationImpl","sourcecode":"java.util.Collection<com.graphhopper.storage.CHGraphImpl>.add(new com.graphhopper.storage.CHGraphImpl(com.graphhopper.routing.util.Weighting , com.graphhopper.storage.Directory , this.com.graphhopper.storage.BaseGraph))"},"status":-1},{"failures":[],"tindex":"4c7c1f39-8277-11e5-8a57-2539dac3a7ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:400","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[65,70,71,74,1,104,3,4,5,105,106,107,108,109,110,83,84,111,112,85,86,113,88,114,115,116,117,118,89,90,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"4c7c1f3a-8277-11e5-8a57-5db6a3606e21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:40","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"4c7c1f3b-8277-11e5-8a57-dba986e65bc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long)"},"status":-1},{"failures":[129,146,152,153,154,155,156,157],"tindex":"4c7c1f3c-8277-11e5-8a57-9174ea35f0f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:106","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-1},{"failures":[],"tindex":"4c7c464d-8277-11e5-8a57-bf0ccfaa1c32","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[158,159,160],"tindex":"4c7c464e-8277-11e5-8a57-1d9b5dd90f7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"variableMap":{"midLat":"ele","spatialKey":"prevTime","midLon":"distance","bits":"time","lon":"nextLon","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:183","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double))) / (double))));\nelse\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double))) / (double))));\n"},"status":-1},{"failures":[],"tindex":"4c7c464f-8277-11e5-8a57-0d9bc5a7a101","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"nEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:99","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[105,106,107,108,109,110,161,162,116,117,118,163,164,165,166,167,168,169,170,171],"tindex":"4c7c4650-8277-11e5-8a57-6fc6674f089a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:449","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":-1},{"failures":[],"tindex":"4c7c4651-8277-11e5-8a57-496f29f71bea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:110","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:846","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage)"},"status":-2},{"failures":[],"tindex":"4c7c6d62-8277-11e5-8a57-b369e966cd62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"favoredHeading","eleDelta":"favoredHeading","incDist2DSum":"favoredHeading","decEleSum":"favoredHeading","fullDist2D":"favoredHeading","decDist2DSum":"favoredHeading"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.validateAzimuthValue(double)"},"status":0},{"failures":[172],"tindex":"4c7c6d63-8277-11e5-8a57-3b0e3546ebd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:169","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"variableMap":{"baseUrl":"hourStr","name":"hourStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:493","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-1},{"failures":[118,167],"tindex":"4c7c6d64-8277-11e5-8a57-851c32855991","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"variableMap":{"bytePos":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:392","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.addBarrierNode(long)"},"status":-1},{"failures":[],"tindex":"4c7c6d65-8277-11e5-8a57-3953cc4dc83a","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"graph","newGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:112","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension())"},"status":-2},{"failures":[],"tindex":"4c7c6d66-8277-11e5-8a57-1745bbb297e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:614","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"variableMap":{"existingDirectWeight":"tmpAngle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:118","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"turn_angle\", com.graphhopper.util.Helper.round(double, 2));\n"},"status":-2},{"failures":[],"tindex":"4c7c6d67-8277-11e5-8a57-eb789ec9a96f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtReturnImpl","sourcecode":"return 0"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4c7c6d62-8277-11e5-8a57-b369e966cd62","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHRequest.validateAzimuthValue"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":["com.graphhopper.GHRequest_void_validateAzimuthValue(double).b","com.graphhopper.GHRequest_void_validateAzimuthValue(double).e1"]},"type":"branch"}]}]}