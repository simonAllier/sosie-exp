{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":3,"com.graphhopper.util.BitUtilBigTest.testToDouble":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":63,"com.graphhopper.reader.OSMReaderTest.testFerry":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":98,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":59,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":104,"com.graphhopper.reader.OSMReaderTest.testWithBounds":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":4,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":2,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":109,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":42,"com.graphhopper.reader.OSMReaderTest.testFoot":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":65,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":66,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":106,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":28,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.storage.RAMDirectoryTest.testSynched":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":60,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":94,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":100,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":86,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":33,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":113,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":82,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":74,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":77,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":41,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":50,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":1,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":76,"com.graphhopper.GraphHopperTest.testPrepareOnly":20,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.util.BitUtilBigTest.testToLong":48,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":92,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":14,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":52,"com.graphhopper.storage.MMapDirectoryTest.testSynched":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":85,"com.graphhopper.GraphHopperAPITest.testLoad":90,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":75,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":80,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":102,"com.graphhopper.reader.OSMReaderTest.testBarriers":9,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":107},"transformations":[{"failures":[0,1,2,3],"tindex":"8dd18a4a-82a6-11e5-8b1a-6d8d597a78dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"unfavored"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:162","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[4],"tindex":"8dd1b15b-82a6-11e5-8b1a-fb3658a177f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"withElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:80","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"8dd1b15c-82a6-11e5-8b1a-0f0cf8c96d69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"8dd1b15d-82a6-11e5-8b1a-8dbf570c5c12","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"E_NODEB","start":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:155","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-2},{"failures":[],"tindex":"8dd1d86e-82a6-11e5-8b1a-1d7cd812d08e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:129","type":"CtIfImpl","sourcecode":"if (double < double) {\n    java.lang.String = \"N\";\n} else if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"8dd1d86f-82a6-11e5-8b1a-4ba4e5f97d8c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:197","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Long.parseLong(java.lang.String)"},"status":-1},{"failures":[],"tindex":"8dd1d870-82a6-11e5-8b1a-0d4a510641e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"variableMap":{"em":"this","encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:95","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[32,33,34,35,0,22,23,24,25,26,27,29,2,36,37,3,38,39,40,41,42,43],"tindex":"8dd1d871-82a6-11e5-8b1a-adf49a4c711e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"status":-1},{"failures":[44,45],"tindex":"8dd1ff82-82a6-11e5-8b1a-f57014ccbe6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"8dd1ff83-82a6-11e5-8b1a-6fdad5867867","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:291","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"variableMap":{"seg":"bytes","values":"bytes","length":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:117","type":"CtForImpl","sourcecode":"for (int int = (byte[].int) - 1 ; int >= 0 ; int--) {\n    byte byte = byte[][int];\n    for (int int = 0 ; int < 8 ; int++) {\n        if ((byte & byte) == 0)\n            java.lang.StringBuilder.append('0');\n        else\n            java.lang.StringBuilder.append('1');\n        \n        byte <<= 1;\n    }\n}"},"status":-2},{"failures":[5,46],"tindex":"8dd1ff84-82a6-11e5-8b1a-01c6455c3362","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"status":-1},{"failures":[],"tindex":"8dd1ff85-82a6-11e5-8b1a-b58c090824f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:254","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":0},{"failures":[47,48],"tindex":"8dd22696-82a6-11e5-8b1a-2b2b9bffb81b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:81","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 8))"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"8dd22697-82a6-11e5-8b1a-ed31c4463c57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"8dd22698-82a6-11e5-8b1a-436223f25673","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:544","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt(((long) + (int)), int)"},"variableMap":{"edgePointer":"tmp","S_SKIP_EDGE1":"N_ADDITIONAL","baseGraph":"that","edges":"nodes","edge1":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:71","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,7,8,9,32,33,34,35,0,91,22,23,24,25,26,27,29,30,39,40,41,42],"tindex":"8dd22699-82a6-11e5-8b1a-0378bb587664","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:594","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    gnu.trove.set.hash.TIntHashSet.add(-(int + 1));\n} else {\n    long long = ((long)(int)) * 4;\n    for (long long = long + 4 ; long < long ; long += 4) {\n        gnu.trove.set.hash.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n    }\n}"},"status":-1},{"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,18,112,113,114],"tindex":"8dd24daa-82a6-11e5-8b1a-477a9ecae758","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"variableMap":{"from":"nodeB","lonSize":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:751","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-1},{"failures":[],"tindex":"8dd24dab-82a6-11e5-8b1a-5fa8fc7e125e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:132","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim().split(java.lang.String).int"},"status":-2},{"failures":[33],"tindex":"8dd24dac-82a6-11e5-8b1a-17632788feb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:101","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-1},{"failures":[],"tindex":"8dd24dad-82a6-11e5-8b1a-2fceb6dfd6e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)))"},"variableMap":{"indexCopy":"names","index":"names","from":"length","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}