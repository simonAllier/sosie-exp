{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":239,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":246,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.reader.OSMReaderTest.testFerry":270,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":102,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":103,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":315,"com.graphhopper.routing.QueryGraphTest.testOneWay":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":44,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":300,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":125,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":298,"com.graphhopper.reader.OSMReaderTest.testWithBounds":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":173,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":262,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":178,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":305,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":183,"com.graphhopper.GraphHopperTest.testPrepare":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":67,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":73,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":156,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.util.InstructionListTest.testWayList":6,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":36,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":105,"com.graphhopper.GraphHopperAPITest.testDisconnected179":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":169,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":126,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":24,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":184,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":288,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":230,"com.graphhopper.GraphHopperTest.testLoadOSM":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":127,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":159,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":191,"com.graphhopper.reader.OSMReaderTest.testSort":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":264,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":81,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":71,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":250,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":279,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":18,"com.graphhopper.routing.PathTest.testWayList":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":324,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":33,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":60,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":48,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":64,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":23,"com.graphhopper.util.GHUtilityTest.testSort":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":130,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":233,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":187,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":87,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":292,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":220,"com.graphhopper.GraphHopperAPITest.testLoad":29,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":289,"com.graphhopper.util.TranslationMapTest.testToString":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":70,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":313,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":267,"com.graphhopper.reader.OSMReaderTest.testBarriers":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":320,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":108,"com.graphhopper.util.GHUtilityTest.testCopy":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":52,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":222,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":171,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":236,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":50,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":157,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":223,"com.graphhopper.reader.PrinctonReaderTest.testRead":268,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":83,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":144,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":323,"com.graphhopper.util.InstructionListTest.testWayList2":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":306,"com.graphhopper.reader.OSMReaderTest.testFoot":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":179,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":256,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":301,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":131,"com.graphhopper.reader.OSMReaderTest.testOneWay":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":193,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":319,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":195,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":138,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":176,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":274,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":75,"com.graphhopper.routing.PathBidirRefTest.testExtract":88,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":258,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":314,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":284,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":181,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":283,"com.graphhopper.util.GHUtilityTest.testSort2":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":65,"com.graphhopper.reader.OSMReaderTest.testMain":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":210,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":46,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":226,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":302,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":296,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":312,"com.graphhopper.routing.PathBidirRefTest.testExtract2":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":123,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":109,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":228,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":128,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":332,"com.graphhopper.GraphHopperTest.testFootAndCar":96,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":334,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":238,"com.graphhopper.util.GHUtilityTest.testSortDirected":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":199,"com.graphhopper.GraphHopperTest.testPrepareOnly":281,"com.graphhopper.GraphHopperTest.testVia":95,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":237,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":188,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":247,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":9,"com.graphhopper.GraphHopperTest.testFootOnly":293,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":116,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":20,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":198,"com.graphhopper.util.InstructionListTest.testFind":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":212},"transformations":[{"failures":[0,1],"tindex":"81a5d567-82ad-11e5-871f-3dc587de3f32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (boolean) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"81a5fc78-82ad-11e5-871f-056ac7ef9671","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"dijkstraTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:360","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,0,12,13,1,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"81a62389-82ad-11e5-871f-675c898ae1e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:167","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.String>"},"status":-1},{"failures":[29,30,6,9,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,22,90,91,92,93,94,95,96],"tindex":"81a6238a-82ad-11e5-871f-c9c5ebf60bd1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"E_DIST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.distToInt(double))"},"status":-1},{"failures":[29,97,98,30,99,100,101,5,6,8,9,102,103,31,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,32,149,150,151,152,153,154,155,156,157,34,158,159,160,161,162,35,163,164,165,166,167,168,37,169,170,171,172,173,174,175,176,177,39,178,179,180,181,182,40,183,184,185,186,187,188,189,190,191,192,193,194,195,42,196,197,198,199,200,201,202,203,204,44,205,206,207,208,209,45,210,211,212,213,214,215,216,217,47,218,219,220,221,222,223,224,225,226,49,227,228,229,230,231,50,232,233,52,53,54,55,56,57,58,234,59,235,60,236,61,237,238,62,63,64,65,66,67,239,68,69,70,71,72,73,240,74,75,76,77,78,79,80,81,82,83,84,241,85,86,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,87,258,259,260,261,262,263,264,265,266,267,18,19,20,21,23,24,268,269,270,271,90,272,273,274,25,275,91,276,277,92,278,279,280,281,282,283,93,284,94,285,286,95,287,288,96,289,290,291,292,293,294],"tindex":"81a64a9b-82ad-11e5-871f-ad148a011788","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"E_NODEA","entrySize":"E_NODEA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:152","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-1},{"failures":[52,55,56,59,236,61,63,64,66,67,68,69,71,72,95],"tindex":"81a671ac-82ad-11e5-871f-5dbff30a8f6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:410","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\nelse\n    double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n"},"status":-1},{"failures":[295,296,297,298,299,300,301,302],"tindex":"81a671ad-82ad-11e5-871f-8bc6341abcdc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"variableMap":{"track":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[303,30,31,108,109,304,110,305,111,112,113,114,115,306,116,307,117,118,119,120,121,308,122,123,185,309,310,186,187,311,312,188,189,313,314,190,315,191,192,193,194,316,317,195,42,43,196,197,318,199,200,319,201,202,320,203,204,44,205,321,322,206,323,207,208,209,45,324,325,210,46,326,327,211,328,52,53,54,55,56,57,58,234,59,235,60,236,61,237,238,62,63,64,65,66,67,239,68,69,70,71,72,73,240,74,75,76,77,78,79,80,81,82,83,84,241,85,86,281,282,283,93,284,94,285,286,95,287,289,290,291,293],"tindex":"81a671ae-82ad-11e5-871f-95801e97ae79","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:320","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"variableMap":{"dataAccess":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:678","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"81a698bf-82ad-11e5-871f-2b8b452c30de","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:89","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[329,330,331,332,333,334,271,90,272,273,25,275,91,276,277,92,335,336,278,280,286,95,287,288,96,289,290,291,292,294],"tindex":"81a698c0-82ad-11e5-871f-b3682be5a43c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:185","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"81a698c1-82ad-11e5-871f-db6c728ef60e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"81a6bfd2-82ad-11e5-871f-514260f42011","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:202","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"factor":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:136","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = float"},"status":-2},{"failures":[],"tindex":"81a6bfd3-82ad-11e5-871f-296eda2129be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"skippedEdge2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[337,338,116,130,64,67,246,251,256,95,96],"tindex":"81a6bfd4-82ad-11e5-871f-cdb51c5b375d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"b_lat_deg","shrinkFactor":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:175","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-1},{"failures":[],"tindex":"81a6bfd5-82ad-11e5-871f-dd5b7e7487dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\")"},"status":0},{"failures":[],"tindex":"81a6bfd6-82ad-11e5-871f-9b5d7997abc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:530","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.util.CmdArgs.getBool(\"graph.doSort\", boolean)"},"variableMap":{"args":"args","sortGraph":"doPrepare"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:567","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.util.CmdArgs.getBool(\"prepare.doPrepare\", boolean)"},"status":0},{"failures":[270],"tindex":"81a6e6e7-82ad-11e5-871f-23fb1b32d59c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"longTripsSpeed","x":"longTripsSpeed","absY":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:541","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[339,331,333],"tindex":"81a6e6e8-82ad-11e5-871f-3bd86beac1d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:189","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMElement.getTag(java.lang.String)"},"status":-1},{"failures":[74,84],"tindex":"81a6e6e9-82ad-11e5-871f-5dd9a00d8a9b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"E_ADDITIONAL":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:556","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"81a6e6ea-82ad-11e5-871f-1ddfffc150c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"81a6bfd6-82ad-11e5-871f-9b5d7997abc8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getBool"]},"type":"staticDiff"}]},{"transformation":"81a5fc78-82ad-11e5-871f-056ac7ef9671","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}