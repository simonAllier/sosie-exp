{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":159,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":121,"com.graphhopper.GraphHopperAPITest.testNoLoad":174,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.reader.OSMReaderTest.testFerry":176,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":438,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":439,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":376,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":66,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":352,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":205,"com.graphhopper.util.BitUtilBigTest.testReverse":26,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":402,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":52,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":62,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":430,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":249,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":426,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":108,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":265,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":85,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":328,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":77,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":55,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":266,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":379,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":120,"com.graphhopper.reader.OSMReaderTest.testSort":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":132,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":397,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":224,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":365,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":93,"com.graphhopper.routing.DijkstraTest.initializationError":72,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":175,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":411,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":285,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":247,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":418,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":123,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":106,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":377,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":380,"com.graphhopper.GraphHopperAPITest.testLoad":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":155,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":206,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":196,"com.graphhopper.reader.OSMReaderTest.testBarriers":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":336,"com.graphhopper.util.GHUtilityTest.testCopy":421,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":281,"com.graphhopper.routing.PathTest.testFindInstruction":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":278,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":225,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":322,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":308,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":119,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":46,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":405,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":406,"com.graphhopper.util.InstructionListTest.testWayList2":435,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":271,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":382,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":327,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":250,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":51,"com.graphhopper.routing.AStarTest.initializationError":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":407,"com.graphhopper.routing.PathBidirRefTest.testExtract":70,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":165,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":374,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":330,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":244,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":358,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":276,"com.graphhopper.util.GHUtilityTest.testSort2":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":63,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":409,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":362,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":317,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":381,"com.graphhopper.storage.GraphHopperStorageTest.testClone":198,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":146,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":338,"com.graphhopper.routing.PathTest.testTime":79,"com.graphhopper.util.InstructionListTest.testCreateGPX":434,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":154,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":254,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":351,"com.graphhopper.util.GHUtilityTest.testSortDirected":424,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":393,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":432,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":90,"com.graphhopper.GraphHopperTest.testFootOnly":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":251,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":347,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":268,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":87,"com.graphhopper.routing.QueryGraphTest.testOneWay":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":401,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":264,"com.graphhopper.reader.OSMReaderTest.testWithBounds":8,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":353,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":144,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":309,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":194,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":59,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":227,"com.graphhopper.util.InstructionListTest.testWayList":431,"com.graphhopper.GraphHopperAPITest.testDisconnected179":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":339,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":334,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":378,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":367,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":320,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":104,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":218,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":111,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":20,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":116,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":193,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":186,"com.graphhopper.routing.PathTest.testWayList":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":366,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":369,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":371,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":300,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":84,"com.graphhopper.util.GHUtilityTest.testSort":422,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":415,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":67,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":412,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":256,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":288,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":124,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":310,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":69,"com.graphhopper.routing.PathTest.testFound":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":357,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":56,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":306,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":342,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":203,"com.graphhopper.util.InstructionListTest.testEmptyList":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":136,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":410,"com.graphhopper.reader.PrinctonReaderTest.testRead":184,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":331,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":311,"com.graphhopper.reader.OSMReaderTest.testFoot":3,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":23,"com.graphhopper.reader.OSMReaderTest.testOneWay":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":416,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":386,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":45,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":216,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":349,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":259,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":437,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":158,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":345,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":117,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":413,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":183,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":190,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":433,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":372,"com.graphhopper.routing.PathBidirRefTest.testExtract2":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":272,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":248,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":399,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":233,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":49,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":114,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":267,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":417,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":150,"com.graphhopper.GraphHopperTest.testFootAndCar":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":375,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":103,"com.graphhopper.util.BitUtilLittleTest.testReverse":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":403,"com.graphhopper.GraphHopperTest.testPrepareOnly":168,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":282,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":109,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":180,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":373,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":219,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":161,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":241,"com.graphhopper.routing.AStarBidirectionTest.initializationError":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":348,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":392,"com.graphhopper.util.InstructionListTest.testFind":427,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":284},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"3cc1e773-8285-11e5-8e7f-dda784e62607","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:639","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-1},{"failures":[],"tindex":"3cc20e84-8285-11e5-8e7f-9926cda8ee80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\")"},"status":0},{"failures":[0,10,11,1,12,13,14,15,16],"tindex":"3cc20e85-8285-11e5-8e7f-3d23cce1d361","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"wayPointMaxDistance","logMessagesPercentage":"wayPointMaxDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean).setSimplifyResponse(((boolean) && (double > 0))).doWork(com.graphhopper.GHResponse, java.util.List<com.graphhopper.routing.Path>, com.graphhopper.util.TranslationMap.getWithFallBack(java.util.Locale))"},"status":-1},{"failures":[],"tindex":"3cc20e86-8285-11e5-8e7f-09e8e61dde54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"status":0},{"failures":[17,18,19,20,21,22,23,24,25,26],"tindex":"3cc20e87-8285-11e5-8e7f-69f758a9f3f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"maxBits","hash":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:256","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"3cc20e88-8285-11e5-8e7f-89e2a3a5829c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"defaultUTurnCost","x":"defaultUTurnCost","absY":"costInSeconds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:60","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"3cc20e89-8285-11e5-8e7f-81ab7db2dace","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"lonSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:107","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n} "},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,10,11,1,12,13,14],"tindex":"3cc2359a-8285-11e5-8e7f-6168e01448b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"edgeId","hash":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:586","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[42,43,44,45,46,47,48],"tindex":"3cc2359b-8285-11e5-8e7f-798f6becb622","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"tmpDegreeCounter","backwardBit":"tmpDegreeCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"status":-1},{"failures":[49],"tindex":"3cc2359c-8285-11e5-8e7f-5df7c121c3da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"3cc2359d-8285-11e5-8e7f-33f60ca3ede3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:396","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-2},{"failures":[],"tindex":"3cc2359e-8285-11e5-8e7f-cbdcd920ea02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"wayBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:564","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[],"tindex":"3cc2359f-8285-11e5-8e7f-1912093f2793","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:311","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"variableMap":{"initialized":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:159","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    boolean = true;\n    boolean = true;\n} "},"status":-1},{"failures":[50,4,51,6],"tindex":"3cc25cb0-8285-11e5-8e7f-e9097cb98765","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"variableMap":{"basePoints":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:760","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.PointList.getSize()) - 2) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-1},{"failures":[],"tindex":"3cc25cb1-8285-11e5-8e7f-bfd185b865a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(long)"},"status":-2},{"failures":[],"tindex":"3cc25cb2-8285-11e5-8e7f-5dac2d5e88ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:224","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHBitSet.getCardinality()"},"status":-2},{"failures":[52,53,42,44,54,45,46,47,48,55,56,57,58,59,60,61,62,33,34,63,35,64,36,65,66,67,68,69],"tindex":"3cc43173-8285-11e5-8e7f-45760e0da10e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"S_SKIP_EDGE2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:660","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[],"tindex":"3cc45884-8285-11e5-8e7f-d1d5ca6bedf3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:241","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"variableMap":{"minLon":"queryLon","maxLon":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:739","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1) {\n    if (!(gnu.trove.set.hash.TIntHashSet.isEmpty())) {\n        double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n        double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, gnu.trove.set.hash.TIntHashSet);\n        if (double < double)\n            return true;\n        \n    } \n} "},"status":0},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,27,27,87,87,88,88,28,28,29,29,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,30,30,97,97,98,98,52,53,99,42,100,43,101,102,103,44,54,45,46,47,104,48,55,56,57,58,59,60,105,106,107,31,108,61,32,62,109,110,111,33,34,63,112,35,113,114,115,64,116,36,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,37,38,39,40,41,169,170,0,10,11,1,12,13,171,172,14,2,173,15,16,174,175,176,3,4,177,5,51,6,178,7,179,180,181,8,182,183,9,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,17,235,236,237,238,239,240,18,241,19,20,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,21,263,264,265,266,267,268,22,269,23,24,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,65,369,370,66,67,371,372,373,68,69,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"tindex":"3cc45885-8285-11e5-8e7f-817d0bd05079","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"secondary\") , int)"},"status":-1},{"failures":[32,33,34,35,167,168,37,38,39,40,41,169,170,0,10,11,1,12,13,172,14,50,2,15,16,176,3,4,177,5,51,6,178,7,180,181,8,182,9,187,219,232,233,17,235,236,237,238,239,240,18,241,19,20,242,243,244,245,246,247,248,21,263,264,265,266,267,268,22,269,23,24,270,271,272,273,274,275,276,284,318,356,375,406],"tindex":"3cc47f96-8285-11e5-8e7f-715b78553b96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"minLon","resultOrientation":"minLon","baseOrientation":"lon","java.lang.Math.PI":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:106","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3cc20e84-8285-11e5-8e7f-9926cda8ee80","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString","java.lang.StringBuilder.append","java.lang.Object.toString"]},"type":"staticDiff"}]},{"transformation":"3cc20e86-8285-11e5-8e7f-09e8e61dde54","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}