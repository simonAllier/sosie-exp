{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":33,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":78,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":36,"com.graphhopper.routing.PathTest.testFindInstruction":70,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":18,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":3,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":11,"com.graphhopper.routing.QueryGraphTest.testOneWay":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":43,"com.graphhopper.routing.PathBidirRefTest.testExtract2":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":63,"com.graphhopper.routing.PathTest.testWayList":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":51,"com.graphhopper.reader.PrinctonReaderTest.testRead":0,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":76,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":85,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":45,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":12,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":13,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":25,"com.graphhopper.routing.PathTest.testTime":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":24,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":32,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":84,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":31,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":41,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":48,"com.graphhopper.routing.PathBidirRefTest.testExtract":61,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":81,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":23,"com.graphhopper.routing.PathTest.testFound":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":46},"transformations":[{"failures":[0,1],"tindex":"c96b2fdd-791f-11e5-a79d-43eacf38e2cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:74","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = java.lang.Integer.parseInt(java.lang.String[][int]);\n} else if (int == 1) {\n    int = java.lang.Integer.parseInt(java.lang.String[][int]);\n} else {\n    double = java.lang.Double.parseDouble(java.lang.String[][int]);\n}"},"status":-1},{"failures":[2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"c96b56ee-791f-11e5-a79d-2dfc8428713c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"c96b56ef-791f-11e5-a79d-0d92478fb71b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:129","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[85,86],"tindex":"c96b56f0-791f-11e5-a79d-cf0e5795dd65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"c96b56f1-791f-11e5-a79d-ab55279c6873","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:330","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)\n    break;\n"},"variableMap":{"sortedNodes":"sortedNodes","nodesToAvoidContract":"lastNodesLazyUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:311","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        continue;\n    } \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":-2},{"failures":[],"tindex":"c96b56f2-791f-11e5-a79d-5ffdd9ae4979","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"x","edge2":"x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:71","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double += double;\n    int += int;\n} else {\n    double += double;\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"c96b7d03-791f-11e5-a79d-c1e838a36551","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"bm","len":"bm","start":"bm"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:229","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"c96b7d04-791f-11e5-a79d-69710bf3d50f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"limit","segmentSizePower":"avoidSpeedLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"c96b7d05-791f-11e5-a79d-1fb521a3bc69","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\")"},"status":-2},{"failures":[],"tindex":"c96b7d06-791f-11e5-a79d-37272eff6142","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:872","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2},{"failures":[],"tindex":"c96b7d07-791f-11e5-a79d-e907aa0d5096","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:147","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , int)"},"status":-2},{"failures":[],"tindex":"c96b7d08-791f-11e5-a79d-73e36581977c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"toNode","size":"toNode","lonSize":"toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-2},{"failures":[],"tindex":"c96b7d09-791f-11e5-a79d-8d5442d665dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:423","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[],"tindex":"c96b7d0a-791f-11e5-a79d-8738f553b29d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:677","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long)"},"status":-2},{"failures":[],"tindex":"c96ba41b-791f-11e5-a79d-1b597d2dd572","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:291","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (com.graphhopper.storage.NodeAccess.is3D())\n        com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\n    else\n        com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n    \n}"},"status":-2},{"failures":[],"tindex":"c96ba41c-791f-11e5-a79d-2d32fce67db5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"variableMap":{"arr":"parents","length":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:109","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"c96ba41d-791f-11e5-a79d-57fa89b864bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()"},"status":-2},{"failures":[],"tindex":"c96ba41e-791f-11e5-a79d-6315c2eb7433","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c96ba41f-791f-11e5-a79d-d57d7c248899","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:806","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-2},{"failures":[],"tindex":"c96ba420-791f-11e5-a79d-5d03f040c684","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:163","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}