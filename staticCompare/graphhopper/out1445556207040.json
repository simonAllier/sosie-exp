{"failureDictionary":{"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":0,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":6,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":7,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":1,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":3,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":4},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"e5c01b5f-7913-11e5-b04d-21aa8625ed2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"value","low":"value","guess":"lastBit","guessedKey":"value","key":"lastBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"e5c04270-7913-11e5-b04d-e789733a43aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":0},{"failures":[],"tindex":"e5c04271-7913-11e5-b04d-01cbc66f1685","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"turnRestrictionBit","blockByDefault":"restricted"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:659","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"e5c06982-7913-11e5-b04d-07586f89207a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"e5c06983-7913-11e5-b04d-5f4bd81cb54b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:459","type":"CtLocalVariableImpl","sourcecode":"long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-2},{"failures":[],"tindex":"e5c06984-7913-11e5-b04d-7bfd65cb0366","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"variableMap":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"e5c06985-7913-11e5-b04d-fb35ae237554","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"variableMap":{"p":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[],"tindex":"e5c06986-7913-11e5-b04d-41ab5b1e02f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"lon","angle":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"e5c06987-7913-11e5-b04d-798175ae4dc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:694","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true)"},"status":-2},{"failures":[],"tindex":"e5c09098-7913-11e5-b04d-e1f9a34096ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"status":-2},{"failures":[],"tindex":"e5c09099-7913-11e5-b04d-1d401e14d04a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"ab_y","dy":"ar_x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"e5c0909a-7913-11e5-b04d-77cbdcf112dd","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"variableMap":{"workerThreads":"depth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (int < (int[][int])) {\n        throw new java.lang.IllegalStateException((\"entries should decrease or stay but was:\" + (java.util.Arrays.toString(int[]))));\n    } \n    int = int[][int];\n    byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int]);\n    long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int]);\n}"},"status":-2},{"failures":[],"tindex":"e5c0909b-7913-11e5-b04d-2f0ac064fb60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:719","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"variableMap":{"graphHopperFolder":"tmpOsmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:511","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"e5c0909c-7913-11e5-b04d-3503165603cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtForEachImpl","sourcecode":"for (TIntArrayList TIntArrayList : java.util.List<com.graphhopper.routing.util.TIntArrayList>) {\n    if (int < 0) {\n        int = com.graphhopper.routing.util.TIntArrayList.size();\n        com.graphhopper.routing.util.TIntList = com.graphhopper.routing.util.TIntArrayList;\n        continue;\n    } \n    int int;\n    if (int < (com.graphhopper.routing.util.TIntArrayList.size())) {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.routing.util.TIntList, int);\n        int = com.graphhopper.routing.util.TIntArrayList.size();\n        com.graphhopper.routing.util.TIntList = com.graphhopper.routing.util.TIntArrayList;\n    } else {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.routing.util.TIntArrayList, int);\n    }\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"e5c0909d-7913-11e5-b04d-073cf248414d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"isOneway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:269","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n    if (boolean)\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-2},{"failures":[],"tindex":"e5c0b7ae-7913-11e5-b04d-e5e5e4ef43e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtForEachImpl","sourcecode":"for (TIntArrayList TIntArrayList : java.util.List<com.graphhopper.routing.util.TIntArrayList>) {\n    if (int < 0) {\n        int = com.graphhopper.routing.util.TIntArrayList.size();\n        com.graphhopper.routing.util.TIntList = com.graphhopper.routing.util.TIntArrayList;\n        continue;\n    } \n    int int;\n    if (int < (com.graphhopper.routing.util.TIntArrayList.size())) {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.routing.util.TIntList, int);\n        int = com.graphhopper.routing.util.TIntArrayList.size();\n        com.graphhopper.routing.util.TIntList = com.graphhopper.routing.util.TIntArrayList;\n    } else {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.routing.util.TIntArrayList, int);\n    }\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"e5c0b7af-7913-11e5-b04d-7f82d8c4325f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false)"},"status":-2},{"failures":[],"tindex":"e5c0b7b0-7913-11e5-b04d-7f537a57ef5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"nextEdge","maxEdgesCount":"nextEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:190","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"e5c0b7b1-7913-11e5-b04d-4103c9c149ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"e5c0b7b2-7913-11e5-b04d-1323a2788669","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"variableMap":{"i":"trial","allBits":"trial","hash":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:177","type":"CtTryImpl","sourcecode":"try {\n    java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n    break;\n} catch (java.io.IOException tmpex) {\n    java.io.IOException = java.io.IOException;\n    int++;\n    com.graphhopper.util.Helper.cleanHack();\n    try {\n        java.lang.Thread.sleep(5);\n    } catch (java.lang.InterruptedException iex) {\n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}