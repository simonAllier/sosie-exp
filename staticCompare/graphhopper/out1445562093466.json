{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"9a554885-7921-11e5-bdbf-e55ff3db6311","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:672","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (com.graphhopper.reader.TLongList.size()) ; int++) {\n        long long = com.graphhopper.reader.TLongList.get(int);\n        int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int)) {\n            if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n                int = int;\n                int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n                int = (-int) - 3;\n                if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                    com.graphhopper.util.PointList.clear();\n                    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n                } \n                int = int;\n                int = -1;\n            } \n            continue;\n        } \n        if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n            throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n        \n        if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n            boolean boolean = (int == 0) || (int == int);\n            if (!boolean) {\n                int = int;\n            } \n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n        } \n        if (int < (com.graphhopper.reader.OSMReader.int)) {\n            int = (-int) - 3;\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            if (int >= 0) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n        } \n    }\n} catch (java.lang.RuntimeException ex) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.reader.Logger.error((\"Couldn\\'t properly add edge with osm ids:\" + com.graphhopper.reader.TLongList), java.lang.RuntimeException);\n    if (boolean)\n        throw java.lang.RuntimeException;\n    \n}"},"status":-2},{"failures":[],"tindex":"9a556f96-7921-11e5-bdbf-afc0fae75112","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9a556f97-7921-11e5-bdbf-ffd7c689044b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"variableMap":{"str":"minStr","d":"minStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"9a556f98-7921-11e5-bdbf-890b40d0dc1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:275","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"9a556f99-7921-11e5-bdbf-b96afafc34c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:439","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-2},{"failures":[],"tindex":"9a556f9a-7921-11e5-bdbf-4140ebdb133c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-2},{"failures":[],"tindex":"9a5596ab-7921-11e5-bdbf-7f27f1127ce1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"value","from":"value","end":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:594","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    com.graphhopper.storage.index.TIntHashSet.add(-(int + 1));\n} else {\n    long long = ((long)(int)) * 4;\n    for (long long = long + 4 ; long < long ; long += 4) {\n        com.graphhopper.storage.index.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n    }\n}"},"status":-2},{"failures":[],"tindex":"9a5596ac-7921-11e5-bdbf-5bb61165835b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"expectedCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:155","type":"CtIfImpl","sourcecode":"if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n    java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n} else {\n    java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n    java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n    try {\n        java.lang.String.format(java.lang.String, java.lang.Object[]);\n    } catch (java.lang.Exception ex) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    }\n}"},"status":-2},{"failures":[],"tindex":"9a5596ad-7921-11e5-bdbf-c9b1a7ae2ea6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:87","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.Arrays.asList(\"OsmSchema-V0.6\", \"DenseNodes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:161","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"status":-2},{"failures":[],"tindex":"9a5596ae-7921-11e5-bdbf-ef69bb428537","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"9a5596af-7921-11e5-bdbf-1502cf8f368b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-2},{"failures":[],"tindex":"9a55bdc0-7921-11e5-bdbf-516cb6896980","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"9a55bdc1-7921-11e5-bdbf-7b95fbdbdf0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"status":-2},{"failures":[],"tindex":"9a55bdc2-7921-11e5-bdbf-e1ae90181da9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:269","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"9a55bdc3-7921-11e5-bdbf-8119a13f5c42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"minOneWayNetworkSize","edgeId":"unvisitedDeadEnds","com.graphhopper.storage.EdgeAccess.NO_NODE":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n"},"status":-2},{"failures":[],"tindex":"9a55bdc4-7921-11e5-bdbf-877b6c738d75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"maxLat","x1":"minLat","x2":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:166","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.max(com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"9a55bdc5-7921-11e5-bdbf-7f944bcd7d0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:451","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.set(int, null)"},"variableMap":{"segNumber":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"status":-2},{"failures":[],"tindex":"9a55bdc6-7921-11e5-bdbf-07a2c3dbfc2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:158","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"9a55e4d7-7921-11e5-bdbf-ef6a41992a21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:128","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"9a55e4d8-7921-11e5-bdbf-71c7f846997e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}