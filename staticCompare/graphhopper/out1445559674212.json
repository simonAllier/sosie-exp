{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":29,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":30,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":15,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":32,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":27,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":2,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":25},"transformations":[{"failures":[0,1,2,3],"tindex":"f8597c46-791b-11e5-8c71-83b6dfe7eccb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getElevation(int)"},"status":-1},{"failures":[],"tindex":"f859a357-791b-11e5-8c71-156afecc35d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:292","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"f859a358-791b-11e5-8c71-b57913378c41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:160","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    return false;\n"},"variableMap":{"lockFile":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"f859a359-791b-11e5-8c71-8940b9bc1628","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f859a35a-791b-11e5-8c71-794312f52b05","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"minNetworkSize","degree":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:181","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.routing.util.TIntList, int)"},"status":-2},{"failures":[],"tindex":"f859ca6b-791b-11e5-8c71-1fde4855999d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":-2},{"failures":[],"tindex":"f859ca6c-791b-11e5-8c71-af12883df739","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"variableMap":{"this":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:47","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":-2},{"failures":[],"tindex":"f859ca6d-791b-11e5-8c71-f912ffd6a919","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"size","bLen":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:272","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0)\n        java.lang.StringBuilder.append(\", \");\n    \n    java.lang.StringBuilder.append('(');\n    java.lang.StringBuilder.append(double[][int]);\n    java.lang.StringBuilder.append(',');\n    java.lang.StringBuilder.append(double[][int]);\n    if (boolean) {\n        java.lang.StringBuilder.append(',');\n        java.lang.StringBuilder.append(double[][int]);\n    } \n    java.lang.StringBuilder.append(')');\n}"},"status":-2},{"failures":[],"tindex":"f859ca6e-791b-11e5-8c71-ab443c0e632c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinOneWayNetworkSize(int)"},"variableMap":{"minOneWayNetworkSize":"minNetworkSize","preparation":"preparation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinNetworkSize(int)"},"status":-2},{"failures":[],"tindex":"f859f17f-791b-11e5-8c71-2fa63abcafa5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:527","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:367","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"f859f180-791b-11e5-8c71-c941982acd9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"dijkstraSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[],"tindex":"f859f181-791b-11e5-8c71-5f095055d971","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"f859f182-791b-11e5-8c71-4379dd9799f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:95","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return int;\n"},"variableMap":{"retIndex":"key","noEntryValue":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"f85a1893-791b-11e5-8c71-1355241811de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int)"},"variableMap":{"tmpOffset":"tmpOffset","bitUtil":"bitUtil","bytes":"bytes","pillarNodes":"pillarNodes","i":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:843","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n    int += 4;\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n    int += 4;\n    if (boolean) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n        int += 4;\n    } \n}"},"status":-2},{"failures":[],"tindex":"f85a1894-791b-11e5-8c71-172b1b10120b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:897","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.FlagEncoder.toString()"},"status":-2},{"failures":[],"tindex":"f85a1895-791b-11e5-8c71-dddcdace2d4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:189","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"f85a1896-791b-11e5-8c71-efd2530bcc3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"noNumberValue","length":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:88","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.int) == (int)) {\n    (long)++;\n    if (((long) % 1000000) == 0)\n        com.graphhopper.coll.GHLongIntBTree.optimize();\n    \n} "},"status":-2},{"failures":[],"tindex":"f85a3fa7-791b-11e5-8c71-bdecc2f118f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:149","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.poll()"},"status":-2},{"failures":[],"tindex":"f85a3fa8-791b-11e5-8c71-8b95ec98d9c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","destination":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"f85a3fa9-791b-11e5-8c71-3b9b7f86b1d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:157","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}