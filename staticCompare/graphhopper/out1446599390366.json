{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":137,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":67,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":3,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":81,"com.graphhopper.routing.PathTest.testFindInstruction":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":143,"com.graphhopper.routing.QueryGraphTest.testOneWay":73,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":152,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":31,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":132,"com.graphhopper.reader.PrinctonReaderTest.testRead":105,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":19,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":65,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":0,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":113,"com.graphhopper.GraphHopperTest.testPrepare":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.util.InstructionListTest.testWayList2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":14,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":138,"com.graphhopper.util.InstructionListTest.testWayList":44,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":125,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":108,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":78,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":11,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":106,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":5,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":15,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":55,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":1,"com.graphhopper.routing.PathBidirRefTest.testExtract":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":20,"com.graphhopper.GraphHopperTest.testLoadOSM":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":79,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":49,"com.graphhopper.reader.OSMReaderTest.testSort":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":130,"com.graphhopper.reader.OSMReaderTest.testMain":62,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":17,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":40,"com.graphhopper.routing.PathBidirRefTest.testExtract2":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":4,"com.graphhopper.routing.PathTest.testWayList":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":129,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":102,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.GraphHopperTest.testFootAndCar":56,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":136,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":115,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":70,"com.graphhopper.GraphHopperTest.testPrepareOnly":151,"com.graphhopper.GraphHopperTest.testVia":53,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":59,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":99,"com.graphhopper.GraphHopperAPITest.testLoad":61,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":91,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":39,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":46,"com.graphhopper.GraphHopperTest.testFootOnly":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":97,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":6,"com.graphhopper.util.InstructionListTest.testFind":42,"com.graphhopper.reader.OSMReaderTest.testBarriers":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":26,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":29,"com.graphhopper.util.GHUtilityTest.testCopy":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":141},"transformations":[{"failures":[],"tindex":"bf79097d-8290-11e5-9182-978e41be3d0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:952","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    java.lang.String = com.graphhopper.GraphHopper.getDefaultVehicle().toString();\n"},"status":-2},{"failures":[0,1,2,3],"tindex":"bf79579e-8290-11e5-9182-ddd42c52f7d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeInBytes","edgeId":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:329","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"status":-1},{"failures":[],"tindex":"bf79579f-8290-11e5-9182-115a2dc42dff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:159","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"variableMap":{"counts":"edgeKey1","counter":"edgeKey2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"status":-2},{"failures":[],"tindex":"bf797eb0-8290-11e5-9182-277f62b3e820","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"variableMap":{"str":"dataAccess","this":"com.graphhopper.storage.DAType.RAM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:173","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"RAM_STORE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"bf797eb1-8290-11e5-9182-818f79061211","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:101","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"bf797eb2-8290-11e5-9182-310f5c3ba3ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:925","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.search.NameIndex.put(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"bf79a5c3-8290-11e5-9182-7b3170a95d24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:291","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[],"tindex":"bf79a5c4-8290-11e5-9182-d1407327c2ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:147","type":"CtAssignmentImpl","sourcecode":"int = int - (java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"bf79a5c5-8290-11e5-9182-59aad4ddd88e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"com.graphhopper.routing.util.EncodingManager.BIKE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[48],"tindex":"bf79a5c6-8290-11e5-9182-67b18ebf299c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:107","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"bf79ccd7-8290-11e5-9182-198c43e80f68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:121","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"bf79ccd8-8290-11e5-9182-21af8c7cfa13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.initFromGraph()"},"variableMap":{"this":"tmpPrepareCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int)"},"status":-2},{"failures":[],"tindex":"bf79ccd9-8290-11e5-9182-8b01a5bf1951","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":0},{"failures":[58],"tindex":"bf79ccda-8290-11e5-9182-c5a110862f1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1161","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.LocationIndex) != null)\n    com.graphhopper.storage.index.LocationIndex.close();\n"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,29,31,33,34,37,41,47,48,49,50,51,53,54,55,56,57,58,59,60,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"bf79f3eb-8290-11e5-9182-4daabae95803","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.GHPoint"},"status":-1},{"failures":[105,106,4,5,6,7,10,11,72,107,108,109,110,111,15,112,16,18,113,20,22,114,115,34,41,116,42,43,44,45,117,61,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"bf79f3ec-8290-11e5-9182-69e2178ebd81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:297","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[],"tindex":"bf7a1afd-8290-11e5-9182-25f8967425a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:195","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.getMap()"},"status":0},{"failures":[149],"tindex":"bf7a1afe-8290-11e5-9182-3b21c383db4e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:704","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"lastInBoundsPillarNode":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:440","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[150,151,152,53,57,58,153,154,59,155,156],"tindex":"bf7a1aff-8290-11e5-9182-7ba71e7f6f01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:765","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false)"},"status":-1},{"failures":[],"tindex":"bf7a1b00-8290-11e5-9182-61ce19eaf3ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"variableMap":{"cg":"cg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:312","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.close()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bf7a1b00-8290-11e5-9182-61ce19eaf3ce","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":["com.graphhopper.storage.CHGraphImpl_void_close().b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":["com.graphhopper.storage.CHGraphImpl_void_flush().b","com.graphhopper.storage.CHGraphImpl_void_close().b"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.storage.CHGraphImpl_void_close().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.close"]},"type":"staticDiff"}]},{"transformation":"bf7a1afd-8290-11e5-9182-25f8967425a6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getMap"]},"type":"staticDiff"}]},{"transformation":"bf79a5c3-8290-11e5-9182-7b3170a95d24","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}