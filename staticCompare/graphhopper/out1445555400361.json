{"failureDictionary":{"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":7,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":0,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":19,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":11,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":32,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":9,"com.graphhopper.coll.CompressedArrayTest.testCompress2":5,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":34,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":36,"com.graphhopper.coll.CompressedArrayTest.testCompress":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":33,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":13,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":22,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":16},"transformations":[{"failures":[0,1,2,3,4],"tindex":"04ee5acc-7912-11e5-bb46-8d96e89194e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"elev","eleDelta":"elev","incDist2DSum":"minEle","decEleSum":"elev","fullDist2D":"minEle","decDist2DSum":"elev"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:120","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-1},{"failures":[5,6],"tindex":"04ee5acd-7912-11e5-bb46-af6cafe2b359","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"status":-1},{"failures":[7,8,9],"tindex":"04ee5ace-7912-11e5-bb46-395479e413df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"tmp","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(long)"},"status":-1},{"failures":[10,11,12,13,14,15],"tindex":"04ee5acf-7912-11e5-bb46-61a6f009f955","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"size","edgeId":"size","nodeA":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:51","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"04ee81e0-7912-11e5-bb46-ef2551dac736","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"04ee81e1-7912-11e5-bb46-554a4a2082c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"mSize","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"04ee81e2-7912-11e5-bb46-cf1e8fa80d0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"bytes","newSize":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"04ee81e3-7912-11e5-bb46-8bbcea469733","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"04ee81e4-7912-11e5-bb46-47554ed92dfa","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:78","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-2},{"failures":[],"tindex":"04ee81e5-7912-11e5-bb46-15569f6997ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"04eea8f6-7912-11e5-bb46-f55c2c135480","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"i","mask":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:163","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 56"},"status":-2},{"failures":[],"tindex":"04eea8f7-7912-11e5-bb46-7b8400925754","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:141","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n"},"variableMap":{"res":"res","toLat":"foundDist","queryLat":"queryLon","toLon":"toLat","queryLon":"queryLat","fromDist":"toLon","calc":"calc","toNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":-2},{"failures":[],"tindex":"04eea8f8-7912-11e5-bb46-4f48865734f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:47","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"04eea8f9-7912-11e5-bb46-471e70f4e417","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"variableMap":{"list":"pl","points":"fullPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:65","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D())"},"status":-2},{"failures":[],"tindex":"04eea8fa-7912-11e5-bb46-6fc537ac5b6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"r_lat","delta_lon":"a_lat","a_lon":"a_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:229","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"04eea8fb-7912-11e5-bb46-41d1ce7bcea3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:104","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"04eea8fc-7912-11e5-bb46-b5575564fd96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:613","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:677","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.get(int)"},"status":-2},{"failures":[],"tindex":"04eed00d-7912-11e5-bb46-29ce44b9851a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"04eed00e-7912-11e5-bb46-dde7aae30eee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"variableMap":{"prevLon":"maxLon","prevEle":"dMinLon","prevLat":"lat","distCalc3D":"distCalc","lon":"dMinLon","lat":"dMinLon","ele":"dMinLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:677","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double)"},"status":-2},{"failures":[],"tindex":"04eed00f-7912-11e5-bb46-61848348ab95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:489","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.NumberFormatException e) {\n    return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}