{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":165,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":132,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":171,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":170,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":133,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":182,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":30,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":47,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":198,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":158,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":153,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":40,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":103,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":185,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":95,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":53,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":112,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":52,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":128,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":142,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":67,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":125,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":69,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":149,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":44,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":146,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":143,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":192,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":111,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":175,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":81,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":193,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":60,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":45,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":83,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":110,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":187,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":173,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":65,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":126,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":118,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":164,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":80,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":167,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":138,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":163,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":191,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":197,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":130,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":92,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":113,"com.graphhopper.storage.GraphHopperStorageTest.testClone":34,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":66,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":43,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":134,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":124,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":152,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":54,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":115},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"f84054ec-7923-11e5-85ee-41473ffe0bb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:306","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"Traversal CHGraph is only possible if BaseGraph is frozen\""},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:362","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":-1},{"failures":[],"tindex":"f8407bfd-7923-11e5-85ee-d7263cdc4217","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"status":-2},{"failures":[],"tindex":"f8407bfe-7923-11e5-85ee-4fad261f50bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.BaseGraph.isFrozen()))\n    com.graphhopper.storage.BaseGraph.freeze();\n"},"status":-2},{"failures":[187,188,189],"tindex":"f840a30f-7923-11e5-85ee-af6ff975156a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:565","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\");\n    if (java.lang.String != null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n    \n}"},"status":-1},{"failures":[190,191,192,193,194,195,196,197],"tindex":"f840a310-7923-11e5-85ee-51ed5e85263c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:81","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDFullWithEdgesIndex.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-1},{"failures":[],"tindex":"f840a311-7923-11e5-85ee-57ff6dedb2de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:181","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.util.Instruction.getFirstLon() : com.graphhopper.util.PointList.getLongitude((int + 1))"},"status":-2},{"failures":[198],"tindex":"f840a312-7923-11e5-85ee-f952d7043ad3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)))"},"status":-1},{"failures":[],"tindex":"f840ca23-7923-11e5-85ee-4d759434f1e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"i","end":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:637","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    com.graphhopper.routing.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, false, int, int);\n} "},"status":-2},{"failures":[],"tindex":"f840ca24-7923-11e5-85ee-ff9a563928f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"variableMap":{"workerThreads":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:114","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.storage.DataAccess.getInt(((long + (int)) + 4));\n    long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int);\n} "},"status":-2},{"failures":[],"tindex":"f840ca25-7923-11e5-85ee-41f9496ba8f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:90","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:84","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.fromLong(long)"},"status":-2},{"failures":[],"tindex":"f840ca26-7923-11e5-85ee-35e2e852ba00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:707","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false))"},"status":-2},{"failures":[],"tindex":"f840ca27-7923-11e5-85ee-0bc91b1cbf76","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:262","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-2},{"failures":[],"tindex":"f840f138-7923-11e5-85ee-615542642fac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"variableMap":{"adj":"com.graphhopper.reader.OSMElement.RELATION","maxNodes":"com.graphhopper.reader.OSMElement.RELATION","base":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:77","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>) {\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) == (com.graphhopper.reader.OSMElement.int)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"f840f139-7923-11e5-85ee-9bb87d34f886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:516","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long)"},"status":-2},{"failures":[],"tindex":"f840f13a-7923-11e5-85ee-5b00b111f0c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"f840f13b-7923-11e5-85ee-e59cc3ef9394","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"oldRelationFlags","start":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:185","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f841184c-7923-11e5-85ee-910f1e96ad34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:415","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.addAll(java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>)"},"status":-2},{"failures":[],"tindex":"f841184d-7923-11e5-85ee-95181c6699f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PillarInfo:122","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(int)"},"variableMap":{"intVal":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:210","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-2},{"failures":[],"tindex":"f841184e-7923-11e5-85ee-bfb9085c6b7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"relationStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:309","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"f841184f-7923-11e5-85ee-79d95a4bfcc0","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:51","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}