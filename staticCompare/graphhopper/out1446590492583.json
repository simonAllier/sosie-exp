{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":32,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":8,"com.graphhopper.reader.OSMReaderTest.testFoot":23,"com.graphhopper.reader.OSMReaderTest.testMain":24,"com.graphhopper.reader.OSMReaderTest.testFerry":22,"com.graphhopper.util.BitUtilLittleTest.testToBitString":2,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":35,"com.graphhopper.reader.OSMReaderTest.testOneWay":36,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":3,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":37,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":11,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":5,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":18,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.GraphHopperTest.testVia":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":38,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":33,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":28,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":16,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":4,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":34,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":7,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":14,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":30,"com.graphhopper.reader.OSMReaderTest.testBarriers":26,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":9,"com.graphhopper.GraphHopperTest.testLoadOSM":17,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":21,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":0,"com.graphhopper.GraphHopperTest.testPrepare":13,"com.graphhopper.GraphHopperTest.testFootAndCar":15,"com.graphhopper.reader.OSMReaderTest.testSort":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":39},"transformations":[{"failures":[],"tindex":"07fa2e2f-827c-11e5-99b1-e70aa3bdeee7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:84","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"copyPL","com.graphhopper.util.PointList.EMPTY":"copyPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:384","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[0],"tindex":"07fa7c50-827c-11e5-99b1-032d96bfa854","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"allSegments","tmpErr":"allSegments","y1":"allSegments","dLon":"allSegments","sLat":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"status":-1},{"failures":[1],"tindex":"07fa7c51-827c-11e5-99b1-f923483231a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, false, int, int)"},"status":-1},{"failures":[],"tindex":"07fa7c52-827c-11e5-99b1-b95ec5f02fe5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"eleDelta":"tmpEle","decEleSum":"queryLat","fullDist2D":"adjLat","decDist2DSum":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:180","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.util.DistanceCalc.calcCrossingPointToEdge(double, double, double, double, double, double);\n    double double = com.graphhopper.util.PointList.getElevation(((int) + 1));\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(com.graphhopper.util.shapes.GHPoint.double , com.graphhopper.util.shapes.GHPoint.double , ((double + double) / 2));\n} else\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double);\n"},"status":-2},{"failures":[2,3],"tindex":"07fa7c53-827c-11e5-99b1-6366ab784e78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:127","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[],"tindex":"07faa364-827c-11e5-99b1-fd743dc0b673","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.BaseGraph.toDetailsString()"},"status":-2},{"failures":[],"tindex":"07faa365-827c-11e5-99b1-ab3c594dbafb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:48","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"_location":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:89","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"07faa366-827c-11e5-99b1-6b5ee7f81865","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:104","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"variableMap":{"val":"mpInteger","java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Integer.MAX_VALUE":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"07faa367-827c-11e5-99b1-a9ebb5365c52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"07faa368-827c-11e5-99b1-79481cf45ab3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:236","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable com.graphhopper.storage.BaseGraph.EdgeIterable = com.graphhopper.storage.EdgeAccess.createSingleEdge(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"variableMap":{"this":"edgeAccess","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:499","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable com.graphhopper.storage.BaseGraph.EdgeIterable = new com.graphhopper.storage.BaseGraph.EdgeIterable(this , com.graphhopper.storage.EdgeAccess , com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"07faca79-827c-11e5-99b1-e7da04e11ea6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"incorrect loc2id index version\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:65","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(((((\"You cannot call \" + java.lang.String) + \" if response contains errors. Check this with ghResponse.hasErrors(). \") + \"Errors are: \") + com.graphhopper.GHResponse.(getErrors())))"},"status":0},{"failures":[],"tindex":"07faca7a-827c-11e5-99b1-2360055e546f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"java.lang.Double.NaN","angle":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:219","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"07faca7b-827c-11e5-99b1-61189b068988","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:228","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"07faf18c-827c-11e5-99b1-a13b576a2cdc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:194","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"key":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-1},{"failures":[37,38,27,28],"tindex":"07faf18d-827c-11e5-99b1-17c9d11fcc1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:61","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"07faf18e-827c-11e5-99b1-2fe2892a5a76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:539","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"07faf18f-827c-11e5-99b1-113b84a3edac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"07fb18a0-827c-11e5-99b1-c7fe22189a3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"com.graphhopper.util.EdgeIterator.NO_EDGE","tmpSize":"tmpPrevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:454","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n        long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n        com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n        break;\n    } \n    int = com.graphhopper.util.CHEdgeIterator.getEdge();\n}"},"status":-2},{"failures":[],"tindex":"07fb18a1-827c-11e5-99b1-c17ce04efd66","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"old","edge2":"newIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:269","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":0},{"failures":[39,40,29],"tindex":"07fb18a2-827c-11e5-99b1-ab82635fa186","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"variableMap":{"dataAccess":"turnCosts","MAGIC_INT":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"07fb18a1-827c-11e5-99b1-c17ce04efd66","diffs":[{"branches":{"com.graphhopper.util.GHUtilityTest.testSortDirected":["com.graphhopper.util.EdgeIterator$Edge_boolean_isValid(int).b"],"com.graphhopper.reader.OSMReaderTest.testSort":["com.graphhopper.util.EdgeIterator$Edge_boolean_isValid(int).b"]},"type":"branch"}]},{"transformation":"07faca79-827c-11e5-99b1-e7da04e11ea6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.getErrors"]},"type":"staticDiff"}]},{"transformation":"07faf18e-827c-11e5-99b1-2fe2892a5a76","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testOneWay":["com.graphhopper.routing.util.AbstractFlagEncoder_long_setSpeed(long,double).t3","com.graphhopper.routing.util.AbstractFlagEncoder_long_handleFerryTags(com.graphhopper.reader.OSMWay,double,double,double).t3"]},"type":"branch"}]}]}