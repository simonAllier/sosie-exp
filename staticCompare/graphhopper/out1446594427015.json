{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":189,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":265,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":104,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":105,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":216,"com.graphhopper.routing.QueryGraphTest.testOneWay":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":71,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":128,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":94,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":192,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":300,"com.graphhopper.util.BitUtilBigTest.testReverse":312,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":290,"com.graphhopper.GraphHopperTest.testPrepare":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":118,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":264,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":200,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":228,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":247,"com.graphhopper.util.BitUtilLittleTest.testToBitString":307,"com.graphhopper.util.InstructionListTest.testWayList":108,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":256,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":66,"com.graphhopper.GraphHopperAPITest.testDisconnected179":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":188,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":248,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":253,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":129,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":281,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":47,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":196,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":243,"com.graphhopper.GraphHopperTest.testLoadOSM":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":130,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":167,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":210,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":259,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":174,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":317,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":111,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":269,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":303,"com.graphhopper.routing.PathTest.testWayList":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":246,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":115,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":112,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":182,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":261,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":320,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":280,"com.graphhopper.util.BitUtilBigTest.testToBitString":310,"com.graphhopper.util.GHUtilityTest.testSort":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":133,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":179,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":272,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":43,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":288,"com.graphhopper.GraphHopperAPITest.testLoad":99,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":27,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":268,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":83,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":175,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":145,"com.graphhopper.util.GHUtilityTest.testCopy":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":252,"com.graphhopper.routing.PathTest.testFindInstruction":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":56,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":59,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":297,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":255,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":211,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":260,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":35,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":234,"com.graphhopper.reader.PrinctonReaderTest.testRead":97,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":187,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":199,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":178,"com.graphhopper.util.InstructionListTest.testWayList2":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":314,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":193,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":227,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":213,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":171,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":238,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":191,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":201,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":205,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":267,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":231,"com.graphhopper.routing.PathBidirRefTest.testExtract":275,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":286,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":273,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":157,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":283,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":282,"com.graphhopper.util.GHUtilityTest.testSort2":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":262,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":180,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":164,"com.graphhopper.routing.PathBidirRefTest.testExtract2":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":151,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":160,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":176,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":122,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":236,"com.graphhopper.storage.GraphHopperStorageTest.testClone":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":181,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":301,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":166,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":19,"com.graphhopper.util.InstructionListTest.testCreateGPX":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":138,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":148,"com.graphhopper.util.BitUtilLittleTest.testReverse":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":258,"com.graphhopper.util.GHUtilityTest.testSortDirected":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":44,"com.graphhopper.GraphHopperTest.testPrepareOnly":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":67,"com.graphhopper.GraphHopperTest.testVia":23,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":257,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":147,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":292,"com.graphhopper.GraphHopperTest.testFootOnly":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":110,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":152,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":190,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":278,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":294,"com.graphhopper.util.InstructionListTest.testFind":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":139},"transformations":[{"failures":[],"tindex":"3115edc7-8285-11e5-b023-6de435d5aef2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":0},{"failures":[],"tindex":"311614d8-8285-11e5-b023-fbdc56e265e7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"count","com.graphhopper.storage.EdgeAccess.NO_NODE":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:206","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[], 0, int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"31163be9-8285-11e5-b023-373739825aa6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:494","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-1},{"failures":[33,34],"tindex":"31163bea-8285-11e5-b023-39c87a76d783","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:125","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"31163beb-8285-11e5-b023-8113c164482c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"eof"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:174","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[0],"tindex":"31163bec-8285-11e5-b023-2501485d6cc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"unknownSpeed","speed":"unknownSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:550","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"311662fd-8285-11e5-b023-3bab24224bc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.fillEdges(com.graphhopper.routing.AStar.AStarEdge, java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>, gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>, com.graphhopper.util.EdgeExplorer, false)"},"status":-1},{"failures":[],"tindex":"311662fe-8285-11e5-b023-eb6c70cf38e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:376","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:159","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[3,7,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,25],"tindex":"311662ff-8285-11e5-b023-8f244f825674","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.close()"},"variableMap":{"extStorage":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:253","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireEdgeField())\n    int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"31168a10-8285-11e5-b023-293451b4563a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"31168a11-8285-11e5-b023-a9f86bc72832","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:767","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLat(int)"},"variableMap":{"node":"node","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:98","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,10,11,14,97,98,99,100,101,102,103,104,105,106,107,108,109,110,36,38,39,40,111,112,113,56,114,44,115,116,117,58,59,60,118,119,120,61,62,121,122,45,63,64,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,65,170,47,171,172,173,67,68,69,174,175,176,70,71,177,178,48,72,73,179,180,181,182,183,184,74,185,50,186,187,188,76,77,78,189,190,191,79,80,192,193,51,81,82,194,195,196,197,198,199,200,201,83,202,53,203,204,205,85,86,87,206,207,208,88,89,209,210,54,90,91,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,92,93,274,94,95,96,33,34,275,276,277,278,279,280,281,20,21,282,283,284,285,286,23,24,25,26,27,28,29,30,31,32],"tindex":"31168a12-8285-11e5-b023-b9842bbf76b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,97,98,99,100,101,104,105,106,107,108,109,110,35,36,37,38,39,40,113,56,44,115,116,117,287,288,59,60,118,120,61,62,122,45,63,64,289,123,125,132,140,290,291,152,160,161,163,292,166,169,65,47,171,172,173,293,294,68,69,174,176,70,71,178,48,72,73,295,179,181,184,74,50,186,187,188,296,297,77,78,189,191,79,80,193,51,81,82,298,194,196,198,201,83,53,203,204,205,299,300,86,87,206,208,88,89,210,54,90,91,301,211,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,92,93,274,94,302,95,96,33,34,275,276,303,277,278,279,304,305,280,281,20,21,306,282,283,284,285,286,22,23,24,25,26,27,28,29,30,31,32],"tindex":"3116b123-8285-11e5-b023-753bb2cce89c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"E_FLAGS","index":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:114","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.storage.DataAccess.getInt(((long + (int)) + 4));\n    long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int);\n} "},"status":-1},{"failures":[],"tindex":"3116d834-8285-11e5-b023-7302ee0635ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"currNodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1138","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"edges: \" + (com.graphhopper.storage.GraphHopperStorage.getAllEdges().getMaxId())) + \", nodes \") + int) + \", there were \") + (com.graphhopper.routing.util.PrepareRoutingSubnetworks.getMaxSubnetworks())) + \" subnetworks. removed them => \") + (int - int)) + \" less nodes\"))"},"status":0},{"failures":[307,308,309,310,311,312,313,314,315],"tindex":"3116d835-8285-11e5-b023-77ea35645209","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:279","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[316,110],"tindex":"3116ff46-8285-11e5-b023-edeec6ad7f2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lat=\")"},"variableMap":{"txt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\")"},"status":-1},{"failures":[],"tindex":"3116ff47-8285-11e5-b023-1dc860a5bdf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:37","type":"CtConstructorCallImpl","sourcecode":"new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.util.Weighting)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"3116ff48-8285-11e5-b023-a57a37cb135c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:265","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)) > 0"},"status":-1},{"failures":[317,318,319,320,321],"tindex":"31174d69-8285-11e5-b023-4f80ab2a298e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:176","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"variableMap":{"str":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:207","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    try {\n        if (!(java.io.File.renameTo(new java.io.File(((java.lang.String) + java.lang.String))))) {\n            throw new java.lang.IllegalStateException((((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object to \") + java.lang.String));\n        } \n        java.lang.String = java.lang.String;\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.IllegalStateException(((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object!\") , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"));\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"31168a11-8285-11e5-b023-a9f86bc72832","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointAccess.getLatitude"]},"type":"staticDiff"}]},{"transformation":"3116d834-8285-11e5-b023-7302ee0635ea","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_getMaxSubnetworks().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_getMaxSubnetworks().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.getAllEdges","com.graphhopper.routing.util.AllEdgesIterator.getMaxId","com.graphhopper.routing.util.PrepareRoutingSubnetworks.getMaxSubnetworks","org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"3115edc7-8285-11e5-b023-6de435d5aef2","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}