{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":123,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":112,"com.graphhopper.reader.OSMReaderTest.testFerry":210,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":68,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":69,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":12,"com.graphhopper.routing.QueryGraphTest.testOneWay":17,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":163,"com.graphhopper.reader.OSMReaderTest.testWithBounds":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":126,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":101,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":133,"com.graphhopper.GraphHopperTest.testPrepare":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":23,"com.graphhopper.util.InstructionListTest.testWayList":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":73,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":118,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":164,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":62,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":216,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":134,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":237,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":202,"com.graphhopper.GraphHopperTest.testLoadOSM":240,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":85,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":154,"com.graphhopper.reader.OSMReaderTest.testSort":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":51,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":189,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":110,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":61,"com.graphhopper.util.GHUtilityTest.testSort":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":119,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":26,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":19,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":80,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":242,"com.graphhopper.GraphHopperAPITest.testLoad":209,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.reader.OSMReaderTest.testBarriers":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":128,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.util.GHUtilityTest.testCopy":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":21,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":194,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":30,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":159,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":195,"com.graphhopper.reader.PrinctonReaderTest.testRead":225,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":83,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":117,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":102,"com.graphhopper.util.InstructionListTest.testWayList2":75,"com.graphhopper.reader.OSMReaderTest.testFoot":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":131,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":127,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":161,"com.graphhopper.reader.OSMReaderTest.testOneWay":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":9,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":91,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":157,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":125,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":145,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":215,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":46,"com.graphhopper.routing.PathBidirRefTest.testExtract":63,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":77,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":175,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":129,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":231,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":230,"com.graphhopper.util.GHUtilityTest.testSort2":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":36,"com.graphhopper.reader.OSMReaderTest.testMain":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":81,"com.graphhopper.routing.PathBidirRefTest.testExtract2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":177,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":170,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":200,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":50,"com.graphhopper.storage.GraphHopperStorageTest.testClone":142,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":109,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":158,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":153,"com.graphhopper.GraphHopperTest.testFootAndCar":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":228,"com.graphhopper.GraphHopperTest.testVia":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":32,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":219,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":82,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":76,"com.graphhopper.GraphHopperTest.testFootOnly":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":173,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":218,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":124,"com.graphhopper.util.InstructionListTest.testFind":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":182},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"a7547b01-790f-11e5-9a2c-d1fd93a8ba70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[],"tindex":"a754a212-790f-11e5-9a2c-0303fef0ead4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"refCounter","to":"refCounter","lonSize":"refCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:63","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"a754c923-790f-11e5-9a2c-a9ddc1c4d45d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\")"},"status":-2},{"failures":[],"tindex":"a754c924-790f-11e5-9a2c-158d2ed315ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:35","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"a754c925-790f-11e5-9a2c-1b09d07e8136","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"speed","orientation":"fwdSlower","java.lang.Math.PI":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-2},{"failures":[],"tindex":"a754c926-790f-11e5-9a2c-83af80bf10ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"a754f037-790f-11e5-9a2c-9908d609c991","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:43","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"variableMap":{"fromNode":"node","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:767","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLat(int)"},"status":-2},{"failures":[],"tindex":"a7551748-790f-11e5-9a2c-7d9007f97d69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:602","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"a7551749-790f-11e5-9a2c-cf7c3a9cd643","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-2},{"failures":[],"tindex":"a755174a-790f-11e5-9a2c-39be7f6c5f0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:132","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DataAccess.setInt(((long + (int)) + 4), com.graphhopper.util.BitUtil.getIntHigh(long));\n"},"status":-2},{"failures":[],"tindex":"a755174b-790f-11e5-9a2c-0160ff0fa57c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.ensureNode(int)"},"status":-2},{"failures":[],"tindex":"a755174c-790f-11e5-9a2c-b76c7b6186c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:59","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.combineIntsToLong(com.graphhopper.storage.DataAccess.getHeader(0), com.graphhopper.storage.DataAccess.getHeader(4))"},"status":-2},{"failures":[],"tindex":"a7553e5d-790f-11e5-9a2c-2b99f630bdb0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:153","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:126","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.EdgeEntry.int) == (int)"},"status":-2},{"failures":[],"tindex":"a7553e5e-790f-11e5-9a2c-bd27c886ff7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:79","type":"CtIfImpl","sourcecode":"if (boolean)\n    double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int);\nelse\n    double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int);\n"},"status":-2},{"failures":[],"tindex":"a7553e5f-790f-11e5-9a2c-4d91bed540d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:188","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"a7553e60-790f-11e5-9a2c-71feaeff5ec3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:530","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.CHGraphImpl.AllCHEdgesIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException(\"Shortcut should not need to return raw flags!\");\n"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:95","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"a7553e61-790f-11e5-9a2c-5b8aa7849c62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"turnCostsEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:71","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a7553e62-790f-11e5-9a2c-9b9f6f099d90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"a7556573-790f-11e5-9a2c-69bfa9004686","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"distance":"midLon","dist":"minLonTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"a7556574-790f-11e5-9a2c-ff6813f37d8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}