{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":2,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":141,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":105,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":83,"com.graphhopper.routing.QueryGraphTest.testOneWay":148,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":25,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":88,"com.graphhopper.reader.OSMReaderTest.testWithBounds":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":90,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":143,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":80,"com.graphhopper.coll.CompressedArrayTest.testCompress":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":98,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":58,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":101,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":102,"com.graphhopper.GraphHopperTest.testPrepare":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":61,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":107,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":150,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":47,"com.graphhopper.util.InstructionListTest.testWayList":127,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.util.PointListTest.testEquals":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":120,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":10,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":103,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":132,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":104,"com.graphhopper.GraphHopperTest.testLoadOSM":134,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":43,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":93,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":36,"com.graphhopper.reader.OSMReaderTest.testSort":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":114,"com.graphhopper.reader.OSMReaderTest.testMain":123,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":64,"com.graphhopper.util.PointListTest.testReverse":130,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":155,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":81,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":5,"com.graphhopper.routing.PathTest.testWayList":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":60,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":110,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":156,"com.graphhopper.GraphHopperTest.testFootAndCar":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":19,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":46,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":109,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":33,"com.graphhopper.search.NameIndexTest.testPut":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":7,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":112,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":144,"com.graphhopper.coll.CompressedArrayTest.testCompress2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":94,"com.graphhopper.GraphHopperTest.testPrepareOnly":152,"com.graphhopper.GraphHopperTest.testVia":121,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":135,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":66,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":57,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":116,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":76,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":77,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":158},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"973b9bd3-8287-11e5-a776-bb425f744489","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:201","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"973b9bd4-8287-11e5-a776-0baa48e5e181","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:146","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, true)"},"status":0},{"failures":[22,23,24],"tindex":"973bc2e5-8287-11e5-a776-2f4aa0775a97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:176","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], 0, int)"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,23],"tindex":"973bc2e6-8287-11e5-a776-21c4cb2fda82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[76,77],"tindex":"973bc2e7-8287-11e5-a776-d99a0e0a81f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"minOnewayNetworkSize","tmp":"minOneWayNetworkSize","segmentSizeInBytes":"minOnewayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[78,79,80],"tindex":"973bc2e8-8287-11e5-a776-fb52d6091a17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,72,73,114,74,115,116,117,118,76,119,120],"tindex":"973bc2e9-8287-11e5-a776-59b8c338a666","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:284","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"variableMap":{"maxBits":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:217","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-1},{"failures":[75,23],"tindex":"973be9fa-8287-11e5-a776-8b5ba7c44629","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"res":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:163","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 56"},"status":-1},{"failures":[121,122,123,124,78,125,126],"tindex":"973be9fb-8287-11e5-a776-0dde26e37879","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList)"},"variableMap":{"tmpPoints":"pointList","fullPoints":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:732","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.clear()"},"status":-1},{"failures":[127,128,129],"tindex":"973be9fc-8287-11e5-a776-81e1a243dc2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:126","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"973be9fd-8287-11e5-a776-012c85e3cf3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[130,34,35,36,37,38,121,131,132,122,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,71,72,73,74],"tindex":"973be9fe-8287-11e5-a776-b76253ae721e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:348","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , true)"},"variableMap":{"max":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , boolean)"},"status":-1},{"failures":[],"tindex":"973be9ff-8287-11e5-a776-21fe0c8942be","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"longTripsSpeed","speed":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[152,133,134,135,153],"tindex":"973c1110-8287-11e5-a776-d3b11e0431c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-1},{"failures":[154],"tindex":"973c1111-8287-11e5-a776-a7e0f6cf77c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:520","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\""},"variableMap":{"graphHopperFolder":"str","osmFile":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:439","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[155],"tindex":"973c1112-8287-11e5-a776-23d33d3b742d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"status":-1},{"failures":[24,156],"tindex":"973c1113-8287-11e5-a776-659f64c1f28e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"currentBucket","edge2":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage[][int].writeVLong(long)"},"status":-1},{"failures":[22,75],"tindex":"973c1114-8287-11e5-a776-9b58fd00a5e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"variableMap":{"bytes":"bytes","tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:70","type":"CtAssignmentImpl","sourcecode":"byte[] = java.util.Arrays.copyOf(byte[], int)"},"status":-1},{"failures":[127],"tindex":"973c1115-8287-11e5-a776-dfdd006a84bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:264","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.List<java.util.List<java.lang.Double>>.add(java.util.Arrays.asList(com.graphhopper.util.Instruction.getFirstLat(), com.graphhopper.util.Instruction.getFirstLon()));\n}"},"status":-1},{"failures":[157,158,159,160],"tindex":"973c3826-8287-11e5-a776-8de460b7eebc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:328","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"973b9bd4-8287-11e5-a776-0baa48e5e181","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.ConsistentWeightApproximator.approximate"]},"type":"staticDiff"}]}]}