{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.GraphHopperTest.testFootAndCar":20},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"31737c57-7929-11e5-8072-ef9e90f079de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:187","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n    long long = 0;\n    switch (java.lang.String.charAt(0)) {\n        case 'n' :\n            if (\"node\".equals(java.lang.String)) {\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n            } \n            break;\n        case 'w' :\n            {\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        case 'r' :\n            long = java.lang.Long.parseLong(java.lang.String);\n            return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n    }\n} "},"status":-1},{"failures":[],"tindex":"3173ca78-7929-11e5-8072-714161fdeb76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:133","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:255","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"3173ca79-7929-11e5-8072-9f6d853e9d3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:135","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[],"tindex":"3173ca7a-7929-11e5-8072-77eeee251a8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"status":-2},{"failures":[],"tindex":"3173f18b-7929-11e5-8072-5f3c4c3f97d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"lon","fwdSpeed":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"3173f18c-7929-11e5-8072-e1e257b7d631","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"pointIndex","dLat":"pointIndex","tmpErr":"pointIndex","x1":"pointIndex","sLon":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:316","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"3173f18d-7929-11e5-8072-452242615c66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"variableMap":{"fromDist":"estimatedDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:366","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double)"},"status":-2},{"failures":[],"tindex":"3174189e-7929-11e5-8072-db4174322473","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"status":-2},{"failures":[],"tindex":"3174189f-7929-11e5-8072-d3882c4a1a22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:50","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer();\n    for ( ; int < int ; int++) {\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        if ((double > 90) || (double < (-90)))\n            java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n        \n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if ((double > 180) || (double < (-180)))\n            java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n        \n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n                java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n            } \n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n                java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n            } \n        }\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"problem with node \" + int) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"317418a0-7929-11e5-8072-716ece412e47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"317418a1-7929-11e5-8072-b754a895f083","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"status":-2},{"failures":[],"tindex":"31743eb2-7929-11e5-8072-277f179f340f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"classBicycle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"status":-2},{"failures":[],"tindex":"31743eb3-7929-11e5-8072-f1af7676a6d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:436","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = com.graphhopper.routing.QueryGraph.((com.graphhopper.routing.VirtualEdgeIteratorState)(getEdgeIteratorState(int, int)))"},"variableMap":{"edgeId":"edgeId","this":"this","nodeId":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:437","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = com.graphhopper.routing.QueryGraph.((com.graphhopper.routing.VirtualEdgeIteratorState)(getEdgeIteratorState(int, com.graphhopper.routing.VirtualEdgeIteratorState.getBaseNode())))"},"status":-2},{"failures":[],"tindex":"31743eb4-7929-11e5-8072-69e74cfce25c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"code","edgeFrom":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"31743eb5-7929-11e5-8072-dbb18fb28ee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:220","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"317465c6-7929-11e5-8072-912e97c38137","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"currentEntry","guess":"currentEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"317465c7-7929-11e5-8072-f358d92b77d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:723","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"))"},"variableMap":{"graphHopperFolder":"fromStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"status":-2},{"failures":[],"tindex":"317465c8-7929-11e5-8072-9b1c022298ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:154","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.PointList.is3D()))\n    throw new java.lang.IllegalStateException(\"To support speed calculation based on elevation data it is necessary to enable import of it.\");\n"},"variableMap":{"pl":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)])"},"status":-2},{"failures":[],"tindex":"317465c9-7929-11e5-8072-c313ae515776","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"317465ca-7929-11e5-8072-9f2871dc5b29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:80","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.poll_element()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}