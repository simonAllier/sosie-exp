{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":153,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":50,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":220,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.reader.OSMReaderTest.testFerry":308,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":86,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":87,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":15,"com.graphhopper.routing.QueryGraphTest.testOneWay":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":121,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":216,"com.graphhopper.reader.OSMReaderTest.testWithBounds":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":4,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":159,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":158,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":233,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":122,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":168,"com.graphhopper.GraphHopperTest.testPrepare":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":169,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":178,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":195,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":32,"com.graphhopper.util.InstructionListTest.testWayList":92,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":41,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":91,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":89,"com.graphhopper.GraphHopperAPITest.testDisconnected179":307,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":146,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":217,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":78,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":8,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":303,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":172,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":336,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":295,"com.graphhopper.GraphHopperTest.testLoadOSM":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":236,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":101,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":218,"com.graphhopper.reader.OSMReaderTest.testSort":311,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":7,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":117,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":206,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":269,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":54,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":322,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":69,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":174,"com.graphhopper.routing.PathTest.testWayList":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":130,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":266,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":39,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":275,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":246,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":137,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":46,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":77,"com.graphhopper.util.GHUtilityTest.testSort":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":147,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":134,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":28,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":95,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":267,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":268,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":280,"com.graphhopper.GraphHopperAPITest.testLoad":306,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":3,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":271,"com.graphhopper.reader.OSMReaderTest.testBarriers":312,"com.graphhopper.routing.PathTest.testFound":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":37,"com.graphhopper.util.GHUtilityTest.testCopy":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":143,"com.graphhopper.routing.PathTest.testFindInstruction":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":30,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":282,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":148,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":249,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":207,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":45,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":81,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":284,"com.graphhopper.reader.PrinctonReaderTest.testRead":323,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":138,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":144,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":125,"com.graphhopper.util.InstructionListTest.testWayList2":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":239,"com.graphhopper.reader.OSMReaderTest.testFoot":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":165,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":223,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":224,"com.graphhopper.reader.OSMReaderTest.testOneWay":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":115,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":107,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":204,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":64,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":281,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":155,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":186,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":313,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":58,"com.graphhopper.routing.PathBidirRefTest.testExtract":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":221,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":305,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":163,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":329,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":328,"com.graphhopper.util.GHUtilityTest.testSort2":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":151,"com.graphhopper.reader.OSMReaderTest.testMain":310,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":97,"com.graphhopper.routing.PathBidirRefTest.testExtract2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":247,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":231,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":293,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.storage.GraphHopperStorageTest.testClone":182,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":166,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":124,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":191,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":198,"com.graphhopper.GraphHopperTest.testFootAndCar":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":145,"com.graphhopper.routing.PathTest.testTime":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":157,"com.graphhopper.util.GHUtilityTest.testSortDirected":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":113,"com.graphhopper.GraphHopperTest.testPrepareOnly":326,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":252,"com.graphhopper.GraphHopperTest.testVia":334,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":42,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":232,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":98,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":94,"com.graphhopper.GraphHopperTest.testFootOnly":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":238,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":240,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":73,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":154,"com.graphhopper.util.InstructionListTest.testFind":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":265},"transformations":[{"failures":[],"tindex":"149437f2-7915-11e5-9be3-6b0209918c58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints())"},"status":0},{"failures":[0,1],"tindex":"14945f03-7915-11e5-9be3-390850ba5668","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-1},{"failures":[],"tindex":"14945f04-7915-11e5-9be3-a9d9d0c3721f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,0,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,1,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"14948615-7915-11e5-9be3-41580e058e74","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"nodeB","edgeId":"nodeB","com.graphhopper.storage.EdgeAccess.NO_NODE":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"1494ad26-7915-11e5-9be3-194905899646","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:194","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":-2},{"failures":[],"tindex":"1494ad27-7915-11e5-9be3-9b58c25abcfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:291","type":"CtIfImpl","sourcecode":"if ((short < (-1000)) || (short > 12000))\n    short = java.lang.Short.short;\n"},"status":-2},{"failures":[],"tindex":"1494ad28-7915-11e5-9be3-dbef9c2e48c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"prepareLogMessages"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:820","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting : java.util.Set<com.graphhopper.routing.util.Weighting>) {\n    com.graphhopper.routing.ch.PrepareContractionHierarchies com.graphhopper.routing.ch.PrepareContractionHierarchies = new com.graphhopper.routing.ch.PrepareContractionHierarchies(new com.graphhopper.storage.GHDirectory(\"\" , com.graphhopper.storage.DAType.com.graphhopper.storage.DAType) , com.graphhopper.storage.GraphHopperStorage , com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting) , com.graphhopper.routing.util.Weighting.getFlagEncoder() , com.graphhopper.routing.util.Weighting , com.graphhopper.routing.util.TraversalMode);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int).setNeighborUpdates(int).setLogMessages(double);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies);\n}"},"status":-2},{"failures":[],"tindex":"1494ad29-7915-11e5-9be3-7f3a8831dcfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long);\n"},"status":-2},{"failures":[],"tindex":"1494ad2a-7915-11e5-9be3-8d5107dd9a9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:140","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"variableMap":{"encodingManager":"em"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:120","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.needsTurnCostsSupport())\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode;\n"},"status":-2},{"failures":[],"tindex":"1494d43b-7915-11e5-9be3-57ebf5cac9c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"maxSpeed":"precision","fwdSpeed":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:221","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"status":-2},{"failures":[],"tindex":"1494d43c-7915-11e5-9be3-81988c729c6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"1494d43d-7915-11e5-9be3-1f02821a45ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.CompressedArray.flush()"},"status":-2},{"failures":[],"tindex":"1494d43e-7915-11e5-9be3-45134c57d5ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:659","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", java.util.Set<java.lang.String>))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\"))"},"status":-2},{"failures":[],"tindex":"1494d43f-7915-11e5-9be3-f5915cce2db9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:173","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef = new com.graphhopper.routing.PathBidirRef(com.graphhopper.storage.Graph , com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"1494d440-7915-11e5-9be3-d55641d037c9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"1494fa51-7915-11e5-9be3-e37cc05e979b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"1494fa52-7915-11e5-9be3-3dfbf2b57b45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"wayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:170","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"1494fa53-7915-11e5-9be3-7b76fab02d15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-2},{"failures":[],"tindex":"1494fa54-7915-11e5-9be3-cde9a2431388","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:748","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.GraphHopper.initCHAlgoFactories();\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(new java.util.ArrayList<com.graphhopper.routing.util.Weighting>(java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.keySet()) , com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n} else\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension);\n"},"status":-2},{"failures":[],"tindex":"1494fa55-7915-11e5-9be3-338982c60f2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}