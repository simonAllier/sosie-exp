{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":17,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":111,"com.graphhopper.search.NameIndexTest.testCreate":152,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":74,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":3,"com.graphhopper.reader.OSMReaderTest.testFerry":249,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":64,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":175,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":195,"com.graphhopper.reader.OSMReaderTest.testWithBounds":259,"com.graphhopper.storage.MMapDataAccessTest.testSegments":50,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":24,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":14,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":83,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":72,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":23,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":177,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":155,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":271,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":33,"com.graphhopper.GraphHopperTest.testPrepare":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":110,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":117,"com.graphhopper.search.NameIndexTest.testFlush":150,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":93,"com.graphhopper.util.InstructionListTest.testWayList":265,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":102,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":264,"com.graphhopper.GraphHopperAPITest.testDisconnected179":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":10,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":284,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":94,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":196,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":140,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":232,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":37,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":46,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":229,"com.graphhopper.GraphHopperTest.testLoadOSM":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":197,"com.graphhopper.reader.OSMReaderTest.testSort":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":105,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":258,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":226,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":35,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":115,"com.graphhopper.storage.RAMDataAccessTest.testHeader":240,"com.graphhopper.storage.MMapDataAccessTest.testHeader":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":131,"com.graphhopper.storage.MMapDataAccessTest.testCopy":44,"com.graphhopper.routing.PathTest.testWayList":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":36,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":13,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":190,"com.graphhopper.coll.OSMIDMapTest.testGet2":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":92,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":246,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":100,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":107,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":237,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":165,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":139,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":26,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":96,"com.graphhopper.coll.OSMIDMapTest.testGetLong":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":224,"com.graphhopper.search.NameIndexTest.testPut":149,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":142,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":69,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":247,"com.graphhopper.GraphHopperAPITest.testLoad":269,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":218,"com.graphhopper.reader.OSMReaderTest.testBarriers":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":27,"com.graphhopper.routing.PathTest.testFound":133,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":98,"com.graphhopper.util.GHUtilityTest.testCopy":268,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":55,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":243,"com.graphhopper.routing.PathTest.testFindInstruction":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":90,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":151,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":123,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":52,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":12,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":8,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":290,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":49,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":40,"com.graphhopper.util.InstructionListTest.testWayList2":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":183,"com.graphhopper.reader.OSMReaderTest.testFoot":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":25,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":205,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":225,"com.graphhopper.reader.OSMReaderTest.testOneWay":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":141,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":166,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":156,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":169,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":19,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":254,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":157,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":187,"com.graphhopper.coll.OSMIDMapTest.testGet":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":120,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":162,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":145,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":276,"com.graphhopper.storage.RAMDataAccessTest.testCopy":236,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":200,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":275,"com.graphhopper.storage.RAMDataAccessTest.testSegments":242,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":15,"com.graphhopper.reader.OSMReaderTest.testMain":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":223,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":65,"com.graphhopper.routing.PathBidirRefTest.testExtract2":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":192,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":174,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":38,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":125,"com.graphhopper.storage.StorablePropertiesTest.testStore":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":212,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":31,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":168,"com.graphhopper.GraphHopperTest.testFootAndCar":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":9,"com.graphhopper.routing.PathTest.testTime":134,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":6,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":42,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":104,"com.graphhopper.GraphHopperTest.testPrepareOnly":272,"com.graphhopper.GraphHopperTest.testVia":278,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":103,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":188,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":176,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":216,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":267,"com.graphhopper.GraphHopperTest.testFootOnly":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":182,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":184,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":135,"com.graphhopper.util.InstructionListTest.testFind":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":208},"transformations":[{"failures":[],"tindex":"4aad7458-8289-11e5-be59-1bc8fb34e0a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"status":-2},{"failures":[],"tindex":"4aad9b69-8289-11e5-be59-ffa8c7f58cd2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"id","dy":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:556","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLon(int)"},"status":-2},{"failures":[],"tindex":"4aad9b6a-8289-11e5-be59-cfeda36aa6eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"minLon","angleXY":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:177","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((3 * 4)))"},"status":-2},{"failures":[0,1],"tindex":"4aad9b6b-8289-11e5-be59-3d39f6255095","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:271","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:659","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", java.util.Set<java.lang.String>))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\"))"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"4aad9b6c-8289-11e5-be59-796417a5edb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"bufferStart","nanoTime":"longSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:146","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.util.List<java.nio.ByteBuffer>.size()) * long"},"status":-1},{"failures":[],"tindex":"4aad9b6d-8289-11e5-be59-f70a72aa31c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"variableMap":{"res":"bits","maxBit":"bits","value":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"4aadc27e-8289-11e5-be59-afc634f8925a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"length","nextTurnCostIndex":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:173","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.Deflater.setLevel(int);\n    java.util.zip.Deflater.setInput(byte[], int, int);\n    java.util.zip.Deflater.finish();\n    final byte[] byte[] = new byte[1024];\n    while (!(java.util.zip.Deflater.finished())) {\n        int int = java.util.zip.Deflater.deflate(byte[]);\n        java.io.ByteArrayOutputStream.write(byte[], 0, int);\n    }\n} finally {\n    java.util.zip.Deflater.end();\n}"},"status":-2},{"failures":[74,75,76],"tindex":"4aadc27f-8289-11e5-be59-b5361c3942c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"variableMap":{"edge":"reverseEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:440","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-1},{"failures":[],"tindex":"4aadc280-8289-11e5-be59-23d74e7d0c92","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:406","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0) {\n        if (boolean)\n            double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n        else\n            double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n        \n    } \n    double = double[][int];\n    double = double[][int];\n    if (boolean)\n        double = double[][int];\n    \n}"},"status":-2},{"failures":[],"tindex":"4aadc281-8289-11e5-be59-1f405a89b9b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:182","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.CHGraphImpl.nextShortcutId(), int, int)"},"status":-2},{"failures":[49,50],"tindex":"4aadc282-8289-11e5-be59-1ff92ea93f35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:391","type":"CtReturnImpl","sourcecode":"return java.util.List<java.nio.ByteBuffer>.size()"},"status":-1},{"failures":[],"tindex":"4aadc283-8289-11e5-be59-67020a14be5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"status":-2},{"failures":[],"tindex":"4aade994-8289-11e5-be59-7131016b32e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:143","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"4aade995-8289-11e5-be59-09d2e2cbdef5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"orientation","com.graphhopper.util.AngleCalc.PI3_4":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,74,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,39,53,166,54,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,58,59,60,61,63,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,65,216,217,218,66,219,220,221,222,223,224,225,67,226,69,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,73,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,75,76,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"4aade996-8289-11e5-be59-e50d04466f93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:113","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"4aade997-8289-11e5-be59-a9ad825ed2f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"currEdge","cl":"currEdge","tmpPrev":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:64","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, 0)"},"status":0},{"failures":[90,91,92,93,94,95,96,97,98,99,101,102,106,107,108,109,110,113,114,115,116,117,119,125,126,288,130,289,269,273,274,275,75,76,276,278,279,280,281,282,283,285],"tindex":"4aae10a8-8289-11e5-be59-b77e9ea00650","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int)"},"status":-1},{"failures":[253,257],"tindex":"4aae10a9-8289-11e5-be59-0b4d4b5d0ef5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:355","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = new long[int]"},"variableMap":{"n":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:400","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1))"},"status":-1},{"failures":[114,116,125,288,290,129],"tindex":"4aae10aa-8289-11e5-be59-e10e8ebfb073","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"oldPrio"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:346","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n"},"status":-1},{"failures":[],"tindex":"4aae10ab-8289-11e5-be59-0feef57e327d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:395","type":"CtReturnImpl","sourcecode":"return double"},"variableMap":{"dijkstraTime":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}