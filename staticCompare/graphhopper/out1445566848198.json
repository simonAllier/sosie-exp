{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":61,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":3,"com.graphhopper.reader.OSMReaderTest.testMain":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":50,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":59,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":29,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":2,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":84,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":1,"com.graphhopper.GraphHopperTest.testPrepare":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":63,"com.graphhopper.GraphHopperTest.testFootAndCar":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":33,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":53,"com.graphhopper.reader.OSMReaderTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":58,"com.graphhopper.GraphHopperAPITest.testDisconnected179":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":28,"com.graphhopper.util.PointListTest.testAddPL":86,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.GraphHopperTest.testPrepareOnly":65,"com.graphhopper.GraphHopperTest.testVia":72,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":79,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":38,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":26,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":18,"com.graphhopper.GraphHopperTest.testFootOnly":80,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":32,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":70,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.GraphHopperTest.testLoadOSM":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":66,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":69,"com.graphhopper.reader.OSMReaderTest.testSort":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":67},"transformations":[{"failures":[0,1,2,3],"tindex":"ac5fcef9-792c-11e5-a676-29bd249b10dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"unfavored"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:162","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,0,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"ac5fcefa-792c-11e5-a676-1f4213e54b24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"variableMap":{"factor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double)"},"status":-1},{"failures":[16,86,72,73,74,75,76,77,79],"tindex":"ac5fcefb-792c-11e5-a676-798843b31627","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:155","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + (com.graphhopper.util.PointList.getSize())"},"status":-1},{"failures":[],"tindex":"ac5ff60c-792c-11e5-a676-758778b14f47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.MAX_VALUE","clockwise":"storedInt","java.lang.Math.PI":"java.lang.Double.MAX_VALUE","radian":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:379","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ac5ff60d-792c-11e5-a676-339f9e1071d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:257","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:84","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream = null"},"status":-2},{"failures":[],"tindex":"ac5ff60e-792c-11e5-a676-0fac9b63df95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1106","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (boolean) && (boolean)"},"status":-2},{"failures":[],"tindex":"ac5ff60f-792c-11e5-a676-75866bbca741","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:145","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.DataAccess.getCapacity()) / 2"},"variableMap":{"heights":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:224","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int)"},"status":-2},{"failures":[],"tindex":"ac5ff610-792c-11e5-a676-1de98cc63230","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:771","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"prevEle":"x1","ele":"x1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:43","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-2},{"failures":[],"tindex":"ac5ff611-792c-11e5-a676-f5e8337b54b3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"variableMap":{"flags2":"acceptBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit","flags1":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:695","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ac5ff612-792c-11e5-a676-abb662d14385","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"mmap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:68","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"ac601d23-792c-11e5-a676-4dcf9abb8e41","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap.getMap().containsKey(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ac601d24-792c-11e5-a676-e5364194ede1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:652","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"ac601d25-792c-11e5-a676-d1eb96f53767","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"status":-2},{"failures":[],"tindex":"ac601d26-792c-11e5-a676-41ea682d76b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:121","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"ac601d27-792c-11e5-a676-45a131013128","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:107","type":"CtReturnImpl","sourcecode":"return new java.util.zip.GZIPInputStream(java.io.InputStream , 50000)"},"variableMap":{"ips":"java.io.InputStream.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:104","type":"CtIfImpl","sourcecode":"if (((byte[][0]) == 31) && ((byte[][1]) == (-117))) {\n    java.io.InputStream.reset();\n    return new java.util.zip.GZIPInputStream(java.io.InputStream , 50000);\n} else if (((((((byte[][0]) == 0) && ((byte[][1]) == 0)) && ((byte[][2]) == 0)) && ((byte[][4]) == 10)) && ((byte[][5]) == 9)) && (((byte[][3]) == 13) || ((byte[][3]) == 14))) {\n    java.io.InputStream.reset();\n    boolean = true;\n    return java.io.InputStream;\n} else if (((byte[][0]) == 'P') && ((byte[][1]) == 'K')) {\n    java.io.InputStream.reset();\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    return java.util.zip.ZipInputStream;\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"ac601d28-792c-11e5-a676-21d8cee77002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:803","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeExplorer.setBaseNode(((int) - 1)).toString()"},"status":-2},{"failures":[],"tindex":"ac604439-792c-11e5-a676-4790b4392f91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"delta","maxBit":"delta","delta":"currentBucket","maxBits":"currentBucket","value":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage[][int].writeVLong(long)"},"status":-2},{"failures":[],"tindex":"ac60443a-792c-11e5-a676-ab4d2175ad87","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"minEle","fwdSpeed":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"ac60443b-792c-11e5-a676-d57020811408","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"ac60443c-792c-11e5-a676-494b46745177","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:283","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"nodeId":"value","nodeIdOffset":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:212","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}