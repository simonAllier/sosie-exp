{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":71,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":63,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":72,"com.graphhopper.reader.OSMReaderTest.testMain":38,"com.graphhopper.routing.PathTest.testFindInstruction":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":8,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":17,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":1,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":45,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.reader.OSMReaderTest.testWithBounds":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":57,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":62,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":24,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":29,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":43,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":30,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":13,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":55,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":19,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":5,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":22,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":34,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":78,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":68,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":25,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":33,"com.graphhopper.GraphHopperAPITest.testLoad":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":64,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":65,"com.graphhopper.GraphHopperTest.testFootOnly":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":31,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":66,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":3,"com.graphhopper.reader.OSMReaderTest.testBarriers":11,"com.graphhopper.util.InstructionListTest.testFind":15,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":10,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":67,"com.graphhopper.reader.OSMReaderTest.testSort":39},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"c19854a5-82b7-11e5-a3e7-0dbee9e93978","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"roundaboutBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[11,12],"tindex":"c1987bb6-82b7-11e5-a3e7-ed78a6cd341d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            gnu.trove.list.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-1},{"failures":[13,14],"tindex":"c198a2c7-82b7-11e5-a3e7-a1b2e8223c74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"status":-1},{"failures":[],"tindex":"c198a2c8-82b7-11e5-a3e7-89ab8dc53b71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"dMinLat","orientation":"maxLat","java.lang.Math.PI":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:669","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"c198a2c9-82b7-11e5-a3e7-91fc5ff6397d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:171","type":"CtReturnImpl","sourcecode":"return !boolean"},"variableMap":{"obtained":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:57","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[15,16],"tindex":"c198c9da-82b7-11e5-a3e7-3d375152454a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"instructionIndex","size":"foundInstruction","lonSize":"instructionIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    double double = com.graphhopper.util.PointList.getLongitude(int);\n    if (!((int == 0) && (int == 0))) {\n        double double;\n        int int = int;\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n            if (int > 0)\n                int++;\n            \n        } else {\n            double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n            if (int > 0)\n                int++;\n            \n        }\n        if (double < double) {\n            double = double;\n            int = int;\n        } \n    } \n    double = double;\n    double = double;\n}"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"c198c9db-82b7-11e5-a3e7-bf6cc2522f49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"start":"i","delta":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"c198c9dc-82b7-11e5-a3e7-1dc2c081a84b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"variableMap":{"dist":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[32,33,34,35,36],"tindex":"c198f0ed-82b7-11e5-a3e7-1bcc1d5e52b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromShort(byte[][][int], short, int)"},"status":-1},{"failures":[37,38,39,11,40,41,42,12,43,44,45,46,47,48,49,50,51,52,53,54,13,14,55],"tindex":"c198f0ee-82b7-11e5-a3e7-ef4ee1f4b787","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"c198f0ef-82b7-11e5-a3e7-09ecc31d9036","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:574","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"c198f0f0-82b7-11e5-a3e7-71606d34f230","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:475","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:556","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"c1991801-82b7-11e5-a3e7-9d9035415d8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"tmpNode","b":"tmpNode","this":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-2},{"failures":[56,38,39,40,41,57,42,58,59,0,49,60,61,62,63,64],"tindex":"c1991802-82b7-11e5-a3e7-ab8ea1285c51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"maxCount","lastIndex":"maxCount","fromIndex":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:170","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = gnu.trove.list.array.TIntArrayList.size();\n    gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"c1991803-82b7-11e5-a3e7-cb483488da31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:379","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getWeight\")"},"variableMap":{"this":"movedEdgeIter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:701","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (int == (com.graphhopper.storage.EdgeAccess.int))\n        continue;\n    \n    if (com.graphhopper.coll.GHBitSet.contains(int))\n        throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n    \n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"c1991804-82b7-11e5-a3e7-33f7e0efd617","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:211","type":"CtIfImpl","sourcecode":"if (int < 100)\n    java.lang.String += \"0\";\n"},"status":0},{"failures":[65,66,67,23,27,28,29,30,31,68,69,70,71,72,73,74,75],"tindex":"c1993f15-82b7-11e5-a3e7-07e810271679","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR","prevOrientation":"com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:606","type":"CtLocalVariableImpl","sourcecode":"double double = (long >>> 2) / (com.graphhopper.storage.CHGraphImpl.double)"},"status":-1},{"failures":[],"tindex":"c1993f16-82b7-11e5-a3e7-cba910b49228","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1066","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:144","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.toString()"},"status":-2},{"failures":[76,77],"tindex":"c1993f17-82b7-11e5-a3e7-cdbbcbf8782d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()))"},"status":-1},{"failures":[78,79],"tindex":"c1993f18-82b7-11e5-a3e7-cd8f07267f26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:201","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}