{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":290,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":324,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":172,"com.graphhopper.reader.OSMReaderTest.testFerry":204,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":251,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":106,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":321,"com.graphhopper.routing.QueryGraphTest.testOneWay":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":129,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":155,"com.graphhopper.reader.OSMReaderTest.testWithBounds":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":299,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":327,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":300,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":257,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":186,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":222,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":130,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":265,"com.graphhopper.GraphHopperTest.testPrepare":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":289,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":58,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":253,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":272,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":91,"com.graphhopper.util.InstructionListTest.testWayList":246,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":281,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":176,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":119,"com.graphhopper.GraphHopperAPITest.testDisconnected179":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":304,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":273,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":156,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":317,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":309,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":232,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":268,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":189,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":82,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":157,"com.graphhopper.reader.OSMReaderTest.testSort":207,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":284,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":294,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":329,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":219,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":308,"com.graphhopper.routing.PathTest.testWayList":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":139,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":271,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":279,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":122,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":21,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":200,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":146,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":286,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":316,"com.graphhopper.util.GHUtilityTest.testSort":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":161,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":50,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":61,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":334,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":34,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":140,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":307,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":1,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":107,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":25,"com.graphhopper.GraphHopperAPITest.testLoad":202,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":104,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.reader.OSMReaderTest.testBarriers":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":126,"com.graphhopper.routing.PathTest.testFound":310,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":182,"com.graphhopper.util.GHUtilityTest.testCopy":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":277,"com.graphhopper.routing.PathTest.testFindInstruction":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":27,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":52,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":67,"com.graphhopper.util.InstructionListTest.testEmptyList":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":89,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":43,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":77,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":259,"com.graphhopper.reader.PrinctonReaderTest.testRead":220,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":103,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":264,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":134,"com.graphhopper.util.InstructionListTest.testWayList2":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":192,"com.graphhopper.reader.OSMReaderTest.testFoot":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":165,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":162,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":163,"com.graphhopper.reader.OSMReaderTest.testOneWay":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":48,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":55,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":306,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":26,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":177,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":209,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":256,"com.graphhopper.routing.PathBidirRefTest.testExtract":318,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":228,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":198,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":225,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.util.GHUtilityTest.testSort2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":287,"com.graphhopper.reader.OSMReaderTest.testMain":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":141,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":142,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":4,"com.graphhopper.routing.PathBidirRefTest.testExtract2":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":201,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":183,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":38,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":98,"com.graphhopper.storage.GraphHopperStorageTest.testClone":62,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":158,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":132,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":72,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":79,"com.graphhopper.GraphHopperTest.testFootAndCar":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":5,"com.graphhopper.routing.PathTest.testTime":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":131,"com.graphhopper.util.GHUtilityTest.testSortDirected":241,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":174,"com.graphhopper.GraphHopperTest.testVia":230,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":282,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":214,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":102,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":326,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":83,"com.graphhopper.GraphHopperTest.testFootOnly":235,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":191,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":193,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":312,"com.graphhopper.util.InstructionListTest.testFind":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168},"transformations":[{"failures":[],"tindex":"aa4babbd-7918-11e5-b285-fd832e809e1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:197","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((\"nodes:\" + (com.graphhopper.util.PointList.getSize())) + \"; \") + (com.graphhopper.util.PointList.toString())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"aa4bd2ce-7918-11e5-b285-d1be8494bbb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:176","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((2 * 4))"},"status":-1},{"failures":[],"tindex":"aa4bd2cf-7918-11e5-b285-4b191cc72a0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[0,10,11,1,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,2,55,3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,4,102,103,104,105,5,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,6,223,224,225,226,227,228,229,230,231,232,233,234,7,8,9,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335],"tindex":"aa4bd2d0-7918-11e5-b285-65a4c2c9410d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"edges","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"aa4bf9e1-7918-11e5-b285-0d3318351b81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:116","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    TIntArrayList TIntArrayList = new TIntArrayList();\n    int int;\n    while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n        com.graphhopper.routing.util.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    com.graphhopper.routing.util.TIntArrayList.add(int);\n    com.graphhopper.routing.util.TIntArrayList.trimToSize();\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<com.graphhopper.routing.util.TIntArrayList>.add(com.graphhopper.routing.util.TIntArrayList);\n} "},"status":-2},{"failures":[],"tindex":"aa4bf9e2-7918-11e5-b285-c9999e6ebd20","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:537","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"aa4bf9e3-7918-11e5-b285-f1a1e11db5c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:536","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:556","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"aa4bf9e4-7918-11e5-b285-1da6fe6df5d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"len","bytes":"lonSize","segmentSizeInBytes":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"aa4bf9e5-7918-11e5-b285-cb77c9bd694b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:178","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"aa4bf9e6-7918-11e5-b285-2fe2b1ed0c33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:171","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"aa4c20f7-7918-11e5-b285-f57693bf1422","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"status":-2},{"failures":[],"tindex":"aa4c20f8-7918-11e5-b285-dfd7eeafbfd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"speed","sLon":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"aa4c20f9-7918-11e5-b285-5d8dbef65483","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], int)"},"status":-2},{"failures":[],"tindex":"aa4c20fa-7918-11e5-b285-0346d20ff2de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","index":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:428","type":"CtTryImpl","sourcecode":"try {\n    if (!(com.graphhopper.util.Constants.boolean)) {\n        java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))));\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"aa4c20fb-7918-11e5-b285-85cc88050292","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:185","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[],"tindex":"aa4c20fc-7918-11e5-b285-2f93f1320446","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"variableMap":{"heights":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"aa4c20fd-7918-11e5-b285-53783744d21c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"viaNode","from":"newEntryIndex","end":"viaNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int)"},"status":-2},{"failures":[],"tindex":"aa4c480e-7918-11e5-b285-cf938896b698","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"aa4c480f-7918-11e5-b285-b1afdbfec3bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"bytePos","hash":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-2},{"failures":[],"tindex":"aa4c4810-7918-11e5-b285-1548395ac028","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:118","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}