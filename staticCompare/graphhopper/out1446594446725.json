{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":94,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":136,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":107,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":31,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":93,"com.graphhopper.routing.QueryGraphTest.testOneWay":98,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":81,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":47,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":105,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":33,"com.graphhopper.GraphHopperTest.testPrepare":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":84,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":100,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":110,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":32,"com.graphhopper.GraphHopperAPITest.testDisconnected179":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":125,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":106,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":13,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":121,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":122,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":130,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":128,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":61,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":64,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":83,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":132,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":134,"com.graphhopper.GraphHopperTest.testFootAndCar":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":113,"com.graphhopper.util.InstructionListTest.testCreateGPX":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":120,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.GraphHopperTest.testVia":36,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":119,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":71,"com.graphhopper.GraphHopperAPITest.testLoad":90,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":62,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":95,"com.graphhopper.GraphHopperTest.testFootOnly":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":126,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":112,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":45,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":141},"transformations":[{"failures":[],"tindex":"3cd39b1b-8285-11e5-bda9-21ce3d581158","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:219","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"variableMap":{"a_lat_deg":"deltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:732","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"3cd3c22c-8285-11e5-bda9-fd2f5c3c79d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"3cd3c22d-8285-11e5-bda9-71614b1c597b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:449","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":-1},{"failures":[],"tindex":"3cd3c22e-8285-11e5-bda9-dd246335bb1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:749","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"3cd3c22f-8285-11e5-bda9-4d9f6feb2f5e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"variableMap":{"str":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:56","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[31,32,33,34,11,12,13,14,15,16,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,18,19,20,21,22,23,24,25,27,28,30],"tindex":"3cd3c230-8285-11e5-bda9-9369d667bf22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.this(100, 2)"},"status":-1},{"failures":[11,12,14,15,92,93,94,95,96,97,98,99],"tindex":"3cd3e941-8285-11e5-bda9-6560b26fb492","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:629","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    gnu.trove.set.hash.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int);\n} "},"status":-1},{"failures":[],"tindex":"3cd3e942-8285-11e5-bda9-f308bd7bc4b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:404","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"avoidSpeedLimit","pushingSections":"preferHighwayTags","intendedValues":"preferHighwayTags","speed":"avoidSpeedLimit","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:532","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    if (double < (int)) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else {\n    if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n}"},"status":0},{"failures":[11,12,13,14,15,16,36,37,38,39,40,41,43,44,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,81,118,119,120,121,82,83,122,123,84,124,125,126,127,128,90,91],"tindex":"3cd3e943-8285-11e5-bda9-6fe07ef151ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"ee","cl":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-1},{"failures":[2,5,7,10],"tindex":"3cd3e944-8285-11e5-bda9-f3b809636ec3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[129,130,131,132,133,134,36,37,38,39,40,41,43,46,47,48,52,54,55,57,135,136,137,62,63,64,68,70,71,73,81,83,84,19,20],"tindex":"3cd41055-8285-11e5-bda9-9159079b9f63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"r_lat_deg","r_lat":"r_lat_deg","a_lat":"r_lat_deg","delta_lon":"r_lat_deg","r_lon":"r_lat_deg","a_lon":"r_lat_deg","norm":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:139","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-1},{"failures":[],"tindex":"3cd41056-8285-11e5-bda9-f79dbedaa6a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:133","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[138,8,9,10],"tindex":"3cd41057-8285-11e5-bda9-d544b6bd5a45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"3cd41058-8285-11e5-bda9-8bc2f029f98d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"status":-2},{"failures":[139,140],"tindex":"3cd41059-8285-11e5-bda9-a571359fdb95","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:251","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double)).append(\"<\/gh:azimuth>\")"},"status":-1},{"failures":[],"tindex":"3cd4105a-8285-11e5-bda9-1b798121610d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:1002","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:191","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[141],"tindex":"3cd4376b-8285-11e5-bda9-9fcdf66cc20c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"turnCostsEntryBytes","indexDivisor":"turnCostsEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:113","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-1},{"failures":[],"tindex":"3cd4376c-8285-11e5-bda9-8909123cab50","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"unvisitedDeadEnds","bytes":"subnetworks","segmentSizeInBytes":"unvisitedDeadEnds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"optimize to remove subnetworks (\" + (int)) + \"), \") + \"unvisited-dead-end-nodes (\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"3cd4376d-8285-11e5-bda9-83b17d3ec84f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess);\n"},"status":-2},{"failures":[],"tindex":"3cd4376e-8285-11e5-bda9-a93404f40a2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"currentEntry","degree":"currentEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3cd3c22e-8285-11e5-bda9-dd246335bb1d","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"]},"type":"branch"}]}]}