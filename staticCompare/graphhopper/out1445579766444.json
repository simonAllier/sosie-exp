{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":284,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":294,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":110,"com.graphhopper.reader.OSMReaderTest.testFerry":211,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":343,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":24,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":291,"com.graphhopper.routing.QueryGraphTest.testOneWay":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":47,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":87,"com.graphhopper.reader.OSMReaderTest.testWithBounds":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":203,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":15,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":251,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":69,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":228,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":259,"com.graphhopper.GraphHopperTest.testPrepare":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":283,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":126,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":247,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":266,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":159,"com.graphhopper.util.InstructionListTest.testWayList":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":275,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":339,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":331,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":325,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":243,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":267,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":88,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":227,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":315,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":217,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":307,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":2,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":239,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":132,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":262,"com.graphhopper.GraphHopperTest.testLoadOSM":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":260,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":72,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":89,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":150,"com.graphhopper.reader.OSMReaderTest.testSort":214,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":278,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":166,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":156,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":288,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":299,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":7,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":210,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":306,"com.graphhopper.routing.PathTest.testWayList":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":57,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":86,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":273,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":175,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":17,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":83,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":64,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":280,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":314,"com.graphhopper.util.GHUtilityTest.testSort":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":93,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":269,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":206,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":116,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":58,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":165,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":167,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":181,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":241,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":138,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":21,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":171,"com.graphhopper.reader.OSMReaderTest.testBarriers":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":326,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":209,"com.graphhopper.routing.PathTest.testFound":308,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":271,"com.graphhopper.util.GHUtilityTest.testCopy":334,"com.graphhopper.routing.PathTest.testFindInstruction":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":172,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":183,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":208,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":135,"com.graphhopper.util.InstructionListTest.testEmptyList":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":274,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":109,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":157,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":279,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":199,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":253,"com.graphhopper.reader.PrinctonReaderTest.testRead":226,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":30,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":258,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":52,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":11,"com.graphhopper.util.InstructionListTest.testWayList2":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":75,"com.graphhopper.reader.OSMReaderTest.testFoot":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":97,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":94,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":95,"com.graphhopper.reader.OSMReaderTest.testOneWay":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":41,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":122,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":32,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":200,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":103,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":127,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":134,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":216,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":261,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":250,"com.graphhopper.routing.PathBidirRefTest.testExtract":316,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":235,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":207,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":233,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":232,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":101,"com.graphhopper.util.GHUtilityTest.testSort2":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":281,"com.graphhopper.reader.OSMReaderTest.testMain":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":59,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":60,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":189,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":18,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":8,"com.graphhopper.routing.PathBidirRefTest.testExtract2":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":98,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":84,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":66,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":194,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":4,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":27,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":90,"com.graphhopper.storage.GraphHopperStorageTest.testClone":130,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":63,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":140,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":147,"com.graphhopper.GraphHopperTest.testFootAndCar":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":23,"com.graphhopper.routing.PathTest.testTime":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":254,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":174,"com.graphhopper.util.GHUtilityTest.testSortDirected":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":39,"com.graphhopper.GraphHopperTest.testPrepareOnly":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":112,"com.graphhopper.GraphHopperTest.testVia":237,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":276,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":221,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":19,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":296,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":151,"com.graphhopper.GraphHopperTest.testFootOnly":245,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":76,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":310,"com.graphhopper.util.InstructionListTest.testFind":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":164},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"c041daa6-794a-11e5-9e72-3dee35d4c757","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"segmentSizeInBytes","to":"segmentSizeIntsPower","lonSize":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[306,307,310,311,312,314,315,346,339,340,347,341],"tindex":"c04228c7-794a-11e5-9e72-bdd5699ede3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:76","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>();\n    java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>);\n    com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation();\n    java.lang.String java.lang.String = com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation);\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = com.graphhopper.util.InstructionAnnotation.getMessage();\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"text\", com.graphhopper.util.Helper.firstBig(java.lang.String));\n    if (!(com.graphhopper.util.InstructionAnnotation.isEmpty())) {\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_text\", com.graphhopper.util.InstructionAnnotation.getMessage());\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_importance\", com.graphhopper.util.InstructionAnnotation.getImportance());\n    } \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime());\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3));\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign());\n    java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON());\n    int int = int + (com.graphhopper.util.Instruction.getPoints().size());\n    if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n        int--;\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int));\n    int = int;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"c0424fd8-794a-11e5-9e72-75475f626991","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:707","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"c0424fd9-794a-11e5-9e72-efd0700603a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"variableMap":{"len":"bytes","start":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"c0424fda-794a-11e5-9e72-93227d838657","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"value","speed":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromDouble(byte[], double, 0)"},"status":-2},{"failures":[],"tindex":"c0424fdb-794a-11e5-9e72-ff4ed5f8b011","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:353","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"c04276ec-794a-11e5-9e72-5f54bada9d87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:648","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"variableMap":{"delExplorer":"explorer","removeNode":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:196","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"c04276ed-794a-11e5-9e72-6b7155adea48","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:532","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"c04276ee-794a-11e5-9e72-dfce50f62c39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            TLongList TLongList = new TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            com.graphhopper.reader.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"c04276ef-794a-11e5-9e72-45b9ba1497ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:524","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c0429d00-794a-11e5-9e72-cb9c6e92ae00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"c0429d01-794a-11e5-9e72-176fa583fd05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:125","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"c0429d02-794a-11e5-9e72-1765c6d094b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:272","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.CHGraphImpl.getNodes()"},"status":-2},{"failures":[],"tindex":"c042c413-794a-11e5-9e72-31a1db6a742d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"sw2":"dijkstraSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"c042c414-794a-11e5-9e72-8f446af51a23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"variableMap":{"dataAccess":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"status":-2},{"failures":[],"tindex":"c042c415-794a-11e5-9e72-7bb50d434747","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:217","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"c042c416-794a-11e5-9e72-a34e531aedca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator)"},"variableMap":{"res":"res","iter":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-2},{"failures":[],"tindex":"c042eb27-794a-11e5-9e72-3d16d954ba93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:292","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[][][(int + 1)]"},"variableMap":{"seg":"bytes","bufferIndex":"s","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:166","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = byte[]"},"status":-2},{"failures":[],"tindex":"c042eb28-794a-11e5-9e72-9d6aca268db3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.flagEncoders\", com.graphhopper.routing.util.EncodingManager.toDetailsString())"},"status":-2},{"failures":[],"tindex":"c042eb29-794a-11e5-9e72-99c8f4b32ca6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"speed","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}