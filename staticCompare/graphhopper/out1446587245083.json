{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":113,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":220,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.reader.OSMReaderTest.testFerry":63,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":137,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":138,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":119,"com.graphhopper.routing.QueryGraphTest.testOneWay":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":216,"com.graphhopper.reader.OSMReaderTest.testWithBounds":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":75,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":170,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":281,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":94,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":264,"com.graphhopper.GraphHopperTest.testPrepare":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":82,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":283,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":100,"com.graphhopper.util.InstructionListTest.testWayList":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":107,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":140,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":247,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":101,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":217,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":74,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":177,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":96,"com.graphhopper.GraphHopperTest.testLoadOSM":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":224,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":218,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":253,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":286,"com.graphhopper.reader.OSMReaderTest.testSort":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":3,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":91,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":117,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":293,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":156,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":65,"com.graphhopper.routing.PathTest.testWayList":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":268,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":99,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":185,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":213,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":73,"com.graphhopper.util.GHUtilityTest.testSort":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":165,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":198,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":243,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":241,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":179,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":187,"com.graphhopper.GraphHopperAPITest.testLoad":129,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":116,"com.graphhopper.util.TranslationMapTest.testToString":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.routing.PathTest.testFound":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":172,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":33,"com.graphhopper.util.GHUtilityTest.testCopy":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":61,"com.graphhopper.routing.PathTest.testFindInstruction":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":12,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":15,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":166,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":231,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":35,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":30,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":188,"com.graphhopper.reader.PrinctonReaderTest.testRead":145,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":93,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":118,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":265,"com.graphhopper.util.InstructionListTest.testWayList2":142,"com.graphhopper.reader.OSMReaderTest.testFoot":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":173,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":222,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":292,"com.graphhopper.reader.OSMReaderTest.testOneWay":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":255,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":29,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":257,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":168,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":276,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":266,"com.graphhopper.routing.PathBidirRefTest.testExtract":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":244,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":144,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":43,"com.graphhopper.util.GHUtilityTest.testSort2":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":111,"com.graphhopper.reader.OSMReaderTest.testMain":148,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":249,"com.graphhopper.routing.PathBidirRefTest.testExtract2":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":226,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":214,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":262,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":192,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":114,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":219,"com.graphhopper.storage.GraphHopperStorageTest.testClone":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":271,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":288,"com.graphhopper.GraphHopperTest.testFootAndCar":50,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":164,"com.graphhopper.routing.PathTest.testTime":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":169,"com.graphhopper.util.GHUtilityTest.testSortDirected":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":21,"com.graphhopper.GraphHopperTest.testPrepareOnly":56,"com.graphhopper.GraphHopperTest.testVia":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":234,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":108,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":200,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":250,"com.graphhopper.GraphHopperTest.testFootOnly":57,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":205,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":151,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":69,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":260,"com.graphhopper.util.InstructionListTest.testFind":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":228},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"78503e3b-8274-11e5-93c9-395c89fd0340","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"variableMap":{"bitsForEdgeFlags":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"7850654c-8274-11e5-93c9-998ce368c125","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"current","factor":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:72","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getEdge()"},"status":-1},{"failures":[54,55],"tindex":"78508c5d-8274-11e5-93c9-176e0b2ed1c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":-1},{"failures":[],"tindex":"78508c5e-8274-11e5-93c9-abd5467bf73b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"variableMap":{"indicesCopy":"removedNodes","filledIndices":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"status":0},{"failures":[],"tindex":"78508c5f-8274-11e5-93c9-9f1be4b6d503","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"variableMap":{"priorityWayEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"78508c60-8274-11e5-93c9-f73efd4256f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[56,47,48,49,50,51,52,53,57,58],"tindex":"78508c61-8274-11e5-93c9-bbe2c5bdae5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"status":-1},{"failures":[59,60,61,62],"tindex":"78508c62-8274-11e5-93c9-4d971dd3ac2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:246","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[63],"tindex":"7850b373-8274-11e5-93c9-b9e84d5fe474","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-1},{"failures":[64],"tindex":"7850b374-8274-11e5-93c9-f5d6d759f9e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"7850b375-8274-11e5-93c9-df6cafa63a88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"lon","java.lang.Math.PI":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:677","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double)"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,0,1,75,2,76,3,4,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,33,105,106,34,107,108,109,110,35,36,111,112,37,113,114,115,116,117,38,118,119,39,40,41,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,63,147,148,149,150,54,55,64,151,152,153,154,155,156,157,42,43,44,45,46,158,47,48,49,50,51,52,159,53,57,58,160,161,5,162,163,164,165,166,7,8,167,168,169,170,171,172,10,11,173,174,175,176,177,178,179,180,181,182,12,183,184,185,186,187,14,15,188,189,190,191,192,193,17,18,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,19,256,257,258,259,260,21,22,261,262,263,264,265,266,24,25,267,268,269,270,271,272,273,274,275,276,26,277,278,279,280,281,28,29,282,283,284,285,286,287,31,32,288,289,290,291,292],"tindex":"7850da86-8274-11e5-93c9-23e4ae7709d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"E_NODEB","speed":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:47","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"78537297-8274-11e5-93c9-9bebd5b06dab","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:39","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(1, ((int) / 3))"},"variableMap":{"counts":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"78537298-8274-11e5-93c9-658a9449c874","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:133","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TIntList.reverse()"},"status":0},{"failures":[64],"tindex":"78537299-8274-11e5-93c9-0152c049b5a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-1},{"failures":[35,36,38,293,125,47],"tindex":"7853729a-8274-11e5-93c9-153a97356236","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:180","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"variableMap":{"this":"this","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"status":-1},{"failures":[],"tindex":"785399ab-8274-11e5-93c9-99939c5e901f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.NaN","weight":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:219","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[294],"tindex":"785399ac-8274-11e5-93c9-93979c765845","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:96","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"id\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"status":-1},{"failures":[90],"tindex":"785399ad-8274-11e5-93c9-09cd6eca607b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}