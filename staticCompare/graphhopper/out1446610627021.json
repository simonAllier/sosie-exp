{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":30,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":64,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":45,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":72,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":1,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":4,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":68,"com.graphhopper.routing.QueryGraphTest.testOneWay":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":27,"com.graphhopper.routing.PathTest.testWayList":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":76,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":39,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":18,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":42,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":91,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":60,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":90,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":26,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":44,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":46,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":86,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":87,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":69,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":70,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":73,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":23,"com.graphhopper.util.PointListTest.testAddPL":43,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":38,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":13,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":88,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":24,"com.graphhopper.GraphHopperTest.testPrepareOnly":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":37,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":89,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":31,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":79,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":41,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":6,"com.graphhopper.GraphHopperTest.testLoadOSM":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":83},"transformations":[{"failures":[],"tindex":"e908fee4-82aa-11e5-a415-8315405121c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[],"tindex":"e90925f5-82aa-11e5-a415-1d98dc074768","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:315","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, int)"},"status":0},{"failures":[0],"tindex":"e90925f6-82aa-11e5-a415-97ee3dd1e078","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:57","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>.add(new com.graphhopper.reader.OSMRelation.Member(javax.xml.stream.XMLStreamReader))"},"status":-1},{"failures":[],"tindex":"e90925f7-82aa-11e5-a415-536d6004a4a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:141","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.loadExisting()"},"variableMap":{"inner":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.isClosed()"},"status":-2},{"failures":[],"tindex":"e9094d08-82aa-11e5-a415-7b481a64422e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:534","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.LockFactory = new com.graphhopper.storage.SimpleFSLockFactory()"},"variableMap":{"lockFactory":"lockFactory"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:536","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.LockFactory = new com.graphhopper.storage.NativeFSLockFactory()"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"e9094d09-82aa-11e5-a415-b151b6472507","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"index","edgeId":"index","nodeA":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[1,2,3,4,33,5,34,6,7,8,9,10,11,35,12,36,13,14,15,16,17,18,37,19,38,20,21,22,23,24,25,39,26,40,27,28,29,41,42,30,31],"tindex":"e9094d0a-82aa-11e5-a415-2562df0b6220","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"oldOffset","capacity":"newOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:722","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < (int) ; long += 4) {\n    com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n}"},"status":-1},{"failures":[],"tindex":"e9094d0b-82aa-11e5-a415-c54a2b7a54f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"variableMap":{"store":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"status":0},{"failures":[],"tindex":"e9094d0c-82aa-11e5-a415-ad6fec0cd71b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"i","maxLeafEntries":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:273","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"e909741d-82aa-11e5-a415-a575662b2f4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:111","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[82,57,58,83,84,85,86],"tindex":"e909741e-82aa-11e5-a415-0baff439fe36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:605","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometryHeader()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:467","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadEdgesHeader()"},"status":-1},{"failures":[],"tindex":"e909741f-82aa-11e5-a415-c13216ddf6f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"e9097420-82aa-11e5-a415-4146ce4afa15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"flags","ferryBit":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:373","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"e9097421-82aa-11e5-a415-3154f6c2fe37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"variableMap":{"p":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"e9097422-82aa-11e5-a415-2b9eb0dfb073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.Circle.this(double, double, double, com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc)"},"status":-2},{"failures":[87],"tindex":"e9097423-82aa-11e5-a415-09f7d93b8e70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:344","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[82,57,88,58,83,89,84,90,91,85,86],"tindex":"e9097424-82aa-11e5-a415-ffbbfbb251ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:110","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.toLowerCase(), java.lang.String)"},"variableMap":{"map":"map","value":"val","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:84","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"e9099b35-82aa-11e5-a415-c300a84e865e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e9094d08-82aa-11e5-a415-7b481a64422e","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).e2","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().b","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).b","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_boolean_tryLock().e3","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_boolean_isLocked().b","com.graphhopper.storage.SimpleFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).t1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().e1","com.graphhopper.storage.SimpleFSLockFactory_void_setLockDir(java.io.File).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_com.graphhopper.storage.NativeFSLockFactory$NativeLock(java.io.File,java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e2","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_void_release().e1","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e4","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e5","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_tryLock().e6","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().b","com.graphhopper.storage.SimpleFSLockFactory_void_forceRemove(java.lang.String,boolean).b","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_com.graphhopper.storage.SimpleFSLockFactory$SimpleLock(java.io.File,java.lang.String).b","com.graphhopper.storage.SimpleFSLockFactory_com.graphhopper.storage.SimpleFSLockFactory().b","com.graphhopper.storage.SimpleFSLockFactory_void_forceRemove(java.lang.String,boolean).t1","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().t1","com.graphhopper.storage.SimpleFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_void_release().b","com.graphhopper.storage.NativeFSLockFactory$NativeLock_boolean_lockExists().b","com.graphhopper.storage.SimpleFSLockFactory$SimpleLock_boolean_tryLock().b","com.graphhopper.storage.SimpleFSLockFactory_void_forceRemove(java.lang.String,boolean).e2","com.graphhopper.storage.NativeFSLockFactory_com.graphhopper.storage.Lock_create(java.lang.String,boolean).e1"]},"type":"branch"}]},{"transformation":"e90925f5-82aa-11e5-a415-1d98dc074768","diffs":[{"methodsDiff":{"delete":["java.lang.String.substring"]},"type":"staticDiff"}]},{"transformation":"e9094d0b-82aa-11e5-a415-c54a2b7a54f4","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}