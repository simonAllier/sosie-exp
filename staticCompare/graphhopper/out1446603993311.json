{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":137,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":288,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":294,"com.graphhopper.util.BitUtilBigTest.testToDouble":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.reader.OSMReaderTest.testFerry":53,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":84,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":85,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":286,"com.graphhopper.routing.QueryGraphTest.testOneWay":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":217,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":187,"com.graphhopper.reader.OSMReaderTest.testWithBounds":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":237,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":290,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":142,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":163,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":260,"com.graphhopper.GraphHopperTest.testPrepare":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":281,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":154,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":249,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":266,"com.graphhopper.util.InstructionListTest.testWayList":88,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":275,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":194,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":131,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":188,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":234,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":204,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":151,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":77,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":262,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":2,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":174,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":199,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":277,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":94,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":284,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":28,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":273,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":25,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":228,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":278,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":30,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":233,"com.graphhopper.util.GHUtilityTest.testSort":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":5,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":122,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":157,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":225,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":245,"com.graphhopper.util.BitUtilBigTest.testToLong":298,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":43,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":104,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":50,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":283,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":236,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":156,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":214,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":13,"com.graphhopper.util.GHUtilityTest.testCopy":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":271,"com.graphhopper.routing.PathTest.testFindInstruction":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":263,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":106,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":274,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":179,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":119,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":255,"com.graphhopper.reader.PrinctonReaderTest.testRead":66,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":130,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":259,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":220,"com.graphhopper.util.InstructionListTest.testWayList2":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":18,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":144,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":296,"com.graphhopper.coll.IntIntBinHeapTest.test0":0,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":6,"com.graphhopper.reader.OSMReaderTest.testOneWay":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":201,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":139,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":155,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":161,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":261,"com.graphhopper.routing.PathBidirRefTest.testExtract":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":252,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":74,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":12,"com.graphhopper.util.GHUtilityTest.testSort2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":279,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":47,"com.graphhopper.routing.PathBidirRefTest.testExtract2":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":26,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":14,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":115,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":256,"com.graphhopper.storage.StorablePropertiesTest.testStore":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":3,"com.graphhopper.storage.GraphHopperStorageTest.testClone":158,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":49,"com.graphhopper.GraphHopperTest.testFootAndCar":78,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":172,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":99,"com.graphhopper.GraphHopperTest.testPrepareOnly":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":210,"com.graphhopper.GraphHopperTest.testVia":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":276,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":197,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":289,"com.graphhopper.GraphHopperTest.testFootOnly":79,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":193,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":60,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":138,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":209,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":231,"com.graphhopper.util.InstructionListTest.testFind":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":202},"transformations":[{"failures":[0],"tindex":"770ab3e3-829b-11e5-ac05-27df994e9fab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.poll_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_key()"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"770b0204-829b-11e5-ac05-37ecb9b9d71c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"status":-1},{"failures":[],"tindex":"770b0205-829b-11e5-ac05-4359f50d3f19","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMaxRegionSearch(int)"},"variableMap":{"tmpIndex":"this","maxRegionSearch":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"status":0},{"failures":[],"tindex":"770b0206-829b-11e5-ac05-5f1a42b6db02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[27,28],"tindex":"770b2917-829b-11e5-ac05-ed20b3e94531","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:119","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int"},"status":-1},{"failures":[29,30],"tindex":"770b2918-829b-11e5-ac05-d5558ecf9a9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()));\n} "},"status":-1},{"failures":[31,32,33,34,35],"tindex":"770b2919-829b-11e5-ac05-3b32e50df796","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"770b291a-829b-11e5-ac05-c5dc86d67ea3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"variableMap":{"entry":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:125","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[27,28],"tindex":"770b502b-829b-11e5-ac05-d12fbe786463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"770b502c-829b-11e5-ac05-35c7e74d8fbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:86","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true);\n"},"status":0},{"failures":[49],"tindex":"770b502d-829b-11e5-ac05-f93b65adb260","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"maxSpeed","shortTripsSpeed":"fwdSpeed","durationInHours":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"770b502e-829b-11e5-ac05-7b9ee6971768","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:157","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:242","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (com.graphhopper.routing.util.EncodingManager.getBytesForFlags()) == 8"},"status":-2},{"failures":[50],"tindex":"770b502f-829b-11e5-ac05-ffdb17faf82f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"770b7740-829b-11e5-ac05-634d4d221c05","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"variableMap":{"intLen":"segmentNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:108","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.util.List<byte[]>.get(int)"},"status":-2},{"failures":[31,51],"tindex":"770b7741-829b-11e5-ac05-8f3352266bed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:720","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"variableMap":{"graphHopperFolder":"tmpOsmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:512","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"770b7742-829b-11e5-ac05-29d085499d47","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"770b7743-829b-11e5-ac05-8ddeccd0ac08","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":0},{"failures":[52,53,54,55,56,57,58,59,27,60,61,62,63,64,65,28,66,67,68,36,69,70,71,72,73,74,75,31,76,77,78,37,38,39,40,79,51,80,81,82,83,84,85,86,87,88,89,90,91,92,42,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,44,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,1,187,188,2,3,189,5,6,7,8,9,10,11,12,190,13,14,15,191,192,16,17,193,19,20,21,22,23,24,25,26,194,195,196,47,197,198,48,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,32,278,279,280,281,282,283,284,33,285,286,287,288,289,290,291,292,35,293,294,295,296],"tindex":"770b9e54-829b-11e5-ac05-d7279aab7f78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"newOrExistingEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-1},{"failures":[297,298],"tindex":"770bc565-829b-11e5-ac05-a7cd14d44aab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"offset","dLat":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:78","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[86,299],"tindex":"770bc566-829b-11e5-ac05-8d55b9c01230","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"instructionIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:303","type":"CtIfImpl","sourcecode":"if (!((int == 0) && (int == 0))) {\n    double double;\n    int int = int;\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    } else {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    }\n    if (double < double) {\n        double = double;\n        int = int;\n    } \n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"770b502c-829b-11e5-ac05-35c7e74d8fbb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}