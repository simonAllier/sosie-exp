{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":248,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":181,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":234,"com.graphhopper.reader.OSMReaderTest.testFerry":96,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":320,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":321,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":177,"com.graphhopper.reader.OSMReaderTest.testWithBounds":106,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":252,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":26,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":148,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":174,"com.graphhopper.GraphHopperTest.testPrepare":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":58,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":22,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":129,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.util.InstructionListTest.testWayList":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":50,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":315,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":313,"com.graphhopper.GraphHopperAPITest.testDisconnected179":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":241,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":178,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":10,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":71,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":230,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":263,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":85,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":223,"com.graphhopper.GraphHopperTest.testLoadOSM":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":151,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":179,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":274,"com.graphhopper.reader.OSMReaderTest.testSort":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":70,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":31,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":200,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":63,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":1,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":300,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":199,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":48,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":268,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":306,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":9,"com.graphhopper.util.GHUtilityTest.testSort":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":303,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":20,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":231,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":195,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":219,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":267,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":169,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":90,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":211,"com.graphhopper.GraphHopperAPITest.testLoad":93,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":62,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":272,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":73,"com.graphhopper.reader.OSMReaderTest.testBarriers":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.routing.PathTest.testFound":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":254,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":238,"com.graphhopper.util.GHUtilityTest.testCopy":309,"com.graphhopper.routing.PathTest.testFindInstruction":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":203,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":213,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":243,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":193,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":139,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":54,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":324,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":225,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":215,"com.graphhopper.util.shapes.CircleTest.testContains":327,"com.graphhopper.reader.PrinctonReaderTest.testRead":109,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":33,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":295,"com.graphhopper.util.InstructionListTest.testWayList2":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":154,"com.graphhopper.reader.OSMReaderTest.testFoot":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":257,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":184,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":143,"com.graphhopper.reader.OSMReaderTest.testOneWay":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":229,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":288,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":32,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":164,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":249,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":172,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":82,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":256,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":232,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":255,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":191,"com.graphhopper.util.GHUtilityTest.testSort2":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":56,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":246,"com.graphhopper.reader.OSMReaderTest.testMain":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":218,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":269,"com.graphhopper.routing.PathBidirRefTest.testExtract2":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":163,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":291,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":221,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":30,"com.graphhopper.storage.GraphHopperStorageTest.testClone":117,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":180,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":305,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":126,"com.graphhopper.GraphHopperTest.testFootAndCar":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":240,"com.graphhopper.routing.PathTest.testTime":4,"com.graphhopper.util.InstructionListTest.testCreateGPX":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":294,"com.graphhopper.util.GHUtilityTest.testSortDirected":311,"com.graphhopper.GraphHopperTest.testPrepareOnly":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":286,"com.graphhopper.GraphHopperTest.testVia":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":196,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":51,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":322,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":147,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":270,"com.graphhopper.GraphHopperTest.testFootOnly":91,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":153,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":155,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":285,"com.graphhopper.util.InstructionListTest.testFind":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":277},"transformations":[{"failures":[],"tindex":"7ba2769b-8299-11e5-a1f9-cd631522b5d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"ee","currEdge":"ee","nEdge":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:212","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"7ba29dac-8299-11e5-a1f9-317c02cdf56a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"variableMap":{"res":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:204","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)) >= (com.graphhopper.routing.PathBidirRef.getWeight())"},"status":-2},{"failures":[],"tindex":"7ba29dad-8299-11e5-a1f9-4b4b58469560","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"status":-2},{"failures":[],"tindex":"7ba29dae-8299-11e5-a1f9-1bb799ed42eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:56","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":0},{"failures":[],"tindex":"7ba29daf-8299-11e5-a1f9-6b8f26f9341b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"longSegmentSize","tmpValue":"longSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:146","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.util.List<java.nio.ByteBuffer>.size()) * long"},"status":0},{"failures":[],"tindex":"7ba29db0-8299-11e5-a1f9-e3f8898c3e73","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"updatedInGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:684","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"7ba2c4c1-8299-11e5-a1f9-f54a30f04a79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:56","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"7ba2c4c2-8299-11e5-a1f9-6d73216f9355","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"7ba2c4c3-8299-11e5-a1f9-33ab58c57fbd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:683","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"tindex":"7ba2c4c4-8299-11e5-a1f9-cd0e3d8e9518","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:147","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"7ba2ebd5-8299-11e5-a1f9-b11e91036d72","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:96","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n    int = com.graphhopper.util.EdgeIterator.getEdge();\n    break;\n} "},"variableMap":{"edgeIdFrom":"edgeIdFrom","fromOsmWayId":"fromOsmWayId","osmReader":"osmReader","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"7ba2ebd6-8299-11e5-a1f9-47c69169d082","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"y1","nextEdgeOther":"y2","nodeOther":"x1","nextEdge":"x2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.bresenham(int, int, int, int, com.graphhopper.storage.index.PointEmitter)"},"status":0},{"failures":[322,323,318],"tindex":"7ba2ebd7-8299-11e5-a1f9-f7a044719fa1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\")"},"status":-1},{"failures":[91],"tindex":"7ba2ebd8-8299-11e5-a1f9-831f337634c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:887","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"status":-1},{"failures":[8,160,188,193,195,196,314,324,325,326,327],"tindex":"7ba312e9-8299-11e5-a1f9-9713f130d73f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"fromLon","com.graphhopper.util.DistanceCalcEarth.C":"fromLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:79","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-1},{"failures":[22,24,30,31,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,62,63,64,77,78,79,80,81,82,83,84,85,86,87,88,90,91,93],"tindex":"7ba312ea-8299-11e5-a1f9-ab8d19920c55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-1},{"failures":[75,76,83,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,328,106,107,108],"tindex":"7ba312eb-8299-11e5-a1f9-090a1a580fd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.printInfo(\"way\")"},"status":-1},{"failures":[],"tindex":"7ba312ec-8299-11e5-a1f9-81dd091bed76","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:239","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile);\n    if (long < 0)\n        return false;\n    \n    com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, (long - (com.graphhopper.storage.AbstractDataAccess.int)), false);\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[329],"tindex":"7ba312ed-8299-11e5-a1f9-b5e0ac6fba13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"\\'from\\' cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:310","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative or NaN: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7ba2c4c3-8299-11e5-a1f9-33ab58c57fbd","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":["com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.storage.DAType_java.lang.String_toString().e4"]},"type":"branch"}]},{"transformation":"7ba29dae-8299-11e5-a1f9-1bb799ed42eb","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}