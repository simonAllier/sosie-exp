{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":6,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":60,"com.graphhopper.routing.PathTest.testFindInstruction":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":8,"com.graphhopper.routing.PathBidirRefTest.testExtract2":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":36,"com.graphhopper.routing.PathTest.testWayList":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":32,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":5,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":7,"com.graphhopper.util.InstructionListTest.testWayList2":47,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":20,"com.graphhopper.util.InstructionListTest.testWayList":46,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":64,"com.graphhopper.GraphHopperTest.testPrepareOnly":61,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":43,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":39,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":37,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.GraphHopperTest.testFootOnly":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":30,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":65,"com.graphhopper.routing.PathBidirRefTest.testExtract":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":51,"com.graphhopper.util.InstructionListTest.testFind":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":49,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":11},"transformations":[{"failures":[],"tindex":"18834e66-8293-11e5-ba5c-9b1c7a4ac4fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"18837577-8293-11e5-ba5c-658c378a7ecc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:67","type":"CtIfImpl","sourcecode":"if ((int) >= (byte[].int)) {\n    int int = java.lang.Math.max(10, ((int)((int) * 1.5F)));\n    byte[] = java.util.Arrays.copyOf(byte[], int);\n} "},"status":-2},{"failures":[],"tindex":"18837578-8293-11e5-ba5c-1d8b62083524","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"18837579-8293-11e5-ba5c-893e15fd106d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"unvisitedDeadEnds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:75","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter = new com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter(com.graphhopper.routing.util.FlagEncoder);\n    if ((int) > 0)\n        int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    \n    java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter, java.util.List<gnu.trove.list.array.TIntArrayList>);\n    int = java.lang.Math.max(java.util.List<gnu.trove.list.array.TIntArrayList>.size(), int);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"1883757a-8293-11e5-ba5c-37c40184a35a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:260","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean)"},"status":-1},{"failures":[15,16],"tindex":"1883757b-8293-11e5-ba5c-6d7492c14afd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:445","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"18839c8c-8293-11e5-ba5c-1f1adebc94bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:113","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false)"},"status":0},{"failures":[],"tindex":"18839c8d-8293-11e5-ba5c-bd4fd3147815","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"numOfWorkers"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:987","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[17,0,18,1,2,19,20,21,22,23,3,24,4,5,6,25,7,26,27,8,28,29,30,9,31,10,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,16,48,49,11,50,12,13,51,52,53,54,14,55,56,57,58],"tindex":"18839c8e-8293-11e5-ba5c-4557ab39fe38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:101","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[15],"tindex":"18839c8f-8293-11e5-ba5c-015b0ef64846","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:432","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:439","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"18839c90-8293-11e5-ba5c-ef66b3d55bd5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"tmpNewShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:698","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"1883c3a1-8293-11e5-ba5c-b59561ad9f08","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"shortcutEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:623","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":0},{"failures":[],"tindex":"1883c3a2-8293-11e5-ba5c-afc4d1acbd4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String)"},"variableMap":{"location":"location","dir":"outdir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:311","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean)"},"status":0},{"failures":[],"tindex":"1883c3a3-8293-11e5-ba5c-65dfba829710","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:139","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":-2},{"failures":[59,60,13],"tindex":"1883c3a4-8293-11e5-ba5c-7b822fcb52e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:450","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState : java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false);\n}"},"status":-1},{"failures":[],"tindex":"1883c3a5-8293-11e5-ba5c-c11d0b90200d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:81","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"1883c3a6-8293-11e5-ba5c-612fb9ff3b69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:921","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) {\n    if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n        long = com.graphhopper.reader.OSMRelation.Member.ref();\n    } else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n        long = com.graphhopper.reader.OSMRelation.Member.ref();\n    } \n} else if (((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) && (\"via\".equals(com.graphhopper.reader.OSMRelation.Member.role()))) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"1883eab7-8293-11e5-ba5c-eda504ee05fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"offset","tmpNode":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:176","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.setInput(byte[], int, int)"},"status":-2},{"failures":[61,55,56,57,62],"tindex":"1883eab8-8293-11e5-ba5c-1f1df531cee3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-1},{"failures":[63,64,27,28,30,9,10,32,65],"tindex":"1883eab9-8293-11e5-ba5c-cb8606379478","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"priority","edgeId":"priority","com.graphhopper.storage.EdgeAccess.NO_NODE":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:279","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1883c3a2-8293-11e5-ba5c-afc4d1acbd4c","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testSort":["com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e1","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t7","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess(java.lang.String,java.lang.String,java.nio.ByteOrder,boolean).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e6","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e5","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.DAType_java.lang.String_toString().t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).e1","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.MMapDataAccess_int_getInt(long).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e3","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().b","com.graphhopper.storage.DAType_boolean_isMMap().b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().b","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_setInt(long,int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().e1","com.graphhopper.storage.RAMIntDataAccess_void_flush().b","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t2","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).b","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().l1","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).l5","com.graphhopper.storage.RAMIntDataAccess_void_flush().e1","com.graphhopper.storage.MMapDirectory_com.graphhopper.storage.MMapDirectory(java.lang.String).b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e2","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).l7","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b"],"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":["com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e1","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess(java.lang.String,java.lang.String,java.nio.ByteOrder,boolean).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t7","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e6","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e3","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e5","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.DAType_java.lang.String_toString().t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).e1","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.MMapDataAccess_int_getInt(long).b","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().b","com.graphhopper.storage.DAType_boolean_isMMap().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e3","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().b","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_setInt(long,int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().e1","com.graphhopper.storage.RAMIntDataAccess_void_flush().b","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t2","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).b","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().l1","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.RAMDirectory_com.graphhopper.storage.RAMDirectory(java.lang.String,boolean).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).l5","com.graphhopper.storage.RAMIntDataAccess_void_flush().e1","com.graphhopper.storage.MMapDirectory_com.graphhopper.storage.MMapDirectory(java.lang.String).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).l7","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e2","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b"]},"type":"branch"}]},{"transformation":"18839c8c-8293-11e5-ba5c-1f1adebc94bf","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool","com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue"]},"type":"staticDiff"}]}]}