{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":23,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":49,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":37,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":14,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":46,"com.graphhopper.GraphHopperTest.testPrepareOnly":41,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":22,"com.graphhopper.GraphHopperTest.testFootOnly":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":6,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":26,"com.graphhopper.util.GHUtilityTest.testCopy":48},"transformations":[{"failures":[],"tindex":"ede0cb0c-7943-11e5-8583-93b9fcc3c201","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"ede0f21d-7943-11e5-8583-a534c3b5f218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[49,50,3,4,5,6,7,8,9,10,11,51,12,13,14,15,16,17,18,19,20,52,53,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,54,42,43,44,45,46],"tindex":"ede1192e-7943-11e5-8583-07a2b0ab0b3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"toSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"ede1192f-7943-11e5-8583-8149da4e0e40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:937","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type)"},"variableMap":{"viaNodeID":"viaNodeID","fromWayID":"viaNodeID","toWayID":"fromWayID","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:935","type":"CtIfImpl","sourcecode":"if (((long >= 0) && (long >= 0)) && (long >= 0)) {\n    return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type);\n} "},"status":-2},{"failures":[],"tindex":"ede11930-7943-11e5-8583-6bff5b83d07e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:328","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.DataAccess.ensureCapacity((((long)(int)) * (int)))"},"status":-2},{"failures":[],"tindex":"ede14041-7943-11e5-8583-ab9038b41980","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:951","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.GHRequest.getVehicle()"},"status":-2},{"failures":[],"tindex":"ede14042-7943-11e5-8583-77007c975c47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:286","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":-2},{"failures":[],"tindex":"ede14043-7943-11e5-8583-5ddf5387ebeb","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":-2},{"failures":[],"tindex":"ede14044-7943-11e5-8583-e18b48c54d18","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"ede16755-7943-11e5-8583-a78f1d2e1aa6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:151","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long));\n    long += long;\n}"},"status":-2},{"failures":[],"tindex":"ede16756-7943-11e5-8583-2b6aaf7f6a8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:129","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"variableMap":{"reverseOrder":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:197","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n        continue;\n    \n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean);\n    double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n    if (com.graphhopper.storage.EdgeEntry == null) {\n        com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n        com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.storage.EdgeEntry.double = double;\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else\n        continue;\n    \n    if (boolean)\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    \n}"},"status":-2},{"failures":[],"tindex":"ede18e67-7943-11e5-8583-9f9f771ecb4d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"ede18e68-7943-11e5-8583-437634de097c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:151","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean)"},"status":-2},{"failures":[],"tindex":"ede18e69-7943-11e5-8583-83ad2df8d1cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"ede18e6a-7943-11e5-8583-8d72048321d5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:424","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"fetchWayGeometry\")"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"ede1b57b-7943-11e5-8583-9b787006d7b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:186","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"ede1b57c-7943-11e5-8583-d7fd56a42caa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:138","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"variableMap":{"keys":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:80","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) / 4"},"status":-2},{"failures":[],"tindex":"ede1b57d-7943-11e5-8583-a31593379496","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"degree","guess":"degree","low":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:556","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"ede1b57e-7943-11e5-8583-9722b7d3dffe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:39","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.DijkstraBidirectionRef(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode())"},"variableMap":{"opts":"this","g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"ede1dc8f-7943-11e5-8583-fb72d8081b92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"ghLocation","configuredCHWeightings":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:739","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String));\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}