{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":27,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":70,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":30,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":75,"com.graphhopper.reader.OSMReaderTest.testMain":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":62,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":53,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":19,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":61,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.routing.PathTest.testWayList":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.coll.OSMIDMapTest.testGet2":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.reader.OSMReaderTest.testWithBounds":90,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":86,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":57,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":24,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":36,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":39,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":68,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":60,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":52,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.util.InstructionListTest.testWayList2":44,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":58,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":73,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":76,"com.graphhopper.coll.OSMIDMapTest.testGetLong":4,"com.graphhopper.util.InstructionListTest.testWayList":43,"com.graphhopper.reader.OSMReaderTest.testOneWay":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":26,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.GraphHopperTest.testPrepareOnly":7,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":22,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":32,"com.graphhopper.coll.OSMIDMapTest.testGet":1,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.util.TranslationMapTest.testToString":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":33,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":87,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":81,"com.graphhopper.reader.OSMReaderTest.testBarriers":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":66,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":51,"com.graphhopper.reader.OSMReaderTest.testSort":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":63},"transformations":[{"failures":[0],"tindex":"e21cc569-827c-11e5-a9e3-d3e1dcc609c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"newAdjIndex","b":"newBaseIndex","this":"toSortedGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:257","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"status":-1},{"failures":[],"tindex":"e21cec7a-827c-11e5-a9e3-ed6dfedf9920","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CmdArgs.merge(com.graphhopper.util.CmdArgs)"},"variableMap":{"args":"properties","tmp":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:47","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[1,2,3,4,5],"tindex":"e21cec7b-827c-11e5-a9e3-f3ee3978ccad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"highKey","ferryBit":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"status":-1},{"failures":[],"tindex":"e21d138c-827c-11e5-a9e3-639d89c972a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[6,7,8,9,10,0,11,12,13,14,15,16,17],"tindex":"e21d138d-827c-11e5-a9e3-d5975b46351c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:672","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.DataReader.readGraph()"},"status":-1},{"failures":[18],"tindex":"e21d138e-827c-11e5-a9e3-7d1fa98ac592","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:123","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2))"},"status":-1},{"failures":[],"tindex":"e21d138f-827c-11e5-a9e3-49bfafc19908","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"dist","orientation":"dist","java.lang.Math.PI":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:81","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"e21d1390-827c-11e5-a9e3-a910e62d4b49","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:296","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"e21d3aa1-827c-11e5-a9e3-5d551d7cb054","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"edge","entityType":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:217","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"e21d3aa2-827c-11e5-a9e3-453352893566","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"e21d3aa3-827c-11e5-a9e3-63c4fe9ea085","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1004","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false);\n    if ((!boolean) && (com.graphhopper.GHRequest.hasFavoredHeading(0)))\n        throw new java.lang.IllegalStateException(\"Heading is not (fully) supported for CHGraph. See issue #483\");\n    \n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n    com.graphhopper.storage.Graph = com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting);\n} else\n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"e21d61b4-827c-11e5-a9e3-593f058dbac8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"variableMap":{"bits":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:795","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,32,16,78,79,80],"tindex":"e21d61b5-827c-11e5-a9e3-53daebefc175","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:858","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int)"},"status":-1},{"failures":[73,81,11,16],"tindex":"e21d61b6-827c-11e5-a9e3-1bcbd98f5659","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:133","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"e21d61b7-827c-11e5-a9e3-b7fbcab38311","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:415","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setNodesHeader()"},"status":-2},{"failures":[],"tindex":"e21d88c8-827c-11e5-a9e3-e714c5a5475b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"e21d88c9-827c-11e5-a9e3-a3c57ac9c544","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"status":-2},{"failures":[],"tindex":"e21d88ca-827c-11e5-a9e3-571f539cbe21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"e21d88cb-827c-11e5-a9e3-df161abb8aa1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"length","NO_TURN_ENTRY":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    com.graphhopper.storage.RAMIntDataAccess.int[][][int] = java.util.Arrays.copyOf(int[], int[].int);\n}"},"status":-2},{"failures":[6,7,8,9,10,0,11,12,13,14,15,16,17,82,83,78,84,85,79,80,86,87,88,89,90,91,92],"tindex":"e21d88cc-827c-11e5-a9e3-dffefa4e7707","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:175","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n        boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n        if (boolean) {\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n            int int = gnu.trove.list.TLongList.size();\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n            }\n            if (((++long) % 5000000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    } \n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n        if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n            com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n        \n        if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n            com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n        \n        if (((++long) % 50000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}