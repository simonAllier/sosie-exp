{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"f635b29a-7910-11e5-b7a2-6d7e1ee5c53e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:557","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n    int++;\n"},"variableMap":{"contractedNeighbors":"nodes","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:800","type":"CtIfImpl","sourcecode":"if (int > 2) {\n    if (boolean)\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    \n    com.graphhopper.util.EdgeIteratorState.setWayGeometry(com.graphhopper.util.PointList);\n} "},"status":-2},{"failures":[],"tindex":"f635d9ab-7910-11e5-b7a2-190eb523ceb9","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:201","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"variableMap":{"str":"streetName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:293","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? java.lang.String : com.graphhopper.util.Translation.tr(\"turn_onto\", java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"f63600bc-7910-11e5-b7a2-49dedbea5430","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:141","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('=')"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:140","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-2},{"failures":[],"tindex":"f63600bd-7910-11e5-b7a2-9751b3dc58c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:660","type":"CtLocalVariableImpl","sourcecode":"double double = double - (com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"f63600be-7910-11e5-b7a2-e5ad1d11fca7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"variableMap":{"len":"oldRelationFlags","start":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:626","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[],"tindex":"f63600bf-7910-11e5-b7a2-2320da63e7ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:635","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-2},{"failures":[],"tindex":"f63627d0-7910-11e5-b7a2-cb7310edafd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:629","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    com.graphhopper.routing.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int);\n} "},"status":-2},{"failures":[],"tindex":"f63627d1-7910-11e5-b7a2-999bfb5b9a74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1119","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.routing.ch.PrepareContractionHierarchies)(java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())).doWork()"},"status":-2},{"failures":[],"tindex":"f63627d2-7910-11e5-b7a2-2d735de2c37f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"address","pointer":"oldCap","maxCapacity":"capacity","baseCapacity":"oldCap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"f63627d3-7910-11e5-b7a2-bf1d0d757420","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"tmpWeight","shortTripsSpeed":"tmpWeight","durationInHours":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"f63627d4-7910-11e5-b7a2-b1f74da2a857","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:174","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).isForward(com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"f6364ee5-7910-11e5-b7a2-b39270043abc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:59","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"closestNode","edgeId":"closestNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"status":-2},{"failures":[],"tindex":"f6364ee6-7910-11e5-b7a2-0dcec74ebc5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection)"},"status":-2},{"failures":[],"tindex":"f6364ee7-7910-11e5-b7a2-51fa3a6b4397","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:177","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n    final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n    boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n    if (boolean) {\n        TLongList TLongList = com.graphhopper.reader.OSMWay.getNodes();\n        int int = com.graphhopper.reader.TLongList.size();\n        for (int int = 0 ; int < int ; int++) {\n            com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n        }\n        if (((++long) % 5000000) == 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"f6364ee8-7910-11e5-b7a2-17dfc7c2d5a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1116","type":"CtIfImpl","sourcecode":"if (!((java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue()) instanceof com.graphhopper.routing.ch.PrepareContractionHierarchies))\n    throw new java.lang.IllegalStateException((\"RoutingAlgorithmFactory is not suited for CH preparation \" + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())));\n"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1119","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.routing.ch.PrepareContractionHierarchies)(java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())).doWork()"},"status":-2},{"failures":[],"tindex":"f63675f9-7910-11e5-b7a2-fb820c84e5de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"status":-2},{"failures":[],"tindex":"f63675fa-7910-11e5-b7a2-c16c03c0c611","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:402","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs(0, com.graphhopper.storage.DataAccess.getCapacity())"},"status":-2},{"failures":[],"tindex":"f63675fb-7910-11e5-b7a2-d30459602fca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:177","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.GPXEntry>.add(new com.graphhopper.util.GPXEntry(double , double , double , long))"},"status":-2},{"failures":[],"tindex":"f63675fc-7910-11e5-b7a2-55fd8653f079","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:261","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 3 ; int++) {\n    try {\n        com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n        break;\n    } catch (java.net.SocketTimeoutException ex) {\n        java.lang.Thread.sleep(2000);\n        continue;\n    } catch (java.io.FileNotFoundException ex) {\n        java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n        continue;\n    }\n}"},"variableMap":{"baseUrl":"fileDetails","file":"cacheDir","fileDetails":"baseUrl","zippedURL":"baseUrl","downloader":"downloader"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"f6369d0d-7910-11e5-b7a2-c70a3b37568a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.TIntHashSet.iterator().next()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}