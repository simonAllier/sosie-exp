{"failureDictionary":{"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":91,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":23,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":96,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":41,"com.graphhopper.reader.OSMReaderTest.testWithBounds":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":104,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":139,"com.graphhopper.util.shapes.CircleTest.testContainsCircle":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":110,"com.graphhopper.coll.CompressedArrayTest.testCompress":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":17,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":3,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":115,"com.graphhopper.util.BitUtilBigTest.testReverse":150,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":51,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":145,"com.graphhopper.GraphHopperTest.testPrepare":60,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":9,"com.graphhopper.reader.OSMReaderTest.testFoot":76,"com.graphhopper.search.NameIndexTest.testFlush":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":103,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":112,"com.graphhopper.GraphHopperAPITest.testDisconnected179":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":45,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":125,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":65,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":21,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":131,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":117,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":48,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":127,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.reader.OSMReaderTest.testSort":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":118,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54,"com.graphhopper.storage.RAMDataAccessTest.testSegments":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":38,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":130,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":140,"com.graphhopper.reader.OSMReaderTest.testMain":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":12,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":109,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":107,"com.graphhopper.storage.RAMDataAccessTest.testHeader":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":7,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":108,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":1,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":5,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":111,"com.graphhopper.storage.StorablePropertiesTest.testStore":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":71,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":135,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":144,"com.graphhopper.GraphHopperTest.testFootAndCar":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":29,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":50,"com.graphhopper.util.InstructionListTest.testCreateGPX":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":4,"com.graphhopper.util.BitUtilLittleTest.testReverse":148,"com.graphhopper.coll.CompressedArrayTest.testCompress2":39,"com.graphhopper.GraphHopperTest.testPrepareOnly":52,"com.graphhopper.GraphHopperTest.testVia":59,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":93,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":116,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":14,"com.graphhopper.GraphHopperAPITest.testLoad":73,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":63,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":2,"com.graphhopper.GraphHopperTest.testFootOnly":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":8,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":10,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":123,"com.graphhopper.reader.OSMReaderTest.testBarriers":79,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":120},"transformations":[{"failures":[],"tindex":"21ec4ecb-8274-11e5-a8c0-f1613623d62f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:276","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString()"},"status":-2},{"failures":[],"tindex":"21ec75dc-8274-11e5-a8c0-67c87358f5c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"21ec75dd-8274-11e5-a8c0-29ca9bf98a85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"21ec75de-8274-11e5-a8c0-03c236cbf524","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"bwSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:241","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[75],"tindex":"21ec75df-8274-11e5-a8c0-adb10fd306cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"id","segmentSizePower":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-1},{"failures":[],"tindex":"21ec75e0-8274-11e5-a8c0-a309f769bc8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"sinDeltaLat","delta":"sinDeltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:80","type":"CtReturnImpl","sourcecode":"return (double * double) + (((double * double) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double)))) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double))))"},"status":-2},{"failures":[15,89,90,91,92,93,94,95,34,96,97,98,42,44,46,47,59,99,100,101,102,103,70,71,104,72,105,106,107,108,75,77,83,86,109],"tindex":"21ec9cf1-8274-11e5-a8c0-09905fbbf0fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"sinDeltaLat","dMinLat":"sinDeltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:55","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (((double * double) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double)))) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double))))"},"status":-1},{"failures":[],"tindex":"21ec9cf2-8274-11e5-a8c0-453dac2dc8c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:934","type":"CtReturnImpl","sourcecode":"return (((int) + \" (\") + (int)) + \")\""},"variableMap":{"node":"maxGeoRef","priority":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:406","type":"CtReturnImpl","sourcecode":"return ((((((((((((((((((\"edges:\" + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"nodes:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.storage.BaseGraph.getNodes()))) + \"(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"name:(\") + ((com.graphhopper.search.NameIndex.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"geo:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB), \") + \"bounds:\") + (com.graphhopper.util.shapes.BBox)"},"status":0},{"failures":[110,111,112,113],"tindex":"21ec9cf3-8274-11e5-a8c0-b34102199f5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"need","i":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":-1},{"failures":[],"tindex":"21ec9cf4-8274-11e5-a8c0-e1b27a5ab342","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"polledNode","newBaseIndex":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:311","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        continue;\n    } \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":0},{"failures":[114,115],"tindex":"21ecc405-8274-11e5-a8c0-61cf53006fab","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:421","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"21ecc406-8274-11e5-a8c0-a1df1c7c8177","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:948","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"21ecc407-8274-11e5-a8c0-b5fb69e85deb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:607","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"21ecc408-8274-11e5-a8c0-ef262bc58045","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:586","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"osmreader.workerThreads\", int)"},"status":0},{"failures":[],"tindex":"21ecc409-8274-11e5-a8c0-2deb4f8c430b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:71","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[59,68],"tindex":"21ecc40a-8274-11e5-a8c0-47ca7af1f79a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"variableMap":{"val":"osmFile","existing":"osmFile","key":"tmpOsmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:511","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"status":-1},{"failures":[116,110,117,118,119,120,111,121,122,123,112,124,125,126,113,127,128,129,130,131,88],"tindex":"21eceb1b-8274-11e5-a8c0-2d2d59fd8594","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:750","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,52,63,64,65,66],"tindex":"21eceb1c-8274-11e5-a8c0-5d25ce489e68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:148","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"21eceb1d-8274-11e5-a8c0-1b3bcc4f90bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:135","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[147,148,149,150],"tindex":"21eceb1e-8274-11e5-a8c0-c982b5eb3424","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:705","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"variableMap":{"graphHopperFolder":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:181","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long <<= 1;\n    if ((java.lang.String.charAt(int)) != '0')\n        long |= 1;\n    \n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"21ec9cf2-8274-11e5-a8c0-453dac2dc8c7","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.shapes.BBox_java.lang.String_toString().e1","com.graphhopper.util.shapes.BBox_java.lang.String_toString().b","com.graphhopper.search.NameIndex_long_getCapacity().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.shapes.BBox_java.lang.String_toString().e1","com.graphhopper.util.shapes.BBox_java.lang.String_toString().b","com.graphhopper.search.NameIndex_long_getCapacity().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.getNodes","com.graphhopper.util.Helper.nf","com.graphhopper.search.NameIndex.getCapacity","com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity"]},"type":"staticDiff"}]},{"transformation":"21ecc408-8274-11e5-a8c0-ef262bc58045","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]},{"transformation":"21ec9cf4-8274-11e5-a8c0-e1b27a5ab342","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.util.StopWatch.start","com.graphhopper.coll.GHTreeMapComposed.peekValue","com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority","com.graphhopper.coll.GHTreeMapComposed.insert"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.coll.GHTreeMapComposed_int_peekValue().b"]},"type":"branch"}]}]}