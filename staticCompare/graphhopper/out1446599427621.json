{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":189,"com.graphhopper.search.NameIndexTest.testCreate":207,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":18,"com.graphhopper.reader.OSMReaderTest.testFerry":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":127,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":191,"com.graphhopper.routing.QueryGraphTest.testOneWay":94,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":108,"com.graphhopper.reader.OSMReaderTest.testWithBounds":157,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":30,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":101,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":147,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":29,"com.graphhopper.GraphHopperTest.testPrepare":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":79,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":164,"com.graphhopper.search.NameIndexTest.testFlush":205,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":71,"com.graphhopper.util.InstructionListTest.testWayList":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":75,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":140,"com.graphhopper.GraphHopperAPITest.testDisconnected179":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":118,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":202,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":196,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":177,"com.graphhopper.GraphHopperTest.testLoadOSM":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":109,"com.graphhopper.reader.OSMReaderTest.testSort":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":187,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":156,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":136,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":82,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":192,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":195,"com.graphhopper.routing.PathTest.testWayList":96,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":12,"com.graphhopper.coll.OSMIDMapTest.testGet2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":83,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":179,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":13,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":77,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":133,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":19,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":182,"com.graphhopper.coll.OSMIDMapTest.testGetLong":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":181,"com.graphhopper.search.NameIndexTest.testPut":204,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":121,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":69,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":137,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":161,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":126,"com.graphhopper.reader.OSMReaderTest.testBarriers":66,"com.graphhopper.routing.PathTest.testFound":197,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":73,"com.graphhopper.util.GHUtilityTest.testCopy":139,"com.graphhopper.routing.PathTest.testFindInstruction":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":70,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":170,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":40,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":125,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":84,"com.graphhopper.util.InstructionListTest.testWayList2":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":104,"com.graphhopper.reader.OSMReaderTest.testFoot":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":21,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":95,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":128,"com.graphhopper.reader.OSMReaderTest.testOneWay":159,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":163,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":208,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":67,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":81,"com.graphhopper.coll.OSMIDMapTest.testGet":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":167,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":144,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":55,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":141,"com.graphhopper.storage.RAMDataAccessTest.testCopy":132,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":115,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":51,"com.graphhopper.storage.RAMDataAccessTest.testSegments":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":188,"com.graphhopper.reader.OSMReaderTest.testMain":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":35,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":14,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":203,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":3,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":172,"com.graphhopper.storage.StorablePropertiesTest.testStore":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":38,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":31,"com.graphhopper.routing.PathTest.testTime":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":186,"com.graphhopper.GraphHopperTest.testPrepareOnly":148,"com.graphhopper.GraphHopperTest.testVia":56,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":185,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":4,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":124,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":49,"com.graphhopper.GraphHopperTest.testFootOnly":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":7,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":199,"com.graphhopper.util.InstructionListTest.testFind":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":41},"transformations":[{"failures":[0],"tindex":"d5ac0515-8290-11e5-92ea-879332463cb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:197","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n    final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n    if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n        com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n    \n    if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n        com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n    \n    if (((++long) % 50000) == 0) {\n        com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n} "},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"d5ac2c26-8290-11e5-92ea-6d7c9d954829","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:750","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    throw new java.lang.AssertionError((((((\"to or from index is invalid for this edge \" + int) + \"->\") + int) + \", points:\") + com.graphhopper.util.PointList));\n"},"variableMap":{"toIndex":"adjNode","pointList":"pillarNodes","fromIndex":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:909","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n    com.graphhopper.util.PointList.reverse();\n} else {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[],"tindex":"d5ac2c27-8290-11e5-92ea-09568a2bff71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"status":-1},{"failures":[],"tindex":"d5ac2c28-8290-11e5-92ea-3784375338e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:719","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.valueAt(int)"},"status":-2},{"failures":[1,98,99,2,3,100,4,101,102,5,103,6,7,104,8,105,106,9,10,11,12,13,14,15,107,108,16,109,17,18,110,19,111,112,20,21,22,23,24,25,113,114,115,116,117,118,119,120,30,121,122,123,124,125,126,31,127,32,33,34,35,128,36,129,130,37,38,39,40,131,132,133,134,135,41,136,137,42,43,44,45,138,139,46,140,47,48,49,141,142,143,144,145,146,147,148,50,51,52,53,54,55,149,56,57,58,59,60,61,150,62,63,151,152,153,64,65,66,67,68,0,154,155,156,157,158,159,160,161,162,163,69,164,165,166,167,168,169,170,171,172,173,174,175,176,177,70,178,179,71,72,180,181,182,73,183,184,74,75,185,186,187,76,77,188,78,79,189,80,81,190,82,83,84,191,85,86,87,89,90,91,192,92,93,193,194,95,195,196,197,198,199,200,96,97,201,202,203,204,205,206,207],"tindex":"d5ac5339-8290-11e5-92ea-79ca37db88fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"d5ac533a-8290-11e5-92ea-eb5d8b026d47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:124","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d5ac533b-8290-11e5-92ea-d105b706420a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:271","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:659","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", java.util.Set<java.lang.String>))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\"))"},"status":-2},{"failures":[],"tindex":"d5ac7a4c-8290-11e5-92ea-d59c3415e940","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:80","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.Throwable>"},"status":0},{"failures":[],"tindex":"d5ac7a4d-8290-11e5-92ea-ab97c3f1c8c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:651","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut>.clear()"},"status":-2},{"failures":[164,172,173,208,178,179,72,182,79,190],"tindex":"d5ac7a4e-8290-11e5-92ea-3b0e8b681163","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:132","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"d5ac7a4f-8290-11e5-92ea-fde41f8f72c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:262","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.TranslationHashMap.put(java.lang.String, java.lang.String)"},"variableMap":{"this":"trMap","value":"locale","key":"locale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.TranslationHashMap.doImport(com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.getResourceAsStream((java.lang.String + \".txt\")))"},"status":0},{"failures":[],"tindex":"d5ac7a50-8290-11e5-92ea-07739e17545f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:173","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"status":-2},{"failures":[],"tindex":"d5ac7a51-8290-11e5-92ea-0d1acbebc484","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"updatedInGraph","v":"updatedInGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:684","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"d5aca162-8290-11e5-92ea-bf7dbbf4dd89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:102","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"variableMap":{"cacheDir":"lockDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:50","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2},{"failures":[],"tindex":"d5aca163-8290-11e5-92ea-9fbafda3fa96","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":0},{"failures":[],"tindex":"d5aca164-8290-11e5-92ea-05855e79c800","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:64","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, 0)"},"variableMap":{"currEdge":"currTo","this":"this","from":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":0},{"failures":[],"tindex":"d5aca165-8290-11e5-92ea-b36886810a37","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:276","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString()"},"status":-2},{"failures":[],"tindex":"d5aca166-8290-11e5-92ea-63ef36b2c0fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.REACH_DEST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:372","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"d5aca167-8290-11e5-92ea-b3c7c79e7ad2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"nextEdge","hash":"nextEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:190","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[120,123,31,36,130,41,137,148,60,61,150,62],"tindex":"d5acc878-8290-11e5-92ea-fb184a7f21c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d5aca164-8290-11e5-92ea-05855e79c800","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry"]},"type":"staticDiff"}]}]}