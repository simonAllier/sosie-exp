{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":33,"com.graphhopper.routing.PathTest.testFindInstruction":13,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":34,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":18,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":7,"com.graphhopper.reader.OSMReaderTest.testRelation":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":9,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":27,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":19,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":5,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":15,"com.graphhopper.GHRequestTest.testGetHint":37,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":32,"com.graphhopper.util.InstructionListTest.testFind":12,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":23,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":22},"transformations":[{"failures":[],"tindex":"2f29e870-829d-11e5-9f57-c110c5d33390","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:580","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"2f2a0f81-829d-11e5-9f57-dbf88f1fa84d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:310","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHTreeMapComposed.pollKey()"},"status":-2},{"failures":[0,1,2],"tindex":"2f2a3692-829d-11e5-9f57-6b4274fd1d28","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[3,4,5,6],"tindex":"2f2a3693-829d-11e5-9f57-9f330018b270","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putByte((((long) + long) + int), byte[][int])"},"status":-1},{"failures":[7,8,9,10,11,12,13],"tindex":"2f2a3694-829d-11e5-9f57-7d831f2368f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"com.graphhopper.util.DistanceCalcEarth.R"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:62","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-1},{"failures":[],"tindex":"2f2a3695-829d-11e5-9f57-d307a90ae456","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:436","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState : java.util.List<com.graphhopper.util.EdgeIteratorState>) {\n    com.graphhopper.routing.util.EncodingManager.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState);\n}"},"status":-2},{"failures":[],"tindex":"2f2a5da6-829d-11e5-9f57-571374028806","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"status":-2},{"failures":[],"tindex":"2f2a5da7-829d-11e5-9f57-992ccb0c13e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:152","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[14,15,16,17,18,19,20],"tindex":"2f2a5da8-829d-11e5-9f57-b39109346eea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"2f2a84b9-829d-11e5-9f57-6541f40a6e26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"2f2a84ba-829d-11e5-9f57-259e28759a7b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:707","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false))"},"variableMap":{"iter":"iter","vIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:197","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n        continue;\n    \n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean);\n    double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n    if (com.graphhopper.storage.EdgeEntry == null) {\n        com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n        com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.storage.EdgeEntry.double = double;\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else\n        continue;\n    \n    if (boolean)\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    \n}"},"status":-2},{"failures":[],"tindex":"2f2a84bb-829d-11e5-9f57-dd8c44dddcf8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:185","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"2f2aabcc-829d-11e5-9f57-d14c6b1116af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:104","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"variableMap":{"name":"prop"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:66","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.AlgorithmOptions.getHints().get((java.lang.String + \".approximation\"), \"BeelineSimplification\")"},"status":-1},{"failures":[21,22,23,24,25,26,27,12,13,28,29],"tindex":"2f2aabcd-829d-11e5-9f57-497e64c7e437","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:151","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double)"},"status":-1},{"failures":[30,31,0,32,33,34],"tindex":"2f2aabce-829d-11e5-9f57-f9deb204eee0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((5 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[35,36],"tindex":"2f2aabcf-829d-11e5-9f57-81e557f58b4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:174","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.max(long, 100)"},"variableMap":{"byteCount":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:392","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.addBarrierNode(long)"},"status":-1},{"failures":[30,37],"tindex":"2f2ad2e0-829d-11e5-9f57-d1fa3794c318","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:98","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[],"tindex":"2f2ad2e1-829d-11e5-9f57-5d8cc87e1e5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.NumHelper:39","type":"CtReturnImpl","sourcecode":"return (java.lang.Double.compare(double, double)) == 0"},"variableMap":{"d1":"queryLon","d2":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:742","type":"CtIfImpl","sourcecode":"if (!(gnu.trove.set.hash.TIntHashSet.isEmpty())) {\n    double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n    double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, gnu.trove.set.hash.TIntHashSet);\n    if (double < double)\n        return true;\n    \n} "},"status":0},{"failures":[],"tindex":"2f2ad2e2-829d-11e5-9f57-2db368715a36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:419","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"variableMap":{"remainingSegNo":"segmentSizePower","segmentSizeInBytes":"segmentSizePower","capacity":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:100","type":"CtTryImpl","sourcecode":"try {\n    long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long);\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)));\n}"},"status":-1},{"failures":[],"tindex":"2f2ad2e3-829d-11e5-9f57-5183acc42b6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:426","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2f2ad2e1-829d-11e5-9f57-5d8cc87e1e5b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.calcMinDistance","com.graphhopper.storage.index.LocationIndexTree.calculateRMin"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t3","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t3","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.geohash.SpatialKeyAlgo_long_encode(com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.util.shapes.GHPoint_com.graphhopper.util.shapes.GHPoint().b","com.graphhopper.util.DistancePlaneProjection_double_calcDist(double,double,double,double).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).l4","com.graphhopper.storage.GHNodeAccess_double_getLon(int).b","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).b","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).l2","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t1","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t3","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).e1","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).b","com.graphhopper.storage.GHNodeAccess_double_getLat(int).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).b","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e3","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).e2","com.graphhopper.storage.index.LocationIndexTree_double_calcMinDistance(double,double,gnu.trove.set.hash.TIntHashSet).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1"]},"type":"branch"}]}]}