{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":24,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":25,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":129,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":229,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":205,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":195,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":180,"com.graphhopper.util.InstructionListTest.testWayList":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":188,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":18,"com.graphhopper.GraphHopperAPITest.testDisconnected179":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":186,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":225,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":95,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":108,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":46,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":199,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":216,"com.graphhopper.routing.PathTest.testWayList":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":164,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":52,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":104,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":192,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":224,"com.graphhopper.util.GHUtilityTest.testSort":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":90,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":165,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":60,"com.graphhopper.GraphHopperAPITest.testLoad":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":198,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":228,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":30,"com.graphhopper.reader.OSMReaderTest.testBarriers":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":53,"com.graphhopper.routing.PathTest.testFound":218,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":91,"com.graphhopper.util.GHUtilityTest.testCopy":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":185,"com.graphhopper.routing.PathTest.testFindInstruction":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":177,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":62,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":127,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":75,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":47,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":191,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":19,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":207,"com.graphhopper.reader.PrinctonReaderTest.testRead":7,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":119,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":160,"com.graphhopper.util.InstructionListTest.testWayList2":15,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":111,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":49,"com.graphhopper.reader.OSMReaderTest.testOneWay":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":147,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":38,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":150,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":86,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":214,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":204,"com.graphhopper.routing.PathBidirRefTest.testExtract":235,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":173,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":134,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":170,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":169,"com.graphhopper.util.GHUtilityTest.testSort2":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":162,"com.graphhopper.routing.PathBidirRefTest.testExtract2":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":157,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":209,"com.graphhopper.storage.GraphHopperStorageTest.testClone":31,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":167,"com.graphhopper.GraphHopperTest.testFootAndCar":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":125,"com.graphhopper.routing.PathTest.testTime":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":189,"com.graphhopper.util.GHUtilityTest.testSortDirected":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":155,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":78,"com.graphhopper.GraphHopperTest.testVia":174,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":121,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":93,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":97,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":154,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":220,"com.graphhopper.util.InstructionListTest.testFind":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":148},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"tindex":"f5909073-791e-11e5-9d02-1b06609daf14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"nodeThis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[4],"tindex":"f590b784-791e-11e5-9d02-63ce52721295","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.readTags(javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"f590b785-791e-11e5-9d02-e507d58ffcea","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"graphIndex","mSize":"graphIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:876","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-2},{"failures":[],"tindex":"f590b786-791e-11e5-9d02-f38727c291c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:249","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f590b787-791e-11e5-9d02-0d0586a219dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:101","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f590b788-791e-11e5-9d02-091618177c98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge2\")"},"variableMap":{"this":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false)"},"status":-2},{"failures":[],"tindex":"f590de99-791e-11e5-9d02-af7ec77a8329","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"status":-2},{"failures":[],"tindex":"f590de9a-791e-11e5-9d02-a3ed3fc0087d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:653","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f590de9b-791e-11e5-9d02-076f5dbfec48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double)"},"status":-2},{"failures":[],"tindex":"f590de9c-791e-11e5-9d02-350f345431ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"indexDivisor","length":"indexDivisor","index":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"f590de9d-791e-11e5-9d02-030bfad3697d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:71","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"f590de9e-791e-11e5-9d02-8b7bbd1f437c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"tmpNo","guess":"tmpNo","low":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"status":-2},{"failures":[],"tindex":"f590de9f-791e-11e5-9d02-7f1871ed4c69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:223","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(int)"},"status":-2},{"failures":[],"tindex":"f590dea0-791e-11e5-9d02-573cc8c4c303","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"unfavored"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:162","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"f59105b1-791e-11e5-9d02-d11b553f473d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:159","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f59105b2-791e-11e5-9d02-bb4352572211","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:314","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"f59105b3-791e-11e5-9d02-95188ef0443d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:262","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-2},{"failures":[],"tindex":"f59105b4-791e-11e5-9d02-e58766175282","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"variableMap":{"factor":"speed","value":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-2},{"failures":[],"tindex":"f59105b5-791e-11e5-9d02-e5eb3470c55e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"placeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1035","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-2},{"failures":[],"tindex":"f59105b6-791e-11e5-9d02-b54ca6bc3365","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"variableMap":{"index":"index","bufferIndex":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:272","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    return ((short)(int[][][int][int]));\nelse\n    return ((short)((int[][][int][int]) >> 16));\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}