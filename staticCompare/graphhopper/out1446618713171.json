{"failureDictionary":{"com.graphhopper.routing.PathTest.testFindInstruction":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":78,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":34,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":96,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":108,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":9,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":26,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":45,"com.graphhopper.util.InstructionListTest.testEmptyList":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":38,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":123,"com.graphhopper.reader.PrinctonReaderTest.testRead":64,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":114,"com.graphhopper.coll.CompressedArrayTest.testCompress":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":121,"com.graphhopper.util.BitUtilLittleTest.testToDouble":143,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":22,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":76,"com.graphhopper.GraphHopperTest.testPrepare":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":29,"com.graphhopper.util.InstructionListTest.testWayList2":102,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":42,"com.graphhopper.reader.OSMReaderTest.testFoot":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":81,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":50,"com.graphhopper.util.InstructionListTest.testWayList":101,"com.graphhopper.reader.OSMReaderTest.testOneWay":66,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":97,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":68,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":43,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":109,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":137,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":122,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":138,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":88,"com.graphhopper.coll.OSMIDMapTest.testGet":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":35,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":120,"com.graphhopper.routing.PathBidirRefTest.testExtract":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":8,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":62,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":77,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":125,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":4,"com.graphhopper.util.GHUtilityTest.testSort2":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":116,"com.graphhopper.util.BitUtilLittleTest.testToLong":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":60,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":75,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":70,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":93,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":110,"com.graphhopper.routing.PathBidirRefTest.testExtract2":128,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":129,"com.graphhopper.routing.PathTest.testWayList":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":112,"com.graphhopper.coll.OSMIDMapTest.testGet2":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":32,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":86,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":52,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":136,"com.graphhopper.util.GHUtilityTest.testSort":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":25,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":82,"com.graphhopper.routing.PathTest.testTime":131,"com.graphhopper.coll.OSMIDMapTest.testGetLong":147,"com.graphhopper.util.InstructionListTest.testCreateGPX":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":84,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":142,"com.graphhopper.util.GHUtilityTest.testSortDirected":106,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.coll.CompressedArrayTest.testCompress2":139,"com.graphhopper.GraphHopperTest.testVia":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":24,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":95,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":94,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":67,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":44,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":69,"com.graphhopper.util.InstructionListTest.testFind":98,"com.graphhopper.routing.PathTest.testFound":130,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.util.GHUtilityTest.testCopy":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":55},"transformations":[{"failures":[],"tindex":"bcc19064-82bd-11e5-b2df-81f4fdec60e7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setSkippedEdges\")"},"variableMap":{"this":"explorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n}"},"status":-2},{"failures":[],"tindex":"bcc1b775-82bd-11e5-b2df-7d08fc535d28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:473","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(double, java.lang.Math.min(double, double))"},"variableMap":{"min":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","max":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","value":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:424","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"bcc1b776-82bd-11e5-b2df-c1ee650a762b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1126","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"call next before detaching\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:65","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(((((\"You cannot call \" + java.lang.String) + \" if response contains errors. Check this with ghResponse.hasErrors(). \") + \"Errors are: \") + com.graphhopper.GHResponse.(getErrors())))"},"status":0},{"failures":[],"tindex":"bcc1de87-82bd-11e5-b2df-5dbca4ed6dab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:175","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.InstructionList.(getSize()) > 0 ? com.graphhopper.util.InstructionList.get(0).getPoints().is3D() : false"},"status":-2},{"failures":[0,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,20,21],"tindex":"bcc1de88-82bd-11e5-b2df-977f81997ccb","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:948","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.isClosed())\n    throw new java.lang.IllegalStateException(\"You need to create a new GraphHopper instance as it is already closed\");\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    com.graphhopper.storage.GraphHopperStorage.close();\n"},"status":-1},{"failures":[],"tindex":"bcc1de89-82bd-11e5-b2df-8dc88742b04e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:200","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n    com.graphhopper.storage.DataAccess.setHeader((8 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n} "},"status":0},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,10,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"bcc1de8a-82bd-11e5-b2df-1193af739075","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:120","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[89],"tindex":"bcc2059b-82bd-11e5-b2df-b5f99d18df5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:198","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.InstructionList.(isEmpty())) {\n    java.lang.StringBuilder.append(\"\\n<rte>\");\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = null;\n    for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n        if (null != com.graphhopper.util.Instruction)\n            com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction);\n        \n        com.graphhopper.util.Instruction = com.graphhopper.util.Instruction;\n    }\n    com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, null);\n    java.lang.StringBuilder.append(\"<\/rte>\");\n} "},"status":-1},{"failures":[72,74,75,90,77,79,80,81,82,91,87],"tindex":"bcc2059c-82bd-11e5-b2df-73ab0736d8e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"to","tmpSize":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:66","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[92,93,94,95,0,1,62,96,97,98,99,100,101,102,89,103,104,63,105,106,107,108,64,109,110,111,112,67,113,114,115,116,117,68,69,118,72,119,73,120,121,122,123,124,74,75,76,125,126,77,127,128,129,88,130,131,132,133,134,135,136,137],"tindex":"bcc2059d-82bd-11e5-b2df-6f2eb0a3b991","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:45","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[138,10,20],"tindex":"bcc2059e-82bd-11e5-b2df-57e3617f93da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:648","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.cleanUp()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:144","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.dem.ElevationProvider == null) || (com.graphhopper.reader.dem.ElevationProvider == (com.graphhopper.reader.dem.ElevationProvider.com.graphhopper.reader.dem.ElevationProvider)))\n    com.graphhopper.GraphHopper.setElevation(false);\nelse\n    com.graphhopper.GraphHopper.setElevation(true);\n"},"status":-1},{"failures":[139,140],"tindex":"bcc22caf-82bd-11e5-b2df-5f3ebb8b9b55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:150","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[],"tindex":"bcc22cb0-82bd-11e5-b2df-8554d07190c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:110","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":0},{"failures":[],"tindex":"bcc22cb1-82bd-11e5-b2df-e31bd72a7607","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[])"},"status":-2},{"failures":[73,121,74,90,141,76,126],"tindex":"bcc22cb2-82bd-11e5-b2df-7fc0a3aed146","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:596","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.clear()"},"status":-1},{"failures":[],"tindex":"bcc22cb3-82bd-11e5-b2df-d10efd607b06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[142,143,144,145,146,147,148],"tindex":"bcc22cb4-82bd-11e5-b2df-3f8277cdad2b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:76","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 6)] = ((byte)(long >> 48))"},"status":-1},{"failures":[],"tindex":"bcc253c5-82bd-11e5-b2df-5589fe4fd7ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:663","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[149,89],"tindex":"bcc253c6-82bd-11e5-b2df-c91c14e3b9a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"variableMap":{"output":"output","instruction":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat()))"},"status":-1},{"failures":[],"tindex":"bcc253c7-82bd-11e5-b2df-65849398df70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double), double, double)"},"variableMap":{"endHeading":"java.lang.Double.NaN","toLat":"java.lang.Double.NaN","fromLon":"java.lang.Double.NaN","startHeading":"java.lang.Double.NaN","toLon":"java.lang.Double.NaN","fromLat":"java.lang.Double.NaN","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:168","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.addPoint(com.graphhopper.util.shapes.GHPoint, java.lang.Double.double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bcc1b776-82bd-11e5-b2df-c1ee650a762b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.getErrors"]},"type":"staticDiff"}]},{"transformation":"bcc1de89-82bd-11e5-b2df-8dc88742b04e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader","com.graphhopper.util.Helper.eleToInt"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":["com.graphhopper.util.Helper_int_eleToInt(double).b","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.util.Helper_double_intToEle(int).t1","com.graphhopper.util.Helper_int_eleToInt(double).e1","com.graphhopper.util.Helper_int_eleToInt(double).t1"],"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().t1","com.graphhopper.util.shapes.BBox_boolean_hasElevation().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().e1"],"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().t1","com.graphhopper.util.shapes.BBox_boolean_hasElevation().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().e1"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().t1","com.graphhopper.util.shapes.BBox_boolean_hasElevation().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().t1","com.graphhopper.util.shapes.BBox_boolean_hasElevation().b","com.graphhopper.storage.BaseGraph_int_setNodesHeader().e1"]},"type":"branch"}]}]}