{"failureDictionary":{"com.graphhopper.util.BitUtilBigTest.testToDouble":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":51,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":28,"com.graphhopper.coll.CompressedArrayTest.testCompress":7,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":22,"com.graphhopper.util.BitUtilLittleTest.testToDouble":3,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":0,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":40,"com.graphhopper.reader.OSMReaderTest.testRelation":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":36,"com.graphhopper.coll.CompressedArrayTest.testCompress2":6,"com.graphhopper.util.BitUtilBigTest.testToLong":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":48,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":50,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.routing.util.EncodedValueTest.testSwap":31,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":23,"com.graphhopper.GraphHopperTest.testLoadOSM":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54},"transformations":[{"failures":[0],"tindex":"a630c695-827f-11e5-93f9-23d00a7f2d3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:220","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[1,2],"tindex":"a630eda6-827f-11e5-93f9-517d58d726c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:78","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[3,1],"tindex":"a630eda7-827f-11e5-93f9-3bdccf8d7ce9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromDouble(byte[], double, 0)"},"status":-1},{"failures":[4,5],"tindex":"a630eda8-827f-11e5-93f9-8de9021ed593","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:194","type":"CtIfImpl","sourcecode":"if ((!(java.lang.Double.isNaN(double))) && (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)))\n    throw new java.lang.IllegalArgumentException(((\"Heading \" + double) + \" must be in range (0,360) or NaN\"));\n"},"variableMap":{"heading":"lastLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:363","type":"CtIfImpl","sourcecode":"if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"a63114b9-827f-11e5-93f9-0bef3042b868","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"bits","guess":"bits","low":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"a63114ba-827f-11e5-93f9-8f9e779348a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[48],"tindex":"a63114bb-827f-11e5-93f9-63383175f109","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"a63114bc-827f-11e5-93f9-c7801b43b2c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"a63114bd-827f-11e5-93f9-d122d88cfcd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"maxTurnCosts","dLat":"maxTurnCosts","tmpErr":"maxTurnCosts","x1":"maxTurnCosts","sLon":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:676","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"a6313bce-827f-11e5-93f9-434f4e66e1bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"dataAccess","da":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:602","type":"CtForImpl","sourcecode":"for (long long = long + 4 ; long < long ; long += 4) {\n    gnu.trove.set.hash.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[49,50,51,52],"tindex":"a6313bcf-827f-11e5-93f9-c95296cc9d6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:547","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"a6313bd0-827f-11e5-93f9-fd907d65c905","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1138","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"edges: \" + (com.graphhopper.storage.GraphHopperStorage.getAllEdges().getMaxId())) + \", nodes \") + int) + \", there were \") + (com.graphhopper.routing.util.PrepareRoutingSubnetworks.getMaxSubnetworks())) + \" subnetworks. removed them => \") + (int - int)) + \" less nodes\"))"},"status":0},{"failures":[],"tindex":"a6313bd1-827f-11e5-93f9-1fa6ddb66f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:371","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleWayTags(com.graphhopper.reader.OSMWay, long, long)"},"status":-2},{"failures":[],"tindex":"a6313bd2-827f-11e5-93f9-c3cffff22f60","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"visitedCountFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:158","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"a6313bd3-827f-11e5-93f9-2f753c91841f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"nodes","da":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"a63162e4-827f-11e5-93f9-cbe66e596e47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:236","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[53],"tindex":"a63162e5-827f-11e5-93f9-11c2234fec9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1161","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.LocationIndex) != null)\n    com.graphhopper.storage.index.LocationIndex.close();\n"},"status":-1},{"failures":[],"tindex":"a63162e6-827f-11e5-93f9-2fbcb9f658ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[54],"tindex":"a63162e7-827f-11e5-93f9-673505ce8065","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"turnCostsEntryBytes","S_SKIP_EDGE2":"turnCostsEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:113","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-1},{"failures":[],"tindex":"a63162e8-827f-11e5-93f9-ffaca872bae0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"variableMap":{"start":"com.graphhopper.storage.EdgeAccess.NO_NODE","onStack":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:677","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n    int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n    if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n        long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n        com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n        com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n    } else {\n        long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a6313bd0-827f-11e5-93f9-fd907d65c905","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.getAllEdges","com.graphhopper.routing.util.AllEdgesIterator.getMaxId","com.graphhopper.routing.util.PrepareRoutingSubnetworks.getMaxSubnetworks","org.slf4j.Logger.info"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_getMaxSubnetworks().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_getMaxSubnetworks().b"]},"type":"branch"}]},{"transformation":"a63162e4-827f-11e5-93f9-cbe66e596e47","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]}]}