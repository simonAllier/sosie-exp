{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":23,"com.graphhopper.routing.PathTest.testFindInstruction":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":2,"com.graphhopper.reader.OSMReaderTest.testFerry":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":141,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":47,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":93,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":9,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":152,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":41,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":73,"com.graphhopper.reader.OSMReaderTest.testWithBounds":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":171,"com.graphhopper.reader.PrinctonReaderTest.testRead":95,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":1,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":17,"com.graphhopper.GraphHopperTest.testPrepare":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":54,"com.graphhopper.util.InstructionListTest.testWayList2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":160,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":26,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":36,"com.graphhopper.reader.OSMReaderTest.testFoot":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":144,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":43,"com.graphhopper.util.InstructionListTest.testWayList":89,"com.graphhopper.reader.OSMReaderTest.testOneWay":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":50,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":132,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":11,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":27,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":32,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":71,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":81,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":177,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":168,"com.graphhopper.routing.PathBidirRefTest.testExtract":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":61,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":178,"com.graphhopper.GraphHopperTest.testLoadOSM":119,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":108,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":24,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":77,"com.graphhopper.reader.OSMReaderTest.testMain":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":84,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":173,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":163,"com.graphhopper.routing.PathBidirRefTest.testExtract2":180,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":122,"com.graphhopper.routing.PathTest.testWayList":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":22,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":78,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":56,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":65,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":30,"com.graphhopper.storage.GraphHopperStorageTest.testClone":29,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":157,"com.graphhopper.GraphHopperTest.testFootAndCar":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":8,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":79,"com.graphhopper.GraphHopperTest.testVia":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":138,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":154,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":53,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":66,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":91,"com.graphhopper.GraphHopperTest.testFootOnly":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":21,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":102,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":46,"com.graphhopper.util.InstructionListTest.testFind":87,"com.graphhopper.reader.OSMReaderTest.testBarriers":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":5,"com.graphhopper.util.GHUtilityTest.testCopy":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":70},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"f76e2c7a-792d-11e5-8f14-2f96e2ee6b48","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"variableMap":{"pointer":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:112","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-1},{"failures":[],"tindex":"f76e538b-792d-11e5-8f14-8b0af8af2828","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[],"tindex":"f76e538c-792d-11e5-8f14-3bb92bf3d644","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:585","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(com.graphhopper.reader.OSMNode.getId())"},"status":-2},{"failures":[],"tindex":"f76e538d-792d-11e5-8f14-53c8c43b9c05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:202","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"f76e538e-792d-11e5-8f14-e7312518368d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-2},{"failures":[],"tindex":"f76e7a9f-792d-11e5-8f14-d1d324f2cf83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:838","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f76e7aa0-792d-11e5-8f14-433490d36b10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:103","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"f76e7aa1-792d-11e5-8f14-8989dd32a0b9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"distance","java.lang.Math.PI":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"f76e7aa2-792d-11e5-8f14-61470dfed2c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:188","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.CHEdgeIteratorState)(java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int))).getWeight()"},"status":-2},{"failures":[],"tindex":"f76e7aa3-792d-11e5-8f14-bb0b0b40f1d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"com.graphhopper.util.Instruction.USE_ROUNDABOUT","NO_TURN_ENTRY":"com.graphhopper.util.Instruction.USE_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:134","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    if (!(boolean)) {\n        java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\");\n    } else {\n        java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String);\n    }\n} else {\n    throw new java.lang.IllegalStateException((int + \"no Roundabout indication\"));\n}"},"status":-2},{"failures":[],"tindex":"f76e7aa4-792d-11e5-8f14-81e42c9958da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"segmentSizeInBytes","currentIndex":"segmentSizeInBytes","bucketSize":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:414","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failures":[],"tindex":"f76e7aa5-792d-11e5-8f14-5d76af6f1781","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"variableMap":{"lastIndex":"nodeCHEntryBytes","fromIndex":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:165","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"f76ea1b6-792d-11e5-8f14-c74a4e2529b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"variableMap":{"output":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:125","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-2},{"failures":[],"tindex":"f76ea1b7-792d-11e5-8f14-0fa1b959728d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:296","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"f76ea1b8-792d-11e5-8f14-4b56d04bd5f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:778","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.is3D())\n    com.graphhopper.util.PointList.add(double, double, double);\nelse\n    com.graphhopper.util.PointList.add(double, double);\n"},"variableMap":{"pillarNodes":"basePoints","lon":"lat","lat":"lon","ele":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:347","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.shapes.GHPoint3D.double, com.graphhopper.util.shapes.GHPoint3D.double, com.graphhopper.util.shapes.GHPoint3D.double)"},"status":-2},{"failures":[],"tindex":"f76ea1b9-792d-11e5-8f14-114765c4edf5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName())"},"variableMap":{"from":"iter","to":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:805","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setWayGeometry(com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"f76ea1ba-792d-11e5-8f14-87e3ee569906","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:451","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[],"tindex":"f76ea1bb-792d-11e5-8f14-13d1c9be6f7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"variableMap":{"val":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:177","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.Double>.get(int)"},"status":-2},{"failures":[],"tindex":"f76ea1bc-792d-11e5-8f14-fb86efba71a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:280","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(double[][int])"},"status":-2},{"failures":[],"tindex":"f76ea1bd-792d-11e5-8f14-b1401aa2aaa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"bwSlower","shortTripsSpeed":"incDist2DSum","durationInHours":"restDist2D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:242","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}