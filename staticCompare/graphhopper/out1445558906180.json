{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":316,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":366,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":375,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":199,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":47,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":248,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":363,"com.graphhopper.routing.QueryGraphTest.testOneWay":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":271,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":182,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":353,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":220,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":219,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":163,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":270,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":334,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":315,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":322,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":298,"com.graphhopper.util.InstructionListTest.testWayList":36,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":88,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":152,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":41,"com.graphhopper.GraphHopperAPITest.testDisconnected179":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":206,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":299,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":183,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":347,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":255,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":234,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":337,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":166,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":184,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":250,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":310,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":267,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":85,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":320,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":371,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":338,"com.graphhopper.routing.PathTest.testWayList":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":281,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":297,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":305,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":264,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":241,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":178,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":288,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":312,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":346,"com.graphhopper.util.GHUtilityTest.testSort":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":223,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":136,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":376,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":282,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":350,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":97,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":378,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":111,"com.graphhopper.GraphHopperAPITest.testLoad":31,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":319,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":245,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":57,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":268,"com.graphhopper.routing.PathTest.testFound":340,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":159,"com.graphhopper.util.GHUtilityTest.testCopy":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":142,"com.graphhopper.routing.PathTest.testFindInstruction":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":295,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":113,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":209,"com.graphhopper.util.InstructionListTest.testEmptyList":34,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":86,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":311,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":42,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":328,"com.graphhopper.reader.PrinctonReaderTest.testRead":28,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":244,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":333,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":276,"com.graphhopper.util.InstructionListTest.testWayList2":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":169,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":222,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":189,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":91,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":134,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":51,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":349,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":256,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":213,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":153,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":216,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":325,"com.graphhopper.routing.PathBidirRefTest.testExtract":360,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":294,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":187,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":175,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":225,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":291,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":290,"com.graphhopper.util.GHUtilityTest.testSort2":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":212,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":283,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":284,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":242,"com.graphhopper.routing.PathBidirRefTest.testExtract2":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":193,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":179,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":269,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":379,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":238,"com.graphhopper.storage.GraphHopperStorageTest.testClone":59,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":185,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":274,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":69,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":205,"com.graphhopper.routing.PathTest.testTime":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":258,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":309,"com.graphhopper.util.GHUtilityTest.testSortDirected":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":273,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":263,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":143,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":308,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":243,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":368,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":38,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":168,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":215,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":262,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":342,"com.graphhopper.util.InstructionListTest.testFind":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":253},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"2e8fba43-791a-11e5-92d6-192f1aaefaec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:64","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\")"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName()"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,27,9,10,11,12,13,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,14,15,289,290,291,292,293,294,16,17,18,19,20,21,22,23,24,25,26,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377],"tindex":"2e8fe154-791a-11e5-92d6-5940f5137c3b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"N_ADDITIONAL","edgeTo":"N_ADDITIONAL","edgeFrom":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:266","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[],"tindex":"2e900865-791a-11e5-92d6-97bf6e6ee1f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"latDelta","shortTripsSpeed":"minLat","durationInHours":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:57","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-2},{"failures":[],"tindex":"2e900866-791a-11e5-92d6-a9d2c1fcd4e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:147","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"MMAP\";\nelse if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"RAM\";\nelse\n    java.lang.String = \"UNSAFE\";\n"},"status":0},{"failures":[],"tindex":"2e900867-791a-11e5-92d6-7bfc68d0d128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getInstructions\")"},"status":0},{"failures":[307,321],"tindex":"2e900868-791a-11e5-92d6-c3b30cbecf47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-1},{"failures":[],"tindex":"2e902f79-791a-11e5-92d6-b7973394b60a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[236,240,241,244,296,297,298,299,302,307,309,315,318,319,321,322,323,324,330,331,332,333,334,336,337],"tindex":"2e902f7a-791a-11e5-92d6-5191874dcc4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"b","currentIndex":"b","bucketSize":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-1},{"failures":[378,350,379],"tindex":"2e902f7b-791a-11e5-92d6-bf6a8b365c90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"2e902f7c-791a-11e5-92d6-5d7b30621f5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:104","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int)"},"variableMap":{"file":"raFile","segmentSize":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[] byte[] = new byte[int];\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    byte[][][int] = byte[];\n}"},"status":-2},{"failures":[],"tindex":"2e902f7d-791a-11e5-92d6-1792edf81aee","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"2e902f7e-791a-11e5-92d6-73ccc5669ca1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"bytes","size":"bytes","lonSize":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"2e90568f-791a-11e5-92d6-216b75eba6df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:569","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"prepare.chWeighting\", \"fastest\")"},"variableMap":{"args":"args"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:541","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.cachedir\", \"\")"},"status":-2},{"failures":[],"tindex":"2e905690-791a-11e5-92d6-872aabf49264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n        return long;\n    \n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-2},{"failures":[],"tindex":"2e905691-791a-11e5-92d6-0f715034c782","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"2e905692-791a-11e5-92d6-d798261e6e32","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"highway","location":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:733","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2e905693-791a-11e5-92d6-c5e38a63ab4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"base"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:145","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIteratorState.getAdjNode())) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(0);\n    if ((com.graphhopper.util.PointList.size()) > 1)\n        boolean = (com.graphhopper.util.PointList.getLatitude(0)) > (com.graphhopper.util.PointList.getLatitude(((com.graphhopper.util.PointList.size()) - 1)));\n    \n} "},"status":-2},{"failures":[],"tindex":"2e905694-791a-11e5-92d6-35a77ef73cb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:632","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"2e905695-791a-11e5-92d6-435565aac0b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1050","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}