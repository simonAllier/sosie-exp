{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":133,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":142,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":150,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":88,"com.graphhopper.routing.PathTest.testFindInstruction":157,"com.graphhopper.reader.OSMReaderTest.testFerry":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":25,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":29,"com.graphhopper.routing.QueryGraphTest.testOneWay":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":84,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":131,"com.graphhopper.reader.OSMReaderTest.testWithBounds":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":68,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":101,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":31,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":174,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":22,"com.graphhopper.GraphHopperTest.testPrepare":183,"com.graphhopper.util.InstructionListTest.testWayList2":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":132,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":62,"com.graphhopper.reader.OSMReaderTest.testFoot":161,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":124,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":90,"com.graphhopper.util.InstructionListTest.testWayList":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":91,"com.graphhopper.reader.OSMReaderTest.testOneWay":173,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":43,"com.graphhopper.GraphHopperAPITest.testDisconnected179":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":67,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":66,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":159,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":165,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":155,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":184,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":35,"com.graphhopper.GraphHopperTest.testLoadOSM":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":20,"com.graphhopper.reader.OSMReaderTest.testSort":163,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":178,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":177,"com.graphhopper.util.GHUtilityTest.testSort2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":170,"com.graphhopper.reader.OSMReaderTest.testMain":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":53,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":136,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":119,"com.graphhopper.routing.PathTest.testWayList":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":115,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":99,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":103,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":134,"com.graphhopper.storage.GraphHopperStorageTest.testClone":57,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":54,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":130,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":64,"com.graphhopper.GraphHopperTest.testFootAndCar":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":158,"com.graphhopper.util.GHUtilityTest.testSort":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":89,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":102,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":145,"com.graphhopper.util.GHUtilityTest.testSortDirected":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":44,"com.graphhopper.GraphHopperTest.testPrepareOnly":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":70,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":80,"com.graphhopper.GraphHopperTest.testVia":182,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":140,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":10,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":169,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":111,"com.graphhopper.GraphHopperAPITest.testLoad":121,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":100,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":143,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":9,"com.graphhopper.GraphHopperTest.testFootOnly":190,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":106,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":117,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":107,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":154,"com.graphhopper.storage.EdgeTest.testCloneFull":0,"com.graphhopper.util.InstructionListTest.testFind":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":19,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":98,"com.graphhopper.util.GHUtilityTest.testCopy":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":96},"transformations":[{"failures":[],"tindex":"b8ebcc02-790b-11e5-98a0-ad08e81ebfb3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:88","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"variableMap":{"val":"deltaIn"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:58","type":"CtLocalVariableImpl","sourcecode":"int int = double > 0 ? 1 : -1"},"status":-2},{"failures":[0],"tindex":"b8ebcc03-790b-11e5-98a0-4929808939e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"cl","edgeEntry":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"b8ebf314-790b-11e5-98a0-c97279b258c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"N_EDGE_REF","nextEdgeId":"N_EDGE_REF"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:258","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"b8ebf315-790b-11e5-98a0-1d8b39707961","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:249","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"b8ebf316-790b-11e5-98a0-3b62e4c3a67f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:350","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.setTags(java.util.Map<java.lang.String, java.lang.String>)"},"variableMap":{"osmRelation":"this","tags":"newTags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:98","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> != null)\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n    }\n"},"status":-2},{"failures":[],"tindex":"b8ebf317-790b-11e5-98a0-07b35ee61e39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"b8ebf318-790b-11e5-98a0-634e075c9ab2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:495","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"variableMap":{"edgePointer":"initialBits","edgeId":"allBits","shortcutEntryBytes":"allBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-2},{"failures":[],"tindex":"b8ec1a29-790b-11e5-98a0-4f63e158e8dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:123","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:386","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = boolean ? java.util.Arrays.asList(com.graphhopper.routing.QueryGraph.int, com.graphhopper.routing.QueryGraph.int) : java.util.Arrays.asList(com.graphhopper.routing.QueryGraph.int, com.graphhopper.routing.QueryGraph.int)"},"status":-2},{"failures":[],"tindex":"b8ec1a2a-790b-11e5-98a0-39b5d88960ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"status":-2},{"failures":[],"tindex":"b8ec1a2b-790b-11e5-98a0-4d52f85e8460","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"i","flags":"i","dir":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:140","type":"CtIfImpl","sourcecode":"if (byte >= 0) {\n    return long;\n} "},"status":-2},{"failures":[],"tindex":"b8ec1a2c-790b-11e5-98a0-97a5fb842ab2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-2},{"failures":[],"tindex":"b8ec1a2d-790b-11e5-98a0-8bf3449e8499","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"variableMap":{"closestEdge":"to","detach":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"status":-2},{"failures":[],"tindex":"b8ec1a2e-790b-11e5-98a0-414df41bb199","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:224","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHBitSet.getCardinality()"},"status":-2},{"failures":[],"tindex":"b8ec1a2f-790b-11e5-98a0-2790c53a6d32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:314","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:137","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"b8ec4040-790b-11e5-98a0-a1a23486c96f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"variableMap":{"str":"fileDetails"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:230","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"b8ec4041-790b-11e5-98a0-e386dcf3265e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:711","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"b8ec4042-790b-11e5-98a0-6ba9395e5945","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"variableMap":{"prioQueueOpenSetFrom":"prioQueueOpenSet","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"status":-2},{"failures":[],"tindex":"b8ec4043-790b-11e5-98a0-d5286a920711","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"b8ec4044-790b-11e5-98a0-253874bef321","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"variableMap":{"nodeB":"len","this":"graph","nodeA":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:271","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.TIntList.get(int), int);\n    if (com.graphhopper.util.EdgeIteratorState == null)\n        throw new java.lang.IllegalStateException((((((((\"Edge \" + (com.graphhopper.util.TIntList.get(int))) + \" was empty when requested with node \") + int) + \", array index:\") + int) + \", edges:\") + (com.graphhopper.util.TIntList.size())));\n    \n    int = com.graphhopper.util.EdgeIteratorState.getBaseNode();\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int);\n    com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int);\n}"},"status":-2},{"failures":[],"tindex":"b8ec4045-790b-11e5-98a0-5b85eec9bcf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"segmentSizeInBytes","frontIndex":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:194","type":"CtReturnImpl","sourcecode":"return int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}