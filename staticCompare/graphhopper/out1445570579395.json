{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":93,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":143,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":273,"com.graphhopper.reader.OSMReaderTest.testFerry":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":60,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":167,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":122,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":158,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":293,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":376,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":193,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":99,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":383,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":210,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":255,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":138,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":354,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":114,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":238,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":256,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":313,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":395,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":306,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":148,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":202,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":311,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":250,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":209,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":89,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":79,"com.graphhopper.coll.OSMIDMapTest.testGetLong":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":78,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":316,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":168,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":330,"com.graphhopper.GraphHopperAPITest.testLoad":408,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":377,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":367,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":189,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":221,"com.graphhopper.routing.PathTest.testFindInstruction":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":321,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":218,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":396,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":381,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":278,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":197,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":264,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":186,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":366,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":95,"com.graphhopper.coll.OSMIDMapTest.testGet":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":198,"com.graphhopper.routing.PathBidirRefTest.testExtract":115,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":300,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":356,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":247,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":299,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.util.GHUtilityTest.testSort2":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":90,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":315,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":343,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":172,"com.graphhopper.storage.StorablePropertiesTest.testStore":405,"com.graphhopper.storage.GraphHopperStorageTest.testClone":369,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":195,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":270,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":279,"com.graphhopper.routing.PathTest.testTime":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":266,"com.graphhopper.reader.OSMReaderTest.testRelation":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":292,"com.graphhopper.util.GHUtilityTest.testSortDirected":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":184,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":403,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":145,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":212,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":271,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":288,"com.graphhopper.search.NameIndexTest.testCreate":71,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":258,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":140,"com.graphhopper.routing.QueryGraphTest.testOneWay":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":233,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":254,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":121,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":342,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":335,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":365,"com.graphhopper.search.NameIndexTest.testFlush":69,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":75,"com.graphhopper.util.InstructionListTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":182,"com.graphhopper.GraphHopperAPITest.testDisconnected179":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":280,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":275,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":308,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":112,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":389,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":97,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":364,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":357,"com.graphhopper.routing.PathTest.testWayList":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":181,"com.graphhopper.coll.OSMIDMapTest.testGet2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":98,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":82,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":156,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":326,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":370,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":137,"com.graphhopper.util.GHUtilityTest.testSort":55,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":206,"com.graphhopper.search.NameIndexTest.testPut":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":355,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":368,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":159,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":224,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":314,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":42,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":336,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":164,"com.graphhopper.routing.PathTest.testFound":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":298,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":72,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":332,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":70,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":283,"com.graphhopper.util.InstructionListTest.testEmptyList":47,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":88,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":201,"com.graphhopper.reader.PrinctonReaderTest.testRead":38,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":397,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":327,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":272,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":337,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":43,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":261,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":262,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":393,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":109,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":290,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":373,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":227,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":57,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":128,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":286,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":204,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":36,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":361,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":161,"com.graphhopper.routing.PathBidirRefTest.testExtract2":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":251,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":67,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":391,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":190,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":94,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":208,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":394,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":386,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":323,"com.graphhopper.storage.StorablePropertiesTest.testLoad":406,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":222,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":85,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":162,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":51,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":390,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":242,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":289,"com.graphhopper.util.InstructionListTest.testFind":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":310},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"5c594606-7935-11e5-a7ca-f9542ed98a73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[9,18,54,74,75,76,77,78,79,80,81,82,84,85,87,88,89,90,91,92,95,96,97,98,100,101,102,103,107,109,110,111,113,114,155,156,161,163],"tindex":"5c599427-7935-11e5-a7ca-b97fe20a3c9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.freeze()"},"status":-1},{"failures":[],"tindex":"5c59bb38-7935-11e5-a7ca-615e0356ff20","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:119","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDFullIndex.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-2},{"failures":[],"tindex":"5c59bb39-7935-11e5-a7ca-f7f1d1aad666","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:676","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"variableMap":{"maxTurnCosts":"traversalId","costs":"distEstimation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:126","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-2},{"failures":[],"tindex":"5c59bb3a-7935-11e5-a7ca-377c9640e18b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","speed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"5c59bb3b-7935-11e5-a7ca-0f698821a445","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nodeId","nextEdgeId":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:379","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int)))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"5c59e24c-7935-11e5-a7ca-6b54afaef374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:315","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2},{"failures":[],"tindex":"5c59e24d-7935-11e5-a7ca-bd85b108f920","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMNode.readTags(javax.xml.stream.XMLStreamReader)"},"status":-2},{"failures":[],"tindex":"5c59e24e-7935-11e5-a7ca-5b0b7cac5bc3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"normedMaxDist","tmpNo":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:160","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    for (int int = int + 1 ; int < int ; int++) {\n        com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n        int++;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n}"},"status":-2},{"failures":[],"tindex":"5c59e24f-7935-11e5-a7ca-a1c7830a2e6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"directionBitMask","tmpValue":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:251","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5c5a0860-7935-11e5-a7ca-99556978e83e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:97","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:84","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.fromLong(long)"},"status":-2},{"failures":[],"tindex":"5c5a0861-7935-11e5-a7ca-35b3a13bf9ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:360","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(com.graphhopper.reader.TLongList.get(((com.graphhopper.reader.TLongList.size()) - 1)))"},"status":-2},{"failures":[],"tindex":"5c5a0862-7935-11e5-a7ca-27340e26206a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"minLat","toHeight":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"5c5a0863-7935-11e5-a7ca-53070b966204","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:150","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"5c5a2f74-7935-11e5-a7ca-67722e2cd424","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-2},{"failures":[],"tindex":"5c5a2f75-7935-11e5-a7ca-090f1f6da1cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:606","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"5c5a2f76-7935-11e5-a7ca-49ae4511752e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return ((int)(java.lang.Math.log10(int)))"},"variableMap":{"p":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:484","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"5c5a2f77-7935-11e5-a7ca-e5e802004ae8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"status":-2},{"failures":[],"tindex":"5c5a5688-7935-11e5-a7ca-9b51177f9208","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"connectedId","size":"connectedId","lonSize":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"5c5a5689-7935-11e5-a7ca-4d3b3d01f8b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:204","type":"CtReturnImpl","sourcecode":"return (int) == (int)"},"variableMap":{"currNode":"size","to":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:180","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}