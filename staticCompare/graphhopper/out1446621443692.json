{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":55,"com.graphhopper.search.NameIndexTest.testCreate":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":232,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":256,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":146,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.reader.OSMReaderTest.testFerry":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":33,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":86,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":107,"com.graphhopper.reader.OSMReaderTest.testWithBounds":279,"com.graphhopper.storage.MMapDataAccessTest.testSegments":134,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":62,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":52,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":258,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":9,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":25,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":88,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":10,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":181,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":71,"com.graphhopper.GraphHopperTest.testPrepare":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":231,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":163,"com.graphhopper.search.NameIndexTest.testFlush":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":238,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":214,"com.graphhopper.util.InstructionListTest.testWayList":177,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":127,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":223,"com.graphhopper.GraphHopperAPITest.testDisconnected179":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":48,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":105,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":215,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":108,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":210,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":159,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":75,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":131,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":251,"com.graphhopper.GraphHopperTest.testLoadOSM":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":109,"com.graphhopper.reader.OSMReaderTest.testSort":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":226,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":278,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":152,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":73,"com.graphhopper.storage.RAMDataAccessTest.testHeader":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":236,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":260,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":201,"com.graphhopper.storage.MMapDataAccessTest.testCopy":129,"com.graphhopper.routing.PathTest.testWayList":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":74,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":101,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":132,"com.graphhopper.coll.OSMIDMapTest.testGet2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":237,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":213,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":106,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":221,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":103,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":162,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":228,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":2,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":209,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":113,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":218,"com.graphhopper.coll.OSMIDMapTest.testGetLong":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":217,"com.graphhopper.search.NameIndexTest.testPut":170,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":26,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":200,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":153,"com.graphhopper.GraphHopperAPITest.testLoad":266,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":283,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":235,"com.graphhopper.util.TranslationMapTest.testToString":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":65,"com.graphhopper.routing.PathTest.testFound":203,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":45,"com.graphhopper.util.GHUtilityTest.testCopy":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":219,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":123,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":148,"com.graphhopper.routing.PathTest.testFindInstruction":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":211,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":172,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":244,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":136,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":166,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":46,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":289,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":133,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":126,"com.graphhopper.util.InstructionListTest.testWayList2":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":94,"com.graphhopper.reader.OSMReaderTest.testFoot":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":117,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":265,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":115,"com.graphhopper.reader.OSMReaderTest.testOneWay":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":158,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":199,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":142,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":11,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":165,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":15,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":288,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":273,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":234,"com.graphhopper.coll.OSMIDMapTest.testGet":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":250,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":241,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":6,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":180,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":188,"com.graphhopper.storage.RAMDataAccessTest.testCopy":140,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":185,"com.graphhopper.storage.RAMDataAccessTest.testSegments":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":53,"com.graphhopper.reader.OSMReaderTest.testMain":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":104,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":85,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":76,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":246,"com.graphhopper.storage.StorablePropertiesTest.testStore":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":24,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":69,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":164,"com.graphhopper.GraphHopperTest.testFootAndCar":192,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":47,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":143,"com.graphhopper.routing.PathTest.testTime":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":44,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":225,"com.graphhopper.GraphHopperTest.testPrepareOnly":182,"com.graphhopper.GraphHopperTest.testVia":189,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":224,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":99,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":29,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":257,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":179,"com.graphhopper.GraphHopperTest.testFootOnly":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":93,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":205,"com.graphhopper.util.InstructionListTest.testFind":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":150},"transformations":[{"failures":[],"tindex":"1846281f-82c4-11e5-bc4b-a31a16821409","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"variableMap":{"com.graphhopper.routing.util.PriorityWeighting.class":"com.graphhopper.routing.util.PriorityWeighting.class","weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:881","type":"CtIfImpl","sourcecode":"if (\"shortest\".equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder);\n} else if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-2},{"failures":[],"tindex":"18464f30-82c4-11e5-bc4b-c100caa52342","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:68","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"18464f31-82c4-11e5-bc4b-ebd57cd7b787","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"status":-2},{"failures":[0,1,2],"tindex":"18464f32-82c4-11e5-bc4b-81787aeabec4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:418","type":"CtIfImpl","sourcecode":"if ((long[][int]) == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[3],"tindex":"18467643-82c4-11e5-bc4b-558e6fbc2448","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:366","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,3,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"18467644-82c4-11e5-bc4b-09b76cf905f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[287],"tindex":"18467645-82c4-11e5-bc4b-e38f14574690","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:96","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"id\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"status":-1},{"failures":[189,192,197,270,273,274,276,279],"tindex":"18469d56-82c4-11e5-bc4b-29df45801bc3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:750","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    throw new java.lang.AssertionError((((((\"to or from index is invalid for this edge \" + int) + \"->\") + int) + \", points:\") + com.graphhopper.util.PointList));\n"},"variableMap":{"toIndex":"nodes","pointList":"pointList","fromIndex":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:762","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    double = com.graphhopper.util.PointList.getLatitude(int);\n    double = com.graphhopper.util.PointList.getLongitude(int);\n    if (com.graphhopper.util.PointList.is3D()) {\n        double = com.graphhopper.util.PointList.getElevation(int);\n        double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n        double = double;\n    } else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    \n    double = double;\n    double = double;\n    if ((int > 2) && (int < (int - 1))) {\n        if (com.graphhopper.util.PointList.is3D())\n            com.graphhopper.util.PointList.add(double, double, double);\n        else\n            com.graphhopper.util.PointList.add(double, double);\n        \n    } \n}"},"status":-1},{"failures":[],"tindex":"18469d57-82c4-11e5-bc4b-f73cbd550979","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[277],"tindex":"18469d58-82c4-11e5-bc4b-f3c9e9c05337","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"newNodeId","mask":"newNodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:413","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.set(0, long)"},"status":-1},{"failures":[],"tindex":"18469d59-82c4-11e5-bc4b-51584c84fa6f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:52","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DistanceCalc = com.graphhopper.util.DistanceCalc"},"variableMap":{"distanceCalc":"calc"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection"},"status":0},{"failures":[189,190,191,192,193,194,196,266,267],"tindex":"18469d5a-82c4-11e5-bc4b-59714395b8cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:114","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"));\n} "},"variableMap":{"allFound":"simplifyResponse","rsp":"response"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean).setSimplifyResponse(((boolean) && (double > 0))).doWork(com.graphhopper.GHResponse, java.util.List<com.graphhopper.routing.Path>, com.graphhopper.util.TranslationMap.getWithFallBack(java.util.Locale))"},"status":-1},{"failures":[24,28,32,124,150,153,160,162,182,193,194,195,196],"tindex":"1846c46b-82c4-11e5-bc4b-efce2e5bbe78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:143","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('\\n')"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:141","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('=')"},"status":-1},{"failures":[],"tindex":"1846c46c-82c4-11e5-bc4b-eb61e83a122f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":0},{"failures":[],"tindex":"1846c46d-82c4-11e5-bc4b-f5ef4736a390","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1006","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false)"},"status":-2},{"failures":[],"tindex":"1846c46e-82c4-11e5-bc4b-3b0b774af2d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"graphHopperLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:630","type":"CtTryImpl","sourcecode":"try {\n    if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    try {\n        com.graphhopper.GraphHopper.importData();\n        com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n    } catch (java.io.IOException ex) {\n        throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n    }\n    com.graphhopper.GraphHopper.cleanUp();\n    com.graphhopper.GraphHopper.postProcessing();\n    com.graphhopper.GraphHopper.flush();\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":0},{"failures":[],"tindex":"1846c46f-82c4-11e5-bc4b-63a909ea65de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"1846eb80-82c4-11e5-bc4b-eb6dba45736e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:147","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.storage.AbstractDataAccess)(com.graphhopper.storage.DataAccess)).isIntBased()"},"status":-2},{"failures":[],"tindex":"1846eb81-82c4-11e5-bc4b-9d0678566886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"variableMap":{"cg":"toSortedGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:246","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    int int = gnu.trove.list.TIntList.get(int);\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    int int = gnu.trove.list.TIntList.get(int);\n    if ((int < 0) || (int < 0))\n        continue;\n    \n    com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int));\n}"},"status":-2},{"failures":[23,30,174,189,197,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,234,235,236,237,238,239,240,241,242,246,247,288,289,248,250,251],"tindex":"1846eb82-82c4-11e5-bc4b-27c0fd123faf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"N_CH_REF"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1846c46c-82c4-11e5-bc4b-eb61e83a122f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.checkInit"]},"type":"staticDiff"}]}]}