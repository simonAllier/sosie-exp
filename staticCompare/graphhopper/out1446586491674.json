{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":123,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":146,"com.graphhopper.util.BitUtilBigTest.testToDouble":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.reader.OSMReaderTest.testFerry":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":55,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":81,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":129,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":120,"com.graphhopper.coll.CompressedArrayTest.testCompress":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":114,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":41,"com.graphhopper.GraphHopperTest.testPrepare":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.util.InstructionListTest.testWayList2":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":6,"com.graphhopper.reader.OSMReaderTest.testFoot":98,"com.graphhopper.search.NameIndexTest.testFlush":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":130,"com.graphhopper.util.BitUtilLittleTest.testToBitString":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":61,"com.graphhopper.reader.OSMReaderTest.testOneWay":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":32,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":144,"com.graphhopper.GraphHopperAPITest.testDisconnected179":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":116,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":31,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":17,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":37,"com.graphhopper.coll.OSMIDMapTest.testGet":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":23,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":70,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.GraphHopperTest.testLoadOSM":96,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.reader.OSMReaderTest.testSort":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":34,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":159,"com.graphhopper.reader.OSMReaderTest.testMain":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":7,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":53,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":139,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":63,"com.graphhopper.routing.PathTest.testWayList":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":5,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":45,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":77,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":48,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":20,"com.graphhopper.storage.StorablePropertiesTest.testStore":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":136,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":43,"com.graphhopper.GraphHopperTest.testFootAndCar":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":131,"com.graphhopper.util.BitUtilLittleTest.testToFloat":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":154,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":127,"com.graphhopper.coll.CompressedArrayTest.testCompress2":9,"com.graphhopper.GraphHopperTest.testPrepareOnly":91,"com.graphhopper.util.BitUtilBigTest.testToLong":1,"com.graphhopper.GraphHopperTest.testVia":29,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":160,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":79,"com.graphhopper.GraphHopperAPITest.testLoad":89,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":4,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.util.BitUtilLittleTest.testToInt":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":51,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":124,"com.graphhopper.reader.OSMReaderTest.testBarriers":74,"com.graphhopper.util.InstructionListTest.testFind":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":132,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":102,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":13,"com.graphhopper.util.GHUtilityTest.testCopy":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":68},"transformations":[{"failures":[],"tindex":"b73f4de9-8272-11e5-bd08-b13bd645959e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeAndEdgeEntrySize()"},"status":0},{"failures":[],"tindex":"b73f74fa-8272-11e5-bd08-ff1b4eb9ee20","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"variableMap":{"prioQueueOpenSetFrom":"prioQueueOpenSet","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"status":0},{"failures":[],"tindex":"b73f74fb-8272-11e5-bd08-39c46b9260e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeAndEdgeEntrySize()"},"variableMap":{"this":"that"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-2},{"failures":[0,1],"tindex":"b73f9c0c-8272-11e5-bd08-9918349b7b46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:77","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 5)] = ((byte)(long >> 40))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 40))"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"b73f9c0d-8272-11e5-bd08-e1adc0711328","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:70","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[9,10],"tindex":"b73f9c0e-8272-11e5-bd08-2d9fdf0f6aa9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"entriesPerSegment"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:88","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    com.graphhopper.coll.CompressedArray.flush();\n} "},"status":-1},{"failures":[11,12],"tindex":"b73f9c0f-8272-11e5-bd08-7b251afdd24c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:105","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Not supported for virtual edge. Set when creating it.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-1},{"failures":[],"tindex":"b73f9c10-8272-11e5-bd08-897bf4397b9a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"b73f9c11-8272-11e5-bd08-bfa0f38dcbe0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:177","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.finish()"},"status":-2},{"failures":[],"tindex":"b73fc322-8272-11e5-bd08-71dc457c52a9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:286","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":-2},{"failures":[6,13,14,15,16,17,18,19,20,7,21,22,23,24,25,26,27,28,29,30],"tindex":"b73fc323-8272-11e5-bd08-b7ef8909903e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:433","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"b73fc324-8272-11e5-bd08-c51bbdf89e12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"ghLocation","fileStr":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"status":0},{"failures":[31,32,33,34,35,36,37,5,13,15,24,38,39,40,41,11,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,12,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,28,89,90,91,29,92,93,94,95,96,97,30],"tindex":"b73fc325-8272-11e5-bd08-2973338c1d8d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"variableMap":{"offset":"value","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >>> 8))"},"status":-1},{"failures":[71,98,72,73,74,75,76,77,78,79,80,81,82,99,83,100,91,29,92,93,94,95,96,101,97,30,102],"tindex":"b73fc326-8272-11e5-bd08-ab307094abb8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1045","type":"CtAssertImpl","sourcecode":"assert (int) != (int) : ((((((\"endless loop detected for base node: \" + (int)) + \", adj node: \") + (int)) + \", edge pointer: \") + (long)) + \", edge: \") + (int)"},"variableMap":{"edgePointer":"nodeFlags","edgeId":"i","baseNode":"i","adjNode":"lastBarrier","nextEdgeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            gnu.trove.list.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-1},{"failures":[103,104,105,106,98,94,30],"tindex":"b73fea37-8272-11e5-bd08-199302e8bcbe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,40,128,129,130,131,132,133,134,135,136,137,41,138,139,140,141,142,143,42,144,145,146,147,148,149,150,151,152,153,154,155,156,63,65,157,68,158,159,160,161,162],"tindex":"b73fea38-8272-11e5-bd08-696df04def5c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"location","location":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"status":-1},{"failures":[],"tindex":"b73fea39-8272-11e5-bd08-35fad5c557ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:806","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"valueStr":"str","field":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:84","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \"time:\") + com.graphhopper.util.StopWatch.(getSeconds())"},"status":-2},{"failures":[],"tindex":"b73fea3a-8272-11e5-bd08-0fc65049f22c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:188","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b740114b-8272-11e5-bd08-bd3231901c2a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:209","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntIntBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntIntBinHeap.double))))"},"status":0},{"failures":[],"tindex":"b740114c-8272-11e5-bd08-93b610094c40","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"bwSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:241","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b73fc324-8272-11e5-bd08-c51bbdf89e12","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.isEmpty","com.graphhopper.util.Helper.pruneFileEnd"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.util.Helper_java.lang.String_pruneFileEnd(java.lang.String).b","com.graphhopper.util.Helper_java.lang.String_pruneFileEnd(java.lang.String).e1"]},"type":"branch"}]}]}