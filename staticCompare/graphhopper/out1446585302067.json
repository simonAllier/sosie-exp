{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":32,"com.graphhopper.search.NameIndexTest.testCreate":69,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":104,"com.graphhopper.util.BitUtilLittleTest.testToDouble":87,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":108,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.util.InstructionListTest.testWayList2":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":98,"com.graphhopper.search.NameIndexTest.testFlush":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":21,"com.graphhopper.util.InstructionListTest.testWayList":79,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":60,"com.graphhopper.coll.OSMIDMapTest.testGet":82,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":110,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":40,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":38,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":30,"com.graphhopper.util.BitUtilLittleTest.testToLong":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":59,"com.graphhopper.routing.PathTest.testWayList":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":22,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":54,"com.graphhopper.coll.OSMIDMapTest.testGet2":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":3,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":16,"com.graphhopper.storage.GraphHopperStorageTest.testClone":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":29,"com.graphhopper.GraphHopperTest.testFootAndCar":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":74,"com.graphhopper.coll.OSMIDMapTest.testGetLong":84,"com.graphhopper.search.NameIndexTest.testPut":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":10,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":57,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":13,"com.graphhopper.GraphHopperAPITest.testLoad":36,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":9,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.GraphHopperTest.testFootOnly":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":61,"com.graphhopper.reader.OSMReaderTest.testBarriers":27,"com.graphhopper.util.InstructionListTest.testFind":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":52,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":75},"transformations":[{"failures":[],"tindex":"f22faedd-826f-11e5-87dc-67d0f78429f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":0},{"failures":[0,1],"tindex":"f22fd5ee-826f-11e5-87dc-e34ca30deca7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"durationInHours","x":"shortTripsSpeed","absY":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[],"tindex":"f22fd5ef-826f-11e5-87dc-83f4678991b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"minLat","incDist2DSum":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[2,3,4],"tindex":"f22fd5f0-826f-11e5-87dc-1581df9448d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:52","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.getTime()"},"variableMap":{"path":"this","fullTimeInMillis":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:227","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, com.graphhopper.util.EdgeIteratorState.getFlags(), false)"},"status":-1},{"failures":[5,6],"tindex":"f22fd5f1-826f-11e5-87dc-d7983a19b9f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:280","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n        throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n    \n}"},"status":-1},{"failures":[],"tindex":"f22fd5f2-826f-11e5-87dc-db1c80c5542f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"variableMap":{"flags":"flags","backward":"reverse","reverseSpeedEncoder":"reverseSpeedEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false);\n"},"status":0},{"failures":[],"tindex":"f22fd5f3-826f-11e5-87dc-87fb3549de78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"high","entityType":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:411","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"f22ffd04-826f-11e5-87dc-91ae483a4378","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:246","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.QueryResult.getClosestNode()"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,6,48,49,50],"tindex":"f22ffd05-826f-11e5-87dc-13487fce8c21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:157","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[51,52,53,54,55,56,57,58],"tindex":"f22ffd06-826f-11e5-87dc-f9228f4155e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:636","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph"},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:567","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.Graph.getClass().equals(java.lang.Object.getClass())) {\n    com.graphhopper.storage.BaseGraph._copyTo(((com.graphhopper.storage.BaseGraph)(com.graphhopper.storage.Graph)));\n    return com.graphhopper.storage.Graph;\n} else {\n    return com.graphhopper.util.GHUtility.copyTo(this, com.graphhopper.storage.Graph);\n}"},"status":-1},{"failures":[],"tindex":"f22ffd07-826f-11e5-87dc-6b85a8e8aca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:404","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,25,77,78,79,80,4],"tindex":"f22ffd08-826f-11e5-87dc-8f4b925a89bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"oldPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:92","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[81],"tindex":"f2302419-826f-11e5-87dc-5f2408eff631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"f230241a-826f-11e5-87dc-85801b484a0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:354","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[int]"},"variableMap":{"n":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:207","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = int[][][int]"},"status":-2},{"failures":[],"tindex":"f230241b-826f-11e5-87dc-c11cf7ee778b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[82,83,84,85,86,87,88],"tindex":"f230241c-826f-11e5-87dc-5fb8d073e6d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:79","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(long >> 24))"},"status":-1},{"failures":[],"tindex":"f230241d-826f-11e5-87dc-6970b4280623","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"status":-2},{"failures":[],"tindex":"f230241e-826f-11e5-87dc-b529eaf26393","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"f2304b2f-826f-11e5-87dc-53b03df7bc15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[103,104,105,106,107,108,109,110],"tindex":"f2304b30-826f-11e5-87dc-1f80164b8143","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f22fd5f2-826f-11e5-87dc-db1c80c5542f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool","com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"f22faedd-826f-11e5-87dc-67d0f78429f7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool"]},"type":"staticDiff"}]}]}