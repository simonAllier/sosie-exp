{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":141,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":69,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":104,"com.graphhopper.reader.OSMReaderTest.testFerry":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":176,"com.graphhopper.routing.QueryGraphTest.testOneWay":68,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":155,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":157,"com.graphhopper.reader.OSMReaderTest.testWithBounds":45,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":129,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":143,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":20,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":194,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":86,"com.graphhopper.GraphHopperTest.testPrepare":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":137,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":66,"com.graphhopper.util.BitUtilLittleTest.testToBitString":124,"com.graphhopper.util.InstructionListTest.testWayList":73,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":190,"com.graphhopper.GraphHopperAPITest.testDisconnected179":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":146,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":188,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":61,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":136,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":3,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":163,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":116,"com.graphhopper.GraphHopperTest.testLoadOSM":29,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":102,"com.graphhopper.reader.OSMReaderTest.testSort":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":204,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":180,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":182,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":52,"com.graphhopper.routing.PathTest.testWayList":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":166,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":123,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":19,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":152,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":195,"com.graphhopper.util.GHUtilityTest.testSort":79,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":151,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.GraphHopperAPITest.testLoad":81,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":28,"com.graphhopper.util.TranslationMapTest.testToString":201,"com.graphhopper.reader.OSMReaderTest.testBarriers":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":8,"com.graphhopper.routing.PathTest.testFound":54,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":33,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.util.GHUtilityTest.testCopy":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":191,"com.graphhopper.routing.PathTest.testFindInstruction":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":131,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":76,"com.graphhopper.reader.PrinctonReaderTest.testRead":135,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":85,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":189,"com.graphhopper.util.InstructionListTest.testWayList2":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":149,"com.graphhopper.reader.OSMReaderTest.testFoot":35,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":6,"com.graphhopper.reader.OSMReaderTest.testOneWay":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":174,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":133,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":122,"com.graphhopper.coll.OSMIDMapTest.testGet":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":115,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":187,"com.graphhopper.util.GHUtilityTest.testSort2":77,"com.graphhopper.reader.OSMReaderTest.testMain":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":165,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":198,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":18,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":159,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":138,"com.graphhopper.storage.GraphHopperStorageTest.testClone":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":168,"com.graphhopper.GraphHopperTest.testFootAndCar":27,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":196,"com.graphhopper.routing.PathTest.testTime":55,"com.graphhopper.util.BitUtilLittleTest.testToFloat":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":12,"com.graphhopper.util.GHUtilityTest.testSortDirected":80,"com.graphhopper.GraphHopperTest.testPrepareOnly":22,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":0,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":91,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":64,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":75,"com.graphhopper.util.BitUtilLittleTest.testToInt":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":96,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":56,"com.graphhopper.util.InstructionListTest.testFind":71,"com.graphhopper.storage.EdgeTest.testCloneFull":206,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":172,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":11},"transformations":[{"failures":[],"tindex":"c98007f9-829f-11e5-9e1f-fd42f21285a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:420","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.flush()"},"status":-2},{"failures":[0],"tindex":"c980561a-829f-11e5-9e1f-b977c964927b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:247","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\")"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"c980561b-829f-11e5-9e1f-17571552784b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"E_NAME"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:252","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[81,82,83,84,85,2,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,11,107,108,109,110,16,111,112,22,24,25,26,27,28,29,31,32,113,34,36,37,38,39,40,41,42,43,44,45,46,47,114,115,116,117,118,119,120,51,121,122,123,58,124,125,126,71,74,78],"tindex":"c9807d2c-829f-11e5-9e1f-efc9c226e3bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"status":-1},{"failures":[2,127,128,129,130,11,131,132,16,133,134,38,41,43,135,136,137,114,115,138,139,116,117,118,51,121,123,53,140,141,64,142,66,70,143,144,145,146,73,74,77,78,79],"tindex":"c9807d2d-829f-11e5-9e1f-27bdc7ea09b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:150","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return ;\n} "},"variableMap":{"size":"nodeCount","i":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"status":-1},{"failures":[],"tindex":"c9807d2e-829f-11e5-9e1f-9fd9ddf9e5ab","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"c980a43f-829f-11e5-9e1f-470ef45ae6ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"length","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:836","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int)"},"status":-2},{"failures":[24,25,26,28,29,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"c980a440-829f-11e5-9e1f-392a14755309","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:270","type":"CtIfImpl","sourcecode":"if (!((double >= 0) || ((int - double) < (double))))\n    int = int - (int);\n"},"variableMap":{"val":"lon","intVal":"nodeId","degree":"nodeId","invPrecision":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo._setNode(int, double, double, double)"},"status":-1},{"failures":[],"tindex":"c980a441-829f-11e5-9e1f-45af6caa2fab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"location","fileStr":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:105","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String);\nelse\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n"},"status":-2},{"failures":[],"tindex":"c980a442-829f-11e5-9e1f-a903cd4d14dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:35","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,147,47,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,75],"tindex":"c980cb53-829f-11e5-9e1f-2311633ae164","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"c980cb54-829f-11e5-9e1f-650ca7bbb366","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:93","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnCostEncoder.isTurnRestricted(long))\n    return java.lang.Double.double;\n"},"status":0},{"failures":[201],"tindex":"c980cb55-829f-11e5-9e1f-83311ca31407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:123","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2))"},"status":-1},{"failures":[202],"tindex":"c980cb56-829f-11e5-9e1f-f152046fae38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:198","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:453","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"c980f267-829f-11e5-9e1f-05f0b7f392aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"com.graphhopper.util.Helper.MB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"status":-2},{"failures":[203,204,205],"tindex":"c980f268-829f-11e5-9e1f-b5d6740892cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"dim","configuredCHWeightings":"dim"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:446","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.NodeAccess.getDimension())))))\n    throw new java.lang.IllegalStateException((((((\"Configured dimension (\" + (com.graphhopper.storage.NodeAccess.getDimension())) + \") is not equal \") + \"to dimension of loaded graph (\") + java.lang.String) + \")\"));\n"},"status":-1},{"failures":[],"tindex":"c980f269-829f-11e5-9e1f-a77939392c61","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"speed","weight":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"c981197a-829f-11e5-9e1f-89316e6013db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"newSize","tmpNode":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"status":-2},{"failures":[206],"tindex":"c981197b-829f-11e5-9e1f-03579ff499c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"cl","edgeEntry":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"status":-1},{"failures":[40,207,208],"tindex":"c981197c-829f-11e5-9e1f-d9b0c7bc392b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"mmapDA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:146","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess : java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.values()) {\n    if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n        com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n    \n    com.graphhopper.storage.GHDirectory.removeDA(com.graphhopper.storage.DataAccess, com.graphhopper.storage.DataAccess.getName(), false);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c980cb54-829f-11e5-9e1f-650ca7bbb366","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":["com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isTurnRestricted(long).b","com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isTurnRestricted(long).e2","com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isTurnRestricted(long).e1"]},"type":"branch"}]}]}