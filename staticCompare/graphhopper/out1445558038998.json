{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":54,"com.graphhopper.routing.PathTest.testFindInstruction":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":7,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":110,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":31,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":61,"com.graphhopper.reader.PrinctonReaderTest.testRead":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":70,"com.graphhopper.util.InstructionListTest.testWayList2":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":62,"com.graphhopper.util.InstructionListTest.testWayList":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":11,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":36,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":112,"com.graphhopper.GraphHopperAPITest.testDisconnected179":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":87,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":37,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":73,"com.graphhopper.routing.PathBidirRefTest.testExtract":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":95,"com.graphhopper.util.GHUtilityTest.testSort2":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":4,"com.graphhopper.routing.PathBidirRefTest.testExtract2":89,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":103,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":78,"com.graphhopper.routing.PathTest.testWayList":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":90,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":86,"com.graphhopper.util.GHUtilityTest.testSort":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":49,"com.graphhopper.routing.PathTest.testTime":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":9,"com.graphhopper.util.GHUtilityTest.testSortDirected":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":2,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":42,"com.graphhopper.GraphHopperAPITest.testLoad":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":20,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":98,"com.graphhopper.util.InstructionListTest.testFind":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":63,"com.graphhopper.routing.PathTest.testFound":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":45,"com.graphhopper.util.GHUtilityTest.testCopy":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0},"transformations":[{"failures":[],"tindex":"29ae695d-7918-11e5-8254-9d9fe58008b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:307","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.close()"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.flush()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"29ae906e-7918-11e5-8254-39ae6ca7e7ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:219","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"29ae906f-7918-11e5-8254-c762c62d9a1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"29aeb680-7918-11e5-8254-176d60d1c42d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:296","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"forceClean":"allFound"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:114","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"));\n} "},"status":-2},{"failures":[],"tindex":"29aeb681-7918-11e5-8254-6395e415f463","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"status":-2},{"failures":[],"tindex":"29aeb682-7918-11e5-8254-e36af1b11f52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"synched","finishedFrom":"synched"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:209","type":"CtIfImpl","sourcecode":"if ((this.boolean) != (com.graphhopper.storage.DAType.boolean))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"29aeb683-7918-11e5-8254-0f02c01ffa9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:774","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"29aeb684-7918-11e5-8254-dd071496f5c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"com.graphhopper.storage.EdgeAccess.NO_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:701","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (int == (com.graphhopper.storage.EdgeAccess.int))\n        continue;\n    \n    if (com.graphhopper.coll.GHBitSet.contains(int))\n        throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n    \n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"29aeb685-7918-11e5-8254-21c1966f8e5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:55","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.Helper.loadProperties(java.util.Map<java.lang.String, java.lang.String>, new java.io.StringReader(new java.lang.String(byte[] , com.graphhopper.util.Helper.java.nio.charset.Charset)));\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.IllegalStateException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"29aeb686-7918-11e5-8254-d3490a92ad98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    com.graphhopper.storage.GraphHopperStorage.close();\n"},"status":-2},{"failures":[],"tindex":"29aedd97-7918-11e5-8254-81441842f6b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"29aedd98-7918-11e5-8254-2dce26636e25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"29aedd99-7918-11e5-8254-57fb45118975","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":-2},{"failures":[],"tindex":"29aedd9a-7918-11e5-8254-a3b9c36cfe9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"29aedd9b-7918-11e5-8254-7f9a3705d4be","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"r_lat_deg","weight":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:147","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"29aedd9c-7918-11e5-8254-79c440940348","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"locs","index":"locs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:189","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    int int = ((int)(com.graphhopper.geohash.KeyAlgo.encode(double, double)));\n    long long = ((long)(int)) * 4;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        int int = com.graphhopper.storage.DataAccess.getInt(long);\n        com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        if (double < double) {\n            com.graphhopper.storage.DataAccess.setInt(long, int);\n        } \n    } else {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"29af04ad-7918-11e5-8254-519310262f58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"29af04ae-7918-11e5-8254-0bc9883474d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:92","type":"CtReturnImpl","sourcecode":"return (long * (int)) + long"},"variableMap":{"latIndex":"flags","lonIndex":"flags","lonUnits":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:113","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false)"},"status":-2},{"failures":[],"tindex":"29af04af-7918-11e5-8254-7bc6a8d0aaf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"29af04b0-7918-11e5-8254-170d35589edb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setEdgesHeader()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}