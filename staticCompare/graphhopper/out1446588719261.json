{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":37,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.BitUtilLittleTest.testToBitString":32,"com.graphhopper.coll.IntIntBinHeapTest.testSize":38,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":36,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":29,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":39,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":28,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":34,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":35,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":0,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":31},"transformations":[{"failures":[0],"tindex":"e6ff7b42-8277-11e5-ae5a-0f950656f839","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"fwdSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"e6ffa253-8277-11e5-ae5a-7b005b7c65b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:87","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"variableMap":{"alreadyRun":"com.graphhopper.util.Constants.SNAPSHOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:88","type":"CtIfImpl","sourcecode":"if (\"${project.version}\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: maven did not preprocess the version file! Do not use the jar for a release!\");\n} else if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[],"tindex":"e6ffc964-8277-11e5-ae5a-f9a20201614c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"tmpNode","len":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"e6ffc965-8277-11e5-ae5a-23580c64ccfe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"e6ffc966-8277-11e5-ae5a-a33b38adda56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"variableMap":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.FOOT","osmFile":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:150","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[21],"tindex":"e7001787-8277-11e5-ae5a-57d12979bc12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:860","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntLongMap = null"},"variableMap":{"edgeIdToOsmWayIdMap":"edgeIdToOsmWayIdMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntLongMap = new gnu.trove.map.hash.TIntLongHashMap(com.graphhopper.reader.OSMReader.getOsmWayIdSet().size() , 0.5F , -1 , -1)"},"status":-1},{"failures":[],"tindex":"e7003e98-8277-11e5-ae5a-6164a1fbe4f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[32,33],"tindex":"e7003e99-8277-11e5-ae5a-c7ea1d5f7ecb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:204","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(')')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:125","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[34],"tindex":"e7003e9a-8277-11e5-ae5a-87a37df92181","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"stepY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:78","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"e7003e9b-8277-11e5-ae5a-555f6ee4b999","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:1002","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:201","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[],"tindex":"e70065ac-8277-11e5-ae5a-97e01c9ec63e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"offset","maxLeafEntries":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[2,9,10,35,36,37],"tindex":"e70065ad-8277-11e5-ae5a-9de6bbefaf3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"status":-1},{"failures":[38,39],"tindex":"e70065ae-8277-11e5-ae5a-5f0a3d6ab41b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"e70065af-8277-11e5-ae5a-2d35662a8221","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:475","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"e70065b0-8277-11e5-ae5a-df084a89618e","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double))"},"variableMap":{"toLat":"fromLat","fromLon":"endHeading","toLon":"fromLon","fromLat":"fromLon","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double), double, double)"},"status":-2},{"failures":[],"tindex":"e7008cc1-8277-11e5-ae5a-11801ee4002f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":0},{"failures":[],"tindex":"e7008cc2-8277-11e5-ae5a-d3bee4625949","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"gridCellWidth","dMinLat":"x1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:57","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.frac((double / double))"},"status":0},{"failures":[],"tindex":"e7008cc3-8277-11e5-ae5a-65b7989b73fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1101","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.BaseGraph.AllEdgeIterator.(checkRange()))\n    return false;\n"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:181","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.CHEdgeIteratorState) && (((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.util.EdgeIteratorState)).isShortcut())"},"status":-2},{"failures":[],"tindex":"e700b3d4-8277-11e5-ae5a-cb58652976cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"variableMap":{"high":"need","len":"need","start":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:197","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.(com.graphhopper.util.Helper.idealByteArraySize((int * 4))) / 4"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e7008cc2-8277-11e5-ae5a-d3bee4625949","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.BresenhamLine.frac"]},"type":"staticDiff"}]},{"transformation":"e7008cc1-8277-11e5-ae5a-11801ee4002f","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.index.QueryResult_void_setClosestEdge(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.index.QueryResult_void_setClosestEdge(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.detach","com.graphhopper.storage.index.QueryResult.setClosestEdge"]},"type":"staticDiff"}]}]}