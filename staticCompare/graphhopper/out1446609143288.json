{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":22,"com.graphhopper.search.NameIndexTest.testCreate":74,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":124,"com.graphhopper.routing.PathTest.testFindInstruction":17,"com.graphhopper.reader.OSMReaderTest.testFerry":110,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":163,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":73,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":50,"com.graphhopper.reader.OSMReaderTest.testWithBounds":116,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":23,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":107,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":142,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":20,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":108,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":38,"com.graphhopper.GraphHopperTest.testPrepare":117,"com.graphhopper.util.InstructionListTest.testWayList2":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":145,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":54,"com.graphhopper.search.NameIndexTest.testFlush":72,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":100,"com.graphhopper.reader.OSMReaderTest.testFoot":111,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":25,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":125,"com.graphhopper.util.InstructionListTest.testWayList":69,"com.graphhopper.reader.OSMReaderTest.testOneWay":168,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":65,"com.graphhopper.GraphHopperAPITest.testDisconnected179":169,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":102,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":32,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":123,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":155,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":19,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":15,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":147,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":13,"com.graphhopper.coll.OSMIDMapTest.testGet":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":97,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":118,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":137,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":63,"com.graphhopper.GraphHopperTest.testLoadOSM":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":51,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":134,"com.graphhopper.reader.OSMReaderTest.testSort":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":87,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":165,"com.graphhopper.reader.OSMReaderTest.testMain":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":40,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":106,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":12,"com.graphhopper.routing.PathTest.testWayList":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":150,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":153,"com.graphhopper.coll.OSMIDMapTest.testGet2":76,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":141,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":167,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":21,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":143,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":61,"com.graphhopper.storage.StorablePropertiesTest.testStore":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":35,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":156,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":53,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":55,"com.graphhopper.GraphHopperTest.testFootAndCar":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":36,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":41,"com.graphhopper.coll.OSMIDMapTest.testGetLong":77,"com.graphhopper.search.NameIndexTest.testPut":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":1,"com.graphhopper.GraphHopperTest.testPrepareOnly":29,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":60,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":148,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":85,"com.graphhopper.GraphHopperAPITest.testLoad":126,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":120,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":90,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":9,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":121,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":14,"com.graphhopper.util.InstructionListTest.testFind":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":104,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":164},"transformations":[{"failures":[0],"tindex":"74ad45a9-82a7-11e5-8b61-2ffbfdf5adc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:615","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":-1},{"failures":[],"tindex":"74ad93ca-82a7-11e5-8b61-4f46d9662dc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"74ad93cb-82a7-11e5-8b61-cb1d6081384c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:121","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"variableMap":{"intKey":"kmInteger","str":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:445","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,8,30,31,32,33,34,35,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,9,71,72,73,74,75,76,77,78,79,80,81],"tindex":"74ad93cc-82a7-11e5-8b61-c1748697c410","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:275","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"74ae571d-82a7-11e5-8b61-dd20c2887de9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"newI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:720","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-2},{"failures":[82,83],"tindex":"74ae571e-82a7-11e5-8b61-270a66945700","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"74ae7e2f-82a7-11e5-8b61-ffafb15d96a6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:756","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[],"tindex":"74ae7e30-82a7-11e5-8b61-03328152b751","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[84],"tindex":"74ae7e31-82a7-11e5-8b61-d913ca59283d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:114","type":"CtIfImpl","sourcecode":"if ((boolean) && ((int) > 1))\n    return com.graphhopper.util.GHUtility.reverseEdgeKey(int);\n"},"variableMap":{"edgeBased":"reverse","edgeKey":"edgeId","noOfStates":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:524","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"status":-1},{"failures":[85],"tindex":"74ae7e32-82a7-11e5-8b61-41718a33236d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:116","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"status":-1},{"failures":[85],"tindex":"74aea543-82a7-11e5-8b61-03a62bee46ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"variableMap":{"initialized":"calcMean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:107","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n} "},"status":-1},{"failures":[],"tindex":"74aea544-82a7-11e5-8b61-e5a278e14cae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"74aea545-82a7-11e5-8b61-9747f0bf6793","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"variableMap":{"message":"debug"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1050","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":0},{"failures":[],"tindex":"74aea546-82a7-11e5-8b61-1b2fee287d4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:253","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[86,87,88,89,90,91,92,93,36,94,95,96,97,39,52,98,99,100,101,56,102,103,104,105,59,106,107,108,109,63,110,111,79,112,113,114,115,116],"tindex":"74aecc57-82a7-11e5-8b61-377065f626e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:103","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    java.util.Set<java.lang.Integer>.add(int);\n}"},"status":-1},{"failures":[],"tindex":"74aecc58-82a7-11e5-8b61-490650fdc56d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:162","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.RandomAccessFile.read(byte[])"},"status":-2},{"failures":[8,117,118,119,30,31,33,120,121,122,123,124,125,79,112,126],"tindex":"74aecc59-82a7-11e5-8b61-b526fc0d4ce1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    \n}"},"status":-1},{"failures":[127,128,129,130,131,29,132,133,134,135,136,137,138,8,117,118,119,30,31,32,33,34,139,140,141,142,48,143,49,144,121,145,146,147,148,149,150,151,152,153,154,50,155,51,156,124,157,158,159,160,161,162,163,164,165,110,111,79,166,112,80,81,167,113,114,115,116,10,168,126,169],"tindex":"74aef36a-82a7-11e5-8b61-1b18ca6a5515","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:315","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-1},{"failures":[170,171,110],"tindex":"74aef36b-82a7-11e5-8b61-1ddf1c226651","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:251","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"variableMap":{"acceptBit":"ferryBit","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"74aea545-82a7-11e5-8b61-9747f0bf6793","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}