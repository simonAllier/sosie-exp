{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":76,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":96,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":276,"com.graphhopper.reader.OSMReaderTest.testFerry":135,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":131,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":132,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":183,"com.graphhopper.routing.QueryGraphTest.testOneWay":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":10,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":160,"com.graphhopper.coll.GHTBitSetTest.testToString":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":272,"com.graphhopper.reader.OSMReaderTest.testWithBounds":146,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":14,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":174,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":369,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":297,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":38,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":292,"com.graphhopper.GraphHopperTest.testPrepare":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":75,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":39,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":248,"com.graphhopper.search.NameIndexTest.testFlush":356,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":58,"com.graphhopper.util.InstructionListTest.testWayList":127,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":67,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":313,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":123,"com.graphhopper.GraphHopperAPITest.testDisconnected179":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":195,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":171,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":167,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":270,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":64,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":273,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":91,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":353,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":16,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":163,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":238,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":54,"com.graphhopper.GraphHopperTest.testLoadOSM":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":281,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":300,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":185,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":274,"com.graphhopper.reader.OSMReaderTest.testSort":138,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":4,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":321,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":362,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":48,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":80,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":101,"com.graphhopper.storage.RAMDataAccessTest.testHeader":358,"com.graphhopper.coll.GHTBitSetTest.testClear":35,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":151,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":223,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":82,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":227,"com.graphhopper.routing.PathTest.testWayList":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":349,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":81,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":209,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":65,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":95,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":176,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":311,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":216,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":72,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":357,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":366,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":90,"com.graphhopper.util.GHUtilityTest.testSort":120,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":213,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":106,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":354,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":31,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":327,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":175,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":225,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":287,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":322,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":335,"com.graphhopper.GraphHopperAPITest.testLoad":133,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":165,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":339,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":114,"com.graphhopper.reader.OSMReaderTest.testBarriers":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.routing.PathTest.testFound":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":218,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":63,"com.graphhopper.util.GHUtilityTest.testCopy":119,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":360,"com.graphhopper.routing.PathTest.testFindInstruction":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":27,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":28,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":217,"com.graphhopper.util.InstructionListTest.testEmptyList":125,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":265,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":257,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":71,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":23,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":45,"com.graphhopper.reader.PrinctonReaderTest.testRead":149,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":50,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":188,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":340,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":206,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":226,"com.graphhopper.util.InstructionListTest.testWayList2":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":303,"com.graphhopper.reader.OSMReaderTest.testFoot":136,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":279,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":262,"com.graphhopper.reader.OSMReaderTest.testOneWay":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":187,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":352,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":198,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":229,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":190,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":49,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":336,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":314,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":234,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":42,"com.graphhopper.routing.PathBidirRefTest.testExtract":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":290,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":130,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":159,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":181,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":355,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":157,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":156,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":155,"com.graphhopper.storage.RAMDataAccessTest.testSegments":359,"com.graphhopper.util.GHUtilityTest.testSort2":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":73,"com.graphhopper.reader.OSMReaderTest.testMain":137,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":212,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":177,"com.graphhopper.routing.PathBidirRefTest.testExtract2":116,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":312,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":201,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":344,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":220,"com.graphhopper.util.SimpleIntDequeTest.testPush":34,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":47,"com.graphhopper.storage.StorablePropertiesTest.testStore":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":173,"com.graphhopper.storage.GraphHopperStorageTest.testClone":236,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":215,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":204,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":245,"com.graphhopper.GraphHopperTest.testFootAndCar":164,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":182,"com.graphhopper.routing.PathTest.testTime":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":69,"com.graphhopper.util.GHUtilityTest.testSortDirected":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":328,"com.graphhopper.GraphHopperTest.testPrepareOnly":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":197,"com.graphhopper.GraphHopperTest.testVia":161,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":268,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":68,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":144,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":308,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":296,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":178,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":129,"com.graphhopper.GraphHopperTest.testFootOnly":169,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":302,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":304,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":86,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":196,"com.graphhopper.util.InstructionListTest.testFind":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":60,"com.graphhopper.coll.GHTBitSetTest.testCopy":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":319},"transformations":[{"failures":[],"tindex":"2b9242e3-82c2-11e5-be88-2107b4454280","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:696","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList(((com.graphhopper.routing.VirtualEdgeIterator.count()) * 2))"},"status":-2},{"failures":[],"tindex":"2b9269f4-82c2-11e5-be88-678c4aefabc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"versionHint","name":"versionHint"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:118","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"status":0},{"failures":[0],"tindex":"2b929105-82c2-11e5-be88-658a82dc8926","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.readMembers(javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"2b929106-82c2-11e5-be88-5d3b2f55c158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:146","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double += com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, true)"},"status":-1},{"failures":[],"tindex":"2b929107-82c2-11e5-be88-15a4025ded45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"2b929108-82c2-11e5-be88-a11cfa8533a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:432","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"variableMap":{"latlon":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"2b92b819-82c2-11e5-be88-4565b275a0b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:711","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-1},{"failures":[],"tindex":"2b92b81a-82c2-11e5-be88-1b4d6d474456","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[34],"tindex":"2b92b81b-82c2-11e5-be88-3d6ea51bb4e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:77","type":"CtIfImpl","sourcecode":"if ((int) > int) {\n    int = com.graphhopper.util.SimpleIntDeque.getSize();\n    int[] int[] = new int[(int) + 10];\n    java.lang.System.arraycopy(int[], int, int[], 0, int);\n    int[] = int[];\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"2b92b81c-82c2-11e5-be88-4da4edb87e83","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:494","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"Cannot create edge if graph is already frozen\");\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":0},{"failures":[35,36,37,38],"tindex":"2b92df2d-82c2-11e5-be88-f307687127b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:597","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(-(int + 1))"},"variableMap":{"set":"tHash","value":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:56","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(int)"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,109,110,1,2,111,3,112,4,5,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,0,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,6,188,189,190,191,192,193,194,195,196,197,7,198,8,199,200,201,9,10,202,203,204,205,206,207,11,12,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,20,235,236,237,238,239,240,241,242,243,244,21,245,22,246,247,248,23,24,249,250,251,252,253,254,25,26,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,27,327,328,329,330,331,332,333,334,335,336,28,337,29,338,339,340,30,31,341,342,343,344,345,346,32,33,347,348,349,350,351,352,353,354,355],"tindex":"2b92df2e-82c2-11e5-be88-05f3f11af9c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:312","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"variableMap":{"bytePos":"bytePos","indexDivisor":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"2b93063f-82c2-11e5-be88-27908411d09e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getElevation(0)"},"variableMap":{"points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:143","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(0)"},"status":-2},{"failures":[39,40,41,43,47,48,49,50,51,53,54,55,56,57,58,59,62,65,67,69,70,71,72,73,75,78,79,81,171,174,175,176,177,178,179,180,293],"tindex":"2b932d50-82c2-11e5-be88-15a84e64c9d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"a","edgeTo":"a","edgeFrom":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:179","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-1},{"failures":[316],"tindex":"2b932d51-82c2-11e5-be88-ef2b45fd7281","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"to","maxEdgesCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-1},{"failures":[356,153,165,166,167,168,173,177,357,358,359,360,361,362,363,364,365,366,367,368],"tindex":"2b932d52-82c2-11e5-be88-558716b0b62f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:155","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"2b935463-82c2-11e5-be88-df37ba9eb938","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:164","type":"CtReturnImpl","sourcecode":"return (((((\"*-(\" + (int)) + \")->\") + (int)) + \"-(\") + (int)) + \")->*\""},"variableMap":{"edgeTo":"com.graphhopper.util.Constants.VERSION_EDGE","nodeVia":"com.graphhopper.util.Constants.VERSION_EDGE","edgeFrom":"com.graphhopper.util.Constants.VERSION_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:70","type":"CtReturnImpl","sourcecode":"return ((((((((((com.graphhopper.util.Constants.int) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"2b935464-82c2-11e5-be88-15ecd3e469d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:912","type":"CtIfImpl","sourcecode":"if (double < (double))\n    int = int;\n"},"variableMap":{"tmpClosestNode":"nodes","adjNode":"nodes","adjDist":"lon","currNormedDist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:762","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    double = com.graphhopper.util.PointList.getLatitude(int);\n    double = com.graphhopper.util.PointList.getLongitude(int);\n    if (com.graphhopper.util.PointList.is3D()) {\n        double = com.graphhopper.util.PointList.getElevation(int);\n        double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n        double = double;\n    } else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    \n    double = double;\n    double = double;\n    if ((int > 2) && (int < (int - 1))) {\n        if (com.graphhopper.util.PointList.is3D())\n            com.graphhopper.util.PointList.add(double, double, double);\n        else\n            com.graphhopper.util.PointList.add(double, double);\n        \n    } \n}"},"status":-2},{"failures":[108,109,140,141,182,202,369,228,249,319,341],"tindex":"2b935465-82c2-11e5-be88-75a8dea9dcdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:67","type":"CtIfImpl","sourcecode":"if (boolean)\n    return 3;\n"},"status":-1},{"failures":[370],"tindex":"2b935466-82c2-11e5-be88-2dd8fe269301","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:183","type":"CtReturnImpl","sourcecode":"return false"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2b9269f4-82c2-11e5-be88-678c4aefabc6","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.search.NameIndexTest.testFlush":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.RAMDataAccessTest.testHeader":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"],"com.graphhopper.storage.StorablePropertiesTest.testStore":["com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).t2","com.graphhopper.storage.AbstractDataAccess_long_readHeader(java.io.RandomAccessFile).e2"]},"type":"branch"}]}]}