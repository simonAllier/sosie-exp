{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":238,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":264,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":43,"com.graphhopper.reader.OSMReaderTest.testFerry":276,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":167,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":168,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":261,"com.graphhopper.routing.QueryGraphTest.testOneWay":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":30,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":93,"com.graphhopper.reader.OSMReaderTest.testWithBounds":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":202,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":59,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":67,"com.graphhopper.GraphHopperTest.testPrepare":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":237,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":139,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":244,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":220,"com.graphhopper.util.InstructionListTest.testWayList":175,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":229,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":180,"com.graphhopper.GraphHopperAPITest.testDisconnected179":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":49,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":94,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":216,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":291,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":206,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":191,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":259,"com.graphhopper.GraphHopperTest.testLoadOSM":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":81,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":95,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":158,"com.graphhopper.reader.OSMReaderTest.testSort":279,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":205,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":26,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":242,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":268,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":289,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":227,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":109,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":41,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":234,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":215,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":4,"com.graphhopper.util.GHUtilityTest.testSort":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":98,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":135,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":38,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":210,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":196,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":155,"com.graphhopper.GraphHopperAPITest.testLoad":274,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":241,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":148,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":201,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":208,"com.graphhopper.reader.OSMReaderTest.testBarriers":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":62,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":47,"com.graphhopper.util.GHUtilityTest.testCopy":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":225,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":111,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":119,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":228,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":163,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":132,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":250,"com.graphhopper.reader.PrinctonReaderTest.testRead":290,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":48,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":255,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":33,"com.graphhopper.util.InstructionListTest.testWayList2":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":292,"com.graphhopper.reader.OSMReaderTest.testFoot":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":101,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":273,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":99,"com.graphhopper.reader.OSMReaderTest.testOneWay":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":161,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":56,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":146,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":281,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":247,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":178,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":188,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":64,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":185,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":105,"com.graphhopper.util.GHUtilityTest.testSort2":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":235,"com.graphhopper.reader.OSMReaderTest.testMain":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":91,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":77,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":128,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":96,"com.graphhopper.storage.GraphHopperStorageTest.testClone":143,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":40,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":32,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":156,"com.graphhopper.GraphHopperTest.testFootAndCar":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":113,"com.graphhopper.util.GHUtilityTest.testSortDirected":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":23,"com.graphhopper.GraphHopperTest.testPrepareOnly":182,"com.graphhopper.GraphHopperTest.testVia":189,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":230,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":285,"com.graphhopper.util.DouglasPeuckerTest.testParse":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":10,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":265,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":177,"com.graphhopper.GraphHopperTest.testFootOnly":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":83,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":284,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":213,"com.graphhopper.util.InstructionListTest.testFind":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":107},"transformations":[{"failures":[],"tindex":"b99553c4-826f-11e5-9600-afa9af082d15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:51","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"b9957ad5-826f-11e5-9600-dd1a2310f54b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), com.graphhopper.routing.util.EncodingManager.hashCode())"},"status":0},{"failures":[],"tindex":"b9957ad6-826f-11e5-9600-872426ff043f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[0,1,2,3],"tindex":"b9957ad7-826f-11e5-9600-73ccf6d0545f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:437","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(java.lang.Double.parseDouble(java.lang.String), java.lang.Double.parseDouble(java.lang.String[][0].trim()), java.lang.Double.double)"},"status":-1},{"failures":[],"tindex":"b9957ad8-826f-11e5-9600-83089454f519","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:188","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"b9957ad9-826f-11e5-9600-7f5b41a3f713","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:186","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[4],"tindex":"b995a1ea-826f-11e5-9600-519ac9b3c14d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:368","type":"CtAssignmentImpl","sourcecode":"java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1))"},"status":-1},{"failures":[],"tindex":"b995a1eb-826f-11e5-9600-cd57e97c444e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[5],"tindex":"b995a1ec-826f-11e5-9600-3d86799a7106","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:274","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"b995a1ed-826f-11e5-9600-0598a69d88f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.clear()"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"tindex":"b995a1ee-826f-11e5-9600-7100dbf10e2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"nodeThis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:167","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(com.graphhopper.storage.EdgeAccess._getLinkPosInEdgeArea(int, int, long))"},"status":-1},{"failures":[],"tindex":"b995c8ff-826f-11e5-9600-f115771697dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:58","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.util.ArrayList<java.lang.Integer>.add(gnu.trove.list.TIntList.get(int));\n}"},"status":0},{"failures":[],"tindex":"b995c900-826f-11e5-9600-a9abbfd9df58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:358","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"b995f011-826f-11e5-9600-4fc860a22d65","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[201,208],"tindex":"b995f012-826f-11e5-9600-416447ee98ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"minOneWayNetworkSize","maxGeoRef":"minOnewayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[292,293],"tindex":"b995f013-826f-11e5-9600-a5d54d7ff9b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","this":"this","classBicycle":"classBicycleSpecific"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:565","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\");\n    if (java.lang.String != null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n    \n}"},"status":-1},{"failures":[181,182,294,189,190,191,192,193,194,195,196,197,198,276,277,278,279,280,281,282,283,284,285,286,287,295,288],"tindex":"b9961724-826f-11e5-9600-27572b96bbd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:291","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n    com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n} "},"status":-1},{"failures":[],"tindex":"b9961725-826f-11e5-9600-b1ee6f75b0b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[7,183,184,186,187,261,264,265,269,270,271,273],"tindex":"b9961726-826f-11e5-9600-f39d03b6da64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:629","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    gnu.trove.set.hash.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int);\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b9957ad5-826f-11e5-9600-dd1a2310f54b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader","com.graphhopper.routing.util.EncodingManager.hashCode"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":["com.graphhopper.routing.util.CarFlagEncoder_java.lang.String_toString().b","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.util.EncodingManager_int_hashCode().b","com.graphhopper.routing.util.FootFlagEncoder_java.lang.String_toString().b","com.graphhopper.routing.util.AbstractFlagEncoder_int_hashCode().b"],"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.util.EncodingManager_int_hashCode().b","com.graphhopper.routing.util.AbstractFlagEncoder_int_hashCode().b"],"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.routing.util.CarFlagEncoder_java.lang.String_toString().b","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.util.EncodingManager_int_hashCode().b","com.graphhopper.routing.util.FootFlagEncoder_java.lang.String_toString().b","com.graphhopper.routing.util.AbstractFlagEncoder_int_hashCode().b"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.util.EncodingManager_int_hashCode().b","com.graphhopper.routing.util.FootFlagEncoder_java.lang.String_toString().b","com.graphhopper.routing.util.AbstractFlagEncoder_int_hashCode().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.util.EncodingManager_int_hashCode().b","com.graphhopper.routing.util.AbstractFlagEncoder_int_hashCode().b"]},"type":"branch"}]},{"transformation":"b9957ad6-826f-11e5-9600-872426ff043f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay"]},"type":"staticDiff"}]},{"transformation":"b995a1ed-826f-11e5-9600-0598a69d88f1","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).e1","com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).b","com.graphhopper.storage.GHDirectory_void_remove(com.graphhopper.storage.DataAccess).b","com.graphhopper.storage.AbstractDataAccess_void_close().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.reader.PillarInfo_void_clear().b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e1","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getName().b","com.graphhopper.storage.RAMDataAccess_void_close().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).e1","com.graphhopper.storage.RAMDataAccess_boolean_isStoring().b","com.graphhopper.storage.GHDirectory_void_removeFromMap(java.lang.String).b","com.graphhopper.storage.GHDirectory_void_remove(com.graphhopper.storage.DataAccess).b","com.graphhopper.storage.AbstractDataAccess_void_close().b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().e1","com.graphhopper.reader.PillarInfo_void_clear().b","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e1","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).e2","com.graphhopper.storage.GHDirectory_void_removeDA(com.graphhopper.storage.DataAccess,java.lang.String,boolean).b","com.graphhopper.storage.RAMDataAccess_com.graphhopper.storage.DAType_getType().b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getName().b","com.graphhopper.storage.RAMDataAccess_void_close().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.PillarInfo.clear"]},"type":"staticDiff"}]}]}