{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":79,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":6,"com.graphhopper.reader.OSMReaderTest.testFerry":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":83,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":81,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.storage.MMapDataAccessTest.testSegments":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":63,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":75,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":20,"com.graphhopper.coll.CompressedArrayTest.testCompress":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":62,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":82,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":2,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":42,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":47,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":65,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":92,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":67,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":49,"com.graphhopper.reader.OSMReaderTest.testMain":91,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":28,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":85,"com.graphhopper.coll.GHTBitSetTest.testClear":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":78,"com.graphhopper.routing.util.EncodedDoubleValueTest.testUnsignedRightShift_issue417":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":21,"com.graphhopper.routing.PathTest.testWayList":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":68,"com.graphhopper.storage.MMapDataAccessTest.testCopy":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":44,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":51,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":12,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":56,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":80,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":7,"com.graphhopper.routing.PathTest.testTime":53,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":69,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":13,"com.graphhopper.coll.CompressedArrayTest.testCompress2":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":40,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":5,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":35,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1,"com.graphhopper.GraphHopperTest.testFootOnly":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":66,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":4,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":27,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":39},"transformations":[{"failures":[0],"tindex":"11abb461-829d-11e5-9984-83fe534520f0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:304","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"11ac0282-829d-11e5-9984-c568dc9818c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:930","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"wayPointMaxDistance\", 1.0)"},"status":-2},{"failures":[],"tindex":"11ac0283-829d-11e5-9984-9d2b8107b977","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1119","type":"CtReturnImpl","sourcecode":"return (int) < (com.graphhopper.storage.BaseGraph.int)"},"variableMap":{"edgeId":"index","baseGraph":"baseGraph","edgeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:221","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getRemovedNodes().contains(int)"},"status":0},{"failures":[],"tindex":"11ac0284-829d-11e5-9984-b55fba5a6620","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.clear()"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"11ac0285-829d-11e5-9984-771c17a2089d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:78","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[],"tindex":"11ac2996-829d-11e5-9984-17b505a5902f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT_STORE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[57],"tindex":"11ac2997-829d-11e5-9984-391978ee7081","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"variableMap":{"intLen":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:156","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-1},{"failures":[58,59,60,61],"tindex":"11ac2998-829d-11e5-9984-fdd0fbd6469a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"costs","orientation":"costs","java.lang.Math.PI":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:684","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"11ac50a9-829d-11e5-9984-9f2f06843ce7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"longSegmentSize","guess":"longSegmentSize","low":"bufferStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"status":-1},{"failures":[],"tindex":"11ac50aa-829d-11e5-9984-392f816f8a31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:181","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"status":-2},{"failures":[77,78,79,80],"tindex":"11ac50ab-829d-11e5-9984-f53854ea8e2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:251","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89],"tindex":"11ac50ac-829d-11e5-9984-d92ca375df21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"variableMap":{"r":"lon","com.graphhopper.util.AngleCalc.PI_4":"midLat","x":"midLon","angle":"lon","absY":"midLon","com.graphhopper.util.AngleCalc.PI3_4":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"11ac77bd-829d-11e5-9984-31ed4ab62913","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:172","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[90,91,92,76,93],"tindex":"11ac77be-829d-11e5-9984-0d586bf493e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:842","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.is3D())\n    com.graphhopper.util.PointList.add(double, double, double);\nelse\n    com.graphhopper.util.PointList.add(double, double);\n"},"status":-1},{"failures":[94],"tindex":"11ac77bf-829d-11e5-9984-7f90569e577e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:68","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.size()"},"status":-1},{"failures":[],"tindex":"11ac77c0-829d-11e5-9984-5313c2d2491c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"java.lang.Double.NaN","speed":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:430","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\[\")) {\n    if ((java.lang.String.trim().length()) == 0)\n        continue;\n    \n    java.lang.String[] java.lang.String[] = java.lang.String.split(\",\");\n    java.lang.String java.lang.String = java.lang.String[][1].replace(\"]\", \"\").trim();\n    com.graphhopper.util.PointList.add(java.lang.Double.parseDouble(java.lang.String), java.lang.Double.parseDouble(java.lang.String[][0].trim()), java.lang.Double.double);\n}"},"status":-2},{"failures":[],"tindex":"11ac9ed1-829d-11e5-9984-673a1f8ed6e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:39","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"11ac9ed2-829d-11e5-9984-6769609e0ece","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:169","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * (int - double))"},"variableMap":{"gradient":"weight","y1":"weight","x1":"weight","xend":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:203","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double)"},"status":-2},{"failures":[95,96],"tindex":"11ac9ed3-829d-11e5-9984-f7f5a3c57747","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[76],"tindex":"11ac9ed4-829d-11e5-9984-8998f0974ea2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:144","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.dem.ElevationProvider == null) || (com.graphhopper.reader.dem.ElevationProvider == (com.graphhopper.reader.dem.ElevationProvider.com.graphhopper.reader.dem.ElevationProvider)))\n    com.graphhopper.GraphHopper.setElevation(false);\nelse\n    com.graphhopper.GraphHopper.setElevation(true);\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"11ac0283-829d-11e5-9984-9d2b8107b977","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.GHBitSet.contains","com.graphhopper.storage.BaseGraph.getRemovedNodes"]},"type":"staticDiff"}]}]}