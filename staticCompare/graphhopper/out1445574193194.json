{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":281,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":291,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":176,"com.graphhopper.reader.OSMReaderTest.testFerry":210,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":339,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":340,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":288,"com.graphhopper.routing.QueryGraphTest.testOneWay":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":68,"com.graphhopper.reader.OSMReaderTest.testWithBounds":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":186,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":317,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":3,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":193,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":50,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":203,"com.graphhopper.GraphHopperTest.testPrepare":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":280,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":103,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":244,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":263,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":132,"com.graphhopper.util.InstructionListTest.testWayList":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":272,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":335,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":328,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":182,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":69,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":225,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":312,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":216,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":207,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":236,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":259,"com.graphhopper.GraphHopperTest.testLoadOSM":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":53,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":70,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":124,"com.graphhopper.reader.OSMReaderTest.testSort":213,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":275,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":220,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":27,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":129,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":285,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":296,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":209,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":303,"com.graphhopper.routing.PathTest.testWayList":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":67,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":270,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":290,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":5,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":46,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":277,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":311,"com.graphhopper.util.GHUtilityTest.testSort":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":74,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":173,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":301,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":40,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":295,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":139,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":241,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":150,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":9,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.reader.OSMReaderTest.testBarriers":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":197,"com.graphhopper.routing.PathTest.testFound":305,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":268,"com.graphhopper.util.GHUtilityTest.testCopy":331,"com.graphhopper.routing.PathTest.testFindInstruction":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":143,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":152,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":184,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":271,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":89,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":130,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":276,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":166,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":250,"com.graphhopper.reader.PrinctonReaderTest.testRead":224,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":8,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":255,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":34,"com.graphhopper.util.InstructionListTest.testWayList2":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":56,"com.graphhopper.reader.OSMReaderTest.testFoot":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":196,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":75,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":76,"com.graphhopper.reader.OSMReaderTest.testOneWay":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":25,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":127,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":188,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":104,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":190,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":215,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":258,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":247,"com.graphhopper.routing.PathBidirRefTest.testExtract":313,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":233,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":198,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":230,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":82,"com.graphhopper.util.GHUtilityTest.testSort2":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":187,"com.graphhopper.reader.OSMReaderTest.testMain":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":41,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":6,"com.graphhopper.routing.PathBidirRefTest.testExtract2":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":65,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":48,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":162,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":71,"com.graphhopper.storage.GraphHopperStorageTest.testClone":106,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":45,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":33,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":115,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":121,"com.graphhopper.GraphHopperTest.testFootAndCar":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":181,"com.graphhopper.routing.PathTest.testTime":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":144,"com.graphhopper.util.GHUtilityTest.testSortDirected":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":23,"com.graphhopper.GraphHopperTest.testPrepareOnly":227,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":92,"com.graphhopper.GraphHopperTest.testVia":234,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":273,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":7,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":293,"com.graphhopper.GraphHopperTest.testFootOnly":242,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":338,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":55,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":218,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":57,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":22,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":307,"com.graphhopper.util.InstructionListTest.testFind":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":137},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"c6573cd9-793d-11e5-a2e5-d71c32a14719","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"edgePointer","maxBit":"edgePointer","delta":"nodeOther","maxBits":"nodeOther","value":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[286],"tindex":"c6578afa-793d-11e5-a2e5-5750404678f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:113","type":"CtIfImpl","sourcecode":"if (boolean)\n    double[] = java.util.Arrays.copyOf(double[], int);\n"},"status":-1},{"failures":[],"tindex":"c657b20b-793d-11e5-a2e5-bfb0341f2a0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"lat","hash":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-2},{"failures":[],"tindex":"c657b20c-793d-11e5-a2e5-df504a47de7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"variableMap":{"bitsForEdgeFlags":"sign"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:79","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c657b20d-793d-11e5-a2e5-399ae2533353","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:257","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"c657b20e-793d-11e5-a2e5-9d0aae206113","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:198","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.InstructionList.(isEmpty())) {\n    java.lang.StringBuilder.append(\"\\n<rte>\");\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = null;\n    for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n        if (null != com.graphhopper.util.Instruction)\n            com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction);\n        \n        com.graphhopper.util.Instruction = com.graphhopper.util.Instruction;\n    }\n    com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, null);\n    java.lang.StringBuilder.append(\"<\/rte>\");\n} "},"status":-2},{"failures":[],"tindex":"c657d91f-793d-11e5-a2e5-8390006de91b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:830","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getElevation(int)"},"status":-2},{"failures":[],"tindex":"c657d920-793d-11e5-a2e5-57f12951de0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"c657d921-793d-11e5-a2e5-492d7850389a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:182","type":"CtInvocationImpl","sourcecode":"java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"))"},"status":-2},{"failures":[],"tindex":"c6580032-793d-11e5-a2e5-39dcc060f249","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"mainNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:697","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.VirtualEdgeIterator.next()) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.storage.index.QueryResult>.get(((com.graphhopper.routing.VirtualEdgeIterator.getAdjNode()) - (int))).getClosestEdge();\n    com.graphhopper.routing.TIntArrayList.add(com.graphhopper.util.EdgeIteratorState.getEdge());\n}"},"status":-2},{"failures":[],"tindex":"c6580033-793d-11e5-a2e5-1152dcc55c3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:157","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c6580034-793d-11e5-a2e5-0d80cf8bf754","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"variableMap":{"heights":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"c6580035-793d-11e5-a2e5-a9f04569b59b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"status":-2},{"failures":[],"tindex":"c6582746-793d-11e5-a2e5-8142e6eb9f28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:511","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"c6582747-793d-11e5-a2e5-6118cbcb7267","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"c6582748-793d-11e5-a2e5-33032d4f4613","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"c6582749-793d-11e5-a2e5-bd1a9d2077ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:996","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors())\n    return java.util.Collections.emptyList();\n"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:964","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String);\n} catch (java.lang.Exception ex) {\n    com.graphhopper.GHResponse.addError(java.lang.Exception);\n    return java.util.Collections.emptyList();\n}"},"status":-2},{"failures":[],"tindex":"c658274a-793d-11e5-a2e5-c72a684102bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"flagsSizeIsLong"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:52","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"c6584e5b-793d-11e5-a2e5-3f0d46fb94bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:102","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"variableMap":{"cacheDir":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:1005","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2},{"failures":[],"tindex":"c6584e5c-793d-11e5-a2e5-cf377b288fb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:121","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"variableMap":{"byteCount":"tmpRelationCounter","longSegmentSize":"tmpRelationCounter","segmentsToMap":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:197","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n    final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n    if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n        com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n    \n    if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n        com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n    \n    if (((++long) % 50000) == 0) {\n        com.graphhopper.reader.OSMReader.com.graphhopper.reader.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}