{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":97,"com.graphhopper.GraphHopperAPITest.testNoLoad":81,"com.graphhopper.routing.PathTest.testFindInstruction":77,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":4,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":55,"com.graphhopper.util.InstructionListTest.testEmptyList":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":69,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":38,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":37,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":40,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":53,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":11,"com.graphhopper.util.InstructionListTest.testWayList2":51,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.util.InstructionListTest.testWayList":47,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":66,"com.graphhopper.GraphHopperAPITest.testDisconnected179":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":65,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":103,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":75,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":60,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":58,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":71,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":17,"com.graphhopper.GraphHopperTest.testLoadOSM":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":39,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":13,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":8,"com.graphhopper.reader.OSMReaderTest.testMain":84,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":61,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":70,"com.graphhopper.routing.PathTest.testWayList":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":32,"com.graphhopper.util.BitUtilBigTest.testFromBitString":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":100,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":33,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":96,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":98,"com.graphhopper.GraphHopperTest.testFootAndCar":21,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":68,"com.graphhopper.util.BitUtilBigTest.testToBitString":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.routing.PathTest.testTime":73,"com.graphhopper.util.InstructionListTest.testCreateGPX":50,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":45,"com.graphhopper.GraphHopperTest.testPrepareOnly":54,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":36,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":48,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.GraphHopperAPITest.testLoad":35,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":9,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.util.TranslationMapTest.testToString":41,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":101,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":74,"com.graphhopper.util.InstructionListTest.testFind":43,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":6,"com.graphhopper.routing.PathTest.testFound":72,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2},"transformations":[{"failures":[0,1],"tindex":"5e2c5851-82a4-11e5-89f9-f7d70f9a8552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:126","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[],"tindex":"5e2c5852-82a4-11e5-89f9-13d4218a3afb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:179","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[2,3],"tindex":"5e2c5853-82a4-11e5-89f9-17434b3dc9ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-1},{"failures":[],"tindex":"5e2c7f64-82a4-11e5-89f9-e3facd421920","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:954","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"5e2c7f65-82a4-11e5-89f9-f9305e1d3913","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:214","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-1},{"failures":[],"tindex":"5e2c7f66-82a4-11e5-89f9-cd75222c1439","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"5e2c7f67-82a4-11e5-89f9-29f6d190386c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:136","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"variableMap":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:104","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[10,11],"tindex":"5e2c7f68-82a4-11e5-89f9-590d6e35dabb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"5e2c7f69-82a4-11e5-89f9-d7f656672e53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:141","type":"CtIfImpl","sourcecode":"if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"5e2ca67a-82a4-11e5-89f9-3df297d121fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:157","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"5e2ca67b-82a4-11e5-89f9-9547280e50fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:993","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.dem.ElevationProvider == null)\n    throw new java.lang.IllegalStateException(\"Use the NOOP elevation provider instead of null or don\\'t call setElevationProvider\");\n"},"variableMap":{"eleProvider":"eleProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:855","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.release()"},"status":0},{"failures":[36,37,38,39,40],"tindex":"5e2ca67c-82a4-11e5-89f9-79978ca54900","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:421","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[15,16],"tindex":"5e2ca67d-82a4-11e5-89f9-73d4ef368c5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"adjNode":"endNode","mainGraph":"graph","origEdgeId":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:203","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(gnu.trove.list.TIntList.get(((gnu.trove.list.TIntList.size()) - 1)), int)"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,12,13,14,15,16,17,55,18,19,20,21,22,23,56,57,24,25,26,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,35,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"5e2ca67e-82a4-11e5-89f9-b5cb7ec7ce98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation)"},"status":-1},{"failures":[96,97,98,53,54,55,18,19,20,21,22,23,57,24,25,35,84,85,86,87,88,90,91],"tindex":"5e2ccd8f-82a4-11e5-89f9-db5f90efad81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:104","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"5e2ccd90-82a4-11e5-89f9-f5b6838b89d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:283","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs((int - double))) < ((double) / (int)))\n    int--;\n"},"variableMap":{"latInt":"maxTurnCosts","degree":"maxTurnCosts","invPrecision":"costs","lat":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:670","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || (java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[99],"tindex":"5e2ccd91-82a4-11e5-89f9-c3638461e5ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:144","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.toString()"},"status":-1},{"failures":[45,74,75,78],"tindex":"5e2ccd92-82a4-11e5-89f9-9154bb199ae4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:55","type":"CtAssignmentImpl","sourcecode":"int = double > 0 ? 1 : -1"},"status":-1},{"failures":[53,54,55,18,19,20,21,22,23,57,24,25,26,100,101,102,103,104,105,83,84,85,87,88,89,90,92,93,95],"tindex":"5e2ccd93-82a4-11e5-89f9-cf6b9e71b620","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:299","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"5e2ccd94-82a4-11e5-89f9-878ba0331e0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:517","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"variableMap":{"osmFile":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5e2ca67b-82a4-11e5-89f9-9547280e50fd","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.reader.dem.ElevationProvider$1_void_release().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.reader.dem.ElevationProvider$1_void_release().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.release"]},"type":"staticDiff"}]}]}