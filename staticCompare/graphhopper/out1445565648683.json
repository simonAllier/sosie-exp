{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e16a53ca-7929-11e5-9b40-359cceaecb9f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:403","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"e16a7adb-7929-11e5-9b40-99abe0af8008","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:166","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = byte[]"},"variableMap":{"s":"length","bytes":"area","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][][int] = java.util.Arrays.copyOf(byte[], byte[].int)"},"status":-2},{"failures":[],"tindex":"e16aa1ec-7929-11e5-9b40-5515c827682c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:771","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"prevEle":"nextLon","ele":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:238","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0)"},"status":-2},{"failures":[],"tindex":"e16aa1ed-7929-11e5-9b40-9f62942df8ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:324","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"e16aa1ee-7929-11e5-9b40-5d3c77b10e99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"graphHopperLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:632","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"e16aa1ef-7929-11e5-9b40-7731895d4e05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:405","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double)"},"status":-2},{"failures":[],"tindex":"e16ac900-7929-11e5-9b40-dbf6c71a553c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"variableMap":{"eof":"isOneway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:269","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n    if (boolean)\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-2},{"failures":[],"tindex":"e16ac901-7929-11e5-9b40-d5acd42fa301","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"id","segmentSizeIntsPower":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2},{"failures":[],"tindex":"e16ac902-7929-11e5-9b40-250fb195fde6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"variableMap":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:209","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-2},{"failures":[],"tindex":"e16af013-7929-11e5-9b40-bb7378cd9b26","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:102","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"e16af014-7929-11e5-9b40-81101f1c1ec8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"nextSC","noOfStates":"nextSC"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:198","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.storage.BaseGraph.int)"},"status":-2},{"failures":[],"tindex":"e16af015-7929-11e5-9b40-4900d1cdf256","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:253","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"e16af016-7929-11e5-9b40-8911b4c1f3d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"toMoveNodes","edgeId":"toMoveNodes","nextEdgeId":"toMoveNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:655","type":"CtForImpl","sourcecode":"for ( ; int >= 0 ; int--) {\n    if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"e16b1727-7929-11e5-9b40-7de743b18ba6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-2},{"failures":[],"tindex":"e16b1728-7929-11e5-9b40-8f741b68f9ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"reverseOrder","v":"reverseOrder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:132","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[],"tindex":"e16b1729-7929-11e5-9b40-13d6851d4d69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList)"},"variableMap":{"tmpPoints":"fullPoints","fullPoints":"fullPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<com.graphhopper.routing.Path>.size()) ; int++) {\n    com.graphhopper.routing.Path com.graphhopper.routing.Path = java.util.List<com.graphhopper.routing.Path>.get(int);\n    long += com.graphhopper.routing.Path.getTime();\n    double += com.graphhopper.routing.Path.getDistance();\n    double += com.graphhopper.routing.Path.getWeight();\n    if (boolean) {\n        com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation);\n        if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n            if (com.graphhopper.util.PointList.isEmpty()) {\n                com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n                com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n            } \n            for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n                if (boolean) {\n                    int += com.graphhopper.util.Instruction.getPoints().size();\n                    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n                } \n                com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n                com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n            }\n            if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n                com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n                com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n                com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n            } \n        } \n    } else if (boolean) {\n        com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n        if (com.graphhopper.util.PointList.isEmpty())\n            com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n        \n        if (boolean) {\n            int = com.graphhopper.util.PointList.getSize();\n            com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n        } \n        com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n    } \n    boolean = boolean && (com.graphhopper.routing.Path.isFound());\n}"},"status":-2},{"failures":[],"tindex":"e16b3e3a-7929-11e5-9b40-9daf12770ca4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"removeNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:662","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.SparseIntIntArray.put(int, int)"},"status":-2},{"failures":[],"tindex":"e16b3e3b-7929-11e5-9b40-7dcf794fad4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:265","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.TIntList.get(int)"},"status":-2},{"failures":[],"tindex":"e16b3e3c-7929-11e5-9b40-cfd7e7590661","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:127","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-2},{"failures":[],"tindex":"e16b3e3d-7929-11e5-9b40-dd36117638e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:670","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int);\n    long long = com.graphhopper.util.EdgeIterator.int;\n    while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n        if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n            int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n            long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n            com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n            com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n        } else {\n            long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n        }\n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}