{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.util.BitUtilLittleTest.testToLong":36,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":20,"com.graphhopper.coll.OSMIDMapTest.testGetLong":37,"com.graphhopper.coll.IntIntBinHeapTest.test0":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":21,"com.graphhopper.storage.VLongStorageTest.testWrite":38,"com.graphhopper.coll.CompressedArrayTest.testCompress2":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":12,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":31,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":19,"com.graphhopper.coll.CompressedArrayTest.testCompress":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":16,"com.graphhopper.util.BitUtilLittleTest.testToDouble":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":23,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":39,"com.graphhopper.GraphHopperTest.testFootAndCar":25},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"d7d69c9e-7932-11e5-a002-0ba443e6d62e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:631","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"d7d69c9f-7932-11e5-a002-69e6aa547c8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"toLat","prevOrientation":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-1},{"failures":[31],"tindex":"d7d69ca0-7932-11e5-a002-d3aef6890fcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"fwdIncline","com.graphhopper.util.DistanceCalcEarth.C":"fwdIncline"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:229","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[32,33],"tindex":"d7d6c3b1-7932-11e5-a002-c7a292c54cf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntIntBinHeap.update_(java.lang.Number.intValue(), java.lang.Integer)"},"status":-1},{"failures":[34],"tindex":"d7d6c3b2-7932-11e5-a002-7d3cbe55e2d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:215","type":"CtAssignmentImpl","sourcecode":"double[] = null"},"variableMap":{"weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:114","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[35,36,37],"tindex":"d7d6c3b3-7932-11e5-a002-6d13b65330ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:78","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 4)] = ((byte)(long >> 32))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:76","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 6)] = ((byte)(long >> 48))"},"status":-1},{"failures":[],"tindex":"d7d6c3b4-7932-11e5-a002-e51c677762f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:76","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[38,39,40,41,42,43],"tindex":"d7d6c3b5-7932-11e5-a002-c52a1eb48f73","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"pointer","child":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"d7d6c3b6-7932-11e5-a002-23c81bc674ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"status":-2},{"failures":[],"tindex":"d7d6c3b7-7932-11e5-a002-9d8e6529de24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:91","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:138","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode.valueOf(java.lang.String.toUpperCase())"},"status":-2},{"failures":[],"tindex":"d7d6c3b8-7932-11e5-a002-0d5edcc88833","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:132","type":"CtIfImpl","sourcecode":"if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"d7d6eac9-7932-11e5-a002-a9569974081a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:586","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"d7d6eaca-7932-11e5-a002-3fc783d8d8a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:230","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putShort(((long) + long), short)"},"status":-2},{"failures":[],"tindex":"d7d6eacb-7932-11e5-a002-ede21ef26444","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"guessedKey","lastKey":"low","key":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"status":-2},{"failures":[],"tindex":"d7d6eacc-7932-11e5-a002-5bc4eb9704fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:180","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"d7d6eacd-7932-11e5-a002-f1a1237a681e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:586","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.reader.OSMElement.RELATION","nodeType":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:77","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>) {\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) == (com.graphhopper.reader.OSMElement.int)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d7d6eace-7932-11e5-a002-f7df9f0f7690","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"prepareContractedNodes","dLat":"prepareContractedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:577","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.contracted-nodes\", int)"},"status":-2},{"failures":[],"tindex":"d7d6eacf-7932-11e5-a002-65c41b99756c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"wayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:339","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"status":-2},{"failures":[],"tindex":"d7d711e0-7932-11e5-a002-15e72b56d4de","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:520","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\""},"variableMap":{"graphHopperFolder":"param","osmFile":"param"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:69","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"d7d711e1-7932-11e5-a002-852ee46af9ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"edgePointer","low":"edgePointer","guess":"edgePointer","guessedKey":"edgePointer","key":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}