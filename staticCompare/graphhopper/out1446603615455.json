{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":74,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":203,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.routing.QueryGraphTest.testOneWay":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":186,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":72,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":25,"com.graphhopper.GraphHopperTest.testPrepare":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":196,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":190,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":5,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":11,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":193,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":81,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":26,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":199,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":150,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":152,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":194,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":138,"com.graphhopper.routing.PathTest.testWayList":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":134,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":35,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":154,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":88,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":185,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":187,"com.graphhopper.util.GHUtilityTest.testSort":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":70,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":100,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":117,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":161,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":84,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":149,"com.graphhopper.GraphHopperAPITest.testLoad":44,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":7,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":13,"com.graphhopper.reader.OSMReaderTest.testBarriers":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":169,"com.graphhopper.util.GHUtilityTest.testCopy":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":27,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":91,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":145,"com.graphhopper.util.InstructionListTest.testEmptyList":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":21,"com.graphhopper.reader.PrinctonReaderTest.testRead":49,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":24,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":132,"com.graphhopper.reader.OSMReaderTest.testFoot":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":107,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":106,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":155,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":130,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":90,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":195,"com.graphhopper.routing.PathBidirRefTest.testExtract":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":18,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":211,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":121,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":165,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":164,"com.graphhopper.util.GHUtilityTest.testSort2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":73,"com.graphhopper.reader.OSMReaderTest.testMain":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":119,"com.graphhopper.routing.PathBidirRefTest.testExtract2":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":189,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":137,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":151,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":148,"com.graphhopper.GraphHopperTest.testFootAndCar":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":128,"com.graphhopper.GraphHopperTest.testPrepareOnly":207,"com.graphhopper.GraphHopperTest.testVia":60,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":37,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":120,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":176,"com.graphhopper.GraphHopperTest.testFootOnly":209,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":57,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":112,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":124},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"95d189f3-829a-11e5-ab52-2ff353c8ad6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"nodeA","tmpSize":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-1},{"failures":[156,39,157,41,43,158,159,160,161,162,163,164,165,166,167,61,62,63,64,65,168],"tindex":"95d1b104-829a-11e5-ab52-a547eb599c46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:86","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n    continue;\n"},"variableMap":{"edgeFilter":"edgeFilter","iter":"baseRevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:615","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.util.EdgeIteratorState))\n    com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState);\n"},"status":-1},{"failures":[169,170,171,158,172],"tindex":"95d1b105-829a-11e5-ab52-afb0e41f6933","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"costs","speed":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[173],"tindex":"95d1d816-829a-11e5-ab52-81f023c29bc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:114","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    break;\n"},"status":-1},{"failures":[156,174,39,157,41,43,175,158,159,160,176,177,161,178,163,179,180,181,182,164,165,166,167,60,61,62,183,63,64,65,168],"tindex":"95d1d817-829a-11e5-ab52-3dc7e8efb4e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"bytes":"wayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:339","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"status":-1},{"failures":[],"tindex":"95d1d818-829a-11e5-ab52-3d1101c9425e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:211","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"variableMap":{"type":"to1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:172","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.AStar.AStarEdge.int) == (int)"},"status":-1},{"failures":[56,82],"tindex":"95d1d819-829a-11e5-ab52-d9787069ec0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"turnCostsEntryBytes","edgeId":"previousEntryIndex","nextEdgeId":"turnCostsEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:153","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"95d1d81a-829a-11e5-ab52-99e45619e658","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"variableMap":{"res":"address","value":"address","maxBits":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:100","type":"CtTryImpl","sourcecode":"try {\n    long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long);\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)));\n}"},"status":-2},{"failures":[],"tindex":"95d1ff2b-829a-11e5-ab52-2b838726a8b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:643","type":"CtReturnImpl","sourcecode":"return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"95d1ff2c-829a-11e5-ab52-63a2b2d90f1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.reset()"},"variableMap":{"changedNodes":"edgeIds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:133","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TIntList.reverse()"},"status":-2},{"failures":[],"tindex":"95d1ff2d-829a-11e5-ab52-a35981e48176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:82","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[184,185,186,187,188,189,190,191,192,193,194],"tindex":"95d1ff2e-829a-11e5-ab52-7b00f1c3e713","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:317","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\",\"))\n    return \"destinations: \" + java.lang.String;\nelse\n    return \"destination: \" + java.lang.String;\n"},"variableMap":{"str":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"95d1ff2f-829a-11e5-ab52-1b31da06750a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:233","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>"},"status":-1},{"failures":[],"tindex":"95d1ff30-829a-11e5-ab52-d332f02df2a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[17,22,23,24,195,42,43],"tindex":"95d22641-829a-11e5-ab52-5f0c2ee66f04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:592","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int)"},"variableMap":{"skippedEdge1":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:278","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int)"},"status":-1},{"failures":[196,16,17,18,19,20,21,197,22,198,23,24,25,199,195,26,27,200,28,29,30,31,32,33,156,34,35,174,36,37,201,38,39,157,40,202,41,203,204,205,42,206,43,207,60,61,63,64,208,209,210],"tindex":"95d22642-829a-11e5-ab52-c5e1d8581d18","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:159","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"variableMap":{"counts":"base","counter":"base"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"95d22643-829a-11e5-ab52-db02ab049621","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:330","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge1\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:199","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"95d22644-829a-11e5-ab52-fb880f5f52c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"status":-2},{"failures":[182,164,165,166,167,211],"tindex":"95d22645-829a-11e5-ab52-b1fab32d99bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:450","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}