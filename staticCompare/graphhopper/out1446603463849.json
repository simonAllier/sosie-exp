{"failureDictionary":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":79,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":91,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":41,"com.graphhopper.routing.QueryGraphTest.testOneWay":96,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":100,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":19,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":55,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":93,"com.graphhopper.coll.CompressedArrayTest.testCompress":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":88,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":90,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":33,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":94,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":97,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":30,"com.graphhopper.util.InstructionListTest.testWayList":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":31,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":48,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":50,"com.graphhopper.util.PointListTest.testEquals":71,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":40,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":46,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":56,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":24,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":43,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":64,"com.graphhopper.routing.PathTest.testWayList":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":54,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":66,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":82,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":101,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":16,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":18,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":85,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":95,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":26,"com.graphhopper.search.NameIndexTest.testPut":111,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":107,"com.graphhopper.coll.CompressedArrayTest.testCompress2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":61,"com.graphhopper.GraphHopperTest.testPrepareOnly":105,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":52,"com.graphhopper.GraphHopperAPITest.testLoad":15,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":32,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":106,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":92,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":84,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":47,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":86,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":108,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.util.GHUtilityTest.testCopy":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":72},"transformations":[{"failures":[],"tindex":"3b73b061-829a-11e5-82ce-07ab0fae9327","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"variableMap":{"directionBitMask":"start","flags":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"3b73d772-829a-11e5-82ce-1950cd2efd1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"variableMap":{"str":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:141","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"3b73d773-829a-11e5-82ce-893406d9f780","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((((((\"time(pass1): \" + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" pass2: \") + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" total:\") + ((int)(((com.graphhopper.util.StopWatch.getSeconds()) + (com.graphhopper.util.StopWatch.getSeconds()))))))"},"status":0},{"failures":[],"tindex":"3b73fe84-829a-11e5-82ce-618ae8fab9d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":0},{"failures":[],"tindex":"3b73fe85-829a-11e5-82ce-792ac3c3ca01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:235","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round(java.lang.Math.max(10, (((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100) * (double))))"},"status":-2},{"failures":[16,17,18],"tindex":"3b73fe86-829a-11e5-82ce-9fb89ee831fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"newSize","maxGeoRef":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:265","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"3b73fe87-829a-11e5-82ce-71d6a97c6924","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"3b73fe88-829a-11e5-82ce-3bdf3c85db8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:722","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < (int) ; long += 4) {\n    com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n}"},"status":-1},{"failures":[69,70,71,0,1,2,3,4,6,7,8,9,10,11,12,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"3b742599-829a-11e5-82ce-9545ac68e738","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:242","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"variableMap":{"ab_rb":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION","ab_ar":"d1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-1},{"failures":[],"tindex":"3b74259a-829a-11e5-82ce-dbbdea7a2cfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"3b74259b-829a-11e5-82ce-d9f3319dac3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"chWeightingStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:805","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.isEmpty())\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n        com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n        java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n    }\n"},"status":-2},{"failures":[],"tindex":"3b74259c-829a-11e5-82ce-f3ed797b50b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:250","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:817","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"3b74259d-829a-11e5-82ce-bf241d677597","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTBitSet:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Not supported yet.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:706","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\")"},"status":-2},{"failures":[105,11,12,72,74,106,107,108,109,89],"tindex":"3b744cae-829a-11e5-82ce-57160640428a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:214","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-1},{"failures":[11],"tindex":"3b744caf-829a-11e5-82ce-499b3845df40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:275","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:450","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"status":-1},{"failures":[110,111,112],"tindex":"3b744cb0-829a-11e5-82ce-e52cc1f37778","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:126","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"3b744cb1-829a-11e5-82ce-27d20dd15bac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"usedBits","length":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"3b744cb2-829a-11e5-82ce-83b7db6922e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"toNode","capacity":"toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":0},{"failures":[],"tindex":"3b744cb3-829a-11e5-82ce-9bf2ad38d6ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"length","y2":"length","x1":"length","x2":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            gnu.trove.list.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"3b7473c4-829a-11e5-82ce-89367ec55885","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:636","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, 0)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3b73fe84-829a-11e5-82ce-618ae8fab9d0","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append","com.graphhopper.util.Instruction.getTime"]},"type":"staticDiff"}]},{"transformation":"3b7473c4-829a-11e5-82ce-89367ec55885","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.calculateRMin"]},"type":"staticDiff"}]},{"transformation":"3b73d773-829a-11e5-82ce-893406d9f780","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds","org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"3b744cb1-829a-11e5-82ce-27d20dd15bac","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":["com.graphhopper.routing.util.AbstractFlagEncoder_void_setNodeBitMask(int,int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask"]},"type":"staticDiff"}]}]}