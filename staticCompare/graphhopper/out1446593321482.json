{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":248,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":274,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":283,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":56,"com.graphhopper.reader.OSMReaderTest.testFerry":312,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":131,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":271,"com.graphhopper.routing.QueryGraphTest.testOneWay":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":154,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":349,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":222,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":292,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":258,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":368,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":34,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":212,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":266,"com.graphhopper.GraphHopperTest.testPrepare":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":247,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":79,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":254,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":230,"com.graphhopper.util.InstructionListTest.testWayList":10,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":112,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":67,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":17,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":296,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":342,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":231,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":309,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":295,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":301,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":355,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":338,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":269,"com.graphhopper.GraphHopperTest.testLoadOSM":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":37,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":54,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":103,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":133,"com.graphhopper.reader.OSMReaderTest.testSort":315,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":294,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":185,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":109,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":252,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":279,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":178,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":327,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":300,"com.graphhopper.routing.PathTest.testWayList":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":143,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":164,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":51,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":237,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":363,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":124,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":48,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":308,"com.graphhopper.util.GHUtilityTest.testSort":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":58,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":233,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":225,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":209,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":123,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":165,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":184,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":186,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":200,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":340,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":251,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":297,"com.graphhopper.reader.OSMReaderTest.testBarriers":316,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":151,"com.graphhopper.routing.PathTest.testFound":302,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":30,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":360,"com.graphhopper.routing.PathTest.testFindInstruction":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":227,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":202,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":117,"com.graphhopper.util.InstructionListTest.testEmptyList":8,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":19,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":110,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":243,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":2,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":260,"com.graphhopper.reader.PrinctonReaderTest.testRead":310,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":127,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":265,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":159,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":182,"com.graphhopper.util.InstructionListTest.testWayList2":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":40,"com.graphhopper.reader.OSMReaderTest.testFoot":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":62,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":59,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":169,"com.graphhopper.reader.OSMReaderTest.testOneWay":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":223,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":75,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":139,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":80,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":87,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":317,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":268,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":257,"com.graphhopper.routing.PathBidirRefTest.testExtract":298,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":357,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":331,"com.graphhopper.util.GHUtilityTest.testSort2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":245,"com.graphhopper.reader.OSMReaderTest.testMain":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":166,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":167,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":125,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":179,"com.graphhopper.routing.PathBidirRefTest.testExtract2":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":364,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":31,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":319,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":213,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":174,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":83,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":116,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":157,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":93,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":100,"com.graphhopper.GraphHopperTest.testFootAndCar":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":366,"com.graphhopper.routing.PathTest.testTime":303,"com.graphhopper.util.InstructionListTest.testCreateGPX":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":356,"com.graphhopper.util.GHUtilityTest.testSortDirected":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":146,"com.graphhopper.GraphHopperTest.testPrepareOnly":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":22,"com.graphhopper.GraphHopperTest.testVia":336,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":240,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":322,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":126,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":276,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":104,"com.graphhopper.GraphHopperTest.testFootOnly":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":39,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":320,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":41,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":145,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":304,"com.graphhopper.util.InstructionListTest.testFind":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":183},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"9e22fa99-8282-11e5-ba24-919068f1949e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[346],"tindex":"9e2348ba-8282-11e5-ba24-0dc22f6d4e62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:183","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"variableMap":{"directionBitMask":"relBitMask","shift":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:574","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"9e2348bb-8282-11e5-ba24-db9b61693ff8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","y2":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","x1":"event","x2":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:58","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"tag\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"k\");\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\");\n        if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n            com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n        \n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2},{"failures":[],"tindex":"9e2348bc-8282-11e5-ba24-b7dd164269f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 4))), com.graphhopper.util.PMap.getLong(\"speedFactor\", 2), (com.graphhopper.util.PMap.getBool(\"turnCosts\", false) ? 1 : 0))"},"status":0},{"failures":[347,12],"tindex":"9e236fcd-8282-11e5-ba24-6df168c5208e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"status":-1},{"failures":[329,341,342,343],"tindex":"9e236fce-8282-11e5-ba24-f9e5dcea2478","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:685","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.storage.DataAccess.loadExisting())) || (!(com.graphhopper.storage.DataAccess.loadExisting())))\n    return false;\n"},"variableMap":{"shortcuts":"dataAccess","nodesCH":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:281","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"9e236fcf-8282-11e5-ba24-cdf7b59df6a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:120","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (com.graphhopper.storage.BaseGraph.int)"},"status":-2},{"failures":[74,75,76,121,125,130,131,183,185,186,329,340,341,343,345],"tindex":"9e236fd0-8282-11e5-ba24-ab246d109394","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.flush()"},"status":-1},{"failures":[],"tindex":"9e2396e1-8282-11e5-ba24-e78ac36ffb4a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"r_lat_deg","x1":"r_lat_deg","x2":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:225","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[12],"tindex":"9e2396e2-8282-11e5-ba24-d1d3c57b0a22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.checkOne()"},"variableMap":{"this":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:238","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Instruction.getName().isEmpty()))\n    java.lang.StringBuilder.append(\"<desc>\").append(com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation)).append(\"<\/desc>\");\n"},"status":-1},{"failures":[0,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,250,251,252,253,254,256,262,263,264,265,269,330,331,332,333,334,335,336,337,338,339,340,341,343,344],"tindex":"9e2396e3-8282-11e5-ba24-39ea5c311d26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:263","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setEdgeEntryTo(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[348],"tindex":"9e23bdf4-8282-11e5-ba24-af58b762aaac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:83","type":"CtIfImpl","sourcecode":"if (int > 0.0) {\n    if (int >= int)\n        boolean = true;\n    \n} else if (int <= int) {\n    boolean = true;\n} "},"status":-1},{"failures":[349],"tindex":"9e23bdf5-8282-11e5-ba24-1dcd88169e99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:766","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.Lock.tryLock()))\n    throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n"},"status":-1},{"failures":[],"tindex":"9e23bdf6-8282-11e5-ba24-a7c4a8d17c1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"variableMap":{"intIndex":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:795","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":0},{"failures":[81,89,91,92,94,98,99,106,107,350,351,352,353,354,355,356,357,358,136,144,146,147,149,153,154,161,162,191,199,201,202,204,208,209,216,217,289,290,292,294,295],"tindex":"9e23bdf7-8282-11e5-ba24-236e340493c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:662","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.SparseIntIntArray.put(int, int)"},"status":-1},{"failures":[359,360,361,362,363,364,365,366],"tindex":"9e23e508-8282-11e5-ba24-6d4c926d03f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:280","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.Set<java.lang.String>))))\n    return 0;\n"},"variableMap":{"acceptedRailways":"restrictedValues","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:276","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[0,1,4,7,9,10,11,12,30,31,33,35,36,37,38,39,41,43,44,45,46,47,48,49,50,52,53,54,55,56,58,60,61,62,63,64,65,66,74,79,100,106,111,114,367,368,357,369,370,122,130,134,155,161,166,169,183,189,210,216,221,224,235,238,243,244,247,250,270,271,273,274,275,276,277,278,279,280,281,282,283,285,286,287,304,305,306,307,308,314,315,316,317,318,330,331,332,333,334,335,336,337,338,339,340,341,343,344],"tindex":"9e23e509-8282-11e5-ba24-dd4a083367d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:345","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int)"},"variableMap":{"i":"count","fullPL":"pillarNodes","basePoints":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:893","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int));\n    int += 4;\n    double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int));\n    int += 4;\n    if (com.graphhopper.storage.NodeAccess.is3D()) {\n        com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)));\n        int += 4;\n    } else {\n        com.graphhopper.util.PointList.add(double, double);\n    }\n}"},"status":-1},{"failures":[],"tindex":"9e240c1a-8282-11e5-ba24-f351acdccee0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:202","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"factor":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:87","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min(java.lang.Math.max(double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.shapes.BBox.double)"},"status":-2},{"failures":[],"tindex":"9e240c1b-8282-11e5-ba24-c388bf681b6d","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return ((int)(java.lang.Math.log10(int)))"},"variableMap":{"p":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:203","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9e240c1c-8282-11e5-ba24-3996a75b75f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}