{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":0,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":85,"com.graphhopper.routing.PathTest.testFindInstruction":42,"com.graphhopper.reader.OSMReaderTest.testFerry":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":82,"com.graphhopper.routing.QueryGraphTest.testOneWay":92,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":29,"com.graphhopper.reader.OSMReaderTest.testWithBounds":70,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":12,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":73,"com.graphhopper.GraphHopperTest.testPrepare":52,"com.graphhopper.util.InstructionListTest.testWayList2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":93,"com.graphhopper.util.InstructionListTest.testWayList":4,"com.graphhopper.reader.OSMReaderTest.testOneWay":72,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":3,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":64,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":40,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":8,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":53,"com.graphhopper.routing.PathBidirRefTest.testExtract":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":47,"com.graphhopper.reader.OSMReaderTest.testSort":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":25,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":28,"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":89,"com.graphhopper.routing.PathBidirRefTest.testExtract2":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":37,"com.graphhopper.routing.PathTest.testWayList":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":9,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":58,"com.graphhopper.GraphHopperTest.testFootAndCar":54,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":43,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":96,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":88,"com.graphhopper.GraphHopperTest.testPrepareOnly":74,"com.graphhopper.GraphHopperTest.testVia":51,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":57,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":83,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":68,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":94,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":55,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":86,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.GraphHopperTest.testFootOnly":77,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":39,"com.graphhopper.util.InstructionListTest.testFind":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22},"transformations":[{"failures":[0],"tindex":"7efe8b69-829f-11e5-9825-75fac8017128","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:353","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"7efed98a-829f-11e5-9825-fffa1b3130e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"i","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:281","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int)"},"status":-1},{"failures":[58],"tindex":"7efed98b-829f-11e5-9825-2f8c7cf906d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:373","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,51,52,53,54,55,56,76,57,77,78],"tindex":"7eff009c-829f-11e5-9825-1fc2109413a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"variableMap":{"initialized":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:60","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.OSMInputFile.openPBFReader(java.io.InputStream);\n} else {\n    com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream);\n}"},"status":-1},{"failures":[],"tindex":"7eff009d-829f-11e5-9825-37e0bd7ab2fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toDouble(byte[], 0)"},"variableMap":{"bytes":"ele","this":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:79","type":"CtReturnImpl","sourcecode":"return ((java.lang.Double)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"7eff009e-829f-11e5-9825-e1959d736025","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:219","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.poll()"},"status":-2},{"failures":[],"tindex":"7eff009f-829f-11e5-9825-f176504c9f71","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"ghStorage","newGraph":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:449","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":0},{"failures":[],"tindex":"7eff27b0-829f-11e5-9825-7f74817ba3bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:157","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:842","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.NodeAccess.is3D()"},"status":-2},{"failures":[],"tindex":"7eff27b1-829f-11e5-9825-ebe49eaa111a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"deltaX":"factor","maxX":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:71","type":"CtAssignmentImpl","sourcecode":"double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize())"},"status":0},{"failures":[],"tindex":"7eff27b2-829f-11e5-9825-cb580500fc60","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:201","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((com.graphhopper.util.InstructionList.(size()) - 1))"},"status":-2},{"failures":[79],"tindex":"7eff27b3-829f-11e5-9825-dd8a791de978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:705","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"status":-1},{"failures":[80],"tindex":"7eff4ec4-829f-11e5-9825-5fec82811e03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,22,24,26,27,30,34,45,46,47,48,49,51,52,53,54,55,56,57],"tindex":"7eff4ec5-829f-11e5-9825-7ba98c49bd99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"towerNode","index":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:632","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int)"},"status":-1},{"failures":[],"tindex":"7eff4ec6-829f-11e5-9825-714d9eedd67a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[51,77],"tindex":"7eff4ec7-829f-11e5-9825-37422978d81a","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"tmpWayCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n    int int = gnu.trove.list.TLongList.size();\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n    }\n    if (((++long) % 5000000) == 0) {\n        com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n} "},"status":-1},{"failures":[61,62,63,64,65,66,67,70,51,52,53,55,56,57,77],"tindex":"7eff75d8-829f-11e5-9825-438f3b1507ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:828","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getLatitude(int)"},"variableMap":{"pillarInfo":"pillarInfo","tmpNode":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:829","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"7eff75d9-829f-11e5-9825-77b882473497","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7eff75da-829f-11e5-9825-bbbdcbb54776","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"lat","dMinLat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:658","type":"CtLocalVariableImpl","sourcecode":"double double = double - (com.graphhopper.util.shapes.GHPoint.double)"},"status":0},{"failures":[94,83,95,96,97],"tindex":"7eff75db-829f-11e5-9825-ef29c0876cb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"costs","speed":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[60,72],"tindex":"7eff9cec-829f-11e5-9825-29c71e1d401f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7eff27b1-829f-11e5-9825-ebe49eaa111a","diffs":[{"methodsDiff":{"delete":["java.util.zip.ZipEntry.getCompressedSize","java.util.zip.ZipEntry.getSize"]},"type":"staticDiff"}]},{"transformation":"7eff75da-829f-11e5-9825-bbbdcbb54776","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1"]},"type":"branch"}]}]}