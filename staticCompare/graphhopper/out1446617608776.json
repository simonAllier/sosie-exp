{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":16,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":39,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":33,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":51,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":42,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":29,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0},"transformations":[{"failures":[0,1],"tindex":"2a7f503f-82bb-11e5-813c-5f1268f76fa3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"turnCostPtr","highKey":"turnCostPtr","key":"turnCostPtr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:186","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.DataAccess.getInt((long + (int))))) {\n    if (int == (com.graphhopper.storage.DataAccess.getInt((long + (int)))))\n        return com.graphhopper.storage.DataAccess.getInt((long + (int)));\n    \n} "},"status":-1},{"failures":[],"tindex":"2a7f7750-82bb-11e5-813c-5b83f9966e69","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"length","size":"length","lonSize":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:97","type":"CtIfImpl","sourcecode":"if ((int) >= (int[].int)) {\n    int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))));\n} "},"status":-2},{"failures":[],"tindex":"2a7f9e61-82bb-11e5-813c-9339b7796dcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"fwdIncline","r_lat":"fwdIncline","a_lat":"fwdIncline","delta_lon":"fwdIncline","r_lon":"fwdIncline","a_lon":"fwdIncline","norm":"fwdIncline"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:229","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[2],"tindex":"2a7f9e62-82bb-11e5-813c-1bdf5fc6df32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"limit","degree":"avoidSpeedLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[3,4,5,6],"tindex":"2a7f9e63-82bb-11e5-813c-6bab6be4c860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), com.graphhopper.storage.index.LocationIndexTree.calcChecksum())"},"status":-1},{"failures":[],"tindex":"2a7f9e64-82bb-11e5-813c-fd2144642d3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:101","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"variableMap":{"flags":"encoded","this":"this","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:257","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"2a7fc575-82bb-11e5-813c-ab5c82d8e96f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:180","type":"CtIfImpl","sourcecode":"if (double < 1)\n    return ;\n"},"variableMap":{"fullDist2D":"newWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.routing.AStar.AStarEdge.int) != (com.graphhopper.routing.AStar.AStarEdge.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.AStarBidirection.(getName())));\n    \n    if ((com.graphhopper.routing.AStar.AStarEdge.int) != (com.graphhopper.routing.AStar.AStarEdge.int)) {\n        com.graphhopper.routing.AStar.AStarEdge = ((com.graphhopper.routing.AStar.AStarEdge)(com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry));\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-1},{"failures":[],"tindex":"2a7fc576-82bb-11e5-813c-efe3dde0903e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"start","length":"len","index":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:400","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"2a7fc577-82bb-11e5-813c-7f4e3fb6e730","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:406","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0) {\n        if (boolean)\n            double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n        else\n            double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n        \n    } \n    double = double[][int];\n    double = double[][int];\n    if (boolean)\n        double = double[][int];\n    \n}"},"status":-1},{"failures":[],"tindex":"2a7fec88-82bb-11e5-813c-31248c006809","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"segmentSizeIntsPower","delta":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"2a7fec89-82bb-11e5-813c-e935be1dbe3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:79","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded()) || com.graphhopper.routing.Dijkstra.(finished()))\n    break;\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,8,30,9,10,31,32,13,33,34,14,15,35,17,19,36,21],"tindex":"2a7fec8a-82bb-11e5-813c-37dced65023d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:151","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPoint method.\"));\n"},"variableMap":{"possibleToAdd":"updatedInGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:689","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n    com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    int++;\n} "},"status":-1},{"failures":[37,38],"tindex":"2a80139b-82bb-11e5-813c-df0f2ec17fe8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:134","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"variableMap":{"str":"entry","s":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"2a80139c-82bb-11e5-813c-f58ba3e2596d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"bwSlower","java.lang.Math.PI":"bwSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:241","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"2a80139d-82bb-11e5-813c-f52342ff29b8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:261","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":0},{"failures":[],"tindex":"2a80139e-82bb-11e5-813c-174850c12225","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"mask","mask":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"2a803aaf-82bb-11e5-813c-2b2537773aea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:271","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"status":0},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"2a803ab0-82bb-11e5-813c-edda1ddf1caf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"2a803ab1-82bb-11e5-813c-25c71dba2474","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long)"},"variableMap":{"bytes":"byteCount","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"status":0},{"failures":[],"tindex":"2a8061c2-82bb-11e5-813c-37b8a74caec5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:153","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2a803aaf-82bb-11e5-813c-2b2537773aea","diffs":[{"methodsDiff":{"delete":["java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove"]},"type":"staticDiff"}]},{"transformation":"2a7f9e61-82bb-11e5-813c-9339b7796dcc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.keepIn"]},"type":"staticDiff"}]},{"transformation":"2a803ab1-82bb-11e5-813c-25c71dba2474","diffs":[{"branches":{"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":["com.graphhopper.storage.UnsafeDataAccess_boolean_ensureCapacity(long,boolean).t1"]},"type":"branch"}]}]}