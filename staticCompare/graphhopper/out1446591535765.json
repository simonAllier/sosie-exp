{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":15,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":3,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":18,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":2,"com.graphhopper.GraphHopperAPITest.testDisconnected179":5,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.storage.NativeFSLockFactoryTest.testForceDelete":13,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":14,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":16,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12},"transformations":[{"failures":[0,1,2,3],"tindex":"75c40922-827e-11e5-bbd8-75f44814bc23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.toString().toLowerCase().replaceAll(\"\\\\W+\", \"_\")"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12],"tindex":"75c43033-827e-11e5-bbd8-739ac6352703","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:776","type":"CtIfImpl","sourcecode":"if ((int > 2) && (int < (int - 1))) {\n    if (com.graphhopper.util.PointList.is3D())\n        com.graphhopper.util.PointList.add(double, double, double);\n    else\n        com.graphhopper.util.PointList.add(double, double);\n    \n} "},"variableMap":{"nodes":"origPoints","pillarNodes":"fullPoints","i":"origPoints","lon":"fullDistance","lat":"fullWeight","ele":"fullDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<com.graphhopper.routing.Path>.size()) ; int++) {\n    com.graphhopper.routing.Path com.graphhopper.routing.Path = java.util.List<com.graphhopper.routing.Path>.get(int);\n    long += com.graphhopper.routing.Path.getTime();\n    double += com.graphhopper.routing.Path.getDistance();\n    double += com.graphhopper.routing.Path.getWeight();\n    if (boolean) {\n        com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation);\n        if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n            if (com.graphhopper.util.PointList.isEmpty()) {\n                com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n                com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n            } \n            for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n                if (boolean) {\n                    int += com.graphhopper.util.Instruction.getPoints().size();\n                    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n                } \n                com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n                com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n            }\n            if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n                com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n                com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n                com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n            } \n        } \n    } else if (boolean) {\n        com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n        if (com.graphhopper.util.PointList.isEmpty())\n            com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n        \n        if (boolean) {\n            int = com.graphhopper.util.PointList.getSize();\n            com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n        } \n        com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n    } \n    boolean = boolean && (com.graphhopper.routing.Path.isFound());\n}"},"status":-1},{"failures":[],"tindex":"75c45744-827e-11e5-bbd8-81c449543731","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:117","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"variableMap":{"res":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"75c45745-827e-11e5-bbd8-fb90a6628234","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:289","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[13],"tindex":"75c47e56-827e-11e5-bbd8-110bae4f804c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:118","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"variableMap":{"versionHint":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String, boolean).release()"},"status":-1},{"failures":[],"tindex":"75c47e57-827e-11e5-bbd8-a700882a86cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"zeroCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:788","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"75c47e58-827e-11e5-bbd8-ad45737a94ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"nodeVia","index":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"75c4a569-827e-11e5-bbd8-ffae1d739f4c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"frontIndex":"index","endIndexPlusOne":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"75c4a56a-827e-11e5-bbd8-f512f9b3339b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:91","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":0},{"failures":[],"tindex":"75c4a56b-827e-11e5-bbd8-9f0c655c827f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"defaultSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:525","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"graph.dataaccess.segmentSize\", int)"},"status":0},{"failures":[],"tindex":"75c4a56c-827e-11e5-bbd8-dbffaacf06ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"75c4a56d-827e-11e5-bbd8-95dcda8d536d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.flush()"},"status":0},{"failures":[],"tindex":"75c4cc7e-827e-11e5-bbd8-15c1aca4a2b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:60","type":"CtConstructorCallImpl","sourcecode":"new com.graphhopper.util.Downloader(\"GraphHopper CGIARReader\")"},"status":0},{"failures":[],"tindex":"75c4cc7f-827e-11e5-bbd8-b3ea3afc0b04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:353","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[14,15,16],"tindex":"75c4cc80-827e-11e5-bbd8-ab3aaedc0252","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"removed","tmpErr":"removed","y1":"removed","dLon":"removed","sLat":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.trimToSize(((com.graphhopper.util.PointList.getSize()) - int))"},"status":-1},{"failures":[],"tindex":"75c4cc81-827e-11e5-bbd8-83935f66e310","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.getDistance()"},"variableMap":{"path":"path"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:53","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.routing.Path.getDistance()"},"status":0},{"failures":[],"tindex":"75c4f392-827e-11e5-bbd8-b5be8fca464e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"com.graphhopper.util.AngleCalc.PI_4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:49","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"75c4f393-827e-11e5-bbd8-e70015daadb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"variableMap":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"backwardBit","flags1":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:701","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":0},{"failures":[17,18,9,19,20],"tindex":"75c4f394-827e-11e5-bbd8-81dfd101f233","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:257","type":"CtReturnImpl","sourcecode":"return long"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"75c4a56b-827e-11e5-bbd8-9f0c655c827f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]},{"transformation":"75c4a56d-827e-11e5-bbd8-95dcda8d536d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.Location2IDQuadtree.flush"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":["com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.index.Location2IDQuadtree_void_flush().b","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b"]},"type":"branch"}]},{"transformation":"75c4a56a-827e-11e5-bbd8-f512f9b3339b","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}