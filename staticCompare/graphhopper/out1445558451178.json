{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":29,"com.graphhopper.reader.OSMReaderTest.testMain":43,"com.graphhopper.reader.OSMReaderTest.testFerry":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":80,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":25,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":75,"com.graphhopper.reader.OSMReaderTest.testWithBounds":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":4,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":48,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":24,"com.graphhopper.coll.CompressedArrayTest.testCompress":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":20,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":53,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":28,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":87,"com.graphhopper.GraphHopperTest.testPrepare":66,"com.graphhopper.GraphHopperTest.testFootAndCar":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":12,"com.graphhopper.reader.OSMReaderTest.testFoot":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":32,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":81,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":33,"com.graphhopper.reader.OSMReaderTest.testOneWay":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":37,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":79,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":23,"com.graphhopper.coll.CompressedArrayTest.testCompress2":55,"com.graphhopper.GraphHopperTest.testPrepareOnly":58,"com.graphhopper.GraphHopperTest.testVia":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":26,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":17,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":47,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":2,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":5,"com.graphhopper.GraphHopperTest.testFootOnly":73,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":67,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":11,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":64,"com.graphhopper.reader.OSMReaderTest.testBarriers":45,"com.graphhopper.GraphHopperTest.testLoadOSM":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":59,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":62,"com.graphhopper.reader.OSMReaderTest.testSort":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":60},"transformations":[{"failures":[],"tindex":"1f5c15cc-7919-11e5-9ec4-97b5c197b187","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"current","nextEdgeId":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:58","type":"CtReturnImpl","sourcecode":"return (int) < (java.util.List<com.graphhopper.util.EdgeIteratorState>.size())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"1f5c3cdd-7919-11e5-9ec4-6f909c4c9e91","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[89],"tindex":"1f5c3cde-7919-11e5-9ec4-c7e080d10f45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:673","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-1},{"failures":[],"tindex":"1f5c3cdf-7919-11e5-9ec4-85b5184f8741","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:114","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false)"},"status":-2},{"failures":[],"tindex":"1f5c3ce0-7919-11e5-9ec4-53a9d325869e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"status":-2},{"failures":[],"tindex":"1f5c3ce1-7919-11e5-9ec4-0f298152e87f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:510","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"osmreader.osm\", \"\")"},"variableMap":{"args":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"1f5c3ce2-7919-11e5-9ec4-a93f348286ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:743","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"1f5c3ce3-7919-11e5-9ec4-3575488d913a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:830","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"1f5c63f4-7919-11e5-9ec4-db4e76d3c22f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"variableMap":{"len":"com.graphhopper.util.EdgeIterator.NO_EDGE","start":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:89","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"1f5c63f5-7919-11e5-9ec4-b5d32b6b9559","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:349","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"variableMap":{"includeWay":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.CHEdgeIteratorState.isShortcut())) {\n    double double = com.graphhopper.util.CHEdgeIteratorState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.CHEdgeIteratorState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.CHEdgeIteratorState.getEdge());\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"1f5c63f6-7919-11e5-9ec4-a7379d04a9ad","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"a_lat","shrinkFactor":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:231","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"1f5c63f7-7919-11e5-9ec4-5bc5d4970788","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:205","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction)"},"status":-2},{"failures":[],"tindex":"1f5c63f8-7919-11e5-9ec4-9faaa7f255c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-2},{"failures":[],"tindex":"1f5c63f9-7919-11e5-9ec4-1d6a7a7c2576","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:594","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"1f5c63fa-7919-11e5-9ec4-93b2d1ff40c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:148","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.reader.dem.ElevationProvider = com.graphhopper.reader.dem.ElevationProvider"},"status":-2},{"failures":[],"tindex":"1f5c63fb-7919-11e5-9ec4-0dfeac63a60a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:144","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.toString()"},"status":-2},{"failures":[],"tindex":"1f5c8b0c-7919-11e5-9ec4-0dd139d26530","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:56","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"1f5c8b0d-7919-11e5-9ec4-dbd20a7c45e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n    throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n} "},"status":-2},{"failures":[],"tindex":"1f5c8b0e-7919-11e5-9ec4-492415184b22","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:46","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"1f5c8b0f-7919-11e5-9ec4-a549c76dc9ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()).setWayGeometry(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.fetchWayGeometry(0))"},"variableMap":{"from":"closestEdge","to":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}