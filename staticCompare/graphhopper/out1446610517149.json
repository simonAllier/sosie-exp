{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":70,"com.graphhopper.routing.PathTest.testFindInstruction":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":17,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":109,"com.graphhopper.geohash.LinearKeyAlgoTest.testEncode":77,"com.graphhopper.coll.CompressedArrayTest.testCompress":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":46,"com.graphhopper.util.BitUtilBigTest.testReverse":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":110,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":20,"com.graphhopper.util.BitUtilLittleTest.testToBitString":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":29,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":26,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":60,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":80,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":10,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":47,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":96,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":7,"com.graphhopper.reader.OSMReaderTest.testSort":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":73,"com.graphhopper.reader.OSMReaderTest.testMain":66,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":61,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":55,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":43,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":93,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":69,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":71,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":92,"com.graphhopper.util.BitUtilBigTest.testToBitString":88,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":53,"com.graphhopper.util.BitUtilBigTest.testToInt":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":57,"com.graphhopper.util.BitUtilLittleTest.testReverse":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":104,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.coll.CompressedArrayTest.testCompress2":94,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":30,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":56,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":38,"com.graphhopper.util.BitUtilLittleTest.testToInt":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":59,"com.graphhopper.util.InstructionListTest.testFind":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":54},"transformations":[{"failures":[0,1,2,3,4],"tindex":"a78d61be-82aa-11e5-80c7-3df2b53fbef6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-1},{"failures":[4],"tindex":"a78d88cf-82aa-11e5-80c7-9bf5dc7dd8a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:560","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,1,2,3,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"a78d88d0-82aa-11e5-80c7-891e252a93bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int)"},"status":-1},{"failures":[],"tindex":"a78d88d1-82aa-11e5-80c7-77580aab762d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"internalFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:690","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"a78dafe2-82aa-11e5-80c7-1b754846290b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"indexM","lastIndex":"indexM","fromIndex":"indexM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:88","type":"CtIfImpl","sourcecode":"if (\"${project.version}\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: maven did not preprocess the version file! Do not use the jar for a release!\");\n} else if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,5,6,7,8,9,11,12,13,14,1,2,3,68,69,70,71,72,73,74,28,32,33,36,75],"tindex":"a78dafe3-82aa-11e5-80c7-ad2c5d23f1a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"shrinkFactor","x1":"shrinkFactor","x2":"shrinkFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:137","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[51,59,5,6,7,8,9,11,12,13,14,1,2,3,15,28,32,33,36],"tindex":"a78dd6f4-82aa-11e5-80c7-2d86df8ee69f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:843","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.storage.index.QueryResult.getQueryDistance()))"},"variableMap":{"closestMatch":"closestMatch","distCalc":"distCalc"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:844","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.calcSnappedPoint(com.graphhopper.util.DistanceCalc)"},"status":-1},{"failures":[76,77,78,79,80,81,82,83],"tindex":"a78dd6f5-82aa-11e5-80c7-3b49660b798d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:57","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-1},{"failures":[84,85,86,87,88,89,90,91],"tindex":"a78dd6f6-82aa-11e5-80c7-cf3fc3a9f42d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"value","dLat":"value","tmpErr":"value","x1":"value","sLon":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int, 0)"},"status":-1},{"failures":[92,93],"tindex":"a78dd6f7-82aa-11e5-80c7-6fdb958dc40a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()))"},"status":-1},{"failures":[94,95],"tindex":"a78dfe08-82aa-11e5-80c7-5d1282e10b4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"variableMap":{"len":"entriesPerSegment","start":"entriesPerSegment"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"a78dfe09-82aa-11e5-80c7-a99ef26ef0d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:278","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[],"tindex":"a78dfe0a-82aa-11e5-80c7-056c42088792","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"edgeFrom","size":"nodeVia","lonSize":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:450","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n    com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n    java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n        com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n    }\n} "},"status":-2},{"failures":[96,97,88,98,99,90,100,101,102],"tindex":"a78e251b-82aa-11e5-80c7-d3a8e2630837","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:226","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-1},{"failures":[8,9,28],"tindex":"a78e251c-82aa-11e5-80c7-81bf9577728d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:95","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setEndNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-1},{"failures":[103],"tindex":"a78e251d-82aa-11e5-80c7-8b7851d0c011","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:465","type":"CtInvocationImpl","sourcecode":"super.rename(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a78e251e-82aa-11e5-80c7-cb3c0b018ab5","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"status":0},{"failures":[19,20,21,22,24,26,27,29,30,104,32,34,35,36,37,38,40,105,42,106,107,108,109,43,45,46,110,111,47],"tindex":"a78e251f-82aa-11e5-80c7-d575ebe80466","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:212","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.CHGraphImpl.setLevel(int, int);\n}"},"status":-1},{"failures":[48,112,113,56,114,115,99,101],"tindex":"a78e4c30-82aa-11e5-80c7-9f49d7172ac7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"res","mask":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:259","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"a78e4c31-82aa-11e5-80c7-2125922f7cfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:410","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a78e4c31-82aa-11e5-80c7-2125922f7cfc","diffs":[{"methodsDiff":{"delete":["java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll","com.graphhopper.reader.OSMReader.addBarrierEdge"]},"type":"staticDiff"}]}]}