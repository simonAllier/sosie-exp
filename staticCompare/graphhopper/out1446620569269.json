{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":72,"com.graphhopper.coll.CompressedArrayTest.testCompress":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":144,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":125,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":213,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":178,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":137,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":142,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":368,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":373,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":413,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":155,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":173,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":232,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":52,"com.graphhopper.util.PointListTest.testReverse":392,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":138,"com.graphhopper.routing.DijkstraTest.initializationError":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":187,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":366,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":320,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":194,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":381,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":82,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":59,"com.graphhopper.coll.CompressedArrayTest.testCompress2":395,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":156,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":214,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":204,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":372,"com.graphhopper.util.GHUtilityTest.testCopy":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":315,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":359,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":274,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":233,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":285,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":110,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":133,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":171,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":74,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":203,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.routing.AStarTest.initializationError":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":183,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":334,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":409,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":408,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":346,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":382,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":272,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":157,"com.graphhopper.storage.GraphHopperStorageTest.testClone":206,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":180,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":216,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":254,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":169,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":43,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":397,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":126,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":78,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":367,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":322,"com.graphhopper.GraphHopperAPITest.testDisconnected179":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":112,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":339,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":89,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":295,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":323,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":379,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":37,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":60,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":343,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":195,"com.graphhopper.routing.PathTest.testWayList":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":338,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":146,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":69,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":271,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":98,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":268,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":307,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":130,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":115,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":186,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":104,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":281,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":329,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":345,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":192,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":162,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":230,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":355,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":122,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":348,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":118,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":189,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":365,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":175,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":319,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":411,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":193,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":258,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":108,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":179,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":377,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":148,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":300,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":121,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":168,"com.graphhopper.routing.AStarBidirectionTest.initializationError":362,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":49},"transformations":[{"failures":[],"tindex":"0f1552b8-82c2-11e5-994b-39ec697b0566","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:72","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.Instruction.getPoints().size()"},"status":0},{"failures":[],"tindex":"0f1579c9-82c2-11e5-994b-01405a511c24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"classvalue","maxLeafEntries":"classvalue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:491","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"0f1579ca-82c2-11e5-994b-7dd0ea134139","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:415","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[],"tindex":"0f15a0db-82c2-11e5-994b-1966dbc41368","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"variableMap":{"type":"this","defaultType":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:149","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"RAM\";\nelse\n    java.lang.String = \"UNSAFE\";\n"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"0f15a0dc-82c2-11e5-994b-3f3c8289892a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:684","type":"CtAssignmentImpl","sourcecode":"double = int"},"variableMap":{"maxTurnCosts":"tmpNo","costs":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"status":-1},{"failures":[12,14,49,50,51,52],"tindex":"0f15a0dd-82c2-11e5-994b-e3f583162514","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((5 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[],"tindex":"0f15c7ee-82c2-11e5-994b-7faed5317140","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"visitedNodes","guess":"visitedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"0f15c7ef-82c2-11e5-994b-594a20f39458","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:305","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage.getDirectory()) instanceof com.graphhopper.storage.MMapDirectory) {\n    throw new java.lang.IllegalStateException(\"not supported yet: mmap will overwrite existing storage at the same location\");\n} else {\n    boolean boolean = ((com.graphhopper.storage.GHDirectory)(com.graphhopper.storage.GraphStorage.getDirectory())).isStoring();\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n}"},"status":-2},{"failures":[],"tindex":"0f15c7f0-82c2-11e5-994b-3533f397f5cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:88","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":0},{"failures":[10,16,17,18,19,20,21,22,53,23,24,25,26,27,28,29,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,50,144,145,146,147,148,149,150,151,51,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,52,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,48,384,385,386,387,388,389],"tindex":"0f15c7f1-82c2-11e5-994b-7b7f2fd31847","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"encoderList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"0f15ef02-82c2-11e5-994b-41ba7ba6c97a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:898","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.WeightingMap.getWeighting().toLowerCase()"},"status":-2},{"failures":[],"tindex":"0f161613-82c2-11e5-994b-bd0a113d8a35","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"maxEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:118","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"0f161614-82c2-11e5-994b-073124a1c457","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:126","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[10,53,83,89,94,390,391,125,131,136,178,184,189,223,229,234,392,393,394,364,367,368,375,376,380,381,383,48,386,389],"tindex":"0f161615-82c2-11e5-994b-3121d49914c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"swapIndex","weights":"longitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:244","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"0f161616-82c2-11e5-994b-6b1be3be4257","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:140","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"filled quadtree index array in \" + float) + \"s. size is \") + com.graphhopper.storage.index.Location2IDQuadtree.(getCapacity())) + \" (\") + int) + \"). filled empty \") + int) + \" in \") + float) + \"s\"))"},"status":-2},{"failures":[395,396,397,398,399,400,401,402,403,404,36,38,44,46],"tindex":"0f163d27-82c2-11e5-994b-7930c41b6378","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"i","sLon":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[405,406,407],"tindex":"0f163d28-82c2-11e5-994b-7f26b8fdfee9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"fromIndex","len":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"0f163d29-82c2-11e5-994b-4193a3af2958","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"com.graphhopper.reader.OSMRelation.Member.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:616","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member = com.graphhopper.reader.OSMRelation.getMembers().get(int);\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) != (com.graphhopper.reader.OSMRelation.Member.int))\n        continue;\n    \n    long long = com.graphhopper.reader.OSMRelation.Member.ref();\n    long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long);\n    long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n    if (long != long)\n        com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n    \n}"},"status":-2},{"failures":[0,1,2,408,3,409,9,10,11,14,30,410,411,412,413,364,366,367,368,369,370,371,372,373,374,376,377,380,381,382,383,48,386,387,388,389],"tindex":"0f16643a-82c2-11e5-994b-d3a4989f69d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"currTo","fromHeap":"openSetTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:99","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0f1552b8-82c2-11e5-994b-39ec697b0566","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.size","com.graphhopper.util.Instruction.getPoints"]},"type":"staticDiff"}]},{"transformation":"0f15c7f0-82c2-11e5-994b-3533f397f5cd","diffs":[{"branches":{"com.graphhopper.reader.OSMNodeTest.testSetTags":["com.graphhopper.reader.OSMNode_void_setTag(java.lang.String,java.lang.Object).c5","com.graphhopper.reader.OSMNode_void_setTag(java.lang.String,java.lang.Object).t4","com.graphhopper.reader.OSMNode_void_setTag(java.lang.String,java.lang.Object).t2","com.graphhopper.reader.OSMNode_void_setTag(java.lang.String,java.lang.Object).t3","com.graphhopper.reader.OSMNode_void_setTag(java.lang.String,java.lang.Object).e4"]},"type":"branch"}]}]}