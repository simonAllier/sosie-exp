{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":87,"com.graphhopper.reader.OSMReaderTest.testMain":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":50,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":92,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":43,"com.graphhopper.storage.RAMDataAccessTest.testHeader":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":90,"com.graphhopper.storage.MMapDataAccessTest.testHeader":85,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":55,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":84,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":64,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":75,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":42,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":2,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":91,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.search.NameIndexTest.testFlush":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":54,"com.graphhopper.reader.OSMReaderTest.testOneWay":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":81,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":56,"com.graphhopper.GraphHopperAPITest.testDisconnected179":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":63,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.GraphHopperTest.testPrepareOnly":20,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":88,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":71,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.GraphHopperAPITest.testLoad":38,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":70,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":26,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":21,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":72,"com.graphhopper.reader.OSMReaderTest.testSort":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":86},"transformations":[{"failures":[],"tindex":"4558855b-7928-11e5-af60-ab9a802b899f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"4558855c-7928-11e5-af60-b982df05b45a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"variableMap":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"bytePos","i":"value","mValues":"header"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"4558ac6d-7928-11e5-af60-c144199aab03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"status":-2},{"failures":[],"tindex":"4558ac6e-7928-11e5-af60-e90b67abea98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:511","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"tmpOsmFile":"highway","osmFile":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:357","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>)) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        else\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"4558ac6f-7928-11e5-af60-c1d5bc77f276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-2},{"failures":[],"tindex":"4558ac70-7928-11e5-af60-bbff0d768456","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity())"},"status":-2},{"failures":[],"tindex":"4558ac71-7928-11e5-af60-135994787225","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtLocalVariableImpl","sourcecode":"int int = (com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int) - int"},"status":-2},{"failures":[],"tindex":"4558d382-7928-11e5-af60-d71ceb1a8a17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:526","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 1) * (int)))"},"variableMap":{"edgeCount":"turnCostsEntryBytes","edges":"turnCosts","edgeEntryBytes":"turnCostsEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"status":-2},{"failures":[],"tindex":"4558d383-7928-11e5-af60-f1f8bdaf731a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"oldPointer","tmpValue":"oldPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:92","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"4558d384-7928-11e5-af60-e5f89598e3b1","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:282","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"4558d385-7928-11e5-af60-3de376120c38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:615","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.getMembers().size()"},"status":-2},{"failures":[],"tindex":"4558d386-7928-11e5-af60-092a7ec7ab10","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:570","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.this.setWeight(this, double)"},"variableMap":{"weight":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:762","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    double = com.graphhopper.util.PointList.getLatitude(int);\n    double = com.graphhopper.util.PointList.getLongitude(int);\n    if (com.graphhopper.util.PointList.is3D()) {\n        double = com.graphhopper.util.PointList.getElevation(int);\n        double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n        double = double;\n    } else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    \n    double = double;\n    double = double;\n    if ((int > 2) && (int < (int - 1))) {\n        if (com.graphhopper.util.PointList.is3D())\n            com.graphhopper.util.PointList.add(double, double, double);\n        else\n            com.graphhopper.util.PointList.add(double, double);\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"4558d387-7928-11e5-af60-7787d3dcf211","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:315","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2},{"failures":[],"tindex":"4558fa98-7928-11e5-af60-9d3af12232c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"priorityWayEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"status":-2},{"failures":[],"tindex":"4558fa99-7928-11e5-af60-3712f748703d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:213","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.next()"},"status":-2},{"failures":[],"tindex":"4558fa9a-7928-11e5-af60-179c744393f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe = ((sun.misc.Unsafe)(java.lang.reflect.Field.get(null)))"},"status":-2},{"failures":[],"tindex":"4558fa9b-7928-11e5-af60-ef700217e9c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-2},{"failures":[],"tindex":"4558fa9c-7928-11e5-af60-b5899217c9e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"visitedCountFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:222","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"4558fa9d-7928-11e5-af60-a17233c17082","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"4558fa9e-7928-11e5-af60-6394c357ae2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:754","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, int, int)"},"variableMap":{"edgeAccess":"this","edgeId":"newEdgeId","updatedB":"fromNodeId","updatedA":"newEdgeId","linkA":"toNodeId","linkB":"toNodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:143","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}