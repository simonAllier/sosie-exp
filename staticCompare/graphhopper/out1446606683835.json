{"failureDictionary":{"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":125,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":153,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":112,"com.graphhopper.reader.OSMReaderTest.testWithBounds":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":134,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":114,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":109,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":50,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":126,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":151,"com.graphhopper.reader.OSMReaderTest.testOneWay":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":152,"com.graphhopper.coll.IntIntBinHeapTest.testClear":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":4,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":119,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":164,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":165,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":15,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":88,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":110,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":66,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":158,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":103,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":161,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":90,"com.graphhopper.reader.OSMReaderTest.testSort":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":62,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":121,"com.graphhopper.reader.OSMReaderTest.testMain":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":137,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":138,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":93,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":167,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":128,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":143,"com.graphhopper.GraphHopperTest.testFootAndCar":68,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":34,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":98,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":127,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.GraphHopperTest.testPrepareOnly":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":117,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":51,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":89,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":146,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":100,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":83,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":85,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":162,"com.graphhopper.reader.OSMReaderTest.testBarriers":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":74,"com.graphhopper.util.GHUtilityTest.testCopy":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":108},"transformations":[{"failures":[0],"tindex":"bab8161d-82a1-11e5-8487-c17372f4306d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.CompressedArray.flush()"},"status":-1},{"failures":[],"tindex":"bab83d2e-82a1-11e5-8487-11cf615eeced","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:190","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"bab8643f-82a1-11e5-8487-e1ba358c64cd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:173","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"RAM_STORE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"bab86440-82a1-11e5-8487-492a279ad08b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long)"},"status":-2},{"failures":[1,2],"tindex":"bab86441-82a1-11e5-8487-5da93294253a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinNetworkSize(int)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"bab86442-82a1-11e5-8487-8ffef9693706","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:531","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"bab88b53-82a1-11e5-8487-5f0fc0dff8c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:56","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-2},{"failures":[22],"tindex":"bab88b54-82a1-11e5-8487-ff6ed1b15d1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"size","to":"size","lonSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"bab88b55-82a1-11e5-8487-03208222f016","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.putCurrentVersions()"},"status":-1},{"failures":[],"tindex":"bab88b56-82a1-11e5-8487-37b781ffadc3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:291","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"bab8b267-82a1-11e5-8487-432fd4069655","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"status":0},{"failures":[],"tindex":"bab8b268-82a1-11e5-8487-33d7bf5aa9b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"status":0},{"failures":[35,36,37,38,39,40,41,42,43,44,24,25,27,45,46,47,48,49],"tindex":"bab8b269-82a1-11e5-8487-e3a4a8ceb7f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"start","mainNodes":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"bab8b26a-82a1-11e5-8487-d70376a2894b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:233","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"variableMap":{"newName":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:115","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.parseBoolean(java.lang.String)"},"status":-2},{"failures":[],"tindex":"bab8d97b-82a1-11e5-8487-0fa62c645b6d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:281","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) == 0) {\n    return null;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:339","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.get(int)"},"status":-2},{"failures":[],"tindex":"bab8d97c-82a1-11e5-8487-9bb894f0cede","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:229","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[50],"tindex":"bab8d97d-82a1-11e5-8487-61f9190ddd73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:414","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[51,52,53,54,55,56,57],"tindex":"bab8d97e-82a1-11e5-8487-11992cf3dab7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:84","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n        continue;\n    \n    for (int int, int int = 0 ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            if (double <= 0)\n                break;\n            \n            com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n        } \n    }\n}"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,42,44,68,24,25,69,26,27,45,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,32,97,98,99,33,100,101,102,103,34,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"bab9008f-82a1-11e5-8487-8f332907ce0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"registered"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,108,116,118,132,133,142],"tindex":"bab90090-82a1-11e5-8487-7bf0f2e2d682","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}