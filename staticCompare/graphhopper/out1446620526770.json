{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":7,"com.graphhopper.reader.OSMReaderTest.testMain":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":25,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":76,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":77,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":34,"com.graphhopper.util.InstructionListTest.testEmptyList":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":22,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":20,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":42,"com.graphhopper.GraphHopperTest.testPrepare":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":82,"com.graphhopper.GraphHopperTest.testFootAndCar":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.util.InstructionListTest.testWayList2":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":11,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":87,"com.graphhopper.util.InstructionListTest.testWayList":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":9,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":65,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":13,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":2,"com.graphhopper.GraphHopperTest.testVia":50,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":74,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":39,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":86,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":70,"com.graphhopper.GraphHopperTest.testFootOnly":57,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.util.InstructionListTest.testFind":63,"com.graphhopper.GraphHopperTest.testLoadOSM":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":46,"com.graphhopper.reader.OSMReaderTest.testSort":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":45},"transformations":[{"failures":[],"tindex":"f5c02eef-82c1-11e5-832c-f95d8d95bb54","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:434","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"))"},"status":0},{"failures":[],"tindex":"f5c05600-82c1-11e5-832c-ddfdd0c6de00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[],"tindex":"f5c07d11-82c1-11e5-832c-53ea9a0fbf41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"fromX":"toLon","toX":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:45","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"f5c07d12-82c1-11e5-832c-6bdb0e1c8cbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:40","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"f5c07d13-82c1-11e5-832c-55deb072a88b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"status":-2},{"failures":[],"tindex":"f5c0a424-82c1-11e5-832c-e959338b2a28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"f5c0a425-82c1-11e5-832c-f919fe7303ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:312","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,45],"tindex":"f5c0a426-82c1-11e5-832c-abe30b4beb67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"variableMap":{"edgeKey1":"to","edgeKey2":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:126","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.EdgeEntry.int) == (int)"},"status":-1},{"failures":[],"tindex":"f5c0cb37-82c1-11e5-832c-e9b05fb7d1a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"variableMap":{"prioQueueOpenSetFrom":"prioQueueOpenSet","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"status":0},{"failures":[],"tindex":"f5c0cb38-82c1-11e5-832c-0f33d63fa4f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:466","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CHEdgeIterator.getEdge()"},"status":-2},{"failures":[76],"tindex":"f5c0cb39-82c1-11e5-832c-77be1f7527bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"status":-1},{"failures":[],"tindex":"f5c0cb3a-82c1-11e5-832c-6773c646f215","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"f5c0cb3b-82c1-11e5-832c-fd53677201d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"status":0},{"failures":[],"tindex":"f5c0f24c-82c1-11e5-832c-b5cf4598714f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"deltaX":"lazyTime","maxX":"lazyTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:291","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[68,77,78,79,80,81,82,83,50,84],"tindex":"f5c0f24d-82c1-11e5-832c-8315eab51998","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:457","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[85,86],"tindex":"f5c0f24e-82c1-11e5-832c-b33475acc2fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:284","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (int))\n    throw new java.lang.IllegalStateException((\"incorrect location index version, expected:\" + (int)));\n"},"variableMap":{"dataAccess":"da","MAGIC_INT":"ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-1},{"failures":[87],"tindex":"f5c0f24f-82c1-11e5-832c-831b8490168e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:307","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:292","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[],"tindex":"f5c11960-82c1-11e5-832c-c152af43ebe4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"lastBarrier","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            gnu.trove.list.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"f5c11961-82c1-11e5-832c-dbaa776d4b03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"status":-2},{"failures":[],"tindex":"f5c11962-82c1-11e5-832c-815db7311930","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:145","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double += com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, false)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f5c0cb3a-82c1-11e5-832c-6773c646f215","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.Path.calcMillis"]},"type":"staticDiff"}]},{"transformation":"f5c0f24c-82c1-11e5-832c-b5cf4598714f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}