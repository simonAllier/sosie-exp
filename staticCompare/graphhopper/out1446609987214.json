{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":37,"com.graphhopper.routing.PathTest.testFindInstruction":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":136,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":30,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":26,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":33,"com.graphhopper.reader.OSMReaderTest.testWithBounds":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":141,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":68,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":129,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":69,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":9,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":132,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":134,"com.graphhopper.util.BitUtilBigTest.testReverse":145,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":130,"com.graphhopper.GraphHopperTest.testPrepare":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":127,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":149,"com.graphhopper.search.NameIndexTest.testFlush":25,"com.graphhopper.reader.OSMReaderTest.testFoot":97,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":148,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":39,"com.graphhopper.reader.OSMReaderTest.testOneWay":106,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":114,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":31,"com.graphhopper.GraphHopperAPITest.testDisconnected179":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":113,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":138,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":100,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":122,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":71,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":17,"com.graphhopper.coll.OSMIDMapTest.testGet":117,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":83,"com.graphhopper.GraphHopperTest.testLoadOSM":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":80,"com.graphhopper.reader.OSMReaderTest.testSort":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":70,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":104,"com.graphhopper.reader.OSMReaderTest.testMain":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":131,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":55,"com.graphhopper.util.PointListTest.testReverse":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":143,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":16,"com.graphhopper.routing.PathTest.testWayList":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":61,"com.graphhopper.coll.OSMIDMapTest.testGet2":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":47,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":102,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":74,"com.graphhopper.GraphHopperTest.testFootAndCar":88,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":11,"com.graphhopper.coll.OSMIDMapTest.testGetLong":119,"com.graphhopper.search.NameIndexTest.testPut":24,"com.graphhopper.util.InstructionListTest.testCreateGPX":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":49,"com.graphhopper.util.BitUtilLittleTest.testReverse":146,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":152,"com.graphhopper.GraphHopperTest.testPrepareOnly":77,"com.graphhopper.GraphHopperTest.testVia":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":57,"com.graphhopper.GraphHopperAPITest.testLoad":95,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":48,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.GraphHopperTest.testFootOnly":93,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":53,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":18,"com.graphhopper.util.InstructionListTest.testFind":0,"com.graphhopper.reader.OSMReaderTest.testBarriers":99,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":46,"com.graphhopper.util.GHUtilityTest.testCopy":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":44},"transformations":[{"failures":[],"tindex":"6baf90fe-82a9-11e5-a393-afb981b6cab3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:286","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    switch (com.graphhopper.reader.OSMElement.getType()) {\n        case com.graphhopper.reader.OSMElement.int :\n            if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n            } \n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n            break;\n    }\n    if (((++long) % 100000000) == 0) {\n        com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"6bafdf1f-82a9-11e5-a393-fbb60b650214","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:87","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-1},{"failures":[],"tindex":"6bafdf20-82a9-11e5-a393-5553fef2676a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:34","type":"CtLocalVariableImpl","sourcecode":"double double = 0.5 * ((com.graphhopper.routing.util.WeightApproximator.approximate(int)) - (com.graphhopper.routing.util.WeightApproximator.approximate(int)))"},"status":-2},{"failures":[29],"tindex":"6bb00631-82a9-11e5-a393-29a329893cfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"6bb00632-82a9-11e5-a393-396b2d6f0461","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeAndEdgeEntrySize()"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,28,98,99,100,101,102,103,104,105,106],"tindex":"6bb00633-82a9-11e5-a393-6b4dbd5c1557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.this(100, 2)"},"status":-1},{"failures":[],"tindex":"6bb02d44-82a9-11e5-a393-397bc2353aac","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"s":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:355","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + (com.graphhopper.storage.CHGraphImpl.toDetailsString())"},"status":0},{"failures":[107,108,109,110,111,112,113,114,115,116],"tindex":"6bb02d45-82a9-11e5-a393-c7be67e6638e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:442","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[117,118,119,120],"tindex":"6bb02d46-82a9-11e5-a393-6f0f4894f337","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:64","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long);\n    if (long < 0) {\n        throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n    } \n    long *= 4;\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"6bb05457-82a9-11e5-a393-dd5d801bee95","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:197","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"6bb05458-82a9-11e5-a393-57704072d143","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"shift","key":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"status":-2},{"failures":[121],"tindex":"6bb05459-82a9-11e5-a393-31f15818a39c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"status":-1},{"failures":[122],"tindex":"6bb0545a-82a9-11e5-a393-8952a383779a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:69","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n    continue;\n} "},"status":-1},{"failures":[123],"tindex":"6bb0545b-82a9-11e5-a393-191059ec944e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:183","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double))) / (double))));\nelse\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double))) / (double))));\n"},"status":-1},{"failures":[],"tindex":"6bb07b6c-82a9-11e5-a393-0d08a9613454","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[],"tindex":"6bb07b6d-82a9-11e5-a393-45e11550a5e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"turnCostsEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:71","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[124,125,38,54,126,127,128,129,130,131,132,133,134,135,20,136,137,138,139,72,140,73,74,141,75,142,143,144,78,80,88,101],"tindex":"6bb07b6e-82a9-11e5-a393-09f5ca74986f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"tmp","angle":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:240","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[145,146,32,147,148,39,48,149,150,55],"tindex":"6bb07b6f-82a9-11e5-a393-f993e07de8d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"maxBits","NO_TURN_ENTRY":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:257","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,151,116],"tindex":"6bb0a280-82a9-11e5-a393-dfc9598e4f47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[152,153,154],"tindex":"6bb0a281-82a9-11e5-a393-85b5c393057a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:83","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry) != null) {\n    (int)++;\n    com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}