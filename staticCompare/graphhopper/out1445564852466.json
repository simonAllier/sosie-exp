{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":55,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":179,"com.graphhopper.reader.OSMReaderTest.testFerry":316,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":294,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":295,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":19,"com.graphhopper.routing.QueryGraphTest.testOneWay":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":216,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":162,"com.graphhopper.reader.OSMReaderTest.testWithBounds":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":102,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":186,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":4,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":133,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":296,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":217,"com.graphhopper.GraphHopperTest.testPrepare":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":54,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":257,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":37,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":272,"com.graphhopper.util.InstructionListTest.testWayList":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":287,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":206,"com.graphhopper.GraphHopperAPITest.testDisconnected179":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":183,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":43,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":163,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":74,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":81,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":200,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":307,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":119,"com.graphhopper.GraphHopperTest.testLoadOSM":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":164,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":195,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":263,"com.graphhopper.reader.OSMReaderTest.testSort":319,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":80,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":212,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":91,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":59,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":281,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":315,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":65,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":234,"com.graphhopper.routing.PathTest.testWayList":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":226,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":36,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":161,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":209,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":99,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":147,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":233,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":73,"com.graphhopper.util.GHUtilityTest.testSort":292,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":230,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":128,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":187,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":282,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":88,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":194,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":103,"com.graphhopper.GraphHopperAPITest.testLoad":332,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":309,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":109,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":191,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":93,"com.graphhopper.reader.OSMReaderTest.testBarriers":320,"com.graphhopper.routing.PathTest.testFound":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":278,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":130,"com.graphhopper.util.GHUtilityTest.testCopy":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":42,"com.graphhopper.routing.PathTest.testFindInstruction":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":94,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":105,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":277,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":248,"com.graphhopper.util.InstructionListTest.testEmptyList":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":178,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":270,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":121,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":107,"com.graphhopper.reader.PrinctonReaderTest.testRead":330,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":190,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":199,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":221,"com.graphhopper.util.InstructionListTest.testWayList2":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":139,"com.graphhopper.reader.OSMReaderTest.testFoot":317,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":169,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":231,"com.graphhopper.reader.OSMReaderTest.testOneWay":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":210,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":201,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":267,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":104,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":240,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":247,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":321,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":3,"com.graphhopper.routing.PathBidirRefTest.testExtract":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":157,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":167,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":129,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":145,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":301,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":300,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":176,"com.graphhopper.util.GHUtilityTest.testSort2":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":52,"com.graphhopper.reader.OSMReaderTest.testMain":318,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":229,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":189,"com.graphhopper.routing.PathBidirRefTest.testExtract2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":148,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":131,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":116,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":279,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":165,"com.graphhopper.storage.GraphHopperStorageTest.testClone":243,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":232,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":219,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":253,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":260,"com.graphhopper.GraphHopperTest.testFootAndCar":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":193,"com.graphhopper.routing.PathTest.testTime":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":218,"com.graphhopper.util.GHUtilityTest.testSortDirected":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":208,"com.graphhopper.GraphHopperTest.testPrepareOnly":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":181,"com.graphhopper.GraphHopperTest.testVia":305,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":47,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":14,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":24,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":264,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":290,"com.graphhopper.GraphHopperTest.testFootOnly":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":138,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":324,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":69,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":207,"com.graphhopper.util.InstructionListTest.testFind":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":198},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"06d31efb-7928-11e5-8869-3b5bcdb3f2f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:50","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.Weighting = com.graphhopper.routing.util.Weighting"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,0,1,2,3,4,5,6,7,8,9,61,62,10,11,12,13,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,14,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,15,291,16,292,293,17,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"06d3460c-7928-11e5-8869-8929e506008b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"06d3460d-7928-11e5-8869-f9b9f4bce369","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:378","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"06d36d1e-7928-11e5-8869-a90f32a04292","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"node","nextEdgeId":"closestNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:67","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"06d36d1f-7928-11e5-8869-015c37071b56","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:52","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1019","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>(((java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) - 1))"},"status":-2},{"failures":[],"tindex":"06d36d20-7928-11e5-8869-931e3aa9aae0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"06d36d21-7928-11e5-8869-57f4384b433c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:91","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty())\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n"},"variableMap":{"tmpPoints":"points","fullPoints":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:164","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"06d36d22-7928-11e5-8869-67aaf928d94e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"lat","speed":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:66","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"06d36d23-7928-11e5-8869-cbff4e8c2b5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"06d36d24-7928-11e5-8869-3d49dc722b4f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:52","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.storage.DataAccess.getCapacity()))"},"variableMap":{"da":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:103","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-2},{"failures":[],"tindex":"06d36d25-7928-11e5-8869-c7c73e2a2f04","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"variableMap":{"com.graphhopper.storage.DAType.MMAP":"type","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:82","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"06d39436-7928-11e5-8869-a37660671558","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"06d39437-7928-11e5-8869-a91f311cfd3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"06d39438-7928-11e5-8869-d948200b3d0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:110","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.VLongStorage.getLength()"},"status":-2},{"failures":[],"tindex":"06d39439-7928-11e5-8869-29bc35828973","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:269","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n    if (boolean)\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-2},{"failures":[],"tindex":"06d3943a-7928-11e5-8869-47c97fbe9f5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:96","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    if (int < 0)\n        int = int;\n    \n    continue;\n} else if (int < 0) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"06d3943b-7928-11e5-8869-ef6ed9dc9af2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:117","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.RoundaboutInstruction.getTurnAngle()"},"variableMap":{"this":"lastI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLon()"},"status":-2},{"failures":[],"tindex":"06d3943c-7928-11e5-8869-f5ea1b31fa87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:394","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\nelse\n    java.lang.String += \", \" + java.lang.String;\n"},"variableMap":{"name":"str","refName":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"06d3943d-7928-11e5-8869-35d212864ab5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"frontIndex":"segmentSizeInBytes","endIndexPlusOne":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:138","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0)\n        return false;\n    \n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n    byte[] byte[] = new byte[int];\n    for (int int = 0 ; int < int ; int++) {\n        int int = java.io.RandomAccessFile.read(byte[]);\n        if (int <= 0)\n            throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n        \n        com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[],"tindex":"06d3bb4e-7928-11e5-8869-a9638fe6be44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}