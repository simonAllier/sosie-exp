{"failureDictionary":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":22,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":159,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":92,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":50,"com.graphhopper.routing.PathTest.testFindInstruction":127,"com.graphhopper.reader.OSMReaderTest.testFerry":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":149,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":134,"com.graphhopper.routing.QueryGraphTest.testOneWay":145,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.storage.VLongStorageTest.testWrite":164,"com.graphhopper.reader.OSMReaderTest.testWithBounds":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":157,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":63,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":140,"com.graphhopper.coll.CompressedArrayTest.testCompress":167,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":71,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":15,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":133,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":74,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":18,"com.graphhopper.util.InstructionListTest.testWayList2":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":4,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":60,"com.graphhopper.reader.OSMReaderTest.testFoot":97,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":54,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":150,"com.graphhopper.util.InstructionListTest.testWayList":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":77,"com.graphhopper.reader.OSMReaderTest.testOneWay":109,"com.graphhopper.GHRequestTest.testCorrectInit":5,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":154,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":3,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":130,"com.graphhopper.GraphHopperAPITest.testDisconnected179":14,"com.graphhopper.util.PointListTest.testAddPL":86,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":62,"com.graphhopper.util.PointListTest.testEquals":88,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":161,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":123,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":68,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":116,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":17,"com.graphhopper.reader.OSMReaderTest.testSort":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":114,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":58,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":106,"com.graphhopper.reader.OSMReaderTest.testMain":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":76,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":138,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.util.PointListTest.testReverse":87,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":82,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":122,"com.graphhopper.routing.PathTest.testWayList":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":42,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":163,"com.graphhopper.util.PointListTest.testIterable":89,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":30,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":103,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":24,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":33,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":156,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":132,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":91,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":94,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":51,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":144,"com.graphhopper.util.InstructionListTest.testCreateGPX":83,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":147,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":32,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":141,"com.graphhopper.GraphHopperTest.testPrepareOnly":111,"com.graphhopper.coll.CompressedArrayTest.testCompress2":166,"com.graphhopper.GraphHopperTest.testVia":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":131,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":135,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":105,"com.graphhopper.util.DouglasPeuckerTest.testParse":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":40,"com.graphhopper.GraphHopperAPITest.testLoad":6,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":31,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":139,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":28,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":36,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":37,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":124,"com.graphhopper.util.InstructionListTest.testFind":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":100,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":121,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":29,"com.graphhopper.util.GHUtilityTest.testCopy":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":65},"transformations":[{"failures":[0],"tindex":"edc1da74-792a-11e5-83dc-9b4220cdbb60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-1},{"failures":[1],"tindex":"edc20185-792a-11e5-83dc-694b685f814d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:174","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[2,3,4],"tindex":"edc20186-792a-11e5-83dc-5f82afdf2c93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"priorityFromRelation","sLon":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:353","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13],"tindex":"edc20187-792a-11e5-83dc-cf299a09ac3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:51","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(5)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double))"},"status":-1},{"failures":[6,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,7,8,9,10,11,120,12,13,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"tindex":"edc20188-792a-11e5-83dc-01e60746a452","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"E_ADDITIONAL":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:134","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[164,165,166,167],"tindex":"edc20189-792a-11e5-83dc-b14152143481","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:120","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[],"tindex":"edc2289a-792a-11e5-83dc-11f533946634","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:621","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.reverse(com.graphhopper.geohash.SpatialKeyAlgo.encode(double, double), com.graphhopper.geohash.SpatialKeyAlgo.getBits())"},"status":-2},{"failures":[],"tindex":"edc2289b-792a-11e5-83dc-ff6f13d2c585","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:173","type":"CtIfImpl","sourcecode":"if ((byte[].int) > (int)) {\n    byte[] byte[] = new byte[int];\n    java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    byte[] = byte[];\n} "},"status":-2},{"failures":[],"tindex":"edc2289c-792a-11e5-83dc-a9ef24746662","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:703","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"edc2289d-792a-11e5-83dc-1b73a4ea956f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"variableMap":{"entry":"com.graphhopper.routing.util.EncodingManager.BIKE","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.CAR","configuration":"configuration","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.BIKE2","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"edc2289e-792a-11e5-83dc-fb26970c0b4d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:500","type":"CtReturnImpl","sourcecode":"return ~int"},"variableMap":{"high":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:526","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"status":-2},{"failures":[],"tindex":"edc24faf-792a-11e5-83dc-1b0f1ec58d9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"variableMap":{"from":"nodeA","lonSize":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:751","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-2},{"failures":[],"tindex":"edc24fb0-792a-11e5-83dc-e5c97ee04d13","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"edc24fb1-792a-11e5-83dc-733d58a3a372","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"a_lon_deg","angle":"delta_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:149","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double);\n"},"status":-2},{"failures":[],"tindex":"edc24fb2-792a-11e5-83dc-d1269962b700","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"toX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"edc24fb3-792a-11e5-83dc-99c2b6e9c536","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"edc24fb4-792a-11e5-83dc-594d764708ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"size":"size","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:105","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"edc24fb5-792a-11e5-83dc-db0fb20bb509","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:360","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":-2},{"failures":[],"tindex":"edc24fb6-792a-11e5-83dc-6dfcf14e909f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"edc276c7-792a-11e5-83dc-b11a7c1018db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}