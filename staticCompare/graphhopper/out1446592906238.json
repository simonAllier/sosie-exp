{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":62,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":54,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.storage.StorablePropertiesTest.testStore":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":6,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":7,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":61,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.GraphHopperTest.testPrepareOnly":9,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":5,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":60,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.GraphHopperAPITest.testLoad":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":49,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":41,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":47,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":24,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":8,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":46,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":15},"transformations":[{"failures":[0,1],"tindex":"a6a1c643-8281-11e5-a9ea-f347b9764015","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:352","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Helper.idealIntArraySize((int + 1))"},"variableMap":{"pos":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:95","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"a6a1ed54-8281-11e5-a9ea-fbd2066fdb5d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"newEdges","newNodeId":"wayOsmId","wayOsmId":"wayOsmId","wayFlags":"flags","this":"this","nodeFlags":"flags","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:699","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":0},{"failures":[],"tindex":"a6a1ed55-8281-11e5-a9ea-15a3f48aaa54","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:146","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[2,3],"tindex":"a6a21466-8281-11e5-a9ea-13207bb39c7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"fullDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:53","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.routing.Path.getDistance()"},"status":-1},{"failures":[4,5,6,7,8],"tindex":"a6a21467-8281-11e5-a9ea-471dcaaa9cf8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"tmpNewShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:698","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"a6a21468-8281-11e5-a9ea-ff9e7213f6ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize())"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"a6a23b79-8281-11e5-a9ea-c5ec5722c270","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:685","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.storage.DataAccess.loadExisting())) || (!(com.graphhopper.storage.DataAccess.loadExisting())))\n    return false;\n"},"variableMap":{"shortcuts":"da","nodesCH":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:49","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"a6a23b7a-8281-11e5-a9ea-91c73e2dc181","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:440","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-2},{"failures":[],"tindex":"a6a23b7b-8281-11e5-a9ea-a98a32695cfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:215","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.close()"},"status":0},{"failures":[22,23],"tindex":"a6a23b7c-8281-11e5-a9ea-f72e66482782","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = gnu.trove.list.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                gnu.trove.list.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"a6a2628d-8281-11e5-a9ea-53fe2a98a593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:640","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return super.getDouble(long, int);\n}"},"status":-2},{"failures":[24,25],"tindex":"a6a2628e-8281-11e5-a9ea-692487959cf8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:183","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36],"tindex":"a6a2628f-8281-11e5-a9ea-7f6d6795aef1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[37,38,5,39,40,41,42],"tindex":"a6a289a0-8281-11e5-a9ea-45265ecf9f86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:66","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"a6a289a1-8281-11e5-a9ea-ab324d235827","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[],"tindex":"a6a289a2-8281-11e5-a9ea-6bc15d9461ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:223","type":"CtReturnImpl","sourcecode":"return 5"},"status":0},{"failures":[9,43,3,44,10,11,12,45,46,4,47,48,49,50,51,52,7,53,8,54,55,40,56,57,58,59,60,61,62,63,64,42],"tindex":"a6a289a3-8281-11e5-a9ea-db4a4f404e4a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[65],"tindex":"a6a2b0b4-8281-11e5-a9ea-e9ce368c44c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"status":-1},{"failures":[],"tindex":"a6a2b0b5-8281-11e5-a9ea-e97382c5fa3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:997","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Make sure you graph accepts 3D data\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:65","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(((((\"You cannot call \" + java.lang.String) + \" if response contains errors. Check this with ghResponse.hasErrors(). \") + \"Errors are: \") + com.graphhopper.GHResponse.(getErrors())))"},"status":0},{"failures":[],"tindex":"a6a2b0b6-8281-11e5-a9ea-f14d43beeac1","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:272","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a6a2b0b5-8281-11e5-a9ea-e97382c5fa3f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.getErrors"]},"type":"staticDiff"}]},{"transformation":"a6a23b7b-8281-11e5-a9ea-a98a32695cfe","diffs":[{"methodsDiff":{"delete":["javax.xml.stream.XMLStreamReader.close"]},"type":"staticDiff"}]}]}