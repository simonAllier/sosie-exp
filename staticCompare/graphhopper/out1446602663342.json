{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":196,"com.graphhopper.reader.OSMReaderTest.testFerry":28,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":50,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":391,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":331,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":152,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":213,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":241,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":294,"com.graphhopper.GraphHopperTest.testPrepare":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":318,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":282,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":307,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":348,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":340,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":297,"com.graphhopper.GraphHopperTest.testLoadOSM":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":102,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":160,"com.graphhopper.reader.OSMReaderTest.testSort":31,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":386,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":258,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":225,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":275,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":44,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":187,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":300,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":149,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":194,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":315,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":304,"com.graphhopper.coll.OSMIDMapTest.testGetLong":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":76,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":388,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":404,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":406,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":242,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":234,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":409,"com.graphhopper.util.GHUtilityTest.testCopy":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":396,"com.graphhopper.routing.PathTest.testFindInstruction":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":122,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":259,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":246,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":200,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":410,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":21,"com.graphhopper.util.InstructionListTest.testWayList2":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":110,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":325,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":208,"com.graphhopper.storage.RAMDirectoryTest.testSynched":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":127,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":233,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":321,"com.graphhopper.coll.OSMIDMapTest.testGet":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":183,"com.graphhopper.routing.PathBidirRefTest.testExtract":337,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":380,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":353,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":352,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":351,"com.graphhopper.util.GHUtilityTest.testSort2":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":316,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":387,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":85,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":161,"com.graphhopper.storage.StorablePropertiesTest.testStore":383,"com.graphhopper.storage.GraphHopperStorageTest.testClone":235,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":181,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":427,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":201,"com.graphhopper.routing.PathTest.testTime":342,"com.graphhopper.util.InstructionListTest.testCreateGPX":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":212,"com.graphhopper.reader.OSMReaderTest.testRelation":369,"com.graphhopper.util.GHUtilityTest.testSortDirected":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":171,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":424,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":272,"com.graphhopper.GraphHopperTest.testFootOnly":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":128,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":428,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":209,"com.graphhopper.search.NameIndexTest.testCreate":377,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":104,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":267,"com.graphhopper.routing.QueryGraphTest.testOneWay":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":399,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":100,"com.graphhopper.reader.OSMReaderTest.testWithBounds":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":206,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":78,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":232,"com.graphhopper.search.NameIndexTest.testFlush":375,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":301,"com.graphhopper.util.InstructionListTest.testWayList":15,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":261,"com.graphhopper.GraphHopperAPITest.testDisconnected179":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":202,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":98,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":411,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":405,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":227,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":358,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":295,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":253,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":323,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":418,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":229,"com.graphhopper.routing.PathTest.testWayList":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":169,"com.graphhopper.coll.OSMIDMapTest.testGet2":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":324,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":99,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":401,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":421,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":347,"com.graphhopper.util.GHUtilityTest.testSort":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":106,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":414,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":191,"com.graphhopper.search.NameIndexTest.testPut":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":389,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":419,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":117,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":188,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":326,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":62,"com.graphhopper.storage.MMapDirectoryTest.testSynched":423,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":367,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":158,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":217,"com.graphhopper.routing.PathTest.testFound":341,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":5,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":363,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":298,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":75,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":376,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":204,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":240,"com.graphhopper.util.InstructionListTest.testEmptyList":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":314,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":186,"com.graphhopper.reader.PrinctonReaderTest.testRead":42,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":71,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":195,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":79,"com.graphhopper.reader.OSMReaderTest.testFoot":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":216,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":281,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":107,"com.graphhopper.reader.OSMReaderTest.testOneWay":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":192,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":165,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":256,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":90,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":210,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":239,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":296,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":285,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":47,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":327,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":189,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":271,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":371,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":416,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":425,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":155,"com.graphhopper.routing.PathBidirRefTest.testExtract2":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":111,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":150,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":373,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":176,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":228,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":193,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":257,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":250,"com.graphhopper.GraphHopperTest.testFootAndCar":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":180,"com.graphhopper.storage.StorablePropertiesTest.testLoad":384,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":125,"com.graphhopper.GraphHopperTest.testVia":356,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":311,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":37,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":156,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":17,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":422,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":142,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":413,"com.graphhopper.util.InstructionListTest.testFind":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":22},"transformations":[{"failures":[],"tindex":"5e5f45db-8298-11e5-a42d-8f2a8815d8f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:136","type":"CtIfImpl","sourcecode":"if (int != int) {\n    int[][int] = int[][int];\n    int[][int] = int;\n} "},"variableMap":{"val":"read","keys":"area","values":"area","i":"read","o":"read"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:168","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n}"},"status":0},{"failures":[],"tindex":"5e5f93fc-8298-11e5-a42d-8b980a59054d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"initLeafSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"status":0},{"failures":[0,1],"tindex":"5e5f93fd-8298-11e5-a42d-9bd28b3a14f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[0,2,3,4,5,6,7,8,9,10,11,1,12,13,14],"tindex":"5e5f93fe-8298-11e5-a42d-8b0e89159523","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"shift","speed":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:216","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"5e5fbb0f-8298-11e5-a42d-5f6d18729444","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"sourceNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:24","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":-1},{"failures":[],"tindex":"5e5fbb10-8298-11e5-a42d-d9132f43a94f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:131","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicInteger.incrementAndGet()"},"status":-2},{"failures":[],"tindex":"5e5fbb11-8298-11e5-a42d-bbc1f798cd05","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:674","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double)"},"status":0},{"failures":[15,16,17],"tindex":"5e5fbb12-8298-11e5-a42d-37abedec5601","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:144","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.InstructionList.(size()) - 1) ; int++) {\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = int > 0 ? com.graphhopper.util.InstructionList.get((int - 1)) : null;\n    boolean boolean = com.graphhopper.util.Instruction == null;\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((int + 1));\n    com.graphhopper.util.Instruction.checkOne();\n    long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean);\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27],"tindex":"5e5fe223-8298-11e5-a42d-3bccfdb94be0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:203","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,15,54,17,55,56,57,58,59,22,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,23,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,24,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,25,350,351,352,353,354,355,356,357,358,359,360,26,361,27,362,363],"tindex":"5e5fe224-8298-11e5-a42d-a113233852b9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:146","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[],"tindex":"5e600935-8298-11e5-a42d-851e17923861","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:193","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.RoutingAlgorithmFactorySimple().createAlgo(com.graphhopper.storage.Graph, com.graphhopper.routing.AlgorithmOptions)"},"variableMap":{"opts":"opts","qGraph":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:49","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-1},{"failures":[],"tindex":"5e603046-8298-11e5-a42d-49d889fc8b29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"5e603047-8298-11e5-a42d-61fd6b2cc230","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:586","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"key","nodeType":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:138","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getBoolean(int, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"5e603048-8298-11e5-a42d-77d7a4619b47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"length","size":"length","lonSize":"compressionLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:173","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.Deflater.setLevel(int);\n    java.util.zip.Deflater.setInput(byte[], int, int);\n    java.util.zip.Deflater.finish();\n    final byte[] byte[] = new byte[1024];\n    while (!(java.util.zip.Deflater.finished())) {\n        int int = java.util.zip.Deflater.deflate(byte[]);\n        java.io.ByteArrayOutputStream.write(byte[], 0, int);\n    }\n} finally {\n    java.util.zip.Deflater.end();\n}"},"status":-2},{"failures":[364,364,365,365,366,367,368,28,29,30,31,32,33,34,35,36,369,370,37,38,39,40,371,41,42,43,44,45,46,47,48,49,50,51,52,372,53,15,54,17,55,56,57,58,59,373,374,375,376,377,378,379,380,381,382,383,384,385,22,60,61,386,62,387,388,63,389,64,65,66,390,67,68,69,70,71,72,391,73,74,75,76,77,78,392,79,80,81,82,83,84,85,393,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,394,113,114,115,116,117,118,395,119,120,121,122,123,124,396,125,126,397,127,128,129,130,398,131,132,133,399,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,400,149,150,151,401,402,152,153,154,155,156,157,158,159,23,403,404,405,160,406,161,162,163,407,164,165,166,167,168,169,408,170,171,172,173,174,175,409,176,177,178,179,180,181,182,410,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,411,198,199,200,201,202,203,412,204,205,206,207,208,209,413,210,211,212,213,214,215,216,414,217,218,219,220,221,222,223,224,225,226,227,228,229,24,415,230,416,417,231,418,232,233,234,419,235,236,237,238,239,240,420,241,242,243,244,245,246,421,247,248,249,250,251,252,253,422,254,255,256,257,258,259,260,261,262,263,264,265,423,424,425,426,427,428,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,25,350,351,352,353,354,355,429,356,357,358,359,360,26,430,361,27,362,363,431],"tindex":"5e605759-8298-11e5-a42d-4ba67a720856","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"5e60cc8a-8298-11e5-a42d-83ea74dd038f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"status":0},{"failures":[],"tindex":"5e60cc8b-8298-11e5-a42d-6f2bc09d088b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:311","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        continue;\n    } \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":0},{"failures":[],"tindex":"5e60f39c-8298-11e5-a42d-8f9661f49aa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:621","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.trimTo(long)"},"status":0},{"failures":[],"tindex":"5e60f39d-8298-11e5-a42d-a1592901d77b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:129","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[28],"tindex":"5e60f39e-8298-11e5-a42d-0f7b721caf55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"variableMap":{"val":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:112","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLongitude(int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5e60cc8b-8298-11e5-a42d-6f2bc09d088b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.util.StopWatch.start","com.graphhopper.coll.GHTreeMapComposed.peekValue","com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority","com.graphhopper.coll.GHTreeMapComposed.insert"]},"branchesDiff":{"delete":["t0","t1"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.coll.GHTreeMapComposed_int_peekValue().b"]},"type":"branch"}]},{"transformation":"5e60f39c-8298-11e5-a42d-8f9661f49aa3","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":["com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":["com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e1"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":["com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.storage.MMapDataAccess_void_trimTo(long).b","com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.storage.MMapDataAccess_void_trimTo(long).e1","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).l1","com.graphhopper.storage.MMapDataAccess_void_trimTo(long).t3","com.graphhopper.storage.MMapDataAccess_void_clean(int,int).b","com.graphhopper.storage.MMapDataAccess_void_trimTo(long).e2"],"com.graphhopper.reader.OSMReaderTest.testOneWay":["com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":["com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.trimTo"]},"type":"staticDiff"}]}]}