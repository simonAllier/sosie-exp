{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":294,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":322,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":119,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.reader.OSMReaderTest.testFerry":336,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":217,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":218,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":319,"com.graphhopper.routing.QueryGraphTest.testOneWay":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":30,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":115,"com.graphhopper.reader.OSMReaderTest.testWithBounds":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":254,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":325,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":67,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":97,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":77,"com.graphhopper.GraphHopperTest.testPrepare":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":293,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":181,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":300,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":276,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":212,"com.graphhopper.util.InstructionListTest.testWayList":226,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":285,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":231,"com.graphhopper.GraphHopperAPITest.testDisconnected179":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":55,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":116,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":272,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":258,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":81,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":243,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":315,"com.graphhopper.GraphHopperTest.testLoadOSM":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":100,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":117,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":204,"com.graphhopper.reader.OSMReaderTest.testSort":339,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":257,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":26,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":209,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":298,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":327,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":350,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":177,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":263,"com.graphhopper.routing.PathTest.testWayList":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":114,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":283,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":146,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":148,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":111,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":46,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":290,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":353,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":271,"com.graphhopper.util.GHUtilityTest.testSort":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":121,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":175,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":184,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":332,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":40,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":326,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":138,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":139,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":151,"com.graphhopper.GraphHopperAPITest.testLoad":334,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":297,"com.graphhopper.util.TranslationMapTest.testToString":354,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":7,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":260,"com.graphhopper.reader.OSMReaderTest.testBarriers":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":71,"com.graphhopper.routing.PathTest.testFound":265,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":52,"com.graphhopper.util.GHUtilityTest.testCopy":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":281,"com.graphhopper.routing.PathTest.testFindInstruction":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":143,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":153,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":57,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":131,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":210,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":168,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":199,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":306,"com.graphhopper.reader.PrinctonReaderTest.testRead":351,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":53,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":311,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":34,"com.graphhopper.util.InstructionListTest.testWayList2":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":103,"com.graphhopper.reader.OSMReaderTest.testFoot":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":125,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":122,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":123,"com.graphhopper.reader.OSMReaderTest.testOneWay":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":24,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":16,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":152,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":64,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":189,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":341,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":303,"com.graphhopper.routing.PathBidirRefTest.testExtract":316,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":229,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":239,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":176,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":236,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":129,"com.graphhopper.util.GHUtilityTest.testSort2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":60,"com.graphhopper.reader.OSMReaderTest.testMain":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":41,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":4,"com.graphhopper.routing.PathBidirRefTest.testExtract2":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":112,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":95,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":164,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":118,"com.graphhopper.storage.GraphHopperStorageTest.testClone":185,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":75,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":33,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":194,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":201,"com.graphhopper.GraphHopperTest.testFootAndCar":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":54,"com.graphhopper.routing.PathTest.testTime":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":145,"com.graphhopper.util.GHUtilityTest.testSortDirected":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":134,"com.graphhopper.GraphHopperTest.testVia":241,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":286,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":5,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":324,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":228,"com.graphhopper.GraphHopperTest.testFootOnly":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":102,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":344,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":104,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":267,"com.graphhopper.util.InstructionListTest.testFind":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":136},"transformations":[{"failures":[],"tindex":"1ca47fff-8282-11e5-9357-e5908fea7b75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:123","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    int[][int] = java.io.RandomAccessFile.readInt();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"1ca4a710-8282-11e5-9357-9726ba5d107a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:113","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.pow(2, int)) / 360))"},"variableMap":{"allBits":"edgeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:296","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"1ca4ce21-8282-11e5-9357-838fbb1cf4fd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLon()"},"status":-2},{"failures":[],"tindex":"1ca4ce22-8282-11e5-9357-911add527a73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"1ca4ce23-8282-11e5-9357-55881bf4d47b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge2\")"},"variableMap":{"this":"edgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n    com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n"},"status":-2},{"failures":[96,98,105,106,113,115,122,123,241,242,243,244,245,246,248,249,293,334,338,339,340],"tindex":"1ca4ce24-8282-11e5-9357-296b7db47f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:626","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.reverse(long, com.graphhopper.geohash.SpatialKeyAlgo.getBits())"},"status":-1},{"failures":[9],"tindex":"1ca4ce25-8282-11e5-9357-5d096e690bc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"bufferStart","mask":"bufferStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:146","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.util.List<java.nio.ByteBuffer>.size()) * long"},"status":-2},{"failures":[],"tindex":"1ca4f536-8282-11e5-9357-db204ed4d1ae","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:608","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.AStarEdge.double"},"status":-2},{"failures":[233,240,241,242,243,244,245,246,353,248,249,250,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"tindex":"1ca4f537-8282-11e5-9357-a3d299c6996c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:630","type":"CtTryImpl","sourcecode":"try {\n    if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    try {\n        com.graphhopper.GraphHopper.importData();\n        com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n    } catch (java.io.IOException ex) {\n        throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n    }\n    com.graphhopper.GraphHopper.cleanUp();\n    com.graphhopper.GraphHopper.postProcessing();\n    com.graphhopper.GraphHopper.flush();\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-1},{"failures":[354],"tindex":"1ca4f538-8282-11e5-9357-81c1d6a5daff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":-1},{"failures":[],"tindex":"1ca4f539-8282-11e5-9357-2b5bb8be47b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"status":0},{"failures":[],"tindex":"1ca4f53a-8282-11e5-9357-d1ceb2d8be65","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"status":0},{"failures":[102,355,119,356,233,241,244,249,250,334,335,337,343],"tindex":"1ca4f53b-8282-11e5-9357-9feaec2155e3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"E_ADDITIONAL":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"status":-1},{"failures":[299],"tindex":"1ca51c4c-8282-11e5-9357-2d99d610dc62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:188","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.CHEdgeIteratorState)(java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int))).getWeight()"},"status":-1},{"failures":[],"tindex":"1ca51c4d-8282-11e5-9357-3950fb454b87","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"status":-2},{"failures":[],"tindex":"1ca51c4e-8282-11e5-9357-73e9c7db586b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-1},{"failures":[],"tindex":"1ca51c4f-8282-11e5-9357-edcd5cc8552a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"edgeFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:454","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n    com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n}"},"status":-2},{"failures":[89,90,91,92,357,93],"tindex":"1ca51c50-8282-11e5-9357-453887a7302e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:134","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = com.graphhopper.storage.index.Location2IDQuadtree.fillQuadtree(((int) * (int)))"},"status":-1},{"failures":[],"tindex":"1ca51c51-8282-11e5-9357-c50cb3904632","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:196","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"1ca51c52-8282-11e5-9357-6b7bdc97b9e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:724","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}