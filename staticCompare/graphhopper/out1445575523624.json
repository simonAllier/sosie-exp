{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":12,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":21,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":1,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":19,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":15,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":25,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":20,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":16,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":41,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":6},"transformations":[{"failures":[],"tindex":"df555f1f-7940-11e5-a120-a3bf739b12b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:157","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"reduceToSegment":"penalizeEdge","factor":"heading_penalty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:74","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += double;\n"},"status":-2},{"failures":[],"tindex":"df555f20-7940-11e5-a120-bb9b20ede8bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:184","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n    if (java.lang.String != null) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n        long long = 0;\n        switch (java.lang.String.charAt(0)) {\n            case 'n' :\n                if (\"node\".equals(java.lang.String)) {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                } \n                break;\n            case 'w' :\n                {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                }\n            case 'r' :\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    } \n} "},"variableMap":{"javax.xml.stream.XMLStreamConstants.START_ELEMENT":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT","parser":"parser","event":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:182","type":"CtWhileImpl","sourcecode":"while (int != (javax.xml.stream.XMLStreamConstants.int)) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n        if (java.lang.String != null) {\n            java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n            long long = 0;\n            switch (java.lang.String.charAt(0)) {\n                case 'n' :\n                    if (\"node\".equals(java.lang.String)) {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                    } \n                    break;\n                case 'w' :\n                    {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                    }\n                case 'r' :\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        } \n    } \n    int = javax.xml.stream.XMLStreamReader.next();\n}"},"status":-2},{"failures":[0],"tindex":"df558631-7940-11e5-a120-15fe22127bf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:285","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField()) {\n    for (long long = long + (int) ; long < long ; long += int) {\n        com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n    }\n} "},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"df558632-7940-11e5-a120-a99e0ae2f004","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"removeNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:662","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.SparseIntIntArray.put(int, int)"},"status":-1},{"failures":[],"tindex":"df558633-7940-11e5-a120-b557d9057b21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"value","clockwise":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-2},{"failures":[],"tindex":"df558634-7940-11e5-a120-2bb2675fba6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:226","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"df55ad45-7940-11e5-a120-ffbd97a4fa2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:138","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"variableMap":{"keys":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:80","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) / 4"},"status":-2},{"failures":[],"tindex":"df55ad46-7940-11e5-a120-5f8de98d03f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"variableMap":{"elem":"oldPriorities","size":"maxLevel","keys":"oldPriorities","i":"len","key":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n}"},"status":-2},{"failures":[],"tindex":"df55ad47-7940-11e5-a120-e12e66700899","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:261","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"df55ad48-7940-11e5-a120-03e4c7e5dd11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:641","type":"CtAssignmentImpl","sourcecode":"double = (((double) * 2) + long) / 3"},"status":-2},{"failures":[],"tindex":"df55ad49-7940-11e5-a120-8b3eedf1f1dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:62","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"df55ad4a-7940-11e5-a120-89dd580263a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:586","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"iteration","nodeType":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:739","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1) {\n    if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n        double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n        double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n        if (double < double)\n            return true;\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"df55d45b-7940-11e5-a120-fba4d95714b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:884","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-2},{"failures":[],"tindex":"df55d45c-7940-11e5-a120-0d38f78ba6e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"toNode","tmpSize":"toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":-2},{"failures":[],"tindex":"df55d45d-7940-11e5-a120-a95d5676848f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:156","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-2},{"failures":[],"tindex":"df55d45e-7940-11e5-a120-a3e92b2d5fe2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"cap","S_SKIP_EDGE2":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-2},{"failures":[],"tindex":"df55d45f-7940-11e5-a120-ab97ad6be9f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"variableMap":{"adjNodesToDelIter":"incomingEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:584","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"df55fb70-7940-11e5-a120-3f63bd59e84a","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:212","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"df55fb71-7940-11e5-a120-75cc14db628c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:750","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-2},{"failures":[],"tindex":"df55fb72-7940-11e5-a120-9ddd8fdaf02f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}