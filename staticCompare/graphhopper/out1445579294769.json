{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":60,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":22,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":50,"com.graphhopper.reader.OSMReaderTest.testMain":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":56,"com.graphhopper.routing.PathTest.testFindInstruction":24,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":17,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":47,"com.graphhopper.routing.QueryGraphTest.testOneWay":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":32,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":25,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":55,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":12,"com.graphhopper.GraphHopperTest.testPrepare":38,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":49,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":51,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":13,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":29,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":26,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":30,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":28,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":27,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":70,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":33,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":18,"com.graphhopper.GraphHopperTest.testFootOnly":43,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":37,"com.graphhopper.util.InstructionListTest.testFind":8,"com.graphhopper.reader.OSMReaderTest.testBarriers":46,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.reader.OSMReaderTest.testSort":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":31},"transformations":[{"failures":[],"tindex":"a71ce43a-7949-11e5-9695-333c9540783d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:114","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"a71d0b4b-7949-11e5-9695-f50c85c2e5db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:135","type":"CtIfImpl","sourcecode":"if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"a71d0b4c-7949-11e5-9695-f95e07faf45f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:141","type":"CtIfImpl","sourcecode":"if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"a71d325d-7949-11e5-9695-db1aef3072b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"ab_y","incDist2DSum":"rb_y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-1},{"failures":[0,1,2,3,4,37,5,38,39,6,40,41,42,43,44,45,46,47,48,49,50,51,10,11,12,13,52,25,53,54,55,56,29,57,58,59,30,31,60,61,62,63,64,32,65,66,67,68,34,69,70,71,35,36,72],"tindex":"a71d325e-7949-11e5-9695-eb6f1c95dcb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"variableMap":{"dist":"fromLon","com.graphhopper.util.DistanceCalcEarth.R":"fromLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:65","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-1},{"failures":[],"tindex":"a71d325f-7949-11e5-9695-b7acf9f68c97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], 8)"},"status":-2},{"failures":[],"tindex":"a71d3260-7949-11e5-9695-d5de77a31939","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"node","guess":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:103","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":0},{"failures":[],"tindex":"a71d3261-7949-11e5-9695-df683b3cb60a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:179","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"variableMap":{"len":"i","i":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"status":-2},{"failures":[],"tindex":"a71d5972-7949-11e5-9695-3fa11e90f0a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:72","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.Instruction.getPoints().size()"},"status":-2},{"failures":[],"tindex":"a71d5973-7949-11e5-9695-33a6ba7a32a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-2},{"failures":[],"tindex":"a71d5974-7949-11e5-9695-c35c4bfd9b4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"status":-2},{"failures":[],"tindex":"a71d5975-7949-11e5-9695-65ad50317d3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:305","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage.getDirectory()) instanceof com.graphhopper.storage.MMapDirectory) {\n    throw new java.lang.IllegalStateException(\"not supported yet: mmap will overwrite existing storage at the same location\");\n} else {\n    boolean boolean = ((com.graphhopper.storage.GHDirectory)(com.graphhopper.storage.GraphStorage.getDirectory())).isStoring();\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n}"},"status":-2},{"failures":[],"tindex":"a71d5976-7949-11e5-9695-3da338114130","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"a71d5977-7949-11e5-9695-1de6b27a811c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:115","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"a71d5978-7949-11e5-9695-ef6bf153c607","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"a71d8089-7949-11e5-9695-25f952f360c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:145","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        continue;\n    } \n    int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n    if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    } else {\n        java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n        java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n        try {\n            java.lang.String.format(java.lang.String, java.lang.Object[]);\n        } catch (java.lang.Exception ex) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"a71d808a-7949-11e5-9695-e363b12ec88d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:295","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:230","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString().replaceAll(\"\\\\\\'\", \"\\\"\")"},"status":-2},{"failures":[],"tindex":"a71d808b-7949-11e5-9695-e9650b460d01","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"a71d808c-7949-11e5-9695-c35fbfc41b57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:482","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setAdditionalField(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getAdditionalField())"},"variableMap":{"from":"from","to":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"status":-2},{"failures":[],"tindex":"a71d808d-7949-11e5-9695-7716a7297a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}