{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":34,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":21,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":57,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":18,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":52,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":48,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":50,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":51,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":19,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":37,"com.graphhopper.util.InstructionListTest.testWayList":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":39,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":62,"com.graphhopper.GraphHopperTest.testPrepareOnly":56,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":23,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":44,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":7,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":36,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":40},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"8d610f4f-7924-11e5-a0b9-89a1cc06fc56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"baseNode","tmpErr":"baseNode","y1":"baseNode","dLon":"baseNode","sLat":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:912","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65],"tindex":"8d615d70-7924-11e5-a0b9-0fa32cec655f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:50","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-1},{"failures":[],"tindex":"8d615d71-7924-11e5-a0b9-bfc975ce528d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"stepX","edgeId":"stepX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:71","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double += double;\n    int += int;\n} else {\n    double += double;\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"8d615d72-7924-11e5-a0b9-b1a7947ecc0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"8d615d73-7924-11e5-a0b9-093344ef0c71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"status":-2},{"failures":[],"tindex":"8d618484-7924-11e5-a0b9-939839b131f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:177","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap.merge(com.graphhopper.util.PMap.getMap())"},"variableMap":{"read":"hintsMap","this":"hintsMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:223","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap"},"status":-2},{"failures":[],"tindex":"8d618485-7924-11e5-a0b9-51bf8fa841b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:74","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8d618486-7924-11e5-a0b9-e1ae8e65f6ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:90","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"status":-2},{"failures":[],"tindex":"8d618487-7924-11e5-a0b9-85e35b49593d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:152","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"8d618488-7924-11e5-a0b9-4f827fbc3224","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"edgePointer","backwardBit":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:689","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.BaseGraph.EdgeIterable.long"},"status":-2},{"failures":[],"tindex":"8d61ab99-7924-11e5-a0b9-45b83d7543f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:242","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"variableMap":{"ab_rb":"d2","ab_ar":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"8d61ab9a-7924-11e5-a0b9-eb9eabbb4cd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"edgeId","len":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"status":-2},{"failures":[],"tindex":"8d61ab9b-7924-11e5-a0b9-a5c2f013e966","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:406","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0) {\n        if (boolean)\n            double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n        else\n            double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n        \n    } \n    double = double[][int];\n    double = double[][int];\n    if (boolean)\n        double = double[][int];\n    \n}"},"status":-2},{"failures":[],"tindex":"8d61ab9c-7924-11e5-a0b9-b1cc26d22bd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, (long - (com.graphhopper.storage.AbstractDataAccess.int)), false)"},"status":-2},{"failures":[],"tindex":"8d61d2ad-7924-11e5-a0b9-d9d91201870f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:47","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"8d61d2ae-7924-11e5-a0b9-298b7b38dcc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"java.lang.Double.MAX_VALUE","toHeight":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:762","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"8d61d2af-7924-11e5-a0b9-353c98ec3841","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"variableMap":{"indexCopy":"shortcuts","index":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:678","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"8d61d2b0-7924-11e5-a0b9-c928c7b07c1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return super.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"8d61d2b1-7924-11e5-a0b9-15baf8d0bf5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:120","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"8d61f9c2-7924-11e5-a0b9-431604cb7064","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"prevLat","angleXY":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:410","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\nelse\n    double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}