{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":13,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":20},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"9de81ef8-7914-11e5-8497-69bff1c3a2b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"9de84609-7914-11e5-8497-c924cb7f14c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:316","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[],"tindex":"9de8460a-7914-11e5-8497-d1586ca244f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:133","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"9de8460b-7914-11e5-8497-cfd7608e3aac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:344","type":"CtIfImpl","sourcecode":"if (((double[].int) % 3) != 0)\n    throw new java.lang.IllegalArgumentException(\"list should consist of lat,lon,ele tuples!\");\n"},"variableMap":{"length":"i","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)])"},"status":-2},{"failures":[],"tindex":"9de8460c-7914-11e5-8497-497245253321","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return \"destination: \" + java.lang.String"},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:157","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"9de86d1d-7914-11e5-8497-0f1d7beb7a90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"deltaLon","prevOrientation":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:721","type":"CtLocalVariableImpl","sourcecode":"double double = double - (int * (double))"},"status":-2},{"failures":[],"tindex":"9de86d1e-7914-11e5-8497-dbe3d59abda4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"acceptBit","start":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:237","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9de86d1f-7914-11e5-8497-3919b114295b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"hash":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"status":-2},{"failures":[],"tindex":"9de86d20-7914-11e5-8497-eb7e5210da8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:184","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"9de86d21-7914-11e5-8497-117f8bb18b64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"variableMap":{"track":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:278","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(double[][int])"},"status":-2},{"failures":[],"tindex":"9de89432-7914-11e5-8497-090303c060ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:607","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"variableMap":{"wayType":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.OTHER_SMALL_WAY","com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.ROAD":"wayType","highway":"highway","roadValues":"roadValues"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:599","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"9de89433-7914-11e5-8497-35ef02ee430d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-2},{"failures":[],"tindex":"9de89434-7914-11e5-8497-f1563faf30e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"counter","speed":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"9de8bb45-7914-11e5-8497-674142f1e508","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"capacity","nextEdgeOther":"capacity","nodeOther":"capacity","nextEdge":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:209","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntDoubleBinHeap.double))))"},"status":-2},{"failures":[],"tindex":"9de8bb46-7914-11e5-8497-9ba6ed03069e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:828","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"9de8bb47-7914-11e5-8497-e9d0b5e1ebda","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"WIDTH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:249","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    byte[] byte[] = new byte[(2 * (int)) * (int)];\n    com.graphhopper.storage.DataAccess.create(byte[].int);\n    try {\n        java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n        java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n        java.io.InputStream java.io.InputStream;\n        if (!(java.io.File.exists())) {\n            for (int int = 0 ; int < 3 ; int++) {\n                try {\n                    com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                    break;\n                } catch (java.net.SocketTimeoutException ex) {\n                    java.lang.Thread.sleep(2000);\n                    continue;\n                } catch (java.io.FileNotFoundException ex) {\n                    java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                    continue;\n                }\n            }\n        } \n        java.io.InputStream = new java.io.FileInputStream(java.io.File);\n        java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n        java.util.zip.ZipInputStream.getNextEntry();\n        java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n        int int;\n        while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n            for (int int = 0 ; int < int ; int += 2) {\n                short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                if ((short < (-1000)) || (short > 12000))\n                    short = java.lang.Short.short;\n                \n                com.graphhopper.storage.DataAccess.setShort(int, short);\n            }\n        }\n        com.graphhopper.storage.DataAccess.flush();\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"status":-2},{"failures":[],"tindex":"9de8e258-7914-11e5-8497-57f937e0a20a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:124","type":"CtAssignmentImpl","sourcecode":"double[][int] = java.lang.Double.double"},"variableMap":{"java.lang.Double.MAX_VALUE":"prevLon","weights":"longitudes","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:417","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-2},{"failures":[],"tindex":"9de8e259-7914-11e5-8497-db567350ba16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"variableMap":{"high":"len","highKey":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:415","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((long[][int]) == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"9de8e25a-7914-11e5-8497-5109a8d624aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:170","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"9de8e25b-7914-11e5-8497-73874348ad18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"super.setSegmentSize(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}