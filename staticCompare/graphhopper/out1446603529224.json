{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":8,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":220,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":191,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":276,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":107,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":125,"com.graphhopper.reader.OSMReaderTest.testFerry":241,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":166,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":317,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":304,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":314,"com.graphhopper.reader.OSMReaderTest.testWithBounds":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":175,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":255,"com.graphhopper.coll.CompressedArrayTest.testCompress":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":197,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":138,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":90,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":204,"com.graphhopper.GraphHopperTest.testPrepare":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":219,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":61,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":282,"com.graphhopper.util.InstructionListTest.testWayList":159,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":214,"com.graphhopper.GraphHopperAPITest.testDisconnected179":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":245,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":104,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":326,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":179,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":20,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":41,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":290,"com.graphhopper.GraphHopperTest.testLoadOSM":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":141,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":105,"com.graphhopper.reader.OSMReaderTest.testSort":293,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":178,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":87,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":147,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":244,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":25,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":224,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":167,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":227,"com.graphhopper.routing.PathTest.testWayList":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":225,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":281,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":102,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":84,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":279,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":29,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":100,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":261,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":235,"com.graphhopper.util.GHUtilityTest.testSort":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":210,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":98,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":320,"com.graphhopper.coll.IntIntBinHeapTest.testSize":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":46,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":192,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":122,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":131,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":97,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":188,"com.graphhopper.coll.CompressedArrayTest.testCompress2":321,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":24,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":311,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":238,"com.graphhopper.GraphHopperAPITest.testLoad":154,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":250,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":327,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":223,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":174,"com.graphhopper.reader.OSMReaderTest.testBarriers":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":88,"com.graphhopper.routing.PathTest.testFound":229,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":256,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":2,"com.graphhopper.util.GHUtilityTest.testCopy":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":275,"com.graphhopper.routing.PathTest.testFindInstruction":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":280,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":237,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":213,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":124,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":69,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":43,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":62,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":199,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":75,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":50,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":271,"com.graphhopper.util.InstructionListTest.testWayList2":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":144,"com.graphhopper.reader.OSMReaderTest.testFoot":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":113,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":110,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":319,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":71,"com.graphhopper.coll.IntIntBinHeapTest.test0":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":111,"com.graphhopper.reader.OSMReaderTest.testOneWay":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":45,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":249,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":81,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":66,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":202,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":295,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":196,"com.graphhopper.routing.PathBidirRefTest.testExtract":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":170,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":272,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":117,"com.graphhopper.util.GHUtilityTest.testSort2":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":6,"com.graphhopper.reader.OSMReaderTest.testMain":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":263,"com.graphhopper.routing.util.EncodedDoubleValueTest.testUnsignedRightShift_issue417":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":153,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":65,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":136,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":259,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":201,"com.graphhopper.storage.GraphHopperStorageTest.testClone":52,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":106,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":92,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":266,"com.graphhopper.GraphHopperTest.testFootAndCar":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":3,"com.graphhopper.routing.PathTest.testTime":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":83,"com.graphhopper.GraphHopperTest.testPrepareOnly":287,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":127,"com.graphhopper.GraphHopperTest.testVia":305,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":283,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":137,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":186,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":161,"com.graphhopper.GraphHopperTest.testFootOnly":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":143,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":298,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":231,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":240,"com.graphhopper.util.InstructionListTest.testFind":157,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":116},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"626be205-829a-11e5-913a-05b4a0ca94a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:182","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"closed":"backward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:316","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[237,238,239,240,161,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,207,281,282,214,283,284,285,225,230,233],"tindex":"626c3026-829a-11e5-913a-21f9b570a767","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"factor","dY":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:78","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[286,287,288,289,290,252,291,254,256],"tindex":"626c3027-829a-11e5-913a-152abcab35f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:495","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"variableMap":{"edgePointer":"encoded","edgeId":"priorityFromRelation","shortcutEntryBytes":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:316","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[241,286,292,293,294,295,296,297,298,299,300,301,242,302,303,287,304,305,306,307,288,308,309,310,311,289,312],"tindex":"626c3028-829a-11e5-913a-4d2ea2af289f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"nodeType","newSize":"com.graphhopper.reader.OSMReader.PILLAR_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:592","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double);\n} else if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-1},{"failures":[313],"tindex":"626c5739-829a-11e5-913a-8f9255428257","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:228","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], (int + 1))"},"status":-1},{"failures":[],"tindex":"626c573a-829a-11e5-913a-391bad481d00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:144","type":"CtReturnImpl","sourcecode":"return (((((((com.graphhopper.storage.StorableProperties.(get(\"nodes.version\")) + \",\") + com.graphhopper.storage.StorableProperties.(get(\"edges.version\"))) + \",\") + com.graphhopper.storage.StorableProperties.(get(\"geometry.version\"))) + \",\") + com.graphhopper.storage.StorableProperties.(get(\"locationIndex.version\"))) + \",\") + com.graphhopper.storage.StorableProperties.(get(\"nameIndex.version\"))"},"status":0},{"failures":[],"tindex":"626c573b-829a-11e5-913a-99ed086ba65c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"626c573c-829a-11e5-913a-a9360470dc61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:524","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":0},{"failures":[],"tindex":"626c573d-829a-11e5-913a-a54e96ed7477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"status":0},{"failures":[305,306,308,309,289],"tindex":"626c7e4e-829a-11e5-913a-878bb3806161","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:648","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.cleanUp()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"status":-1},{"failures":[],"tindex":"626c7e4f-829a-11e5-913a-69775f3a689c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nodeId":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:328","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean) {\n        long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    } \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[297],"tindex":"626c7e50-829a-11e5-913a-f52bf472e4da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:431","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[314,315,316,317,318,319,320,321,322],"tindex":"626c7e51-829a-11e5-913a-ddd2c643da18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"626ca562-829a-11e5-913a-9b9daf601006","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"nodeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:241","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[323,324,313,325,326],"tindex":"626ca563-829a-11e5-913a-3bebf93f04ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"626ca564-829a-11e5-913a-3fd053781609","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, false, int, int)"},"status":0},{"failures":[],"tindex":"626ca565-829a-11e5-913a-e76f7536f25e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 1)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"pillarNodes","com.graphhopper.util.PointList.EMPTY":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:920","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[180],"tindex":"626ccc76-829a-11e5-913a-5f00ae7ed7fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[327],"tindex":"626ccc77-829a-11e5-913a-8b8b3198773a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"value","indexDivisor":"daPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"626c573d-829a-11e5-913a-a54e96ed7477","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"626c573a-829a-11e5-913a-391bad481d00","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.StorableProperties.get"]},"type":"staticDiff"}]},{"transformation":"626c573c-829a-11e5-913a-a9360470dc61","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.setGraphHopperLocation"]},"type":"staticDiff"}]},{"transformation":"626ca564-829a-11e5-913a-3fd053781609","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e8"],"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t8","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t8","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e8"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t8","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e8"],"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t8","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6"]},"type":"branch"}]}]}