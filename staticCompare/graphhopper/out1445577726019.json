{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":5,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":10,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":15,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":16,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":18,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":7,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":14,"com.graphhopper.routing.QueryGraphTest.testOneWay":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":2,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":6,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":30,"com.graphhopper.util.HelperTest.testUnzip":0,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":12,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":9,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":31,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":11,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":26,"com.graphhopper.GraphHopperTest.testLoadOSM":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":22,"com.graphhopper.GraphHopperTest.testPrepare":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":21,"com.graphhopper.GraphHopperTest.testFootAndCar":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":20},"transformations":[{"failures":[0],"tindex":"00102e75-7946-11e5-ab9b-a15e2269b0a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:58","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    byte[] byte[] = new byte[8 * 1024];\n    while (java.util.zip.ZipEntry != null) {\n        if (java.util.zip.ZipEntry.isDirectory()) {\n            new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n        } else {\n            double double = 1;\n            if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n                double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n            \n            java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n            java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n            try {\n                int int;\n                while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                    java.io.FileOutputStream.write(byte[], 0, int);\n                    long += int * double;\n                    if (com.graphhopper.util.ProgressListener != null)\n                        com.graphhopper.util.ProgressListener.update(long);\n                    \n                }\n            } finally {\n                java.io.FileOutputStream.close();\n            }\n        }\n        java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    }\n    java.util.zip.ZipInputStream.closeEntry();\n} finally {\n    java.util.zip.ZipInputStream.close();\n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"00105586-7946-11e5-ab9b-0342330386a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:292","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"variableMap":{"edgeId":"current","mainEdges":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:58","type":"CtReturnImpl","sourcecode":"return (int) < (java.util.List<com.graphhopper.util.EdgeIteratorState>.size())"},"status":-1},{"failures":[],"tindex":"00105587-7946-11e5-ab9b-33aa3d20a28b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:162","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.RandomAccessFile.read(byte[])"},"status":-2},{"failures":[],"tindex":"00107c98-7946-11e5-ab9b-6b09ae17f106","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:131","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicInteger.set(int)"},"variableMap":{"tmpCounter":"daPointer","maxEdgesPerNode":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:107","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n} "},"status":-2},{"failures":[],"tindex":"00107c99-7946-11e5-ab9b-1f9d84a62882","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"address","pointer":"oldCap","maxCapacity":"oldCap","baseCapacity":"oldCap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"00107c9a-7946-11e5-ab9b-2d1a24a4a882","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:68","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-2},{"failures":[],"tindex":"00107c9b-7946-11e5-ab9b-5b9338104e89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:180","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"00107c9c-7946-11e5-ab9b-8342d30d30c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"status":-2},{"failures":[],"tindex":"00107c9d-7946-11e5-ab9b-034d4e0eeab3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:204","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"variableMap":{"usedBits":"encoderCount","encoderCount":"encoderCount","nextTurnBit":"usedBits","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-2},{"failures":[],"tindex":"0010a3ae-7946-11e5-ab9b-c70fda3c7d34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"0010a3af-7946-11e5-ab9b-e35dc38a6e1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"doPrepare"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:314","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"0010a3b0-7946-11e5-ab9b-6f305e99c4ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"variableMap":{"this":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":-2},{"failures":[],"tindex":"0010a3b1-7946-11e5-ab9b-737a559c218f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[],"tindex":"0010a3b2-7946-11e5-ab9b-f78399e0805c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:102","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.Integer> java.util.Set<java.lang.Integer> = new java.util.HashSet<java.lang.Integer>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:113","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.Integer> java.util.Set<java.lang.Integer> = new java.util.LinkedHashSet<java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"0010a3b3-7946-11e5-ab9b-358d69fd24d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:555","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"yes\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"0010c9c4-7946-11e5-ab9b-db80e9afa1d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:657","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:77","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null"},"status":-2},{"failures":[],"tindex":"0010c9c5-7946-11e5-ab9b-7fd99819496d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:131","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.TurnCostExtension.ensureTurnCostIndex(int)"},"status":-2},{"failures":[],"tindex":"0010c9c6-7946-11e5-ab9b-e91d507ad034","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:292","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2},{"failures":[],"tindex":"0010c9c7-7946-11e5-ab9b-81405b041e78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:310","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHTreeMapComposed.pollKey()"},"status":-2},{"failures":[],"tindex":"0010c9c8-7946-11e5-ab9b-dd0bd8f0041d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"size","tmpSize":"com.graphhopper.reader.OSMRelation.Member.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:616","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member = com.graphhopper.reader.OSMRelation.getMembers().get(int);\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) != (com.graphhopper.reader.OSMRelation.Member.int))\n        continue;\n    \n    long long = com.graphhopper.reader.OSMRelation.Member.ref();\n    long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long);\n    long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n    if (long != long)\n        com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n    \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}