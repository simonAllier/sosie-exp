{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":89,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":54,"com.graphhopper.reader.OSMReaderTest.testFerry":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":78,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":110,"com.graphhopper.reader.OSMReaderTest.testWithBounds":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":106,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":103,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":84,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":49,"com.graphhopper.reader.OSMReaderTest.testFoot":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":72,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":82,"com.graphhopper.util.PointListTest.testAddPL":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":104,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":15,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":63,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":53,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":75,"com.graphhopper.reader.OSMReaderTest.testSort":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":21,"com.graphhopper.reader.OSMReaderTest.testMain":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":65,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":41,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":17,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":95,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":68,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":71,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":91,"com.graphhopper.reader.OSMReaderTest.testRelation":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.GraphHopperTest.testPrepareOnly":27,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":59,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":5,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":114,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":14,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":99,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":30,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":38,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":85},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"eb1ddf1e-793c-11e5-9c65-97f27dea492a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"status":-1},{"failures":[],"tindex":"eb1e2d3f-793c-11e5-9c65-5de789324264","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:149","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"RAM\";\nelse\n    java.lang.String = \"UNSAFE\";\n"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,1,2,3,4,5,6,29,7,8,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"eb1e2d40-793c-11e5-9c65-1df45216ee90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:217","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Object>.toString()"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[70],"tindex":"eb1e5451-793c-11e5-9c65-31ac3bd9e76f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:219","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"eb1e5452-793c-11e5-9c65-d32809b92d75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:237","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"eb1e5453-793c-11e5-9c65-5f3ccccf3fe3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"fromOsmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:63","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"eb1e5454-793c-11e5-9c65-3b6e03601b93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"maxBits","green":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:252","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long >>>= 1) {\n    long <<= 1;\n    long |= long & 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"eb1e5455-793c-11e5-9c65-a154f3ef9dfb","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:542","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"))"},"status":-2},{"failures":[],"tindex":"eb1e7b66-793c-11e5-9c65-8d6baddd9964","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:300","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"variableMap":{"str":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:228","type":"CtIfImpl","sourcecode":"if ((long & long) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":-2},{"failures":[],"tindex":"eb1e7b67-793c-11e5-9c65-f595c560b23c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:520","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.findShortcuts(com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler.setNode(int))"},"status":-2},{"failures":[],"tindex":"eb1e7b68-793c-11e5-9c65-6ff645ad40dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:636","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph"},"variableMap":{"baseGraph":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:573","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.copyTo(this, com.graphhopper.storage.Graph)"},"status":-2},{"failures":[],"tindex":"eb1e7b69-793c-11e5-9c65-7b7771f0acc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:212","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-2},{"failures":[],"tindex":"eb1ea27a-793c-11e5-9c65-8b01a5877309","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:68","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"eb1ea27b-793c-11e5-9c65-833786752587","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:47","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"eb1ea27c-793c-11e5-9c65-677fdaa2e284","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"lastTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":-2},{"failures":[],"tindex":"eb1ea27d-793c-11e5-9c65-2d5a4b4ce37f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"eb1ea27e-793c-11e5-9c65-51f3ef148886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:102","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:455","type":"CtReturnImpl","sourcecode":"return java.text.NumberFormat.getInstance(java.util.Locale.java.util.Locale).format(long)"},"status":-2},{"failures":[],"tindex":"eb1ec98f-793c-11e5-9c65-89019594ecd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"adjNode","edge2":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int)"},"status":-2},{"failures":[],"tindex":"eb1ec990-793c-11e5-9c65-19061661e61d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:757","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"variableMap":{"pointList":"basePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:350","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.calcDistance(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection)"},"status":-2},{"failures":[],"tindex":"eb1ec991-793c-11e5-9c65-45e37b60ce2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:259","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}