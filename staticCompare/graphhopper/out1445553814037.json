{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"5368fb36-790e-11e5-a937-6709c29b62ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:95","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"53692247-790e-11e5-a937-5b793ce56978","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"com.graphhopper.reader.OSMElement.NODE","nodeId":"workerThreads"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:280","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    com.graphhopper.coll.LongIntMap com.graphhopper.coll.LongIntMap = com.graphhopper.reader.OSMReader.getNodeMap();\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        switch (com.graphhopper.reader.OSMElement.getType()) {\n            case com.graphhopper.reader.OSMElement.int :\n                if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                    com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n                } \n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n                break;\n        }\n        if (((++long) % 100000000) == 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((((\"Couldn\\'t process file \" + java.io.File) + \", error: \") + (java.lang.Exception.getMessage())) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[],"tindex":"53692248-790e-11e5-a937-c3016e7bbcaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","nodeCount":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:184","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"53692249-790e-11e5-a937-a5536e11a61b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"nextTowerId","entityType":"nextTowerId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:658","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"5369224a-790e-11e5-a937-e95dde34acc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:187","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"5369495b-790e-11e5-a937-bf424b3eb18a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:247","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())))"},"status":-2},{"failures":[],"tindex":"5369495c-790e-11e5-a937-ef1ff4f8d195","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:564","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMReader.isInBounds(com.graphhopper.reader.OSMNode)) {\n    com.graphhopper.reader.OSMReader.addNode(com.graphhopper.reader.OSMNode);\n    if (com.graphhopper.reader.OSMNode.hasTags()) {\n        long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n        if (long != 0)\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n        \n    } \n    (long)++;\n} else {\n    (long)++;\n}"},"status":-2},{"failures":[],"tindex":"5369495d-790e-11e5-a937-ef942bba439c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"status":-2},{"failures":[],"tindex":"5369495e-790e-11e5-a937-17a4ea8afd03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:58","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n    com.graphhopper.reader.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"5369495f-790e-11e5-a937-77e65f8bf1c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:750","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initCHAlgoFactories()"},"status":-2},{"failures":[],"tindex":"53694960-790e-11e5-a937-5964938fab04","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:773","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"53694961-790e-11e5-a937-63204642fa1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:44","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n        com.graphhopper.util.SimpleIntDeque.push(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"53697072-790e-11e5-a937-c98b6bed60c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"53697073-790e-11e5-a937-f3e12e6c1b43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\")"},"status":-2},{"failures":[],"tindex":"53697074-790e-11e5-a937-9b016bf0d686","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"53697075-790e-11e5-a937-576b38d205a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"segmentSizeInBytes","green":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[] byte[] = new byte[int];\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    byte[][][int] = byte[];\n}"},"status":-2},{"failures":[],"tindex":"53697076-790e-11e5-a937-b36bf0958bb4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:174","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.max(long, 100)"},"status":-2},{"failures":[],"tindex":"53697077-790e-11e5-a937-91dfd8585732","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"deltaLat","com.graphhopper.util.DistanceCalcEarth.C":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:720","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[],"tindex":"53699788-790e-11e5-a937-2133a221cd83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:113","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return this;\n"},"status":-2},{"failures":[],"tindex":"53699789-790e-11e5-a937-9de290e7d0b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:65","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}