{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":89,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":97,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":158,"com.graphhopper.storage.MMapDataAccessTest.testSegments":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":54,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":44,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":38,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":13,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":63,"com.graphhopper.GraphHopperTest.testPrepare":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":92,"com.graphhopper.util.InstructionListTest.testWayList2":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":103,"com.graphhopper.util.InstructionListTest.testWayList":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":104,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":156,"com.graphhopper.GraphHopperAPITest.testDisconnected179":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":40,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":149,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":129,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":67,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":10,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":145,"com.graphhopper.GraphHopperTest.testLoadOSM":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":75,"com.graphhopper.reader.OSMReaderTest.testSort":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":110,"com.graphhopper.util.GHUtilityTest.testSort2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":45,"com.graphhopper.reader.OSMReaderTest.testMain":86,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":65,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":30,"com.graphhopper.storage.MMapDataAccessTest.testHeader":12,"com.graphhopper.storage.MMapDataAccessTest.testCopy":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":24,"com.graphhopper.routing.PathTest.testWayList":130,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":66,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":161,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":126,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":91,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":72,"com.graphhopper.GraphHopperTest.testFootAndCar":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":131,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":7,"com.graphhopper.util.GHUtilityTest.testSort":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":26,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":51,"com.graphhopper.util.GHUtilityTest.testSortDirected":140,"com.graphhopper.storage.StorablePropertiesTest.testLoad":141,"com.graphhopper.GraphHopperTest.testVia":78,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":123,"com.graphhopper.GraphHopperAPITest.testLoad":85,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":113,"com.graphhopper.GraphHopperTest.testFootOnly":94,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":118,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":128,"com.graphhopper.reader.OSMReaderTest.testBarriers":88,"com.graphhopper.util.InstructionListTest.testFind":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":37,"com.graphhopper.util.GHUtilityTest.testCopy":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":109},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"11c602ac-8297-11e5-8ec0-4f9ac8c43f33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"cap","key":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:381","type":"CtForEachImpl","sourcecode":"for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n    long += java.nio.ByteBuffer.capacity();\n}"},"status":-1},{"failures":[],"tindex":"11c650cd-8297-11e5-8ec0-bb1b24deb063","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:159","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":0},{"failures":[],"tindex":"11c650ce-8297-11e5-8ec0-f59b10ffb52a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:271","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"11c650cf-8297-11e5-8ec0-cd0e54c3d2dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:209","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, null)"},"status":-2},{"failures":[72,73,74,75,76,77],"tindex":"11c677e0-8297-11e5-8ec0-1584ed6b0287","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"time","x":"heading_penalty","absY":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:75","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"11c677e1-8297-11e5-8ec0-fdd8ca265595","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:836","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"maxTurnCosts":"closestNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"status":-2},{"failures":[],"tindex":"11c677e2-8297-11e5-8ec0-6f007c68bffc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"variableMap":{"name":"graphHopperFolder","location":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:723","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"))"},"status":0},{"failures":[],"tindex":"11c677e3-8297-11e5-8ec0-81931dd35641","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:755","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"11c69ef4-8297-11e5-8ec0-d1088397639f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"tmpNode","hash":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:703","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"11c69ef5-8297-11e5-8ec0-c9fd6a80e04c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"sourceNode","bLen":"sourceNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:24","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":0},{"failures":[78,79,80,81,82,83,84,85],"tindex":"11c69ef6-8297-11e5-8ec0-9f5f358f98d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints())"},"status":-1},{"failures":[86,87,88,89,90,91,92,73,74,75,76,77,93,78,79,80,81,82,83,84,94,85,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"11c69ef7-8297-11e5-8ec0-a5259fa4f457","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"iteration","nodeThis":"iteration","edgeId":"iteration","nodeOther":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    \n}"},"status":-1},{"failures":[],"tindex":"11c6c608-8297-11e5-8ec0-d5087b70e878","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.MAX_VALUE","clockwise":"integEle","java.lang.Math.PI":"java.lang.Double.MAX_VALUE","radian":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:402","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,85,95,141],"tindex":"11c6c609-8297-11e5-8ec0-ed6e4cce141e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String)"},"variableMap":{"location":"location","dir":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:108","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean)"},"status":-1},{"failures":[0,1,2,141],"tindex":"11c6c60a-8297-11e5-8ec0-4117459a81ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"heights","index":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(byte[].int)"},"status":-1},{"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,90,91,157,158,92,159,160,161,73,74,75,76,77,93,78,79,80,82,83,84,85,141],"tindex":"11c6ed1b-8297-11e5-8ec0-95557a6e06e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"edgeTo","cl":"edgeTo","tmpPrev":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:55","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"11c6ed1c-8297-11e5-8ec0-d1238da3d834","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], int)"},"status":-2},{"failures":[141],"tindex":"11c6ed1d-8297-11e5-8ec0-fbe6affc3ce5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"nextTowerId","size":"nextTowerId","lonSize":"nextTowerId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, double, double)"},"status":-1},{"failures":[141],"tindex":"11c7142e-8297-11e5-8ec0-19094a015927","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:208","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Long.parseLong(java.lang.String)"},"status":-1},{"failures":[142,144,141],"tindex":"11c7142f-8297-11e5-8ec0-e96f994c6769","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"tmpWeight","lon":"tmpWeight","lat":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:204","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"11c650cd-8297-11e5-8ec0-bb1b24deb063","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.getBits"]},"type":"staticDiff"}]},{"transformation":"11c677e3-8297-11e5-8ec0-81931dd35641","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.search.NameIndex_void_setSegmentSize(int).b","com.graphhopper.storage.GraphHopperStorage_void_setSegmentSize(int).b","com.graphhopper.storage.BaseGraph_void_setSegmentSize(int).b","com.graphhopper.storage.GraphExtension$NoOpExtension_void_setSegmentSize(int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_setSegmentSize(int).e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.search.NameIndex_void_setSegmentSize(int).b","com.graphhopper.storage.GraphHopperStorage_void_setSegmentSize(int).b","com.graphhopper.storage.BaseGraph_void_setSegmentSize(int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_setSegmentSize(int).e1","com.graphhopper.storage.GraphExtension$NoOpExtension_void_setSegmentSize(int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.setSegmentSize"]},"type":"staticDiff"}]},{"transformation":"11c69ef5-8297-11e5-8ec0-c9fd6a80e04c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.WeightApproximator.setGoalNode"]},"type":"staticDiff"}]}]}