{"failureDictionary":{"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":0},"transformations":[{"failures":[],"tindex":"39a301c2-7940-11e5-ab83-47f4c65f1026","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\")"},"status":0},{"failures":[],"tindex":"39a328d3-7940-11e5-ab83-9199798aa91c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:62","type":"CtWhileImpl","sourcecode":"while (java.util.zip.ZipEntry != null) {\n    if (java.util.zip.ZipEntry.isDirectory()) {\n        new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n    } else {\n        double double = 1;\n        if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n            double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n        \n        java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n        java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n        try {\n            int int;\n            while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                java.io.FileOutputStream.write(byte[], 0, int);\n                long += int * double;\n                if (com.graphhopper.util.ProgressListener != null)\n                    com.graphhopper.util.ProgressListener.update(long);\n                \n            }\n        } finally {\n            java.io.FileOutputStream.close();\n        }\n    }\n    java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n}"},"status":0},{"failures":[],"tindex":"39a328d4-7940-11e5-ab83-c328f5f92500","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":0},{"failures":[0],"tindex":"39a328d5-7940-11e5-ab83-8d937c6b03bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double + ((double) / 2)"},"status":-1},{"failures":[],"tindex":"39a328d6-7940-11e5-ab83-e1b762480d4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:56","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"nd\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n        com.graphhopper.reader.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2},{"failures":[],"tindex":"39a34fe7-7940-11e5-ab83-2bfbf3fe377d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:74","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"},"variableMap":{"map":"map","key":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-2},{"failures":[],"tindex":"39a34fe8-7940-11e5-ab83-dbbfdfa8959b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int)"},"status":-2},{"failures":[],"tindex":"39a34fe9-7940-11e5-ab83-bdf98d431b80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:147","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"39a34fea-7940-11e5-ab83-b1bf310da147","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"39a34feb-7940-11e5-ab83-9b711be26319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:246","type":"CtIfImpl","sourcecode":"if (boolean) {\n    double = double[][int];\n    double[][int] = double[][int];\n    double[][int] = double;\n} "},"status":-2},{"failures":[],"tindex":"39a376fc-7940-11e5-ab83-916a534737fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:281","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"39a376fd-7940-11e5-ab83-33b54a250179","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"prepareLogMessages"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:578","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"prepare.logmessages\", double)"},"status":-2},{"failures":[],"tindex":"39a376fe-7940-11e5-ab83-61be55ff0509","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:250","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"39a376ff-7940-11e5-ab83-e192277c7184","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:624","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"39a37700-7940-11e5-ab83-f14b55a8ac73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"variableMap":{"priorityWayEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"39a37701-7940-11e5-ab83-6709220685df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:903","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"variableMap":{"equalNormedDelta":"favoredHeading","currNormedDist":"favoredHeading"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:376","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"39a37702-7940-11e5-ab83-7516413f5fa3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"midLat":"x2","lat":"x2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-2},{"failures":[],"tindex":"39a39e13-7940-11e5-ab83-a9eede18b83c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.CHEdgeIteratorState.getWeight()"},"status":-2},{"failures":[],"tindex":"39a39e14-7940-11e5-ab83-77e832b25b37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"priority","index":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:279","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"39a39e15-7940-11e5-ab83-3919672e702b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}