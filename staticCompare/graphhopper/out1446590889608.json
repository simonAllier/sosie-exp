{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":113,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":115,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":87,"com.graphhopper.routing.PathTest.testFindInstruction":181,"com.graphhopper.reader.OSMReaderTest.testFerry":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":30,"com.graphhopper.routing.QueryGraphTest.testOneWay":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":83,"com.graphhopper.storage.VLongStorageTest.testWrite":138,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":51,"com.graphhopper.reader.OSMReaderTest.testWithBounds":136,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":38,"com.graphhopper.coll.CompressedArrayTest.testCompress":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":63,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":111,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":59,"com.graphhopper.GraphHopperTest.testPrepare":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":52,"com.graphhopper.util.InstructionListTest.testWayList2":97,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":69,"com.graphhopper.search.NameIndexTest.testFlush":157,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":44,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":116,"com.graphhopper.util.BitUtilLittleTest.testToBitString":98,"com.graphhopper.util.InstructionListTest.testWayList":96,"com.graphhopper.reader.OSMReaderTest.testOneWay":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":48,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":10,"com.graphhopper.GraphHopperAPITest.testDisconnected179":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":25,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":4,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":45,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":5,"com.graphhopper.coll.OSMIDMapTest.testGet":102,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":122,"com.graphhopper.GraphHopperTest.testLoadOSM":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":168,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":85,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":139,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":176,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":7,"com.graphhopper.reader.OSMReaderTest.testSort":128,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":174,"com.graphhopper.storage.RAMDataAccessTest.testSegments":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":118,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":152,"com.graphhopper.reader.OSMReaderTest.testMain":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":67,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":177,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":55,"com.graphhopper.storage.RAMDataAccessTest.testHeader":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":16,"com.graphhopper.routing.PathTest.testWayList":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":13,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":73,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":132,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":160,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":76,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":92,"com.graphhopper.storage.StorablePropertiesTest.testStore":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":146,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":164,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":148,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":143,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":90,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":70,"com.graphhopper.GraphHopperTest.testFootAndCar":106,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":159,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":88,"com.graphhopper.util.BitUtilLittleTest.testToFloat":99,"com.graphhopper.coll.IntIntBinHeapTest.testSize":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":117,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":145,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":11,"com.graphhopper.GraphHopperTest.testPrepareOnly":103,"com.graphhopper.coll.CompressedArrayTest.testCompress2":140,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":167,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":24,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":134,"com.graphhopper.GraphHopperAPITest.testLoad":124,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":107,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":62,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":178,"com.graphhopper.GraphHopperTest.testFootOnly":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":119,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":20,"com.graphhopper.util.BitUtilLittleTest.testToInt":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":79,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":133,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":80,"com.graphhopper.util.InstructionListTest.testFind":95,"com.graphhopper.reader.OSMReaderTest.testBarriers":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":46,"com.graphhopper.util.GHUtilityTest.testCopy":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":170},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"f49eee94-827c-11e5-b99f-9fcdf693be93","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"variableMap":{"indicesCopy":"removedNodes","filledIndices":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"f49f15a5-827c-11e5-b99f-0b12c7b33004","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:410","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\nelse\n    double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n"},"status":-1},{"failures":[48],"tindex":"f49f15a6-827c-11e5-b99f-2179f5f96f30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"flags","blockByDefault":"backward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[57,58,7,59,60,61,62,63,64,65,66,16,67,68,69,70,25,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,34,94,95,96,97,98,99,100,101,102,103,42,104,105,106,107,108,109,110,111,112,113,114,115,116,45,117,50,118,52,54,119,56,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,41],"tindex":"f49f3cb7-827c-11e5-b99f-fd81fc05915e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"status":-1},{"failures":[],"tindex":"f49f3cb8-827c-11e5-b99f-6f39de26a40d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":0},{"failures":[],"tindex":"f49f3cb9-827c-11e5-b99f-35f3e32dba25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:714","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[117,125],"tindex":"f49f3cba-827c-11e5-b99f-15491fd9e230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:65","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) == null) || ((com.graphhopper.storage.EdgeEntry) == null))\n    return this;\n"},"status":-1},{"failures":[],"tindex":"f49f63cb-827c-11e5-b99f-c7f9272e6ee2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[138,139,140,141,142,143],"tindex":"f49f63cc-827c-11e5-b99f-3fb2b078c70a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"pointer","bytes":"bytes","value":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:72","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[144],"tindex":"f49f63cd-827c-11e5-b99f-07cca6408475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:209","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntIntBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntIntBinHeap.double))))"},"status":-1},{"failures":[],"tindex":"f49f63ce-827c-11e5-b99f-8f2610d4be74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"dijkstraTime","shortTripsSpeed":"dijkstraTime","durationInHours":"dijkstraTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:360","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[142,143,145],"tindex":"f49f63cf-827c-11e5-b99f-1d163b738900","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[146,61,147,148,149,150,151,72,152,153,154,155,90,156,157,103,107,108,158,109],"tindex":"f49f63d0-827c-11e5-b99f-e50d9f69f371","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:104","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int)"},"variableMap":{"file":"raFile","segmentSize":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[] byte[] = new byte[int];\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    byte[][][int] = byte[];\n}"},"status":-1},{"failures":[108,159],"tindex":"f49f8ae1-827c-11e5-b99f-79233efeb766","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:615","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.process(java.lang.String)"},"variableMap":{"ghLocation":"ghLocation","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:740","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String))"},"status":-1},{"failures":[],"tindex":"f49f8ae2-827c-11e5-b99f-c12681097fe2","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"com.graphhopper.util.Instruction.TURN_RIGHT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:269","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\");\n        break;\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"f49f8ae3-827c-11e5-b99f-891f028f372e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"variableMap":{"size":"com.graphhopper.coll.SparseIntIntArray.DELETED","keys":"mKeys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[160],"tindex":"f49f8ae4-827c-11e5-b99f-09a68d16ced4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"stepX","to":"stepX","lonSize":"x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:74","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[42,104,105,106,107,108,109,124],"tindex":"f49fb1f5-827c-11e5-b99f-1fc9b36c139b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = new com.graphhopper.util.InstructionList(com.graphhopper.util.Translation)"},"variableMap":{"tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:57","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation)"},"status":-1},{"failures":[161,73,74,80,162,163,164,165,166,167,82,88,168,169,170,171,95,172,173,174,175,176,42,106,111,113,177,178,179,114,180,115,116,46,47,49,50,52,56,181],"tindex":"f49fb1f6-827c-11e5-b99f-7bac97bc08cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:376","type":"CtReturnImpl","sourcecode":"return double < (double)"},"variableMap":{"maxRasterWidth2InMeterNormed":"ab_ar","currNormedDist":"ab_ar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:242","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"status":-1},{"failures":[],"tindex":"f49fb1f7-827c-11e5-b99f-390a3f3345ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:163","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f49f63ce-827c-11e5-b99f-8f2610d4be74","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}