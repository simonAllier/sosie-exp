{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":43,"com.graphhopper.reader.OSMReaderTest.testFerry":201,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":128,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":129,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":143,"com.graphhopper.reader.OSMReaderTest.testWithBounds":6,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":216,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":61,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":58,"com.graphhopper.GraphHopperTest.testPrepare":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":180,"com.graphhopper.search.NameIndexTest.testFlush":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":169,"com.graphhopper.util.InstructionListTest.testWayList":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":174,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":154,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":165,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":211,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":59,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":198,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":82,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":120,"com.graphhopper.reader.OSMReaderTest.testSort":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":152,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":73,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":214,"com.graphhopper.storage.RAMDataAccessTest.testHeader":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":156,"com.graphhopper.routing.PathTest.testWayList":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":183,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":97,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":78,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":118,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":178,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":164,"com.graphhopper.util.GHUtilityTest.testSort":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":60,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":88,"com.graphhopper.GraphHopperAPITest.testLoad":200,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":182,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":149,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":155,"com.graphhopper.reader.OSMReaderTest.testBarriers":204,"com.graphhopper.routing.PathTest.testFound":158,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":45,"com.graphhopper.util.GHUtilityTest.testCopy":132,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":18,"com.graphhopper.routing.PathTest.testFindInstruction":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":100,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":89,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":106,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":119,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":190,"com.graphhopper.reader.PrinctonReaderTest.testRead":210,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":195,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":35,"com.graphhopper.reader.OSMReaderTest.testFoot":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":81,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":127,"com.graphhopper.reader.OSMReaderTest.testOneWay":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":219,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":28,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":194,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":66,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":205,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":187,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":142,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":212,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":139,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":87,"com.graphhopper.util.GHUtilityTest.testSort2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":179,"com.graphhopper.reader.OSMReaderTest.testMain":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":71,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":103,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":56,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":123,"com.graphhopper.GraphHopperTest.testFootAndCar":2,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":46,"com.graphhopper.routing.PathTest.testTime":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":175,"com.graphhopper.util.GHUtilityTest.testSortDirected":134,"com.graphhopper.GraphHopperTest.testPrepareOnly":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":31,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":92,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":222,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":75,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":25,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":86},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"f1dd2ccf-82ba-11e5-ab41-37a840dbfb71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"size","entityType":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:257","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"f1dd53e0-82ba-11e5-ab41-8b5c315bede0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:168","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:562","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"f1dd53e1-82ba-11e5-ab41-f17e969408a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:170","type":"CtAssertImpl","sourcecode":"assert int < (com.graphhopper.storage.BaseGraph.getNodes()) : (((\"node \" + int) + \" is invalid. Not in [0,\") + (com.graphhopper.storage.BaseGraph.getNodes())) + \")\""},"variableMap":{"baseGraph":"g","nodeId":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:50","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer();\n    for ( ; int < int ; int++) {\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        if ((double > 90) || (double < (-90)))\n            java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n        \n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if ((double > 180) || (double < (-180)))\n            java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n        \n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n                java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n            } \n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n                java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n            } \n        }\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"problem with node \" + int) , java.lang.Exception);\n}"},"status":0},{"failures":[7,8,9,10],"tindex":"f1dd53e2-82ba-11e5-ab41-d1deccd0dbd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((9 * 4), (com.graphhopper.storage.BaseGraph.isFrozen() ? 1 : 0))"},"status":-1},{"failures":[],"tindex":"f1dd53e3-82ba-11e5-ab41-79a600426946","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:122","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[11,12,13,14,7,15,16,17,18,19,20,21,10,22,23],"tindex":"f1dd53e4-82ba-11e5-ab41-9bc3c5d862cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:194","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"key":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:148","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,1,144,145,2,146,10,22,23,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,3,203,204,205,4,206,5,207,6,208,209,210,211],"tindex":"f1de3e45-82ba-11e5-ab41-ef4a734173e1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:87","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"variableMap":{"alreadyRun":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:127","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long);\n"},"status":-1},{"failures":[11,212,16,213],"tindex":"f1df4fb6-82ba-11e5-ab41-1d527834790b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:348","type":"CtIfImpl","sourcecode":"if (boolean) {\n    super.rename(java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"f1df4fb7-82ba-11e5-ab41-8df1a4935c01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"variableMap":{"dist":"maxEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:182","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)));\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)));\n} "},"status":-2},{"failures":[214],"tindex":"f1df4fb8-82ba-11e5-ab41-a11e47f27889","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"status":-1},{"failures":[],"tindex":"f1df4fb9-82ba-11e5-ab41-cb1de265d72a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:110","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:846","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage)"},"status":-2},{"failures":[],"tindex":"f1df76ca-82ba-11e5-ab41-91172cdd0d0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:90","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(((double - (com.graphhopper.util.shapes.BBox.double)) / (double)) * (com.graphhopper.geohash.LinearKeyAlgo.double)))"},"status":-2},{"failures":[215,216,217,218],"tindex":"f1df76cb-82ba-11e5-ab41-55a841693a67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getElevation(int)"},"status":-1},{"failures":[219],"tindex":"f1df76cc-82ba-11e5-ab41-15cef48ccb9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:154","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f1df76cd-82ba-11e5-ab41-b98a45e4aad9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:151","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean)"},"status":-2},{"failures":[],"tindex":"f1df76ce-82ba-11e5-ab41-37b9de26de57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"status":-2},{"failures":[],"tindex":"f1df76cf-82ba-11e5-ab41-9b0a9e5a6933","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:201","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[168,169,170,220,171,172,221,173,174,222,178,179,223,180,181,182,183,186,198],"tindex":"f1df76d0-82ba-11e5-ab41-bb7d2f3e6342","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:212","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[140,141],"tindex":"f1df76d1-82ba-11e5-ab41-2b2d0fa70db3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1035","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-1},{"failures":[],"tindex":"f1df76d2-82ba-11e5-ab41-0569913d8161","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:102","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:171","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = gnu.trove.map.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.get(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f1dd53e1-82ba-11e5-ab41-f17e969408a0","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).b","com.graphhopper.storage.GHNodeAccess_double_getLatitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).e1","com.graphhopper.util.Helper_double_intToDegree(int).e2"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b"],"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).b","com.graphhopper.storage.GHNodeAccess_double_getLatitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).e1","com.graphhopper.util.Helper_double_intToDegree(int).e2"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.getAdjNode","com.graphhopper.util.PointAccess.getLatitude","com.graphhopper.util.PointAccess.getLongitude","com.graphhopper.util.EdgeIterator.next","java.util.List<java.lang.String>.add","com.graphhopper.util.EdgeExplorer.setBaseNode"]},"branchesDiff":{"delete":["c6","l4","l5","t0","t1","t2","t3"]},"type":"staticDiff"}]}]}