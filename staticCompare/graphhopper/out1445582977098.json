{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":5,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.util.InstructionListTest.testCreateGPX":17,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":10,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":18,"com.graphhopper.storage.StorablePropertiesTest.testStore":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":8,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":2,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":3,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15},"transformations":[{"failures":[],"tindex":"39f27bf0-7952-11e5-bc47-61b0cb88f1d7","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PillarInfo:81","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"variableMap":{"rowSizeInBytes":"nodeCHEntryBytes","nodeId":"nodeCHEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:267","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.CHGraphImpl.((long)(getNodes())) * (int)"},"status":-2},{"failures":[0],"tindex":"39f2a301-7952-11e5-bc47-dfd82e93fc60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:256","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    int[][][int][int] = short;\nelse\n    int[][][int][int] = short << 16;\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"39f2a302-7952-11e5-bc47-333d10eb6d78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:58","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[17,18],"tindex":"39f2a303-7952-11e5-bc47-c314f8b6c1ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:118","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lon=\")"},"variableMap":{"txt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\")"},"status":-1},{"failures":[],"tindex":"39f2a304-7952-11e5-bc47-f5ee5f7d5f9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:379","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getWeight\")"},"variableMap":{"this":"vehicleAllTmpExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:352","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.disconnect(com.graphhopper.util.CHEdgeExplorer, com.graphhopper.util.CHEdgeIterator)"},"status":-2},{"failures":[],"tindex":"39f2a305-7952-11e5-bc47-9d36455d6e42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:79","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.SimpleIntDeque.getSize()"},"status":-2},{"failures":[],"tindex":"39f2a306-7952-11e5-bc47-ffe105afd1d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:113","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:250","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"39f2a307-7952-11e5-bc47-599dbbd7b7a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"39f2ca18-7952-11e5-bc47-75b780e89a89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:50","type":"CtWhileImpl","sourcecode":"while (true) {\n    int int = int[][int];\n    if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n        break;\n    \n    com.graphhopper.routing.Path.processEdge(int, int);\n    int = int[][int];\n}"},"status":-2},{"failures":[],"tindex":"39f2ca19-7952-11e5-bc47-817fa8c309eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:115","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"39f2ca1a-7952-11e5-bc47-df49c495efa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:566","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.addNode(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[],"tindex":"39f2ca1b-7952-11e5-bc47-d5b2080837b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:234","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"39f2ca1c-7952-11e5-bc47-43079c9c5bba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"39f2ca1d-7952-11e5-bc47-b1341bab2007","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":-2},{"failures":[],"tindex":"39f2ca1e-7952-11e5-bc47-61becfb7bc31","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"nodeFlags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"status":-2},{"failures":[],"tindex":"39f2ca1f-7952-11e5-bc47-f7d1cc8c6149","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"baseNode","len":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:72","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"39f2ca20-7952-11e5-bc47-a9c8c237b615","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"39f2f131-7952-11e5-bc47-090255b6a2e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:49","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"39f2f132-7952-11e5-bc47-fd7e29a446f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:281","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int)"},"status":-2},{"failures":[],"tindex":"39f2f133-7952-11e5-bc47-a9592e9dce05","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:129","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"variableMap":{"reverseOrder":"exitOnlyPillarNodeException"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:672","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (com.graphhopper.reader.TLongList.size()) ; int++) {\n        long long = com.graphhopper.reader.TLongList.get(int);\n        int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int)) {\n            if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n                int = int;\n                int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n                int = (-int) - 3;\n                if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                    com.graphhopper.util.PointList.clear();\n                    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n                } \n                int = int;\n                int = -1;\n            } \n            continue;\n        } \n        if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n            throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n        \n        if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n            boolean boolean = (int == 0) || (int == int);\n            if (!boolean) {\n                int = int;\n            } \n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n        } \n        if (int < (com.graphhopper.reader.OSMReader.int)) {\n            int = (-int) - 3;\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            if (int >= 0) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n        } \n    }\n} catch (java.lang.RuntimeException ex) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.reader.Logger.error((\"Couldn\\'t properly add edge with osm ids:\" + com.graphhopper.reader.TLongList), java.lang.RuntimeException);\n    if (boolean)\n        throw java.lang.RuntimeException;\n    \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}