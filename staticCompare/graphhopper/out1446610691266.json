{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":70,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":113,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":2,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":119,"com.graphhopper.reader.OSMReaderTest.testFerry":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":111,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.reader.OSMReaderTest.testWithBounds":133,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":125,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":92,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":115,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":121,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":34,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":47,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":110,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":96,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":80,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":124,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":42,"com.graphhopper.reader.OSMReaderTest.testFoot":130,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":120,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":128,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":123,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":99,"com.graphhopper.reader.OSMReaderTest.testOneWay":135,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":108,"com.graphhopper.GraphHopperAPITest.testDisconnected179":35,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":20,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":101,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":41,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":85,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":39,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":27,"com.graphhopper.routing.PathTest.testWayList":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":104,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":122,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":1,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":3,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":90,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":94,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.GraphHopperTest.testPrepareOnly":12,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":109,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":10,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":127,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":114,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":28,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.util.InstructionListTest.testFind":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.util.GHUtilityTest.testCopy":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":82},"transformations":[{"failures":[],"tindex":"0f544e73-82ab-11e5-b95f-811ae3a9ba4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:199","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    for (int int = 0 ; int < (int[][].int) ; int++) {\n        int[] int[] = int[][][int];\n        int int = int[].int;\n        byte[] byte[] = new byte[int * 4];\n        for (int int = 0 ; int < int ; int++) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n        }\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"0f547584-82ab-11e5-b95f-853f74f8ab93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:96","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    if (int < 0)\n        int = int;\n    \n    continue;\n} else if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31],"tindex":"0f547585-82ab-11e5-b95f-07e196f6ddc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.calcDirection(com.graphhopper.util.Instruction)"},"variableMap":{"instruction":"this","nextI":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:261","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.getName()"},"status":-1},{"failures":[],"tindex":"0f547586-82ab-11e5-b95f-23c68b25c329","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"variableMap":{"mKeys":"mValues","nkeys":"mValues"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"0f547587-82ab-11e5-b95f-99f60104b7f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getBaseNode()"},"variableMap":{"mainEdgeState":"baseRevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:628","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"0f549c98-82ab-11e5-b95f-039a37a06282","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"baseNode","end":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":0},{"failures":[32,33,34],"tindex":"0f549c99-82ab-11e5-b95f-fb09917de1ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"variableMap":{"str":"str","mpInteger":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:213","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-2},{"failures":[0,35,36,37,38,39,40,41,14,15,16,17,18,19,21,22,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"0f549c9a-82ab-11e5-b95f-874153af0cce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:156","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>"},"variableMap":{"bestWeightMapTo":"bestWeightMapTo","bestWeightMapOther":"bestWeightMapTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:66","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":-1},{"failures":[],"tindex":"0f549c9b-82ab-11e5-b95f-7bab1d0b8575","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:113","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"0f549c9c-82ab-11e5-b95f-4d2d05b5cdae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[76],"tindex":"0f54c3ad-82ab-11e5-b95f-b9980c676a33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double + ((double) / 2)"},"status":-1},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,23,24,25,107,4,5,6,7,8,9,10,11,12,15,16,18,19,20,21,22,108,109,110,111,112,113,114,115,116,117,118,119,120,72,30],"tindex":"0f54c3ae-82ab-11e5-b95f-0d4bf2de5228","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"tmpOffset","speed":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:847","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[121,122,123,124,125,19],"tindex":"0f54c3af-82ab-11e5-b95f-0dfa05f39aa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:79","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"0f54c3b0-82ab-11e5-b95f-71ea44f19f9c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:532","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CmdArgs.getInt(\"graph.bytesForFlags\", 4)"},"status":-2},{"failures":[32,34,126,127,128,8],"tindex":"0f54c3b1-82ab-11e5-b95f-3f9c3d382703","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:116","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"variableMap":{"currentBucket":"degree","retBucket":"degree","currentIndex":"width","bucketSize":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - 1) - ((int)((((int) / (int)) * double)))"},"status":-1},{"failures":[129,130,4,5,6,7,8,131,9,10,132,133,134,135,11,12,13,14,15,16,17,18,19,20,21,22,136],"tindex":"0f54eac2-82ab-11e5-b95f-e59656f59bef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:195","type":"CtIfImpl","sourcecode":"if (\"node\".equals(java.lang.String)) {\n    long = java.lang.Long.parseLong(java.lang.String);\n    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n} "},"variableMap":{"idStr":"idStr","parser":"parser","name":"idStr","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:191","type":"CtSwitchImpl","sourcecode":"switch (java.lang.String.charAt(0)) {\n    case 'n' :\n        if (\"node\".equals(java.lang.String)) {\n            long = java.lang.Long.parseLong(java.lang.String);\n            return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n        } \n        break;\n    case 'w' :\n        {\n            long = java.lang.Long.parseLong(java.lang.String);\n            return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    case 'r' :\n        long = java.lang.Long.parseLong(java.lang.String);\n        return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n}"},"status":-1},{"failures":[],"tindex":"0f54eac3-82ab-11e5-b95f-53bbb6d1017b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"status":-2},{"failures":[14],"tindex":"0f54eac4-82ab-11e5-b95f-3573a5967d93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:80","type":"CtIfImpl","sourcecode":"if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n    com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n    com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n    com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n} "},"status":-1},{"failures":[],"tindex":"0f54eac5-82ab-11e5-b95f-bfd21c67a5f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:487","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[8],"tindex":"0f54eac6-82ab-11e5-b95f-51599a56053c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:148","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.reader.dem.ElevationProvider = com.graphhopper.reader.dem.ElevationProvider"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}