{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":141,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":274,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":29,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":30,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":272,"com.graphhopper.routing.QueryGraphTest.testOneWay":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":182,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":115,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":262,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":276,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":146,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":286,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":154,"com.graphhopper.GraphHopperTest.testPrepare":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":232,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":33,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":237,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":216,"com.graphhopper.util.InstructionListTest.testWayList":20,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":285,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":135,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":116,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":256,"com.graphhopper.util.HelperTest.testUnzip":284,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":169,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":155,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":205,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":250,"com.graphhopper.GraphHopperTest.testLoadOSM":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":103,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":117,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":164,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":227,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":178,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":235,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":223,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":176,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":64,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":193,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":255,"com.graphhopper.util.GHUtilityTest.testSort":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":120,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":219,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":91,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":190,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":259,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":210,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":73,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":261,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":35,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":179,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":98,"com.graphhopper.util.GHUtilityTest.testCopy":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":213,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":137,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":58,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":228,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":243,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":162,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":247,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":185,"com.graphhopper.util.InstructionListTest.testWayList2":21,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":148,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":283,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":288,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":258,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":170,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":287,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":34,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":143,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":240,"com.graphhopper.routing.PathBidirRefTest.testExtract":269,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":257,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":198,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":197,"com.graphhopper.util.GHUtilityTest.testSort2":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":230,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":160,"com.graphhopper.routing.PathBidirRefTest.testExtract2":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":113,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":180,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":244,"com.graphhopper.storage.GraphHopperStorageTest.testClone":37,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":118,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":184,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":51,"com.graphhopper.GraphHopperTest.testFootAndCar":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":175,"com.graphhopper.GraphHopperTest.testPrepareOnly":195,"com.graphhopper.GraphHopperTest.testVia":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":226,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":161,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":275,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":22,"com.graphhopper.GraphHopperTest.testFootOnly":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":105,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":142,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":253,"com.graphhopper.util.InstructionListTest.testFind":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":167},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"2fc99bbd-7934-11e5-8d00-47fecbc0f1c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-1},{"failures":[],"tindex":"2fc9c2ce-7934-11e5-8d00-d3af277070f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"2fc9c2cf-7934-11e5-8d00-fb888f35769a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"width"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-2},{"failures":[284],"tindex":"2fc9c2d0-7934-11e5-8d00-254be21c6265","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:143","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    throw new java.lang.IllegalStateException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"toFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:58","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    byte[] byte[] = new byte[8 * 1024];\n    while (java.util.zip.ZipEntry != null) {\n        if (java.util.zip.ZipEntry.isDirectory()) {\n            new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n        } else {\n            double double = 1;\n            if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n                double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n            \n            java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n            java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n            try {\n                int int;\n                while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                    java.io.FileOutputStream.write(byte[], 0, int);\n                    long += int * double;\n                    if (com.graphhopper.util.ProgressListener != null)\n                        com.graphhopper.util.ProgressListener.update(long);\n                    \n                }\n            } finally {\n                java.io.FileOutputStream.close();\n            }\n        }\n        java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    }\n    java.util.zip.ZipInputStream.closeEntry();\n} finally {\n    java.util.zip.ZipInputStream.close();\n}"},"status":-1},{"failures":[],"tindex":"2fc9c2d1-7934-11e5-8d00-d79d612205b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:119","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.getNextEntry()"},"variableMap":{"zip":"zis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:91","type":"CtAssignmentImpl","sourcecode":"java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry()"},"status":-2},{"failures":[],"tindex":"2fc9e9e2-7934-11e5-8d00-db4f552b8984","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:81","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"status":-1},{"failures":[],"tindex":"2fc9e9e3-7934-11e5-8d00-f7bb9a545502","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"variableMap":{"degree":"size","lon":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:131","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"2fc9e9e4-7934-11e5-8d00-832206d3bf8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:358","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int])"},"status":-1},{"failures":[],"tindex":"2fc9e9e5-7934-11e5-8d00-45be0865198f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"E_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:253","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireEdgeField())\n    int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[285,286,287,288],"tindex":"2fc9e9e6-7934-11e5-8d00-336b01eb8f95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n        return long;\n    \n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"2fc9e9e7-7934-11e5-8d00-b96006358060","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[289,290,291,292],"tindex":"2fc9e9e8-7934-11e5-8d00-23aee207792b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:246","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"2fc9e9e9-7934-11e5-8d00-a33d1e325580","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:71","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n"},"status":0},{"failures":[],"tindex":"2fca10fa-7934-11e5-8d00-3b1fc0e5fbc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:137","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:148","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getElevation(0)"},"status":0},{"failures":[],"tindex":"2fca10fb-7934-11e5-8d00-21652fbbe68b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"visitedNodesSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":-2},{"failures":[],"tindex":"2fca10fc-7934-11e5-8d00-4b5b7c3c999d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:186","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int);\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-2},{"failures":[],"tindex":"2fca10fd-7934-11e5-8d00-27ff4763e08d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:168","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"2fca10fe-7934-11e5-8d00-9904b8e7ff10","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"b_lon","fullDist2D":"a_lon","decDist2DSum":"b_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:230","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"2fca10ff-7934-11e5-8d00-3b6f31267209","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"2fca1100-7934-11e5-8d00-2f94501e0c45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:104","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / (com.graphhopper.util.DistanceCalcEarth.(calcCircumference(double)) / double)"},"variableMap":{"radiusInMeter":"minLat","this":"distCalc","lat":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:166","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.max(com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}