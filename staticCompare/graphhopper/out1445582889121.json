{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":6,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":7,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":5,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":9,"com.graphhopper.storage.MMapDataAccessTest.testCopy":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":14},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"05846535-7952-11e5-aaee-f9501b3cbc4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:163","type":"CtIfImpl","sourcecode":"if (boolean) {\n    for (int int = 0 ; int < int ; int += 4) {\n        com.graphhopper.storage.DataAccess.setInt((long + int), com.graphhopper.util.BitUtil.toInt(byte[], int));\n    }\n} else {\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], int);\n}"},"status":-1},{"failures":[],"tindex":"05848c46-7952-11e5-aaee-51f7bae20081","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"end","nodeA":"end"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:373","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double);\n    }\n"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"05848c47-7952-11e5-aaee-7fe1a3313f16","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-1},{"failures":[],"tindex":"0584b358-7952-11e5-aaee-87d824dd3dcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:292","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-2},{"failures":[],"tindex":"0584b359-7952-11e5-aaee-5d589f203106","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:183","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"0584b35a-7952-11e5-aaee-c1eaa5fffc8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"status":-2},{"failures":[],"tindex":"0584b35b-7952-11e5-aaee-2d6509179f2b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:48","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"_location":"com.graphhopper.util.Constants.BUILD_DATE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:116","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"0584da6c-7952-11e5-aaee-71e2e42f39c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.removeDA(com.graphhopper.storage.DataAccess, com.graphhopper.storage.DataAccess.getName(), false)"},"status":-2},{"failures":[],"tindex":"0584da6d-7952-11e5-aaee-6fd7350d9040","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:320","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"variableMap":{"initialized":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:216","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.GPXEntry com.graphhopper.util.GPXEntry : com.graphhopper.util.InstructionList.createGPXList()) {\n    java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()));\n    java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon())).append(\"\\'>\");\n    if (boolean)\n        java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n    \n    java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime())))).append(\"<\/time>\");\n    java.lang.StringBuilder.append(\"<\/trkpt>\");\n}"},"status":-2},{"failures":[],"tindex":"0584da6e-7952-11e5-aaee-a3eb94d82500","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"skippedEdge1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:682","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"0584da6f-7952-11e5-aaee-9b29d7c8f68f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:717","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"05850180-7952-11e5-aaee-8d56a2c63517","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:135","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"variableMap":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:186","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"05850181-7952-11e5-aaee-79b9e62ec898","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"fromWayID","lastKey":"toWayID","key":"toWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtIfImpl","sourcecode":"if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"05852892-7952-11e5-aaee-e71167ef8ab1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-2},{"failures":[],"tindex":"05852893-7952-11e5-aaee-736eff63d46e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:481","type":"CtIfImpl","sourcecode":"if ((int) >= 0)\n    com.graphhopper.util.EdgeIteratorState.setAdditionalField(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getAdditionalField());\n"},"variableMap":{"from":"edgeState","E_ADDITIONAL":"com.graphhopper.util.EdgeIterator.NO_EDGE","to":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:456","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n    long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n    com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n    break;\n} "},"status":-2},{"failures":[],"tindex":"05852894-7952-11e5-aaee-771e33b0b411","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"variableMap":{"name":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","refName":"com.graphhopper.routing.util.EncodingManager.BIKE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"05854fa5-7952-11e5-aaee-bf47a8c5e096","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:722","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[],"tindex":"05854fa6-7952-11e5-aaee-e7b98543dde6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"stepX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:71","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double += double;\n    int += int;\n} else {\n    double += double;\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"058576b7-7952-11e5-aaee-5b05d7606311","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:180","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"058576b8-7952-11e5-aaee-81c2143cd093","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:182","type":"CtLocalVariableImpl","sourcecode":"java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:171","type":"CtLocalVariableImpl","sourcecode":"java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}