{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":121,"com.graphhopper.search.NameIndexTest.testCreate":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":165,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.storage.VLongStorageTest.testWrite":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":36,"com.graphhopper.reader.OSMReaderTest.testWithBounds":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":177,"com.graphhopper.coll.CompressedArrayTest.testCompress":95,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":193,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":85,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":158,"com.graphhopper.search.NameIndexTest.testFlush":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":64,"com.graphhopper.util.InstructionListTest.testWayList":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":4,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":23,"com.graphhopper.GraphHopperAPITest.testDisconnected179":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":98,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":119,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":70,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":217,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":187,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":200,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":103,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":128,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":214,"com.graphhopper.GraphHopperTest.testLoadOSM":58,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":209,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":159,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":178,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":182,"com.graphhopper.routing.PathTest.testWayList":230,"com.graphhopper.storage.MMapDataAccessTest.testCopy":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":147,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":71,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":154,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":77,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":186,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":120,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":222,"com.graphhopper.search.NameIndexTest.testPut":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":99,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":112,"com.graphhopper.coll.CompressedArrayTest.testCompress2":94,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":242,"com.graphhopper.GraphHopperAPITest.testLoad":92,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":175,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":181,"com.graphhopper.reader.OSMReaderTest.testBarriers":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":124,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":17,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.routing.PathTest.testFindInstruction":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":213,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":228,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":72,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":162,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":192,"com.graphhopper.reader.PrinctonReaderTest.testRead":199,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":109,"com.graphhopper.util.InstructionListTest.testWayList2":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":29,"com.graphhopper.reader.OSMReaderTest.testFoot":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":123,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":164,"com.graphhopper.reader.OSMReaderTest.testOneWay":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":224,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":104,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":220,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":122,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":155,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":53,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":173,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":52,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":216,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":235,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":78,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":232,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":131,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":108,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":144,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":208,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":87,"com.graphhopper.storage.GraphHopperStorageTest.testClone":153,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":114,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":161,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":2,"com.graphhopper.GraphHopperTest.testFootAndCar":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.util.InstructionListTest.testCreateGPX":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":138,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":73,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":197,"com.graphhopper.GraphHopperTest.testFootOnly":60,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":130,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":236,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":184,"com.graphhopper.util.InstructionListTest.testFind":167,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":135},"transformations":[{"failures":[0,1,2,3],"tindex":"567f4795-82c8-11e5-8af7-bfb80b6ffaa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"normedMaxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:160","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    for (int int = int + 1 ; int < int ; int++) {\n        com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n        int++;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n}"},"status":-1},{"failures":[4,5],"tindex":"567f6ea6-82c8-11e5-8af7-3148b33e0c2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:418","type":"CtIfImpl","sourcecode":"if (boolean)\n    double = double[][int];\n"},"status":-1},{"failures":[6],"tindex":"567f6ea7-82c8-11e5-8af7-356b83d571af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"status":-1},{"failures":[5],"tindex":"567f6ea8-82c8-11e5-8af7-3548b8867bef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:122","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(int)"},"variableMap":{"intVal":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:188","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.CHEdgeIteratorState)(java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int))).getWeight()"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"567f6ea9-82c8-11e5-8af7-ff78ea5a6eb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1201","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"variableMap":{"allowWrites":"isOneway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:665","type":"CtIfImpl","sourcecode":"if ((((boolean || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle:backward\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    boolean boolean = (((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"-1\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\", \"no\"));\n    if (boolean)\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"567f95ba-82c8-11e5-8af7-7bf858c7d124","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"567f95bb-82c8-11e5-8af7-4514ef9a7a15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.clone(false)"},"variableMap":{"pointList":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:339","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":0},{"failures":[48,49,50,51,52,53,54,55,3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,4,73,74,75,76,77,78,79,80,81,82,83,84,5,85,86,87,88,89,90,91,92,93],"tindex":"567f95bc-82c8-11e5-8af7-8f22104e95a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"traversalId","edgeId":"traversalId","com.graphhopper.storage.EdgeAccess.NO_NODE":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-1},{"failures":[94,95,96,97],"tindex":"567f95bd-82c8-11e5-8af7-9b0651aeee43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:132","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[96,97],"tindex":"567f95be-82c8-11e5-8af7-a5395bf39bf2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:142","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,48,49,50,51,52,53,54,55,3,56,57,58,59,60,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,61,62,63,64,65,66,67,68,69,70,71,72,4,73,75,76,77,78,79,80,82,83,84,5,85,188,86,189,190,191,192,87,88,89,90,193,194,91,195,92,37,38,39,196,43,44,197,198,45,47,199,200],"tindex":"567f95bf-82c8-11e5-8af7-dbe5cb027a51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.util.EdgeIteratorState.isForward(com.graphhopper.routing.util.FlagEncoder))) || ((boolean) && (com.graphhopper.util.EdgeIteratorState.isBackward(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"567fbcd0-82c8-11e5-8af7-5baea1d3996d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:174","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"variableMap":{"da":"inner"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SynchedDAWrapper:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"567fbcd1-82c8-11e5-8af7-6fa23bf80411","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":0},{"failures":[201,171],"tindex":"567fbcd2-82c8-11e5-8af7-ad5a0e1cd1ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.ViaInstruction:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setDistance(com.graphhopper.util.Instruction.getDistance())"},"variableMap":{"instr":"nextInstr","this":"currInstr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:207","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Instruction = com.graphhopper.util.Instruction"},"status":-1},{"failures":[101,102,202,203,107,108,109,110,204,205,113,114,206,207,208,209,210,211,136,137,212,213,142,143,144,145,214,215,148,149,216,151,152,217,218,157,158,159,160,219,220,163,164,221],"tindex":"567fbcd3-82c8-11e5-8af7-391fecd3f3d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:296","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"variableMap":{"index":"segmentSizeIntsPower","entrySize":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[100,222,223,135,224,150,225,226,227,228,229,167,168,169,170,171,54,182,183,184,185,230,231,186,187,39],"tindex":"567fe3e4-82c8-11e5-8af7-991ab6dfb527","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 1)"},"status":-1},{"failures":[],"tindex":"567fe3e5-82c8-11e5-8af7-138548208f3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"segmentSizeInBytes","lastIndex":"allSegments","fromIndex":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:96","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"567fe3e6-82c8-11e5-8af7-99ee738ca5ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:68","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String = java.lang.String.substring(0, int);\n"},"status":-2},{"failures":[232,100,233,234,235,127,223,236,237,238,239,240,241,135,242,150,243],"tindex":"567fe3e7-82c8-11e5-8af7-9ffae10f85b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:373","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-1},{"failures":[54,55,3,56,57,58,59,60,61,63,64,65,4,75,80,82,5],"tindex":"567fe3e8-82c8-11e5-8af7-459cc9b74e31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:194","type":"CtIfImpl","sourcecode":"if ((!(java.lang.Double.isNaN(double))) && (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)))\n    throw new java.lang.IllegalArgumentException(((\"Heading \" + double) + \" must be in range (0,360) or NaN\"));\n"},"variableMap":{"heading":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:204","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"567fbcd1-82c8-11e5-8af7-6fa23bf80411","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"type":"staticDiff"}]}]}