{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":97,"com.graphhopper.routing.PathTest.testFindInstruction":1,"com.graphhopper.reader.OSMReaderTest.testFerry":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":3,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":130,"com.graphhopper.routing.QueryGraphTest.testOneWay":27,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":9,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":11,"com.graphhopper.reader.OSMReaderTest.testWithBounds":107,"com.graphhopper.reader.PrinctonReaderTest.testRead":93,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":23,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":92,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":127,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":53,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":17,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":147,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":110,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":87,"com.graphhopper.GraphHopperTest.testPrepare":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.util.InstructionListTest.testWayList2":32,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":90,"com.graphhopper.reader.OSMReaderTest.testFoot":102,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":4,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":79,"com.graphhopper.util.InstructionListTest.testWayList":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":131,"com.graphhopper.GraphHopperAPITest.testDisconnected179":120,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":74,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":37,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":94,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":67,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":145,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":44,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":69,"com.graphhopper.reader.OSMReaderTest.testSort":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":83,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":128,"com.graphhopper.reader.OSMReaderTest.testMain":34,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":15,"com.graphhopper.routing.PathTest.testWayList":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":72,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":61,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":103,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":63,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":108,"com.graphhopper.util.SimpleIntDequeTest.testPush":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":10,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":115,"com.graphhopper.GraphHopperTest.testFootAndCar":48,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":91,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":121,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":85,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":146,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":24,"com.graphhopper.GraphHopperTest.testPrepareOnly":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":2,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":99,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":68,"com.graphhopper.GraphHopperAPITest.testLoad":29,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":62,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":22,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":33,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":65,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":66,"com.graphhopper.util.InstructionListTest.testFind":30,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":82},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"15e524ea-8288-11e5-b861-db5ae560edb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:909","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n    com.graphhopper.util.PointList.reverse();\n} else {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-1},{"failures":[93,94],"tindex":"15e54bfb-8288-11e5-b861-e3aade051bd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:85","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"15e5730c-8288-11e5-b861-f93ae27c55c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:249","type":"CtReturnImpl","sourcecode":"return int[].int"},"variableMap":{"_data":"a","length":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:414","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"15e5730d-8288-11e5-b861-b30bac59e452","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:299","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge.int) != (com.graphhopper.routing.AStar.AStarEdge.int)) {\n    com.graphhopper.routing.AStar.AStarEdge = ((com.graphhopper.routing.AStar.AStarEdge)(com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry));\n    double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n} else {\n    if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n        return ;\n    \n}"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.util.EdgeIterator.NO_EDGE","parent":"parent","adjNode":"com.graphhopper.util.EdgeIterator.NO_EDGE","newWeight":"newWeight","entryOther":"parent","entryCurrent":"parent","traversalMode":"traversalMode","edgeState":"edgeState","reverse":"reverse","weighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:240","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.DijkstraBidirectionRef.(getName())));\n    \n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n        com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-2},{"failures":[69,80,95,96,97,98,99,100],"tindex":"15e5730e-8288-11e5-b861-c13a9e3c75b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"queryLon","tmp":"fromLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:111","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-1},{"failures":[],"tindex":"15e59a1f-8288-11e5-b861-e7b8d5c57cfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:290","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[29,45,46,47,48,49,50,51],"tindex":"15e59a20-8288-11e5-b861-9799eb81883d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = new com.graphhopper.util.InstructionList(com.graphhopper.util.Translation)"},"variableMap":{"tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:57","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation)"},"status":-1},{"failures":[101,102,34,35,36,37,38,103,104,105,106,107,108,109,110,111,112,45,46,47,48,49,50,113,51,52,114],"tindex":"15e59a21-8288-11e5-b861-735b49a27edc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"ele","speed":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:651","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double, double);\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double);\n"},"status":-1},{"failures":[34,38,104,107,45,48],"tindex":"15e59a22-8288-11e5-b861-85e4427f1b59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:732","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.clear()"},"status":-1},{"failures":[],"tindex":"15e5c133-8288-11e5-b861-23dcad399117","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:487","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"edgeId":"maxTurnCosts","shortcutCount":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:634","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[115,116],"tindex":"15e5c134-8288-11e5-b861-710f5c7a38cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"searchIndex","nodeThis":"searchIndex","edgeId":"freeIndex","nodeOther":"searchIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:115","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    int = int;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"15e5c135-8288-11e5-b861-8927e90e922a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"dijkstraSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[],"tindex":"15e5c136-8288-11e5-b861-03bdbd86db0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:195","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"status":-2},{"failures":[38,117,118,119],"tindex":"15e5e847-8288-11e5-b861-291c4cd849b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"lon","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:204","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"E\";\nelse\n    java.lang.String += \"W\";\n"},"status":-1},{"failures":[],"tindex":"15e5e848-8288-11e5-b861-3beb7385df05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[29,120,111,111,39,40,41,42,43,44,112,45,46,47,48,49,50,121,113,51,52,114,114,122],"tindex":"15e5e849-8288-11e5-b861-17f3fba32735","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) != null)\n    com.graphhopper.storage.GraphHopperStorage.close();\n"},"status":-1},{"failures":[38,117,119,123,124],"tindex":"15e60f5a-8288-11e5-b861-e1e96ce88f86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-1},{"failures":[],"tindex":"15e60f5b-8288-11e5-b861-3b914c6f1515","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"lastEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:206","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":0},{"failures":[125,126,127,128,129,7,9,10,12,29,130,131,132,133,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,60,61,62,134,63,135,64,65,66,136,67,68,69,70,71,72,73,137,74,138,75,76,77,139,78,79,80,81,82,83,140,141,142],"tindex":"15e60f5c-8288-11e5-b861-01325075ac5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[143,144,145,146,147],"tindex":"15e60f5d-8288-11e5-b861-f73e53f28f1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:495","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"variableMap":{"edgePointer":"capacity","edgeId":"segmentSizeInBytes","shortcutEntryBytes":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:416","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"15e5c135-8288-11e5-b861-8927e90e922a","diffs":[{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_start().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}