{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":69,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":56,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":91,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":63,"com.graphhopper.routing.QueryGraphTest.testOneWay":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":45,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":118,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":59,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":100,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":34,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":4,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":43,"com.graphhopper.search.NameIndexTest.testFlush":1,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":95,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":71,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":105,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":114,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":32,"com.graphhopper.GraphHopperAPITest.testDisconnected179":17,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":94,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":111,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":119,"com.graphhopper.coll.OSMIDMapTest.testGet":18,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":96,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":101,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":88,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":79,"com.graphhopper.storage.RAMDataAccessTest.testSegments":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":117,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":70,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":44,"com.graphhopper.storage.RAMDataAccessTest.testHeader":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":61,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":76,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":36,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":93,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":97,"com.graphhopper.storage.StorablePropertiesTest.testStore":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":60,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":83,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":33,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":75,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":40,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":108,"com.graphhopper.util.InstructionListTest.testCreateGPX":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":41,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":115,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":27,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":3,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":42,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":82,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":107,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":85},"transformations":[{"failures":[],"tindex":"1dbe2d46-8282-11e5-9b41-73a73b0ef59a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"status":-2},{"failures":[],"tindex":"1dbe5457-8282-11e5-9b41-d5aaf5e9e8ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:236","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>) == (gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>)"},"status":-2},{"failures":[0],"tindex":"1dbe5458-8282-11e5-9b41-69a8cc3b5653","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:596","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.CHGraphImpl.double)))) << 2"},"variableMap":{"weight":"maxSpeed","weightLong":"flags","com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"1dbe5459-8282-11e5-9b41-a934d30a95e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:52","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1019","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>(((java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) - 1))"},"status":-2},{"failures":[],"tindex":"1dbe7b6a-8282-11e5-9b41-ffcae9200038","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:176","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"nodesContracted":"prepareLogMessages","nodesContractedPercentage":"prepareLogMessages"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:578","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"prepare.logmessages\", double)"},"status":0},{"failures":[],"tindex":"1dbe7b6b-8282-11e5-9b41-e3050f534458","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:381","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"1dbe7b6c-8282-11e5-9b41-f7b74701f4e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:205","type":"CtInvocationImpl","sourcecode":"super.close()"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"1dbe7b6d-8282-11e5-9b41-8584994ee023","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:311","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"1dbe7b6e-8282-11e5-9b41-ed0d852654c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:473","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(double, java.lang.Math.min(double, double))"},"variableMap":{"min":"time","max":"time","value":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:77","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[],"tindex":"1dbe7b6f-8282-11e5-9b41-3bf20c3e3b7e","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1090","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTree"},"variableMap":{"tmpIndex":"locationIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:469","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndex"},"status":-2},{"failures":[],"tindex":"1dbea280-8282-11e5-9b41-35dbd0adfc3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:657","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:310","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.storage.GHDirectory)(com.graphhopper.storage.GraphStorage.getDirectory())).isStoring()"},"status":-2},{"failures":[65,6,20,30],"tindex":"1dbea281-8282-11e5-9b41-b5b0900b925e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"-1\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"))"},"status":-1},{"failures":[],"tindex":"1dbea282-8282-11e5-9b41-29d914054a61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:205","type":"CtInvocationImpl","sourcecode":"super.close()"},"status":-1},{"failures":[66,67],"tindex":"1dbea283-8282-11e5-9b41-130ab5c65336","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"variableMap":{"r":"distance","com.graphhopper.util.AngleCalc.PI_4":"distance","x":"nextEle","angle":"nextLat","absY":"nextLat","com.graphhopper.util.AngleCalc.PI3_4":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:183","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double))) / (double))));\nelse\n    long = java.lang.Math.round((long + (((this.long) * (com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double))) / (double))));\n"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,2,76,77,78,79,80,81,6,82,83,84,85,86,87],"tindex":"1dbea284-8282-11e5-9b41-5dcf57e7f069","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"a_lon","incDist2DSum":"a_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:230","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[],"tindex":"1dbea285-8282-11e5-9b41-5f4b0f4ce7e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1137","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[88,89,90,91,92,86],"tindex":"1dbec996-8282-11e5-9b41-29eef702f2ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"distEdge","java.lang.Math.PI":"distEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:144","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[93,94],"tindex":"1dbec997-8282-11e5-9b41-97d394f9880e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:377","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"1dbec998-8282-11e5-9b41-9db063c566c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"status":0},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,74,75,117,118,2,119,3,120,76,77,78,79,80,81,121,6,7,8,9,10,11,13,14,16],"tindex":"1dbec999-8282-11e5-9b41-a950b5a9b021","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"traversalId","tmpErr":"traversalId","y1":"traversalId","dLon":"traversalId","sLat":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1dbec998-8282-11e5-9b41-9db063c566c2","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"1dbe7b6b-8282-11e5-9b41-e3050f534458","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.add"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e2","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e4","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t3","com.graphhopper.routing.Path$3_void_next(com.graphhopper.util.EdgeIteratorState,int).l1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).e5","com.graphhopper.routing.Path$3_void_next(com.graphhopper.util.EdgeIteratorState,int).l3","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).l6"]},"type":"branch"}]}]}