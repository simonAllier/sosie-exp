{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":86,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":174,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":247,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":75,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":282,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":283,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":131,"com.graphhopper.routing.QueryGraphTest.testOneWay":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":304,"com.graphhopper.reader.OSMReaderTest.testWithBounds":272,"com.graphhopper.storage.MMapDataAccessTest.testSegments":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":53,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":90,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":219,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":232,"com.graphhopper.GraphHopperTest.testPrepare":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":142,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":222,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":161,"com.graphhopper.util.InstructionListTest.testWayList":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":168,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":67,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":277,"com.graphhopper.GraphHopperAPITest.testDisconnected179":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":81,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":18,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":162,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":305,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":268,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":103,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":62,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":157,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":234,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":199,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":245,"com.graphhopper.reader.OSMReaderTest.testSort":265,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":31,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":205,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":178,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":291,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":274,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":125,"com.graphhopper.storage.MMapDataAccessTest.testCopy":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":52,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":242,"com.graphhopper.util.BitUtilBigTest.testFromBitString":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":160,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":181,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":27,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":16,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":12,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":129,"com.graphhopper.util.GHUtilityTest.testSort":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":94,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":194,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":187,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":294,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":292,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":65,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":183,"com.graphhopper.GraphHopperAPITest.testLoad":261,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.reader.OSMReaderTest.testBarriers":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":95,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":78,"com.graphhopper.util.GHUtilityTest.testCopy":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.routing.PathTest.testFindInstruction":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":33,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":231,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":301,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":11,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":184,"com.graphhopper.reader.PrinctonReaderTest.testRead":275,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":114,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":153,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":215,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":66,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":186,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":210,"com.graphhopper.util.InstructionListTest.testWayList2":288,"com.graphhopper.reader.OSMReaderTest.testFoot":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":96,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":9,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":251,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":249,"com.graphhopper.reader.OSMReaderTest.testOneWay":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":200,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":47,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":201,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":152,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":88,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":267,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":145,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":295,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":257,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":141,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":254,"com.graphhopper.util.GHUtilityTest.testSort2":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":84,"com.graphhopper.reader.OSMReaderTest.testMain":264,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":243,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":227,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":206,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":214,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":209,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":224,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":77,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":170,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":2,"com.graphhopper.util.GHUtilityTest.testSortDirected":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":40,"com.graphhopper.GraphHopperTest.testPrepareOnly":256,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":17,"com.graphhopper.GraphHopperTest.testVia":25,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":169,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":15,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":133,"com.graphhopper.GraphHopperTest.testFootOnly":259,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":236,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":127,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":203,"com.graphhopper.util.InstructionListTest.testFind":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":70},"transformations":[{"failures":[],"tindex":"eb43888c-8289-11e5-b2bb-a9f5e74e0a5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"status":-2},{"failures":[0,1,2,3],"tindex":"eb43d6ad-8289-11e5-b2bb-25bbb81df46b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:101","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"variableMap":{"width":"len","latSimilar":"len","lonSimilar":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:400","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[],"tindex":"eb43d6ae-8289-11e5-b2bb-c72b3c896797","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:179","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(((int) + 1))"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"eb43d6af-8289-11e5-b2bb-677bb060f1dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"x1":"r_lon_deg","x2":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:226","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[],"tindex":"eb43fdc0-8289-11e5-b2bb-3120a1690625","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:695","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.BaseGraph.createEdgeExplorer()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:642","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":0},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"eb43fdc1-8289-11e5-b2bb-3f6d7ba2e4b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"eb43fdc2-8289-11e5-b2bb-9bf62188bef9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:216","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[57],"tindex":"eb43fdc3-8289-11e5-b2bb-956893fbb06a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:292","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[58,5,59,10,60,11,12,13,14,20,21,22,23,24,25,61,62,26,63,64,65],"tindex":"eb4424d4-8289-11e5-b2bb-0d21cf8706b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:576","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState.getAdjNode()) == int)\n    return com.graphhopper.util.EdgeIteratorState;\n"},"status":-1},{"failures":[],"tindex":"eb4424d5-8289-11e5-b2bb-a9595b521f44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:440","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-2},{"failures":[],"tindex":"eb4424d6-8289-11e5-b2bb-b35907bc2af5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"eb4424d7-8289-11e5-b2bb-e9721b1d8bf0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"newShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:753","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[66,67],"tindex":"eb444be8-8289-11e5-b2bb-7b58b2f9af02","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"highway","configuredCHWeightings":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:153","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[68],"tindex":"eb444be9-8289-11e5-b2bb-a35f6098ae2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"edgeId","edgeFrom":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-1},{"failures":[69],"tindex":"eb444bea-8289-11e5-b2bb-71ac1acb2a5f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"bLen","speed":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[62],"tindex":"eb444beb-8289-11e5-b2bb-c14f27a4185f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"newBaseIndex","b":"newAdjIndex","this":"toSortedGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:257","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"status":-1},{"failures":[70,71,72,73,74,75,51,76,77,78,79,80,81,82,83,52,53,84,85,86,87,88,54,89,90,91,92,93,94,95,55,56,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"eb4472fc-8289-11e5-b2bb-8b370706646d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:304","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"eb4472fd-8289-11e5-b2bb-37ff3400a752","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"status":0},{"failures":[125,126,127,128,129,130,131,132,58,5,133,134,135,7,136,8,9,28,29,137,30,138,31,32,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,10,166,167,60,168,169,170,171,11,12,172,173,13,174,175,176,177,178,14,70,179,180,33,181,182,183,34,35,184,185,186,36,187,188,189,190,191,37,38,192,193,194,195,196,197,198,72,199,200,39,201,202,203,40,41,204,205,206,42,207,208,209,210,211,43,44,212,213,214,73,215,216,45,217,218,219,46,47,220,221,222,48,223,224,225,226,227,49,50,228,229,230,75,51,78,82,231,52,53,85,86,88,54,89,90,92,93,95,55,56,96,99,103,232,233,15,234,235,236,237,238,239,240,241,242,16,243,244,18,245,246,247,248,249,250,251,252,253,19,254,119,120,121,122,124,255,256,20,21,22,23,24,257,25,61,62,26,63,64,258,65,259,260,261,262,263,264,265,266,267,268,68,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],"tindex":"eb449a0e-8289-11e5-b2bb-f94697daf3f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:201","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[290,132,58,5,133,135,291,7,136,8,10,60,11,12,13,14,196,292,293,294,295,296,232,233,297,15,298,299,235,236,239,240,241,242,16,243,300,301,302,303,17,244,18,304,305,246,247,250,251,252,253,19,254,119,120,121,122,124,20,21,22,23,24,257,25,61,62,26,63,64,65,261,264,265,266],"tindex":"eb449a0f-8289-11e5-b2bb-2973dabbf895","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:110","type":"CtReturnImpl","sourcecode":"return int * (int)"},"variableMap":{"retBucket":"closestNode","bucketSize":"closestNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:76","type":"CtReturnImpl","sourcecode":"return int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"eb43fdc0-8289-11e5-b2bb-3120a1690625","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.createEdgeExplorer"]},"type":"staticDiff"}]}]}