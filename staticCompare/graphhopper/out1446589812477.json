{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":31,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":79,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":65,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":51,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":83,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.routing.PathTest.testWayList":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":47,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":43,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":53,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":30,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":64,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":86,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":50,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":55,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":84,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":66,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":68,"com.graphhopper.util.InstructionListTest.testWayList":78,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":70,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":81,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":60,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.GraphHopperAPITest.testLoad":27,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":59,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":57,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":77,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":80},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"729b7632-827a-11e5-b975-9b11f380b5fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:66","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"729bc453-827a-11e5-b975-05ec4347c5a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"variableMap":{"x1":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"729bc454-827a-11e5-b975-cf3aae68b8ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:510","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"osmreader.osm\", \"\")"},"status":-2},{"failures":[],"tindex":"729bc455-827a-11e5-b975-fb0f7623b2ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:202","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"729bc456-827a-11e5-b975-6bbe1ebf038a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":0},{"failures":[3,4,5,6,7,8,10,11,27],"tindex":"729beb67-827a-11e5-b975-6999bf2ce600","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean)"},"variableMap":{"tmpCalcPoints":"tmpCalcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker)"},"status":-1},{"failures":[],"tindex":"729beb68-827a-11e5-b975-e5f75cc2dae3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:56","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar"},"variableMap":{"aStar":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"729beb69-827a-11e5-b975-7b8e5e67739e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:136","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"variableMap":{"lat":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:231","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) >= 2) {\n    double = com.graphhopper.util.PointList.getLatitude(1);\n    double = com.graphhopper.util.PointList.getLongitude(1);\n} else if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[],"tindex":"729c127a-827a-11e5-b975-b9a050500766","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"to","b":"to","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:99","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"729c127b-827a-11e5-b975-a52a4d9f8877","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,6,27,17,19,78],"tindex":"729c127c-827a-11e5-b975-611edc2a9530","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:912","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[],"tindex":"729c398d-827a-11e5-b975-611bb50ab1f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"dLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"729c398e-827a-11e5-b975-73267e87e220","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1015","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"variableMap":{"foundIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"729c398f-827a-11e5-b975-896fca4dd931","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[],"tindex":"729c3990-827a-11e5-b975-a55495340fa0","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"r_lat_deg","minLatTmp":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:225","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[],"tindex":"729c3991-827a-11e5-b975-015ab46214cd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":0},{"failures":[],"tindex":"729c60a2-827a-11e5-b975-574d75ac0c9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"dataAccessType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:528","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.fromString(java.lang.String)"},"status":0},{"failures":[79],"tindex":"729c60a3-827a-11e5-b975-4fff93ab3d0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\")"},"variableMap":{"track":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:278","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(double[][int])"},"status":-1},{"failures":[80,81,82,83,84,85,86,1,8,9,10,15],"tindex":"729c60a4-827a-11e5-b975-37c3bc212170","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:84","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"729c60a5-827a-11e5-b975-452cb6dfff5e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1015","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"variableMap":{"foundIndex":"com.graphhopper.util.Constants.VERSION_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:153","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.StorableProperties.(check(\"nodes\", com.graphhopper.util.Constants.int, boolean)))\n    return false;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"729c60a2-827a-11e5-b975-574d75ac0c9c","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.storage.SynchedDAWrapper_long_getCapacity().b","com.graphhopper.storage.SynchedDAWrapper_void_close().b","com.graphhopper.storage.SynchedDAWrapper_void_setHeader(int,int).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t8","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.DataAccess_setSegmentSize(int).b","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType_fromString(java.lang.String).e1","com.graphhopper.storage.SynchedDAWrapper_void_setBytes(long,byte[],int).b","com.graphhopper.storage.SynchedDAWrapper_boolean_ensureCapacity(long).b","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType_fromString(java.lang.String).e2","com.graphhopper.storage.DAType_java.lang.String_toString().e5","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).e1","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).e2","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.DataAccess_create(long).b","com.graphhopper.storage.SynchedDAWrapper_void_setInt(long,int).b","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType(com.graphhopper.storage.DAType,boolean).b","com.graphhopper.storage.SynchedDAWrapper_boolean_loadExisting().b","com.graphhopper.storage.SynchedDAWrapper_void_getBytes(long,byte[],int).b","com.graphhopper.storage.DAType_java.lang.String_toString().t5","com.graphhopper.storage.SynchedDAWrapper_void_flush().b","com.graphhopper.storage.SynchedDAWrapper_com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess).b","com.graphhopper.storage.DAType_com.graphhopper.storage.DAType_fromString(java.lang.String).t3"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.DAType.fromString"]},"type":"staticDiff"}]}]}