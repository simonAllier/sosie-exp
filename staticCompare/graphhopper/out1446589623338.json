{"failureDictionary":{"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":54,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":81,"com.graphhopper.reader.OSMReaderTest.testFerry":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":77,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":140,"com.graphhopper.reader.OSMReaderTest.testWithBounds":169,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":152,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":150,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":48,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":21,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":155,"com.graphhopper.GraphHopperTest.testPrepare":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":83,"com.graphhopper.reader.OSMReaderTest.testOneWay":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":133,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":25,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":41,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":29,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":28,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":14,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":78,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":163,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":151,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":15,"com.graphhopper.coll.OSMIDMapTest.testGet":103,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":156,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":3,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":6,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":34,"com.graphhopper.storage.RAMDataAccessTest.testCopy":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":157,"com.graphhopper.GraphHopperTest.testLoadOSM":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":110,"com.graphhopper.reader.OSMReaderTest.testSort":161,"com.graphhopper.storage.RAMDataAccessTest.testSegments":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":90,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":139,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":93,"com.graphhopper.reader.OSMReaderTest.testMain":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":154,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":10,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":75,"com.graphhopper.coll.OSMIDMapTest.testGet2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":59,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":131,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":63,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":170,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":80,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":173,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":138,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":99,"com.graphhopper.GraphHopperTest.testFootAndCar":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":82,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":128,"com.graphhopper.coll.OSMIDMapTest.testGetLong":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":0,"com.graphhopper.GraphHopperTest.testVia":113,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":119,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":134,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":71,"com.graphhopper.GraphHopperAPITest.testLoad":158,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":117,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":47,"com.graphhopper.GraphHopperTest.testFootOnly":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":7,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":9,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":58,"com.graphhopper.util.GHUtilityTest.testCopy":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":147,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":100},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"01ded655-827a-11e5-9248-11bb3b85fc61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:119","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDFullIndex.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-1},{"failures":[],"tindex":"01defd66-827a-11e5-9248-af04a9941977","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:64","type":"CtIfImpl","sourcecode":"if (java.util.zip.ZipEntry.isDirectory()) {\n    new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n} else {\n    double double = 1;\n    if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n        double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n    \n    java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n    java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n    try {\n        int int;\n        while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n            java.io.FileOutputStream.write(byte[], 0, int);\n            long += int * double;\n            if (com.graphhopper.util.ProgressListener != null)\n                com.graphhopper.util.ProgressListener.update(long);\n            \n        }\n    } finally {\n        java.io.FileOutputStream.close();\n    }\n}"},"status":-2},{"failures":[7],"tindex":"01defd67-827a-11e5-9248-2dab5b1f91b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"weight","speed":"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"01defd68-827a-11e5-9248-e72d0746855c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"status":-2},{"failures":[],"tindex":"01defd69-827a-11e5-9248-a96957934932","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:66","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"01defd6a-827a-11e5-9248-afc2ffed6545","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"status":-2},{"failures":[],"tindex":"01df729b-827a-11e5-9248-af6deca39e21","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:102","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"01df729c-827a-11e5-9248-e31360d0ad72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:605","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()"},"variableMap":{"edge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:157","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"01df729d-827a-11e5-9248-f34372374c79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:379","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getWeight\")"},"variableMap":{"this":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-2},{"failures":[8,9,6,10,11],"tindex":"01df729e-827a-11e5-9248-038516a3b36a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:267","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"01df729f-827a-11e5-9248-e5dba349ba3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:743","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[39,40],"tindex":"01df99b0-827a-11e5-9248-db7a2870bd9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:102","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getDistance()"},"status":-1},{"failures":[],"tindex":"01df99b1-827a-11e5-9248-5307c807c993","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"contractedNeighbors"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:558","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[41,42,43,44,45,46,47,48,7,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,39,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,40,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,38],"tindex":"01df99b2-827a-11e5-9248-e7e80946b178","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[],"tindex":"01df99b3-827a-11e5-9248-f722bea9b8d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:311","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean)"},"status":-2},{"failures":[],"tindex":"01df99b4-827a-11e5-9248-afddcd7a18cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:536","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:556","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"01dfc0c5-827a-11e5-9248-07202a11c997","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((9 * 4), (com.graphhopper.storage.BaseGraph.isFrozen() ? 1 : 0))"},"variableMap":{"nodes":"nodes","this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[171,172,100],"tindex":"01dfc0c6-827a-11e5-9248-cf9673a49e8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:607","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadWayGeometryHeader()"},"variableMap":{"clonedG":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:417","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometryHeader()"},"status":-1},{"failures":[49,54,91,96],"tindex":"01dfc0c7-827a-11e5-9248-5914f62acf8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:332","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[173,174],"tindex":"01dfc0c8-827a-11e5-9248-7345f7df0b5c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:526","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}