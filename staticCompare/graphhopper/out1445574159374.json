{"failureDictionary":{"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":0,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1},"transformations":[{"failures":[0,1],"tindex":"b22d0929-793d-11e5-98eb-73397aa9ffa5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:216","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.GPXEntry com.graphhopper.util.GPXEntry : com.graphhopper.util.InstructionList.createGPXList()) {\n    java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()));\n    java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon())).append(\"\\'>\");\n    if (boolean)\n        java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n    \n    java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime())))).append(\"<\/time>\");\n    java.lang.StringBuilder.append(\"<\/trkpt>\");\n}"},"status":-1},{"failures":[],"tindex":"b22d303a-793d-11e5-98eb-7fa27f463137","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-2},{"failures":[],"tindex":"b22d303b-793d-11e5-98eb-ef7167cee9d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1010","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Graph = com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting)"},"status":-2},{"failures":[],"tindex":"b22d303c-793d-11e5-98eb-d97bc8d5ca96","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.initFromGraph()"},"variableMap":{"this":"tmpPrepareCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int)"},"status":-2},{"failures":[],"tindex":"b22d303d-793d-11e5-98eb-fb1ea08e5afc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"foundDist","angleXY":"foundDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n        continue;\n    } \n    for (int int = 0, int int ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if (double < 0)\n            continue;\n        \n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            double = double;\n        } \n        if (int > 0)\n            continue;\n        \n        int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n            if (double < double) {\n                com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n                if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                \n                double = double;\n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"b22d574e-793d-11e5-98eb-5163fcd58445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:627","type":"CtIfImpl","sourcecode":"if (long != long)\n    com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n"},"status":-2},{"failures":[],"tindex":"b22d574f-793d-11e5-98eb-c94b19adb19a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"variableMap":{"tt":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:85","type":"CtReturnImpl","sourcecode":"return java.lang.Long.parseLong(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b22d5750-793d-11e5-98eb-8f5794cefc78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:113","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"status":-2},{"failures":[],"tindex":"b22d5751-793d-11e5-98eb-97cb5f12c7b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:755","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setSegmentSize(int)"},"variableMap":{"ghStorage":"graph","defaultSegmentSize":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:152","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n    com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.routing.AStar.AStarEdge.int, int), com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-2},{"failures":[],"tindex":"b22d7e62-793d-11e5-98eb-752d2802b4f9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currFrom","currEdge":"currFrom","nEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":-2},{"failures":[],"tindex":"b22d7e63-793d-11e5-98eb-a1cd43ceaede","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"variableMap":{"location":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:165","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b22d7e64-793d-11e5-98eb-db51abed51cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.flush()"},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.BaseGraph.isFrozen()))\n    com.graphhopper.storage.BaseGraph.freeze();\n"},"status":-2},{"failures":[],"tindex":"b22d7e65-793d-11e5-98eb-87d30c812061","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"status":-2},{"failures":[],"tindex":"b22d7e66-793d-11e5-98eb-d1c2fde9eda3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:317","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Directory) != null)\n    com.graphhopper.storage.Directory.clear();\n"},"status":-2},{"failures":[],"tindex":"b22d7e67-793d-11e5-98eb-27bfaa37cb06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT_STORE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"b22d7e68-793d-11e5-98eb-4f4daca88a67","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat()))"},"variableMap":{"output":"output","instruction":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\").append(com.graphhopper.util.Instruction.getSign())"},"status":-2},{"failures":[],"tindex":"b22da579-793d-11e5-98eb-25ff22a92901","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"b22da57a-793d-11e5-98eb-1182995e3535","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:186","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (com.graphhopper.reader.OSMElement.hasTag(java.lang.String))\n        return com.graphhopper.reader.OSMElement.getTag(java.lang.String);\n    \n}"},"status":-2},{"failures":[],"tindex":"b22da57b-793d-11e5-98eb-83854cf443b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:306","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String += \", \";\n"},"variableMap":{"str":"wayTypeName","counter":"wayType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:435","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"b22da57c-793d-11e5-98eb-f1affa1f1a5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:475","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}