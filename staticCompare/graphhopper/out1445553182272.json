{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":188,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":214,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":122,"com.graphhopper.reader.OSMReaderTest.testFerry":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":17,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":211,"com.graphhopper.routing.QueryGraphTest.testOneWay":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":40,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":118,"com.graphhopper.reader.OSMReaderTest.testWithBounds":236,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":8,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":198,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":145,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":206,"com.graphhopper.GraphHopperTest.testPrepare":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":187,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":64,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":194,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":170,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":5,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":119,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":24,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":250,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":209,"com.graphhopper.GraphHopperTest.testLoadOSM":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":148,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":19,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":120,"com.graphhopper.reader.OSMReaderTest.testSort":229,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":182,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":36,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":94,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":192,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":219,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":169,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":177,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":33,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":160,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":57,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":124,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":173,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":67,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":140,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":51,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":218,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":166,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":255,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":191,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":14,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":66,"com.graphhopper.reader.OSMReaderTest.testBarriers":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":37,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":141,"com.graphhopper.util.GHUtilityTest.testCopy":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":167,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":3,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":110,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":95,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":183,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":83,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":200,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":23,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":205,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":151,"com.graphhopper.reader.OSMReaderTest.testFoot":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":128,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":125,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":126,"com.graphhopper.reader.OSMReaderTest.testOneWay":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":34,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":60,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":25,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":92,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":91,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":135,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":65,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":72,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":197,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":164,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":157,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":244,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":243,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":185,"com.graphhopper.reader.OSMReaderTest.testMain":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":52,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":53,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":161,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":90,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":142,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":20,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":7,"com.graphhopper.storage.GraphHopperStorageTest.testClone":68,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":56,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":43,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":78,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":85,"com.graphhopper.GraphHopperTest.testFootAndCar":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":32,"com.graphhopper.GraphHopperTest.testPrepareOnly":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":114,"com.graphhopper.GraphHopperTest.testVia":248,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":180,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":12,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":216,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":89,"com.graphhopper.GraphHopperTest.testFootOnly":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":150,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":152,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":132},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"dad97181-790c-11e5-9c6a-1744644cdc50","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.int)"},"variableMap":{"edgePointer":"oldCapacity","com.graphhopper.storage.EdgeAccess.NO_NODE":"nodeEntryBytes","edges":"nodes","E_NODEA":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:285","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField()) {\n    for (long long = long + (int) ; long < long ; long += int) {\n        com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n    }\n} "},"status":-1},{"failures":[],"tindex":"dada5be2-790c-11e5-9c6a-3dca1abceb37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"dada5be3-790c-11e5-9c6a-adac9e383227","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-2},{"failures":[],"tindex":"dada5be4-790c-11e5-9c6a-f186dd0f8782","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:252","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> == null) {\n    java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n} "},"variableMap":{"tags":"newTags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:99","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"dadaf825-790c-11e5-9c6a-07b35ba2980c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:225","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[],"tindex":"dadb1f36-790c-11e5-9c6a-979fdfa1c862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:80","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int);\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-2},{"failures":[],"tindex":"dadb1f37-790c-11e5-9c6a-978f5eb908f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:590","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.highResolution\", int)"},"status":-2},{"failures":[],"tindex":"dadb1f38-790c-11e5-9c6a-f773f9ed165a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"strLen","NO_TURN_ENTRY":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:102","type":"CtIfImpl","sourcecode":"if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n    byte |= 1;\n"},"status":-2},{"failures":[],"tindex":"dadb1f39-790c-11e5-9c6a-dfe921c3599c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"numTiles","nextEdgeId":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:122","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"dadb1f3a-790c-11e5-9c6a-cb6e6aa8f94d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:554","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int++;\n    if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n        int++;\n    \n}"},"variableMap":{"degree":"traversalId","contractedNeighbors":"traversalId","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int)"},"status":-2},{"failures":[],"tindex":"dadb1f3b-790c-11e5-9c6a-858e4a313c6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"meanDegree","java.lang.Math.PI":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:641","type":"CtAssignmentImpl","sourcecode":"double = (((double) * 2) + long) / 3"},"status":-2},{"failures":[],"tindex":"dadb1f3c-790c-11e5-9c6a-852e8ca26257","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"edgeCount","sLon":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:213","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-2},{"failures":[],"tindex":"dadb1f3d-790c-11e5-9c6a-0b0c936cca55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.MAX_VALUE":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:134","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double))"},"status":-2},{"failures":[],"tindex":"dadb1f3e-790c-11e5-9c6a-2df7f95b8bb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"dadb1f3f-790c-11e5-9c6a-b97ae8652141","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"status":-2},{"failures":[],"tindex":"dadb1f40-790c-11e5-9c6a-15543d77d946","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((4 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"dadb4651-790c-11e5-9c6a-e1d931c3a35d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:90","type":"CtReturnImpl","sourcecode":"return java.io.InputStream"},"variableMap":{"is":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:122","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"dadb4652-790c-11e5-9c6a-653053f64f10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:882","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int & 2) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n} else {\n    if ((int & 1) != 0)\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    \n}"},"status":-2},{"failures":[],"tindex":"dadb4653-790c-11e5-9c6a-19399281e5b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":-2},{"failures":[],"tindex":"dadb4654-790c-11e5-9c6a-97b623f4e1f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}