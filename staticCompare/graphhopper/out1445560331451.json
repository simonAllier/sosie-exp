{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8018f604-791d-11e5-b83f-53e7c30fd6db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"variableMap":{"bytes":"bytes","tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:100","type":"CtAssignmentImpl","sourcecode":"byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"80194425-791d-11e5-b83f-d3a7e123f01a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:47","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(short >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:48","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(short))"},"status":-2},{"failures":[],"tindex":"80194426-791d-11e5-b83f-5b5def100a00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"priorityWayEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"80194427-791d-11e5-b83f-0de3d09322f0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"variableMap":{"output":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\")"},"status":-2},{"failures":[],"tindex":"80194428-791d-11e5-b83f-4b3145cd0ad6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":-2},{"failures":[],"tindex":"80196b39-791d-11e5-b83f-f530f2d1cade","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:131","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initBuffer()"},"status":-2},{"failures":[],"tindex":"80196b3a-791d-11e5-b83f-af45da21e3c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:127","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"variableMap":{"iter":"edgeIterState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:43","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"80196b3b-791d-11e5-b83f-c5042efbd612","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:424","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"fetchWayGeometry\")"},"variableMap":{"this":"delEdgesIter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:649","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n}"},"status":-2},{"failures":[],"tindex":"80196b3c-791d-11e5-b83f-3bac94e2980f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"variableMap":{"adjNodesToDelIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:46","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"8019924d-791d-11e5-b83f-b33acbc356b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:49","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"8019924e-791d-11e5-b83f-bbee445aa2e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:68","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.toLowerCase(), java.lang.Object.toString())"},"status":-2},{"failures":[],"tindex":"8019924f-791d-11e5-b83f-a758fb238632","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:296","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"80199250-791d-11e5-b83f-83f4559149b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:190","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"8019b961-791d-11e5-b83f-bb3c031ed081","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"com.graphhopper.storage.EdgeAccess.NO_NODE","bLen":"oldI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:701","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (int == (com.graphhopper.storage.EdgeAccess.int))\n        continue;\n    \n    if (com.graphhopper.coll.GHBitSet.contains(int))\n        throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n    \n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"8019b962-791d-11e5-b83f-bb73b4156ca1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"skippedEdge1","entrySize":"skippedEdge1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:592","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int)"},"status":-2},{"failures":[],"tindex":"8019b963-791d-11e5-b83f-6315e9c0e155","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n        return true;\n    \n}"},"status":-2},{"failures":[],"tindex":"8019b964-791d-11e5-b83f-8db05a20fa67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals((int + \"\")))) {\n    if (boolean) {\n        return false;\n    } \n    throw new java.lang.IllegalStateException((((((\"Version of \" + java.lang.String) + \" unsupported: \") + java.lang.String) + \", expected:\") + int));\n} "},"status":-2},{"failures":[],"tindex":"8019e075-791d-11e5-b83f-dbe2d3a558aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"timeout","hash":"timeout"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Downloader:57","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"8019e076-791d-11e5-b83f-817420ef9b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"8019e077-791d-11e5-b83f-4f12d1c43e72","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:530","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.CHGraphImpl.AllCHEdgesIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException(\"Shortcut should not need to return raw flags!\");\n"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:99","type":"CtForImpl","sourcecode":"for (int int = 0, int int ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < 0)\n        continue;\n    \n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        double = double;\n    } \n    if (int > 0)\n        continue;\n    \n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n            if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            \n            double = double;\n        } \n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}