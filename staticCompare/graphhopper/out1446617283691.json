{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":125,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":314,"com.graphhopper.reader.OSMReaderTest.testFerry":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":270,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":7,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":334,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":235,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":296,"com.graphhopper.GraphHopperTest.testPrepare":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":93,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":119,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":132,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":116,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":394,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":106,"com.graphhopper.GraphHopperTest.testLoadOSM":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":27,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":273,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":8,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":353,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":254,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":347,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":67,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":390,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":305,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":351,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":359,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":45,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":312,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":113,"com.graphhopper.coll.OSMIDMapTest.testGetLong":174,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":379,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":356,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":370,"com.graphhopper.GraphHopperAPITest.testLoad":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":236,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":226,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":115,"com.graphhopper.util.GHUtilityTest.testCopy":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":318,"com.graphhopper.routing.PathTest.testFindInstruction":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":212,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":255,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":388,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":267,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":402,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":300,"com.graphhopper.util.InstructionListTest.testWayList2":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":31,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":91,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":289,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":371,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":225,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":127,"com.graphhopper.coll.OSMIDMapTest.testGet":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":213,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":173,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":341,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":396,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":340,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":123,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":383,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":275,"com.graphhopper.storage.GraphHopperStorageTest.testClone":228,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":298,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":191,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":320,"com.graphhopper.routing.PathTest.testTime":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":287,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":82,"com.graphhopper.GraphHopperTest.testFootOnly":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":188,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":329,"com.graphhopper.search.NameIndexTest.testCreate":53,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":28,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":26,"com.graphhopper.reader.OSMReaderTest.testWithBounds":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":6,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":392,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":375,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":224,"com.graphhopper.search.NameIndexTest.testFlush":51,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":110,"com.graphhopper.util.InstructionListTest.testWayList":133,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":398,"com.graphhopper.GraphHopperAPITest.testDisconnected179":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":321,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":316,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":279,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":349,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":141,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":230,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":386,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":104,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":248,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":163,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":129,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":223,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":217,"com.graphhopper.routing.PathTest.testWayList":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":284,"com.graphhopper.coll.OSMIDMapTest.testGet2":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":130,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":64,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":263,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":166,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":205,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":366,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":29,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":309,"com.graphhopper.search.NameIndexTest.testPut":50,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":395,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":266,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":92,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":354,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":65,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":268,"com.graphhopper.routing.PathTest.testFound":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":339,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":23,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":107,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":372,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":52,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":324,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":181,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":304,"com.graphhopper.reader.PrinctonReaderTest.testRead":176,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":367,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":313,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":377,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":66,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":153,"com.graphhopper.reader.OSMReaderTest.testOneWay":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":310,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":237,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":180,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":397,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":331,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":96,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":137,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":206,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":327,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":307,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":164,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":293,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":36,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":350,"com.graphhopper.util.SimpleIntDequeTest.testPush":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":151,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":195,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":169,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":196,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":363,"com.graphhopper.GraphHopperTest.testPrepareOnly":139,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":120,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":168,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":135,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":249,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":209,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":40,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":330,"com.graphhopper.util.InstructionListTest.testFind":131,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":170},"transformations":[{"failures":[],"tindex":"68b9c106-82ba-11e5-888e-63b1505f531e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign())"},"variableMap":{"instruction":"instruction","instrJson":"instrJson"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:93","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3))"},"status":0},{"failures":[0],"tindex":"68ba0f27-82ba-11e5-888e-6dbc8818f425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:80","type":"CtIfImpl","sourcecode":"if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n    com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n    com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n    com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n} "},"status":-1},{"failures":[],"tindex":"68ba0f28-82ba-11e5-888e-4b68c21af78d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:287","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null)\n    return ;\n"},"variableMap":{"entryOther":"entryCurrent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:240","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.DijkstraBidirectionRef.(getName())));\n    \n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n        com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-1},{"failures":[],"tindex":"68ba3639-82ba-11e5-888e-7782ccbf9fbb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:656","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"68ba363a-82ba-11e5-888e-6feb6b921bce","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:230","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"variableMap":{"fileDetails":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:126","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Double.parseDouble(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"68ba363b-82ba-11e5-888e-b5cd87d0bfa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[49,50,51,52,53,54,1,55,56,57,58,2,3,59,60,61,62,63,4,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,10,11,123,124,12,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,16,17,18,19,20,21,0,140,141,22,142,143,144,145,146,23,24,25,147,148,149,26,150,27,151,28,152,29,153,154,30,31,32,33,34,155,35,36,156,157,158,37,159,38,160,39,161,40,162,163,41,42,43,44,45,164,165,166,167,168,169,170,171,172,173,174,175],"tindex":"68ba5d4c-82ba-11e5-888e-7fbf7d573133","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[176,177],"tindex":"68ba5d4d-82ba-11e5-888e-4b74b6581874","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:69","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n    continue;\n} "},"status":-1},{"failures":[178,179],"tindex":"68ba5d4e-82ba-11e5-888e-4f28aae9dc8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:63","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[180,110,128,130],"tindex":"68ba845f-82ba-11e5-888e-97e383e62bb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"from","maxEdgesCount":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,10,11,123,124,12,125,126,127,128,129,130,22,146,215,155,216,164,217,165,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,166,167,168,267,268,269,169,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,170,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],"tindex":"68ba8460-82ba-11e5-888e-d720650fd153","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"status":-1},{"failures":[],"tindex":"68baab71-82ba-11e5-888e-bde3bea3fc8d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"variableMap":{"i":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:498","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"68baab72-82ba-11e5-888e-3b9d70c54fdb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:183","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:84","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \"time:\") + com.graphhopper.util.StopWatch.(getSeconds())"},"status":0},{"failures":[],"tindex":"68baab73-82ba-11e5-888e-ad893b45a8ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:355","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = new long[int]"},"variableMap":{"n":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:400","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1))"},"status":-2},{"failures":[397,398],"tindex":"68bad284-82ba-11e5-888e-2da722f2a9cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtReturnImpl","sourcecode":"return \"hiking\".equals(java.lang.String)"},"status":-1},{"failures":[399],"tindex":"68bad285-82ba-11e5-888e-49db31c5e334","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"hash":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:416","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[],"tindex":"68bad286-82ba-11e5-888e-b3cfaa1e8938","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:147","type":"CtIfImpl","sourcecode":"if (double < double) {\n    int = int;\n    double = double;\n} "},"variableMap":{"maxDist":"weight","dist":"weight","indexWithMaxDist":"edge","i":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:208","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"68bad287-82ba-11e5-888e-131216524688","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:223","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n    return false;\n"},"variableMap":{"sortedNodes":"osmValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:151","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.Object))\n        return true;\n    \n}"},"status":-2},{"failures":[190,400,401],"tindex":"68baf998-82ba-11e5-888e-d37f75895ac4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false);\n"},"status":-1},{"failures":[95,97,101,180,402,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,10,11,123,124,12,125,126,127,128,129,130,139,403,0,140,142,143,144,146],"tindex":"68baf999-82ba-11e5-888e-533f6e5e770b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:99","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"68baab72-82ba-11e5-888e-3b9d70c54fdb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}