{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.reader.OSMReaderTest.testFerry":113,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":358,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":374,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":89,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":361,"com.graphhopper.coll.CompressedArrayTest.testCompress":363,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":283,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":143,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":329,"com.graphhopper.GraphHopperTest.testPrepare":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":41,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":69,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":353,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":66,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":260,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":16,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":369,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":56,"com.graphhopper.GraphHopperTest.testLoadOSM":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":203,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":308,"com.graphhopper.reader.OSMReaderTest.testSort":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":91,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":123,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":324,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":161,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":295,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":34,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":112,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":337,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":223,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":186,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":344,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":63,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":246,"com.graphhopper.coll.CompressedArrayTest.testCompress2":362,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":237,"com.graphhopper.GraphHopperAPITest.testLoad":110,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":381,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":144,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":94,"com.graphhopper.reader.OSMReaderTest.testBarriers":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":268,"com.graphhopper.util.GHUtilityTest.testCopy":347,"com.graphhopper.routing.PathTest.testFindInstruction":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":162,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":254,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":52,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":332,"com.graphhopper.util.InstructionListTest.testWayList2":355,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":211,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":238,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":188,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":134,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":333,"com.graphhopper.routing.PathBidirRefTest.testExtract":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":306,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":184,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":288,"com.graphhopper.storage.RAMDataAccessTest.testSegments":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":215,"com.graphhopper.util.GHUtilityTest.testSort2":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":75,"com.graphhopper.reader.OSMReaderTest.testMain":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":245,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":250,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":309,"com.graphhopper.storage.StorablePropertiesTest.testStore":8,"com.graphhopper.storage.GraphHopperStorageTest.testClone":137,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":331,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":270,"com.graphhopper.routing.PathTest.testTime":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":282,"com.graphhopper.util.GHUtilityTest.testSortDirected":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":320,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":31,"com.graphhopper.GraphHopperTest.testFootOnly":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":177,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":189,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":278,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":205,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":26,"com.graphhopper.routing.QueryGraphTest.testOneWay":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":328,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":364,"com.graphhopper.reader.OSMReaderTest.testWithBounds":124,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":249,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":242,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":133,"com.graphhopper.search.NameIndexTest.testFlush":0,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":60,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":164,"com.graphhopper.util.InstructionListTest.testWayList":354,"com.graphhopper.GraphHopperAPITest.testDisconnected179":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":271,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":266,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":297,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":106,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":54,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":156,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":82,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":129,"com.graphhopper.routing.PathTest.testWayList":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":318,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":248,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":302,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":234,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":23,"com.graphhopper.util.GHUtilityTest.testSort":348,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":341,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":192,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":301,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":373,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":193,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":225,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":380,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":305,"com.graphhopper.routing.PathTest.testFound":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":287,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":57,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":239,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":360,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":273,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":376,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":336,"com.graphhopper.reader.PrinctonReaderTest.testRead":127,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":235,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":263,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":244,"com.graphhopper.reader.OSMReaderTest.testFoot":114,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":368,"com.graphhopper.reader.OSMReaderTest.testOneWay":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":342,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":145,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":314,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":255,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":51,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":154,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":280,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":46,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":196,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":276,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":12,"com.graphhopper.routing.PathBidirRefTest.testExtract2":14,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":385,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":212,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":187,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":326,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":204,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":343,"com.graphhopper.GraphHopperTest.testFootAndCar":107,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":330,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":220,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":70,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":303,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":356,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":279,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":319,"com.graphhopper.util.InstructionListTest.testFind":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":222},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"8b44049e-8285-11e5-b91d-9f73b4507f95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:155","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,1,97,98,99,100,101,102,103,104,105,106,107,2,3,4,5,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,12,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"8b442baf-8285-11e5-b91d-a7aca9eb792f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"edgeEntryIndex","mainNodes":"edgeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:296","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"8b4452c0-8285-11e5-b91d-b7a5457164b3","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getMillis\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getInstructions\")"},"status":0},{"failures":[],"tindex":"8b4452c1-8285-11e5-b91d-c140b9104d4d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:309","type":"CtIfImpl","sourcecode":"if ((double < 0) || (java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative or NaN: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"8b4452c2-8285-11e5-b91d-6bcc74df8d1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:263","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"8b4452c3-8285-11e5-b91d-6dd3f9352c58","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"status":0},{"failures":[],"tindex":"8b4452c4-8285-11e5-b91d-5d37179ddacf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:223","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[360,96,1,103,104,105,106,107,2,3,4,5,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,361],"tindex":"8b4452c5-8285-11e5-b91d-057efe17cfc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"variableMap":{"heights":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[117,122],"tindex":"8b4479d6-8285-11e5-b91d-51b2915c8288","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:414","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"variableMap":{"segmentSizeInBytes":"i","capacity":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:386","type":"CtIfImpl","sourcecode":"if ((long & long) > 0) {\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n    long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n    if (int > 0) {\n        if (int < 0)\n            int = 0;\n        \n        long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n        long[][((long[].int) - 1)] = long;\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    } else {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        gnu.trove.list.TLongList.set(0, long);\n    }\n    int = int;\n} "},"status":-1},{"failures":[362,363,364,365,366,367,368,369,370,171,180,181,199,208,209,371],"tindex":"8b4479d7-8285-11e5-b91d-3789cbabb7af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8b4479d8-8285-11e5-b91d-f319d078c82f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.ensureNode(int)"},"status":0},{"failures":[83],"tindex":"8b4479d9-8285-11e5-b91d-45a76b6522aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:334","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , false)"},"variableMap":{"max":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , boolean)"},"status":-1},{"failures":[372,373,374,375,376,377,378,104,125,356],"tindex":"8b4479da-8285-11e5-b91d-af92591f67d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:115","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7))"},"variableMap":{"line":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-1},{"failures":[379,104,114,126],"tindex":"8b4479db-8285-11e5-b91d-4731d1b41ad9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"))"},"status":-1},{"failures":[380],"tindex":"8b44a0ec-8285-11e5-b91d-8534466270ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"variableMap":{"daPointer":"width","width":"width","this":"this","counter":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"status":-1},{"failures":[],"tindex":"8b44a0ed-8285-11e5-b91d-4bf7f1bbaa5c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"lastIndex","lastIndex":"counter","fromIndex":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:162","type":"CtForImpl","sourcecode":"for (int int = int + 1 ; int < int ; int++) {\n    com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int++;\n}"},"status":0},{"failures":[1,3,5,381,382,12],"tindex":"8b44a0ee-8285-11e5-b91d-4dc8c0a66365","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:160","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[86,91,92,126,135,383,144,145,151,158,159,229,384,238,239,245,252,253,385,311,386,320,321,327,334,335],"tindex":"8b44a0ef-8285-11e5-b91d-250d0e61071c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"8b44a0f0-8285-11e5-b91d-c1cf5b09b3f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:137","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{"sw":"neighborSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:349","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8b44a0f0-8285-11e5-b91d-c1cf5b09b3f5","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]},{"transformation":"8b4479d8-8285-11e5-b91d-f319d078c82f","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.reader.PillarInfo_void_ensureNode(int).b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.reader.PillarInfo_void_ensureNode(int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.reader.PillarInfo.ensureNode"]},"type":"staticDiff"}]},{"transformation":"8b4452c1-8285-11e5-b91d-c140b9104d4d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.BitUtil.toBitString"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}