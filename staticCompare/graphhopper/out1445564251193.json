{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":104,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":40,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":97,"com.graphhopper.reader.OSMReaderTest.testWithBounds":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":105,"com.graphhopper.reader.PrinctonReaderTest.testRead":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":86,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":30,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":62,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":42,"com.graphhopper.util.InstructionListTest.testWayList2":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":72,"com.graphhopper.util.InstructionListTest.testWayList":111,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":38,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":110,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":56,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":35,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":43,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":88,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":26,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":107,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":81,"com.graphhopper.reader.OSMReaderTest.testSort":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":39,"com.graphhopper.util.GHUtilityTest.testSort2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":41,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":50,"com.graphhopper.routing.PathTest.testWayList":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":64,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":78,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":90,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":54,"com.graphhopper.util.GHUtilityTest.testSort":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":75,"com.graphhopper.util.GHUtilityTest.testSortDirected":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":59,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":71,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":113,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":94,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":92,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":52,"com.graphhopper.reader.OSMReaderTest.testBarriers":13,"com.graphhopper.util.GHUtilityTest.testCopy":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":57},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"a0707201-7926-11e5-acaa-f1f94e3f59db","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[110,111,112,113,50,52,114,53,54],"tindex":"a0709912-7926-11e5-acaa-4178c0e1125e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:295","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"a0709913-7926-11e5-acaa-6713fb5c31a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLon()))"},"status":0},{"failures":[],"tindex":"a070c024-7926-11e5-acaa-ade13bdeb64f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:71","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"variableMap":{"bs":"bs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:68","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[],"tindex":"a070c025-7926-11e5-acaa-cffa2632ddee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:102","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"variableMap":{"cacheDir":"lockDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:50","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2},{"failures":[],"tindex":"a070c026-7926-11e5-acaa-4f249801142b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"a070c027-7926-11e5-acaa-65d3a990b8db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:101","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"a070c028-7926-11e5-acaa-190c3000b5c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:767","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLat(int)"},"variableMap":{"node":"oldNodeId","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:202","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"a070c029-7926-11e5-acaa-c36b8a62bfc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:254","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-2},{"failures":[],"tindex":"a070e73a-7926-11e5-acaa-a191dfe0b7ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:766","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.Lock.tryLock()))\n    throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n"},"status":-2},{"failures":[],"tindex":"a070e73b-7926-11e5-acaa-65307f2f9ce2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"a070e73c-7926-11e5-acaa-5d7344129b50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:275","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\")"},"status":-2},{"failures":[],"tindex":"a070e73d-7926-11e5-acaa-817b25bee9bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[],"tindex":"a070e73e-7926-11e5-acaa-a3cab6274868","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"a070e73f-7926-11e5-acaa-07c1cf05dc0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:592","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double);\n} else if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-2},{"failures":[],"tindex":"a0710e50-7926-11e5-acaa-3f7b863209dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"edgeTo","cl":"currEdge","tmpPrev":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:87","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"a0710e51-7926-11e5-acaa-bfb8346b6f00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:181","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.dimension\", com.graphhopper.storage.BaseGraph.com.graphhopper.storage.NodeAccess.getDimension())"},"status":-2},{"failures":[],"tindex":"a0710e52-7926-11e5-acaa-bb94d47ed054","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:183","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"tMode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:966","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a0710e53-7926-11e5-acaa-b75fe886c2d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:606","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"variableMap":{"maxTurnCosts":"currentIndex","turnRestrictionBit":"key","shift":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:98","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = ~int;\n    int--;\n    if (int < 0) {\n        return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()));\n    } \n    long long = long[][int];\n    if (long == long) {\n        return int * (int);\n    } \n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = com.graphhopper.storage.VLongStorage[][int];\n    long long = com.graphhopper.storage.VLongStorage.getPosition();\n    com.graphhopper.storage.VLongStorage.seek(0);\n    int int = (int) == int ? (int) + 1 : int;\n    int int = com.graphhopper.coll.OSMIDSegmentedMap.getNoEntryValue();\n    for (int int = 1 ; int < int ; int++) {\n        long += com.graphhopper.storage.VLongStorage.readVLong();\n        if (long == long) {\n            int = (int * (int)) + int;\n            break;\n        } else if (long > long) {\n            break;\n        } \n    }\n    com.graphhopper.storage.VLongStorage.seek(long);\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"a0710e54-7926-11e5-acaa-0386e14632c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:83","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry) != null) {\n    (int)++;\n    com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry;\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}