{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":72,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":56,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":73,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":23,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":31,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":10,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":59,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":20,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":55,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":89,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":103,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":22,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":66,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":68,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":97,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":87,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":18,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":77,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":17,"com.graphhopper.routing.PathTest.testWayList":37,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":104,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":65,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":6,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":57,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":2,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":21,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":14,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":34,"com.graphhopper.coll.IntIntBinHeapTest.testSize":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":86,"com.graphhopper.coll.CompressedArrayTest.testCompress2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":90,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":102,"com.graphhopper.GraphHopperAPITest.testLoad":44,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":30,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":98,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":45,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":71,"com.graphhopper.util.GHUtilityTest.testCopy":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":88},"transformations":[{"failures":[0,1,2],"tindex":"058a1cbf-8275-11e5-96f2-d7e977df74ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:170","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int)"},"status":-1},{"failures":[],"tindex":"058a43d0-8275-11e5-96f2-9b69f3fab5e1","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:104","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"058a43d1-8275-11e5-96f2-2dd9698e69ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.CHEdgeIteratorState.getDistance()"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"058a6ae2-8275-11e5-96f2-734d0673db90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"tmpOffset","degree":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:849","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[38,39,40,41],"tindex":"058a6ae3-8275-11e5-96f2-c901d8175b98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"058a6ae4-8275-11e5-96f2-f1c81db690cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:238","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[42,43],"tindex":"058a91f5-8275-11e5-96f2-7f92832df390","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:70","type":"CtAssignmentImpl","sourcecode":"byte[] = java.util.Arrays.copyOf(byte[], int)"},"status":-1},{"failures":[],"tindex":"058a91f6-8275-11e5-96f2-05682a8a29be","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"minLon","prevOrientation":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[44,6,8,9,45,46,47,48,10,12,13,15,17,18,20,22,23,24,49,28,29,50,32,33,36,37,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"058a91f7-8275-11e5-96f2-db7cb8cd9b6a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:700","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.clear()"},"variableMap":{"pointList":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:911","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[],"tindex":"058ae018-8275-11e5-96f2-b9b4d63b2ad3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"guess","S_SKIP_EDGE2":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:411","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"058ae019-8275-11e5-96f2-b50070c8c440","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:734","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getBaseNode()"},"status":-2},{"failures":[5],"tindex":"058ae01a-8275-11e5-96f2-81893e193379","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:285","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField()) {\n    for (long long = long + (int) ; long < long ; long += int) {\n        com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n    }\n} "},"status":-1},{"failures":[],"tindex":"058b072b-8275-11e5-96f2-852bc49030a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:150","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.shapes.Circle.getBounds().intersect(com.graphhopper.util.shapes.Circle.getBounds()))) {\n    return false;\n} "},"variableMap":{"c":"c","this":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:191","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.BBox.contains(com.graphhopper.util.shapes.Circle.getBounds())"},"status":-2},{"failures":[],"tindex":"058b072c-8275-11e5-96f2-1188c010237c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:156","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[64,51,65],"tindex":"058b072d-8275-11e5-96f2-4f0a6da72042","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.getTime()"},"variableMap":{"path":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:227","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, com.graphhopper.util.EdgeIteratorState.getFlags(), false)"},"status":-1},{"failures":[66,67],"tindex":"058b072e-8275-11e5-96f2-af7ab9a30786","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"variableMap":{"workerThreads":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:401","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((long[][int]) < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"058b2e3f-8275-11e5-96f2-4b7144e76fec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:214","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(com.graphhopper.storage.AbstractDataAccess.byte[])"},"variableMap":{"buf":"bb","com.graphhopper.storage.AbstractDataAccess.EMPTY":"values"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:370","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], int, int)"},"status":0},{"failures":[68,69,70,71],"tindex":"058b2e40-8275-11e5-96f2-81cb96b17914","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:294","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.clear()"},"status":-1},{"failures":[],"tindex":"058b2e41-8275-11e5-96f2-23fa77a135e8","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:39","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lon\"))"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:38","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lat\"))"},"status":-2},{"failures":[72,73,74,75,76,77,78,8,79,80,81,82,83,84,85,86,12,87,88,89,90,91,92,93,94,17,95,96,97,98,99,100,101,102,22,103,104,105,106,107,108],"tindex":"058b2e42-8275-11e5-96f2-db928b44d07f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"058b2e3f-8275-11e5-96f2-4b7144e76fec","diffs":[{"methodsDiff":{"delete":["java.nio.ByteBuffer.get"]},"type":"staticDiff"}]}]}