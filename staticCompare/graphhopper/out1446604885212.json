{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":240,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":245,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.reader.OSMReaderTest.testFerry":25,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":52,"com.graphhopper.routing.QueryGraphTest.testOneWay":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":189,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":167,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":39,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":194,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":109,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":94,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":147,"com.graphhopper.GraphHopperTest.testPrepare":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":131,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":106,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":9,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":121,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":168,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":228,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":144,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":83,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":116,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":159,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":4,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":169,"com.graphhopper.reader.OSMReaderTest.testSort":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":239,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":71,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":111,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":14,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":242,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":124,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":164,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":56,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":128,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":45,"com.graphhopper.util.GHUtilityTest.testSort":256,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":139,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":54,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":86,"com.graphhopper.GraphHopperAPITest.testLoad":67,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":220,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":93,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":11,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":48,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":154,"com.graphhopper.util.GHUtilityTest.testCopy":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":85,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":237,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":89,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":231,"com.graphhopper.reader.PrinctonReaderTest.testRead":227,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":179,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":72,"com.graphhopper.reader.OSMReaderTest.testFoot":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":171,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":250,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":99,"com.graphhopper.reader.OSMReaderTest.testOneWay":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":186,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":221,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":226,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":210,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":10,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":21,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":105,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":175,"com.graphhopper.util.GHUtilityTest.testSort2":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":195,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":165,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":6,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":88,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":50,"com.graphhopper.storage.GraphHopperStorageTest.testClone":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":75,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":97,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":222,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":3,"com.graphhopper.routing.PathTest.testTime":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":208,"com.graphhopper.util.GHUtilityTest.testSortDirected":257,"com.graphhopper.GraphHopperTest.testPrepareOnly":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":184,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":126,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":156,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":178,"com.graphhopper.GraphHopperTest.testFootOnly":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":141,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":201,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":174},"transformations":[{"failures":[],"tindex":"8aa7fed0-829d-11e5-b74c-a9b7e299e70d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1047","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":0},{"failures":[],"tindex":"8aa825e1-829d-11e5-b74c-e52cd774a19c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeByte(((byte)(long)))"},"variableMap":{"this":"currentWriter","i":"latlon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeVLong(long)"},"status":-2},{"failures":[],"tindex":"8aa84cf2-829d-11e5-b74c-75c49150e8e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"subqueryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:727","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":0},{"failures":[],"tindex":"8aa84cf3-829d-11e5-b74c-ff4897c18b5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:165","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"8aa84cf4-829d-11e5-b74c-63eff3a056f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"variableMap":{"properties":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"8aa84cf5-829d-11e5-b74c-2fabd6264391","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:103","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    java.util.Set<java.lang.Integer>.add(int);\n}"},"status":-1},{"failures":[],"tindex":"8aa87406-829d-11e5-b74c-39a73abdaa9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:51","type":"CtLocalVariableImpl","sourcecode":"int int = javax.xml.stream.XMLStreamReader.getEventType()"},"status":-2},{"failures":[38,39],"tindex":"8aa87407-829d-11e5-b74c-7bbccb1dbf56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\")"},"variableMap":{"track":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-1},{"failures":[40,41,42,43,44,38,45,46,47,48,49],"tindex":"8aa87408-829d-11e5-b74c-cf3d4a9dc134","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:764","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String))"},"status":-1},{"failures":[50,51,3,52,13,53,54,19,55,56,40,41,42,43,57,58,59,44,38,45,46,47,60,48,49,25,26,27,61,28,62,63,64,29,30,31,32,65,66],"tindex":"8aa89b19-829d-11e5-b74c-475eb29a0e15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:306","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"Traversal CHGraph is only possible if BaseGraph is frozen\""},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":-1},{"failures":[],"tindex":"8aa89b1a-829d-11e5-b74c-43ecc97503e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"N_ELE","indexDivisor":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:264","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[],"tindex":"8aa89b1b-829d-11e5-b74c-0dec51f0f500","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":-1},{"failures":[],"tindex":"8aa89b1c-829d-11e5-b74c-ff2c3482edb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:168","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"8aa8c22d-829d-11e5-b74c-03854f90d0e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:270","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,43,58,59,44,47,26,27,64,66,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"8aa8c22e-829d-11e5-b74c-5f75f69fd442","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:701","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"8aa8c22f-829d-11e5-b74c-0962d858c3b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:83","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.util.zip.GZIPInputStream(java.io.InputStream)"},"variableMap":{"is":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:44","type":"CtAssignmentImpl","sourcecode":"this.java.io.InputStream = java.io.InputStream"},"status":-2},{"failures":[],"tindex":"8aa8e940-829d-11e5-b74c-8d6c5a6a6075","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:560","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)"},"status":0},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,27,61],"tindex":"8aa8e941-829d-11e5-b74c-336a2b0053fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:246","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.QueryResult.getClosestNode()"},"status":-1},{"failures":[67,0,176,1,2,177,51,178,179,180,181,3,69,182,183,184,185,186,187,188,189,7,8,190,77,191,192,193,194,195,196,197,198,11,12,199,200,201,202,203,204,205,154,155,206,13,207,54,85,208,209,210,211,212,213,214,215,17,18,216,217,19,56,93,218,219,220,221,222,223,224,225,23,24,226,40,41,100,101,102,103,104,105,42,43,57,58,59,44,38,46,47,60,48,25,26,27,61,28,62,63,64,29,30,31,32,65,66,227,228,106,229,107,108,109,230,231,232,110,111,112,113,114,233,115,116,117,118,119,120,121,122,234,123,235,236,124,237,125,126,238,239,127,128,129,130,131,240,241,132,133,242,134,33,243,244,245,34,246,136,247,137,248,249,250,142,251,143,36,37,144,252,253,254,255,153,256,257,258],"tindex":"8aa8e942-829d-11e5-b74c-9d59f0f0acad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:339","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"8aa91053-829d-11e5-b74c-a11d2e987741","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:117","type":"CtForImpl","sourcecode":"for (int int = (byte[].int) - 1 ; int >= 0 ; int--) {\n    byte byte = byte[][int];\n    for (int int = 0 ; int < 8 ; int++) {\n        if ((byte & byte) == 0)\n            java.lang.StringBuilder.append('0');\n        else\n            java.lang.StringBuilder.append('1');\n        \n        byte <<= 1;\n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8aa8e940-829d-11e5-b74c-8d6c5a6a6075","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.setElevationProvider"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setElevationProvider(com.graphhopper.reader.dem.ElevationProvider).b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setElevation(boolean).b","com.graphhopper.GraphHopper_com.graphhopper.GraphHopper_setElevationProvider(com.graphhopper.reader.dem.ElevationProvider).t1"]},"type":"branch"}]},{"transformation":"8aa84cf2-829d-11e5-b74c-75c49150e8e1","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"type":"staticDiff"}]},{"transformation":"8aa7fed0-829d-11e5-b74c-a9b7e299e70d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}