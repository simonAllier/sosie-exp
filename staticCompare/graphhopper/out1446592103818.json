{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":237,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":245,"com.graphhopper.GraphHopperAPITest.testNoLoad":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":98,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":177,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":178,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":235,"com.graphhopper.routing.QueryGraphTest.testOneWay":244,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":131,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":189,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":107,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":265,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":230,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":161,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":270,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":200,"com.graphhopper.util.InstructionListTest.testWayList":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":44,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":185,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":100,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":57,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":248,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":258,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":233,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":120,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":133,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":172,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":212,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":192,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":220,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":241,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":48,"com.graphhopper.routing.PathTest.testWayList":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":207,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":144,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":128,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":214,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":56,"com.graphhopper.util.GHUtilityTest.testSort":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":101,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":203,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":77,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":197,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":260,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.util.TranslationMapTest.testToString":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":188,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":163,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":195,"com.graphhopper.routing.PathTest.testFound":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":109,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":115,"com.graphhopper.util.GHUtilityTest.testCopy":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":254,"com.graphhopper.routing.PathTest.testFindInstruction":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":146,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":255,"com.graphhopper.util.InstructionListTest.testEmptyList":11,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":208,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":213,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":226,"com.graphhopper.reader.PrinctonReaderTest.testRead":273,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":79,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":229,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":92,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":138,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":247,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":268,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":196,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":105,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":164,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":224,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":26,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":183,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":142,"com.graphhopper.util.GHUtilityTest.testSort2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":215,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":96,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":153,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":121,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":129,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":89,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":155,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":253,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":266,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.routing.PathTest.testTime":51,"com.graphhopper.util.InstructionListTest.testCreateGPX":17,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":211,"com.graphhopper.util.GHUtilityTest.testSortDirected":182,"com.graphhopper.GraphHopperTest.testPrepareOnly":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":86,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":99,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":210,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":78,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":238,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":19,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":122,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":274,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":52,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":250,"com.graphhopper.util.InstructionListTest.testFind":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":141},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"c8585e9f-827f-11e5-ae5e-358057ec92f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((6 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[],"tindex":"c85885b0-827f-11e5-ae5e-617d0549abd9","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"nodeEntryBytes","tmpNode":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:287","type":"CtForImpl","sourcecode":"for (long long = long + (int) ; long < long ; long += int) {\n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n}"},"status":-2},{"failures":[],"tindex":"c85885b1-827f-11e5-ae5e-bb0818b5cf2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"weight","java.lang.Math.PI":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,4,21,22,23,24,25,26,27,28,29,30,31,32,5,33,6,7,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"c85885b2-827f-11e5-ae5e-595af23f0ba8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.add(com.graphhopper.util.TranslationMap.TranslationHashMap)"},"status":-1},{"failures":[],"tindex":"c85885b3-827f-11e5-ae5e-9f2ab29e10db","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"b_lat_deg","dMinLat":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:136","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[],"tindex":"c85885b4-827f-11e5-ae5e-95bbf57f6012","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"c858acc5-827f-11e5-ae5e-6b492ec114dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:81","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getInternalNodeIdOfOsmNode(this.long)"},"status":-2},{"failures":[],"tindex":"c858acc6-827f-11e5-ae5e-6dafb507077c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:116","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"c858acc7-827f-11e5-ae5e-9b13726b3d35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:158","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[75,76,77,78,79,1,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,2,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,3,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,10,14,18,19,183,184,185,20,4,21,22,23,24,25,26,27,28,29,30,31,32,5,6,7,34,186,187,188,189,190,191,192,193,194,195,196,197,48,49,52,53,56,57,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,58,59,61,62,63,64,65,66,68,69,70,71,72,74,248],"tindex":"c858acc8-827f-11e5-ae5e-173450ff6373","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:155","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-1},{"failures":[],"tindex":"c858d3d9-827f-11e5-ae5e-e7be064592d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:146","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[],"tindex":"c858d3da-827f-11e5-ae5e-8122ea368769","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:71","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"variableMap":{"bs":"toRemoveSet"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:651","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode())"},"status":-2},{"failures":[75,1,81,249,250,89,93,251,252,96,253,97,254,255,105,109,256,257,112,258,2,144,259,260,152,156,261,262,159,263,3,161,264,265,169,173,266,267,176,268,180,13,14,18,183,21,22,23,24,25,28,29,30,31,32,5,7,186,187,188,189,190,192,193,194,48,49,52,53,54,56,57,198,269,199,200,201,202,207,209,212,213,215,217,218,219,221,270,223,224,271,225,226,227,272,228,229,230,232,233,241,243,58,61,62,63,64,65,68,69,70,72,74,273,248],"tindex":"c858d3db-827f-11e5-ae5e-fb868f5baa6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[91,96,107,112,121,122,274,124,125,126,127,128,134,135,275,137,138,139,140,141,154,159,171,176,14,21,22,23,24,25,26,31,54,198,200,201,205,208,209,213,214,216,217,276,220,221,277,236,237,278,242,247,58,65,67],"tindex":"c858d3dc-827f-11e5-ae5e-fd046d64857e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:912","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[279,113,114,115,116,117,118,119,120,121,122,274,123,124,125,126,127,128,129,130,131,132,133,134,135,275,136,137,138,139,140,141,142,184,185,21,22,23,24,25,26,28,29,30,31,32,5,7,34,187,189,190,192,193,208,213,214,217,58,63,64,65],"tindex":"c858faed-827f-11e5-ae5e-89edb74aeb6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:35","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-1},{"failures":[1,94,96,110,112,120,133,2,157,159,3,174,176,14,54,218],"tindex":"c858faee-827f-11e5-ae5e-8f1c89788a85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"arrayLength"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"status":-1},{"failures":[],"tindex":"c858faef-827f-11e5-ae5e-09054bc8da39","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:312","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.close()"},"status":-2},{"failures":[280],"tindex":"c858faf0-827f-11e5-ae5e-2fdf09355d3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:421","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"OSM file cannot be empty.\");\n"},"variableMap":{"osmFileStr":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:168","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"c858faf1-827f-11e5-ae5e-4d87083f26f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:768","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.BaseGraph.isTestingEnabled()) {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.BaseGraph.getAllEdges();\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getBaseNode();\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        java.lang.String java.lang.String = ((((((((((((((((((((((com.graphhopper.util.EdgeIterator.getEdge()) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", base:\") + int) + \", adj:\") + int) + \", nodeCount:\") + (int);\n        if (int >= (int))\n            throw new java.lang.RuntimeException((\"Adj.node problem with edge \" + java.lang.String));\n        \n        if (int >= (int))\n            throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n        \n        try {\n            com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n        } catch (java.lang.Exception ex) {\n            org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"adj:\" + int));\n        }\n        try {\n            com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n        } catch (java.lang.Exception ex) {\n            org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"base:\" + int));\n        }\n    }\n    com.graphhopper.util.EdgeExplorer.setBaseNode(((int) - 1)).toString();\n} "},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c858faf1-827f-11e5-ae5e-4d87083f26f1","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.getAdjNode","java.lang.Object.getClass","com.graphhopper.storage.BaseGraph.getAllEdges","org.slf4j.LoggerFactory.getLogger","com.graphhopper.util.EdgeIteratorState.getBaseNode","com.graphhopper.coll.GHBitSet.contains","com.graphhopper.util.EdgeIterator.next","java.lang.Object.toString","org.slf4j.Logger.error","com.graphhopper.util.EdgeExplorer.setBaseNode","com.graphhopper.util.EdgeIteratorState.getEdge"]},"branchesDiff":{"delete":["c4","c5","l3","t0","t1","t2"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b"],"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_int_getEdge().b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_int_getBaseNode().b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_int_getAdjNode().b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b"],"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b"],"com.graphhopper.reader.OSMReaderTest.testOneWay":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b"]},"type":"branch"}]}]}