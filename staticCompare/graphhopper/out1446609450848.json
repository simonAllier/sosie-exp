{"failureDictionary":{"com.graphhopper.util.BitUtilBigTest.testToDouble":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":63,"com.graphhopper.routing.PathTest.testFindInstruction":4,"com.graphhopper.reader.OSMReaderTest.testFerry":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":29,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":60,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":42,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":21,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":28,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":16,"com.graphhopper.GraphHopperTest.testPrepare":106,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.util.InstructionListTest.testWayList2":52,"com.graphhopper.reader.OSMReaderTest.testFoot":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":31,"com.graphhopper.util.InstructionListTest.testWayList":51,"com.graphhopper.reader.OSMReaderTest.testOneWay":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":37,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":50,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":77,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":22,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":25,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":88,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":107,"com.graphhopper.routing.PathBidirRefTest.testExtract":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":59,"com.graphhopper.GraphHopperTest.testLoadOSM":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":56,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":13,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":41,"com.graphhopper.reader.OSMReaderTest.testMain":93,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":0,"com.graphhopper.routing.PathTest.testWayList":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":47,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":7,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":102,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":78,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":40,"com.graphhopper.GraphHopperTest.testFootAndCar":108,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":80,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":85,"com.graphhopper.GraphHopperTest.testPrepareOnly":70,"com.graphhopper.util.BitUtilBigTest.testToLong":69,"com.graphhopper.GraphHopperTest.testVia":105,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":76,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":61,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":71,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":45,"com.graphhopper.GraphHopperTest.testFootOnly":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":62,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":1,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":15,"com.graphhopper.util.InstructionListTest.testFind":49,"com.graphhopper.reader.OSMReaderTest.testBarriers":95,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":33,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":75},"transformations":[{"failures":[],"tindex":"2bfbd95a-82a8-11e5-a86c-6bd36b6b3f49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedTo","v":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:82","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"2bfc006b-82a8-11e5-a86c-8177f1f423b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"backwardBit","blockByDefault":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"2bfc006c-82a8-11e5-a86c-91d1a34ad915","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:182","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"2bfc277d-82a8-11e5-a86c-9d473409771e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:242","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[66,53],"tindex":"2bfc277e-82a8-11e5-a86c-0166228fc06b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"2bfc277f-82a8-11e5-a86c-6f186417e76e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:177","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap.merge(com.graphhopper.util.PMap.getMap())"},"variableMap":{"read":"hintsMap","this":"hintsMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:223","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap"},"status":-2},{"failures":[67],"tindex":"2bfc2780-82a8-11e5-a86c-0f04604df544","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"status":-1},{"failures":[68,69],"tindex":"2bfc2781-82a8-11e5-a86c-c776158277c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"2bfc2782-82a8-11e5-a86c-27e8207bc562","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"shortcuts.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[83],"tindex":"2bfc2783-82a8-11e5-a86c-7b76b8d90da2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:156","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"2bfc4e94-82a8-11e5-a86c-638859f9cdef","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"durationInHours","speed":"unknownSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:547","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"2bfc4e95-82a8-11e5-a86c-359e76ce78b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:76","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphExtension = new com.graphhopper.routing.QueryGraph.QueryGraphTurnExt(this)"},"variableMap":{"wrappedExtension":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:396","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.create(long)"},"status":-2},{"failures":[],"tindex":"2bfc4e96-82a8-11e5-a86c-af27df18a843","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:156","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[12,13],"tindex":"2bfc4e97-82a8-11e5-a86c-a9a0d7ca5231","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"minOneWayNetworkSize","nodeCount":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtIfImpl","sourcecode":"if (((int) <= 0) && ((int) <= 0))\n    return ;\n"},"status":-1},{"failures":[],"tindex":"2bfdd538-82a8-11e5-a86c-7756df40ce3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:52","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:924","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest, com.graphhopper.GHResponse)"},"status":-2},{"failures":[70,72,74,75,80,84,85,86,87,81],"tindex":"2bfdd539-82a8-11e5-a86c-0394caef7183","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:81","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[(int) + 10]"},"variableMap":{"endIndexPlusOne":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:207","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = int[][][int]"},"status":-1},{"failures":[88,89,90,91],"tindex":"2bfdd53a-82a8-11e5-a86c-6fdc18b59597","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"a","adjNode":"b","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.edge(int, int).setDistance(double).setFlags(com.graphhopper.storage.BaseGraph.com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-1},{"failures":[],"tindex":"2bfdd53b-82a8-11e5-a86c-675d5c478c52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:56","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar"},"variableMap":{"aStar":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[92,66,93,94,95,96,97,98,99,100,101,67,102,53,103,70,104,105,106,107,108,71,72,73,74,109,110],"tindex":"2bfdd53c-82a8-11e5-a86c-8db9b6ad935d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:195","type":"CtIfImpl","sourcecode":"if (\"node\".equals(java.lang.String)) {\n    long = java.lang.Long.parseLong(java.lang.String);\n    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n} "},"status":-1},{"failures":[],"tindex":"2bfdd53d-82a8-11e5-a86c-3bf7e721afc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:680","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2bfdd53d-82a8-11e5-a86c-3bf7e721afc5","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.DijkstraOneToMany_int_findEndNode(int,int).e5","com.graphhopper.routing.DijkstraOneToMany_int_findEndNode(int,int).t4","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).t1","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e2","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e3","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).b","com.graphhopper.routing.DijkstraOneToMany_int_findEndNode(int,int).t10","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).l6"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.CHEdgeIteratorState.setWeight"]},"type":"staticDiff"}]}]}