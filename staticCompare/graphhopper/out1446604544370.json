{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":120,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":133,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":263,"com.graphhopper.reader.OSMReaderTest.testFerry":85,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":190,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":26,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":148,"com.graphhopper.routing.QueryGraphTest.testOneWay":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":308,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":54,"com.graphhopper.storage.VLongStorageTest.testWrite":100,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":280,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":183,"com.graphhopper.coll.CompressedArrayTest.testCompress":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":279,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":243,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":309,"com.graphhopper.GraphHopperTest.testPrepare":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":52,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":235,"com.graphhopper.search.NameIndexTest.testFlush":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":126,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":249,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":106,"com.graphhopper.util.InstructionListTest.testWayList":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":114,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":199,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":204,"com.graphhopper.GraphHopperAPITest.testDisconnected179":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":268,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":55,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":168,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":186,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":287,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":46,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":132,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":56,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":254,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":291,"com.graphhopper.reader.OSMReaderTest.testSort":34,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":117,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":11,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":207,"com.graphhopper.storage.RAMDataAccessTest.testHeader":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":124,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":154,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":163,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":166,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":125,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":28,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":113,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":302,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":208,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":83,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":21,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":246,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":31,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":134,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":2,"com.graphhopper.util.GHUtilityTest.testSort":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":59,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":233,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":237,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":289,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":316,"com.graphhopper.coll.CompressedArrayTest.testCompress2":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":179,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":12,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":216,"com.graphhopper.GraphHopperAPITest.testLoad":36,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":221,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":181,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":305,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":111,"com.graphhopper.util.GHUtilityTest.testCopy":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":266,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":135,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":104,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":218,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":270,"com.graphhopper.util.InstructionListTest.testEmptyList":198,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":144,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":259,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":230,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":219,"com.graphhopper.reader.PrinctonReaderTest.testRead":161,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":131,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":147,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":311,"com.graphhopper.util.InstructionListTest.testWayList2":201,"com.graphhopper.reader.OSMReaderTest.testFoot":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":63,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":60,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":61,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":293,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":178,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":245,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":296,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":256,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":236,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":276,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":312,"com.graphhopper.routing.PathBidirRefTest.testExtract":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":170,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":43,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":283,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":42,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":40,"com.graphhopper.storage.RAMDataAccessTest.testSegments":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":67,"com.graphhopper.util.GHUtilityTest.testSort2":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":118,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":137,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":24,"com.graphhopper.routing.PathBidirRefTest.testExtract2":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":313,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":84,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":69,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":227,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":128,"com.graphhopper.storage.StorablePropertiesTest.testStore":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":57,"com.graphhopper.storage.GraphHopperStorageTest.testClone":238,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":310,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":136,"com.graphhopper.GraphHopperTest.testFootAndCar":47,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":265,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":278,"com.graphhopper.util.GHUtilityTest.testSortDirected":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":211,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":301,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":146,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":115,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":80,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":70,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":151,"com.graphhopper.GraphHopperTest.testFootOnly":48,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":75,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":275,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":300,"com.graphhopper.util.InstructionListTest.testFind":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":66},"transformations":[{"failures":[0,1,2,3],"tindex":"bf7fc950-829c-11e5-b2f6-299e5620752a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:108","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"bf801771-829c-11e5-b2f6-492ed051c9ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"rw\");\n    try {\n        long long = com.graphhopper.storage.RAMDataAccess.getCapacity();\n        com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        for (int int = 0 ; int < (byte[][].int) ; int++) {\n            byte[] byte[] = byte[][][int];\n            java.io.RandomAccessFile.write(byte[]);\n        }\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Couldn\\'t store bytes to \" + com.graphhopper.storage.AbstractDataAccess.(toString())) , java.lang.Exception);\n}"},"status":-1},{"failures":[32],"tindex":"bf801772-829c-11e5-b2f6-7b39f88bf523","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:135","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,6,7,8,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"bf801773-829c-11e5-b2f6-09f2045c3e9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"intIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"status":-1},{"failures":[],"tindex":"bf803e84-829c-11e5-b2f6-11c65174fb9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:407","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed = null"},"status":0},{"failures":[36,38,39,40,41,42,43,44,45,46,6,7,8],"tindex":"bf803e85-829c-11e5-b2f6-e734fbca2458","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"variableMap":{"entry":"vehicle","entryVal":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:952","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    java.lang.String = com.graphhopper.GraphHopper.getDefaultVehicle().toString();\n"},"status":-1},{"failures":[85,86,33,34,35,87,88,89,90,91,92,93,94,95,96,5,97,44,45,46,47,6,7,98,8,48,9],"tindex":"bf803e86-829c-11e5-b2f6-47c4c1f47ff7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:168","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    long long = 1;\n    long long = 1;\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n            boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n            if (boolean) {\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n                int int = gnu.trove.list.TLongList.size();\n                for (int int = 0 ; int < int ; int++) {\n                    com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n                }\n                if (((++long) % 5000000) == 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n                } \n            } \n        } \n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n            if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n                com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n            \n            if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n                com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n            \n            if (((++long) % 50000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(\"Problem while parsing file\" , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-1},{"failures":[],"tindex":"bf806597-829c-11e5-b2f6-2d8aa3c6eb3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:353","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int])"},"status":0},{"failures":[89,99,10],"tindex":"bf806598-829c-11e5-b2f6-071fa9c5fd12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:120","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (com.graphhopper.storage.BaseGraph.int)"},"status":-1},{"failures":[],"tindex":"bf808ca9-829c-11e5-b2f6-c3324e13fc10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"com.graphhopper.util.EdgeIterator.NO_EDGE","bLen":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:140","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[100,101,102,103],"tindex":"bf808caa-829c-11e5-b2f6-6f54d749da37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:138","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,6,7,8,48,104,32,105,106,107,108,109,110,111,112,113,49,114,115,116,117,50,51,118,119,52,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"bf808cab-829c-11e5-b2f6-9f1ba2c5df12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"currTo","edgeEntry":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":-1},{"failures":[33,34,35,36,38,39,40,41,42,43,44,45,46,47,6,7,8,48,133,49,50,51,52,134,135,136,137,138,53,54,55,56,57,58,59,61,62,63,64,65,66,67,139,140,141,142,143,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84],"tindex":"bf80b3bc-829c-11e5-b2f6-9f39776c4f17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"fromLat","fullDist2D":"dLon","decDist2DSum":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:66","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"status":-1},{"failures":[64,81,144,145,146],"tindex":"bf80b3bd-829c-11e5-b2f6-abd375c7c37a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n        if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        \n        double = double;\n    } \n} "},"status":-1},{"failures":[39,40],"tindex":"bf80b3be-829c-11e5-b2f6-d716d2d5cc91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1045","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(int), true)"},"status":-1},{"failures":[],"tindex":"bf80b3bf-829c-11e5-b2f6-297b9ba3e558","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:294","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.setEdgesHeader();\n    com.graphhopper.storage.CHGraphImpl.flush();\n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:310","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.close();\n}"},"status":0},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,6,7,8,48,147,148,99,149,133,150,151,152,153,154,155,156,157,158,159,111,49,50,51,52,125,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,160],"tindex":"bf80dad0-829c-11e5-b2f6-5b211e8f1a48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"status":-1},{"failures":[],"tindex":"bf80dad1-829c-11e5-b2f6-5d691117e653","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"bytes":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:97","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseLongLongArray.binarySearch(long[], 0, ((int) + 1), long)"},"status":-2},{"failures":[],"tindex":"bf80dad2-829c-11e5-b2f6-eb6b4592ea8d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:149","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[161,162,163,85,86,33,34,35,87,88,89,90,91,92,93,95,36,37,96,5,38,39,40,41,42,43,44,45,46,47,6,7,98,8,48,9,147,148,99,149,133,151,152,153,154,155,156,157,158,159,164,165,166,167,0,1,2,168,104,32,105,106,107,108,109,110,111,112,113,49,114,115,116,117,50,51,118,119,52,120,121,122,123,124,125,126,169,127,170,171,172,173,174,128,129,130,131,175,176,177,132,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,53,54,55,56,57,58,59,61,62,63,64,65,66,67,139,140,141,142,143,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,206,10,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,19,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,160,289,24,290,25,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"tindex":"bf8101e3-829c-11e5-b2f6-15ed8c841a82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs(0, com.graphhopper.storage.DataAccess.getCapacity())"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bf806597-829c-11e5-b2f6-2d8aa3c6eb3e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.add"]},"type":"staticDiff"}]},{"transformation":"bf80b3bf-829c-11e5-b2f6-297b9ba3e558","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":["com.graphhopper.storage.CHGraphImpl_void_close().b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":["com.graphhopper.storage.CHGraphImpl_int_setEdgesHeader().b","com.graphhopper.storage.CHGraphImpl_void_flush().b","com.graphhopper.storage.CHGraphImpl_void_close().b"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.storage.CHGraphImpl_void_close().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.close"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]}]}