{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":62,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":72,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":79,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":142,"com.graphhopper.reader.OSMReaderTest.testFerry":84,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":176,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":138,"com.graphhopper.reader.OSMReaderTest.testWithBounds":95,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":159,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":153,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":74,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":120,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":110,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":178,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":61,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":27,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":44,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":6,"com.graphhopper.util.BitUtilLittleTest.testToBitString":194,"com.graphhopper.util.InstructionListTest.testWayList":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":53,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":198,"com.graphhopper.GraphHopperAPITest.testDisconnected179":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":165,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":139,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":189,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":187,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":140,"com.graphhopper.reader.OSMReaderTest.testSort":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":56,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":36,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":66,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":76,"com.graphhopper.routing.PathTest.testWayList":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":133,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":3,"com.graphhopper.coll.OSMIDMapTest.testGet2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":51,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":134,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":58,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":116,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":47,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":80,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":169,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":83,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":184,"com.graphhopper.GraphHopperAPITest.testLoad":7,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":174,"com.graphhopper.reader.OSMReaderTest.testBarriers":88,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":108,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":4,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":49,"com.graphhopper.util.GHUtilityTest.testCopy":201,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":33,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":104,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":173,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":68,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":109,"com.graphhopper.util.InstructionListTest.testWayList2":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":126,"com.graphhopper.reader.OSMReaderTest.testFoot":85,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":145,"com.graphhopper.coll.IntIntBinHeapTest.test0":1,"com.graphhopper.reader.OSMReaderTest.testOneWay":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":82,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":103,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":112,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":89,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":130,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":5,"com.graphhopper.coll.OSMIDMapTest.testGet":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":30,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":113,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":192,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":14,"com.graphhopper.storage.RAMDataAccessTest.testCopy":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":132,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":162,"com.graphhopper.storage.RAMDataAccessTest.testSegments":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":59,"com.graphhopper.reader.OSMReaderTest.testMain":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":135,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":118,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":106,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":141,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":175,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":155,"com.graphhopper.util.BitUtilLittleTest.testToFloat":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":55,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":54,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":131,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":119,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":172,"com.graphhopper.GraphHopperTest.testFootOnly":24,"com.graphhopper.util.BitUtilLittleTest.testToInt":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":125,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":127,"com.graphhopper.util.InstructionListTest.testFind":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":46,"com.graphhopper.reader.OSMElementTest.testSetTags":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":182},"transformations":[{"failures":[0],"tindex":"1aabebac-792a-11e5-a037-5fd11961dd81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:97","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[1],"tindex":"1aac12bd-792a-11e5-a037-2b738f47f212","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"1aac12be-792a-11e5-a037-c1dc46618cdc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:180","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    byte[] byte[] = new byte[int];\n    int int = com.graphhopper.storage.UnsafeDataAccess.getSegments();\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"1aac39cf-792a-11e5-a037-f9b656f41953","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"value","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"status":-1},{"failures":[],"tindex":"1aac39d0-792a-11e5-a037-e95af771f2fe","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:554","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int++;\n    if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n        int++;\n    \n}"},"status":-2},{"failures":[],"tindex":"1aac60e1-792a-11e5-a037-8dd09ba0710d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:164","type":"CtReturnImpl","sourcecode":"return (((((\"*-(\" + (int)) + \")->\") + (int)) + \"-(\") + (int)) + \")->*\""},"variableMap":{"edgeTo":"com.graphhopper.util.Constants.VERSION_GEOMETRY","nodeVia":"com.graphhopper.util.Constants.VERSION_LOCATION_IDX","edgeFrom":"com.graphhopper.util.Constants.VERSION_SHORTCUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:70","type":"CtReturnImpl","sourcecode":"return ((((((((((com.graphhopper.util.Constants.int) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"1aac60e2-792a-11e5-a037-99335d864b96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"current","i":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:174","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).isForward(com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"1aac60e3-792a-11e5-a037-2d2cc0284ece","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"nextTurnBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:207","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"1aac60e4-792a-11e5-a037-1ddb292bd875","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.NumHelper:39","type":"CtReturnImpl","sourcecode":"return (java.lang.Double.compare(double, double)) == 0"},"variableMap":{"d1":"ele","d2":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:66","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"1aac87f5-792a-11e5-a037-83617b1185f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:806","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"valueStr":"str","field":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:160","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"1aac87f6-792a-11e5-a037-9d0882ac3a3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:201","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-2},{"failures":[],"tindex":"1aac87f7-792a-11e5-a037-adc0698934e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:84","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.fromLong(long)"},"status":-2},{"failures":[],"tindex":"1aac87f8-792a-11e5-a037-212a96679832","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"registered","hasRel":"registered"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:136","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"1aacaf09-792a-11e5-a037-07f60d9d7611","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"variableMap":{"is3D":"com.graphhopper.util.Constants.SNAPSHOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:93","type":"CtIfImpl","sourcecode":"if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[],"tindex":"1aacaf0a-792a-11e5-a037-2bf48bb0629d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:731","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":-2},{"failures":[],"tindex":"1aacaf0b-792a-11e5-a037-7ba1b8efa0bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"1aacaf0c-792a-11e5-a037-b3d05dbfcc9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"timeOffset","key":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:144","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.InstructionList.(size()) - 1) ; int++) {\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = int > 0 ? com.graphhopper.util.InstructionList.get((int - 1)) : null;\n    boolean boolean = com.graphhopper.util.Instruction == null;\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((int + 1));\n    com.graphhopper.util.Instruction.checkOne();\n    long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean);\n}"},"status":-2},{"failures":[],"tindex":"1aacd61d-792a-11e5-a037-29c12e85af60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], int)"},"status":-2},{"failures":[],"tindex":"1aacd61e-792a-11e5-a037-ffe913e35708","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:141","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str","_default":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:160","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"1aacd61f-792a-11e5-a037-e5fc2139e507","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}