{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":39,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":49,"com.graphhopper.search.NameIndexTest.testCreate":199,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":55,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":135,"com.graphhopper.reader.OSMReaderTest.testFerry":73,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":46,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":221,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":211,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":131,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":209,"com.graphhopper.reader.OSMReaderTest.testWithBounds":83,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":176,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":51,"com.graphhopper.coll.CompressedArrayTest.testCompress":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":152,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":8,"com.graphhopper.util.BitUtilLittleTest.testToDouble":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":103,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":161,"com.graphhopper.GraphHopperTest.testPrepare":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":4,"com.graphhopper.search.NameIndexTest.testFlush":197,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.util.InstructionListTest.testWayList":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":65,"com.graphhopper.GraphHopperAPITest.testDisconnected179":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":150,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":212,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":195,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":111,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":191,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":231,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":109,"com.graphhopper.GraphHopperTest.testLoadOSM":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":133,"com.graphhopper.reader.OSMReaderTest.testSort":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":33,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":82,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":13,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":123,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":43,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":52,"com.graphhopper.storage.RAMDataAccessTest.testHeader":223,"com.graphhopper.storage.MMapDataAccessTest.testHeader":222,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":190,"com.graphhopper.routing.PathTest.testWayList":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":127,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":225,"com.graphhopper.coll.OSMIDMapTest.testGet2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":44,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":28,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":48,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":128,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":171,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":189,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":194,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":0,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":24,"com.graphhopper.coll.OSMIDMapTest.testGetLong":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":204,"com.graphhopper.search.NameIndexTest.testPut":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":153,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":166,"com.graphhopper.coll.CompressedArrayTest.testCompress2":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":219,"com.graphhopper.GraphHopperAPITest.testLoad":62,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":97,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":158,"com.graphhopper.reader.OSMReaderTest.testBarriers":76,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":167,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.util.GHUtilityTest.testCopy":63,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":18,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":10,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":181,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":157,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":45,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":169,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":168,"com.graphhopper.util.InstructionListTest.testWayList2":67,"com.graphhopper.reader.OSMReaderTest.testFoot":227,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":214,"com.graphhopper.reader.OSMReaderTest.testOneWay":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":2,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":217,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":185,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":145,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":77,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":183,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":124,"com.graphhopper.coll.OSMIDMapTest.testGet":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":7,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":186,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":59,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":92,"com.graphhopper.storage.RAMDataAccessTest.testCopy":170,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":91,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":88,"com.graphhopper.storage.RAMDataAccessTest.testSegments":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":36,"com.graphhopper.reader.OSMReaderTest.testMain":74,"com.graphhopper.util.BitUtilLittleTest.testToLong":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":162,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":129,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":113,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":134,"com.graphhopper.GraphHopperTest.testFootAndCar":96,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":159,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":172,"com.graphhopper.util.BitUtilLittleTest.testToFloat":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":32,"com.graphhopper.storage.StorablePropertiesTest.testLoad":232,"com.graphhopper.GraphHopperTest.testPrepareOnly":86,"com.graphhopper.GraphHopperTest.testVia":93,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":31,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":81,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":125,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":115,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":156,"com.graphhopper.GraphHopperTest.testFootOnly":101,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":200,"com.graphhopper.util.BitUtilLittleTest.testToInt":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":120,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":80,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":192,"com.graphhopper.util.InstructionListTest.testFind":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":143},"transformations":[{"failures":[0],"tindex":"d1003a87-826c-11e5-ae00-bf01d3ef6bd3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:214","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(com.graphhopper.storage.AbstractDataAccess.byte[])"},"variableMap":{"buf":"bb","com.graphhopper.storage.AbstractDataAccess.EMPTY":"values"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"d1003a88-826c-11e5-ae00-a3d625d5b194","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"nodeB","tmpErr":"nodeA","y1":"nodeA","dLon":"nodeA","sLat":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:736","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && (!(com.graphhopper.coll.GHBitSet.contains(int))))\n    continue;\n"},"status":0},{"failures":[],"tindex":"d1003a89-826c-11e5-ae00-1587873c12e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:424","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"d100619a-826c-11e5-ae00-593c859bcda9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"removeNode","clockwise":"removeNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:661","type":"CtIfImpl","sourcecode":"if (int >= int)\n    com.graphhopper.coll.SparseIntIntArray.put(int, int);\n"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"d100619b-826c-11e5-ae00-51ef291feeaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[190,191,192,193,1,194,195,196,197,198,199,64,65,66,67,200,74,201,202,106,203,111,159,204,164,177,205,182],"tindex":"d100619c-826c-11e5-ae00-1d21719e9094","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:87","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-1},{"failures":[86,206,93,94,97,98,99,101],"tindex":"d10088ad-826c-11e5-ae00-5df7913b2f0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:750","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initCHAlgoFactories()"},"status":-1},{"failures":[207,208,209,210,211,212,213,214],"tindex":"d10088ae-826c-11e5-ae00-bbe92d7aea1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"d10088af-826c-11e5-ae00-b37e9b2b9e62","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:845","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double)"},"status":0},{"failures":[215,216,217,47,218],"tindex":"d10088b0-826c-11e5-ae00-2d31a579c01b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"turnRestrictionBit","flags":"turnRestrictionBit","dir":"turnRestrictionBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:659","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"d10088b1-826c-11e5-ae00-55f1fbe08b04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:76","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.VLongStorage[][int]) == null) {\n    long[][int] = long;\n    if ((int) > 0) {\n        com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n    } \n    com.graphhopper.storage.VLongStorage[][int] = new com.graphhopper.storage.VLongStorage(int);\n} else {\n    long long = long - (long);\n    com.graphhopper.storage.VLongStorage[][int].writeVLong(long);\n}"},"status":-2},{"failures":[197,86,98,99,100,106,219,220,155,159,221,222,223,177,224,225,226],"tindex":"d100afc2-826c-11e5-ae00-c3b3aa13efa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"segmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:104","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int)"},"status":-1},{"failures":[],"tindex":"d100afc3-826c-11e5-ae00-b54a0c4aa350","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"variableMap":{"res":"bytes","maxBit":"bytes","value":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:96","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"d100afc4-826c-11e5-ae00-c55d28c26e00","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:183","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[145,146,147,148,149],"tindex":"d100afc5-826c-11e5-ae00-f1333bb3f3a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:316","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDQuadtree.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-1},{"failures":[73,227,74,75,76,77,78,79,80,81,82,83,84,85,228,86,206,93,94,95,96,97,98,229,99,100,101,230,231,232],"tindex":"d100afc6-826c-11e5-ae00-bbd1d69708c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:50","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[62,233,87,88,89,90,91,92,95,96,97,100],"tindex":"d100afc7-826c-11e5-ae00-5339550a150f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:787","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.putAlgorithmFactory(com.graphhopper.routing.util.Weighting, (com.graphhopper.routing.RoutingAlgorithmFactory = new com.graphhopper.routing.RoutingAlgorithmFactorySimple()))"},"status":-1},{"failures":[],"tindex":"d100d6d8-826c-11e5-ae00-0dd16db3e784","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:311","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n} "},"status":-2},{"failures":[93,94,97,98,101],"tindex":"d100d6d9-826c-11e5-ae00-d523ad353dda","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1012","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"request":"request","this":"this","weighting":"weighting","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1009","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder)"},"status":-1},{"failures":[145,146,147,148,149],"tindex":"d100d6da-826c-11e5-ae00-6746365993f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:307","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(2000, ((int)(double * double)))"},"variableMap":{"dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:316","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDQuadtree.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d1003a88-826c-11e5-ae00-a3d625d5b194","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}