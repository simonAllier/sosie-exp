{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":244,"com.graphhopper.reader.OSMReaderTest.testFerry":3,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":174,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":46,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":167,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":419,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":239,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":314,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":384,"com.graphhopper.GraphHopperTest.testPrepare":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":146,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":131,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":214,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":48,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":199,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":118,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":291,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":161,"com.graphhopper.GraphHopperTest.testLoadOSM":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":200,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":361,"com.graphhopper.reader.OSMReaderTest.testSort":6,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":379,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":333,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":296,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":100,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":393,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":121,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":240,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":400,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":136,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":85,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":125,"com.graphhopper.coll.OSMIDMapTest.testGetLong":407,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":253,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":359,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":362,"com.graphhopper.GraphHopperAPITest.testLoad":68,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":315,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":305,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":127,"com.graphhopper.util.GHUtilityTest.testCopy":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":27,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.routing.PathTest.testFindInstruction":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":243,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":334,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":319,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":157,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":388,"com.graphhopper.util.InstructionListTest.testWayList2":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":208,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":36,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":162,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":377,"com.graphhopper.storage.RAMDirectoryTest.testSynched":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":215,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":304,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":142,"com.graphhopper.coll.OSMIDMapTest.testGet":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":389,"com.graphhopper.routing.PathBidirRefTest.testExtract":107,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":406,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":356,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":293,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":414,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":73,"com.graphhopper.util.GHUtilityTest.testSort2":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":137,"com.graphhopper.reader.OSMReaderTest.testMain":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":14,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":363,"com.graphhopper.storage.StorablePropertiesTest.testStore":341,"com.graphhopper.storage.GraphHopperStorageTest.testClone":307,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":386,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":402,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":2,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":317,"com.graphhopper.routing.PathTest.testTime":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":370,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":210,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":410,"com.graphhopper.reader.OSMReaderTest.testRelation":58,"com.graphhopper.util.GHUtilityTest.testSortDirected":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":375,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":97,"com.graphhopper.GraphHopperTest.testFootOnly":88,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":412,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":230,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":216,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":403,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":113,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":365,"com.graphhopper.search.NameIndexTest.testCreate":67,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":202,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":92,"com.graphhopper.routing.QueryGraphTest.testOneWay":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":223,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":198,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":411,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":98,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":289,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":279,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":272,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":303,"com.graphhopper.search.NameIndexTest.testFlush":65,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":122,"com.graphhopper.util.InstructionListTest.testWayList":185,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":336,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":420,"com.graphhopper.GraphHopperAPITest.testDisconnected179":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":373,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":168,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":360,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":81,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":159,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":327,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":144,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":295,"com.graphhopper.routing.PathTest.testWayList":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":416,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":372,"com.graphhopper.coll.OSMIDMapTest.testGet2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":145,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":53,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":40,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":263,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":117,"com.graphhopper.util.GHUtilityTest.testSort":180,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":397,"com.graphhopper.search.NameIndexTest.testPut":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":292,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":17,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":190,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":251,"com.graphhopper.storage.MMapDirectoryTest.testSynched":294,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":54,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":355,"com.graphhopper.routing.PathTest.testFound":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":345,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":33,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":119,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":269,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":66,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":344,"com.graphhopper.util.InstructionListTest.testEmptyList":183,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":135,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":392,"com.graphhopper.reader.PrinctonReaderTest.testRead":51,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":264,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":413,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":366,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":15,"com.graphhopper.reader.OSMReaderTest.testFoot":4,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":55,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":205,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":398,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":316,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":368,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":156,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":325,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":311,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":235,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":193,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":173,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":300,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":395,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":62,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":352,"com.graphhopper.routing.PathBidirRefTest.testExtract2":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":241,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":63,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":381,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":201,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":399,"com.graphhopper.GraphHopperTest.testFootAndCar":82,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":260,"com.graphhopper.storage.StorablePropertiesTest.testLoad":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":385,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.GraphHopperTest.testVia":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":42,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":132,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":353,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":187,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":328,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":232,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":374,"com.graphhopper.util.InstructionListTest.testFind":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":248},"transformations":[{"failures":[],"tindex":"6537b022-82c3-11e5-b61b-a182a62c744a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"variableMap":{"java.lang.Double.NaN":"weight","clockwise":"prevOrNextEdgeId","java.lang.Math.PI":"weight","radian":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"status":-1},{"failures":[],"tindex":"6537d733-82c3-11e5-b61b-b9056d8b77e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:150","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return ;\n} "},"variableMap":{"size":"minNetworkSize","i":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtIfImpl","sourcecode":"if (((int) <= 0) && ((int) <= 0))\n    return ;\n"},"status":0},{"failures":[0,1,2],"tindex":"6537fe44-82c3-11e5-b61b-add6dcef8d3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"variableMap":{"firstLon":"lastLat","lastLon":"lon","firstLat":"lon","distCalc":"calc","lastLat":"firstLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:146","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"6537fe45-82c3-11e5-b61b-8d62ded9c481","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[51,52,53,54,55,56,3,4,5,6,57,7,8,9,10,58,59,60,61,11,12,62,13,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"65382556-82c3-11e5-b61b-c97b54b412ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:110","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"65384c67-82c3-11e5-b61b-a53155bb9f56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"variableMap":{"i":"com.graphhopper.reader.OSMReader.TOWER_NODE","allBits":"firstNode","hash":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:724","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    if (int >= 0) {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n        com.graphhopper.util.PointList.clear();\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    } \n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"65384c68-82c3-11e5-b61b-eb4c609b426a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:419","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"variableMap":{"remainingSegNo":"allBits","segmentSizeInBytes":"i","capacity":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-2},{"failures":[],"tindex":"65384c69-82c3-11e5-b61b-270dc662ae95","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge2\")"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:687","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[3,4,5,6,57,7,8,9,10,60,61,11,12,13,70,71,78,79,80,81,82,83,84,86,87,88,89],"tindex":"6538737a-82c3-11e5-b61b-4b89f993fe7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:592","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double);\n} else if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-1},{"failures":[],"tindex":"6538737b-82c3-11e5-b61b-230af40bd1f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"sw1":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[294,401],"tindex":"6538737c-82c3-11e5-b61b-6f581470ab32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"inner":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:135","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[3,4,5,6,57,7,8,9,10,60,61,11,12,62,13,70,71,78,79,80,81,82,83,84,86,87,88,89,409,410,411,412],"tindex":"65389a8d-82c3-11e5-b61b-05275e8d39c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:71","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[3,4,5,6,57,9,10,60,61,11,12,13,70,71,79,80,81,82,83,84,86,87,88,89,91,92,94,95,97,98,99,100,101,102,104,105,106,115,142,179,182,184,185,186,198,199,200,226,227,228,256,283,288,291,303,330,335,338,413,414,415,416,363,390,395,398],"tindex":"65389a8e-82c3-11e5-b61b-290c820b22ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"status":-1},{"failures":[68,72,73,74,75,76,77,81,82,83,87,119,121,122,123,124,125,126,127,128,129,131,132,135,136,137,138,139,142,143,144,145,148,154,156,161],"tindex":"65389a8f-82c3-11e5-b61b-17fa5b920eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:169","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.fillEdges(com.graphhopper.storage.EdgeEntry, java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>, gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>, com.graphhopper.util.EdgeExplorer, true)"},"status":-1},{"failures":[],"tindex":"6538c1a0-82c3-11e5-b61b-4fc297d3c263","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"minLat","delta_lon":"minLat","a_lon":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[417,418,419,8],"tindex":"6538c1a1-82c3-11e5-b61b-936aad18a97d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"variableMap":{"message":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:212","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"status":-1},{"failures":[],"tindex":"6538c1a2-82c3-11e5-b61b-0582a863ad41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:108","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"flagEncoder":"flagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:58","type":"CtReturnImpl","sourcecode":"return \"SHORTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":0},{"failures":[420],"tindex":"6538c1a3-82c3-11e5-b61b-177d2f47d1ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:215","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return \"\";\n"},"status":-1},{"failures":[84,87,248,251,296,298,348,352,357],"tindex":"6538e8b4-82c3-11e5-b61b-af48489379ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:286","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"6538e8b5-82c3-11e5-b61b-39744c97df0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","index":"javax.xml.stream.XMLStreamConstants.END_DOCUMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:58","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"tag\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"k\");\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\");\n        if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n            com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n        \n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6537d733-82c3-11e5-b61b-b9056d8b77e0","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"6538737b-82c3-11e5-b61b-230af40bd1f3","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.PathBidirRefTest.testExtract":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1","com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_start().b"]},"type":"branch"}]}]}