{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":53,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":61,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":40,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":16,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":56,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":63,"com.graphhopper.routing.QueryGraphTest.testOneWay":79,"com.graphhopper.routing.PathTest.testWayList":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":51,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":38,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":25,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":36,"com.graphhopper.GraphHopperTest.testPrepare":69,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":27,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":44,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":65,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":32,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":23,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":59,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":18,"com.graphhopper.GraphHopperAPITest.testLoad":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":68,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":11,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":77,"com.graphhopper.GraphHopperTest.testFootOnly":74,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":67,"com.graphhopper.GraphHopperTest.testLoadOSM":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"21bc31e4-790f-11e5-8427-37dc756fe1ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:885","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[],"tindex":"21bc58f5-790f-11e5-8427-55cfe625ac0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[0,1,2,3,4,6,69,70,7,71,72,73,74,15,27,75,46,47,49,50,52,57,76,59,61,62,77,78,64,79,80,65],"tindex":"21bc58f6-790f-11e5-8427-e3567a3a66af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:184","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(com.graphhopper.util.shapes.GHPoint.double , com.graphhopper.util.shapes.GHPoint.double , ((double + double) / 2))"},"status":-1},{"failures":[6,69,70,7,71,72,73,9],"tindex":"21bc58f7-790f-11e5-8427-a1fb45759fb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList).setRouteWeight(double).setDistance(double).setTime(long)"},"status":-1},{"failures":[],"tindex":"21bc8008-790f-11e5-8427-a30c11fce007","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:742","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n    double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n    double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n    if (double < double)\n        return true;\n    \n} "},"status":-2},{"failures":[],"tindex":"21bc8009-790f-11e5-8427-9f4f6396adce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:228","type":"CtIfImpl","sourcecode":"if ((long & long) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":-2},{"failures":[],"tindex":"21bc800a-790f-11e5-8427-1187d40f8c5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:66","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-2},{"failures":[],"tindex":"21bc800b-790f-11e5-8427-33c99cb5d733","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"21bc800c-790f-11e5-8427-a51b920d9457","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:436","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String[][1].replace(\"]\", \"\").trim()"},"status":-2},{"failures":[],"tindex":"21bc800d-790f-11e5-8427-f5c7bc3d4f07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"preciseIndexResolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:590","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.highResolution\", int)"},"status":-2},{"failures":[],"tindex":"21bca71e-790f-11e5-8427-eda5c55c0d64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:45","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.TIntArrayStack.pop()"},"status":-2},{"failures":[],"tindex":"21bca71f-790f-11e5-8427-8be40a4dd160","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"variableMap":{"synched":"simplifyResponse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:70","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int += com.graphhopper.util.Instruction.getPoints().size();\n    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n} "},"status":-2},{"failures":[],"tindex":"21bca720-790f-11e5-8427-6db266ec21c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:71","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BeelineWeightApproximator"},"variableMap":{"approx":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:67","type":"CtIfImpl","sourcecode":"if (\"BeelineSimplification\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else if (\"BeelineAccurate\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Approximation \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"21bcce31-790f-11e5-8427-fdd90fc192a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"index","maxLeafEntries":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:898","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"21bcce32-790f-11e5-8427-252a3e37a088","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"status":-2},{"failures":[],"tindex":"21bcce33-790f-11e5-8427-d542656bcd1c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:473","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(double, java.lang.Math.min(double, double))"},"variableMap":{"min":"java.lang.Double.MAX_VALUE","max":"java.lang.Double.MAX_VALUE","value":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"21bcce34-790f-11e5-8427-f91e281da26a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"21bcce35-790f-11e5-8427-39b1fa455177","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"21bcf546-790f-11e5-8427-1b63142bbf2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:327","type":"CtAssignmentImpl","sourcecode":"long[][int] = -1"},"variableMap":{"values":"bitmasks","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:208","type":"CtAssignmentImpl","sourcecode":"long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int])"},"status":-2},{"failures":[],"tindex":"21bcf547-790f-11e5-8427-37218513a8dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:688","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.loadEdgesHeader()"},"variableMap":{"this":"cg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setEdgesHeader()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}