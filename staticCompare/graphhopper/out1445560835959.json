{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":57,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":226,"com.graphhopper.reader.OSMReaderTest.testFerry":86,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":119,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":120,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":54,"com.graphhopper.routing.QueryGraphTest.testOneWay":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":184,"com.graphhopper.reader.OSMReaderTest.testWithBounds":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":250,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":77,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":4,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":208,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":309,"com.graphhopper.GraphHopperTest.testPrepare":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":156,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.util.InstructionListTest.testWayList":123,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":122,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":127,"com.graphhopper.GraphHopperAPITest.testDisconnected179":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":277,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":185,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":52,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":274,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":292,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":110,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":266,"com.graphhopper.GraphHopperTest.testLoadOSM":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":193,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":211,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":186,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":287,"com.graphhopper.reader.OSMReaderTest.testSort":89,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":79,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":62,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":135,"com.graphhopper.routing.PathTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":317,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":26,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":56,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":280,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":324,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":51,"com.graphhopper.util.GHUtilityTest.testSort":131,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":321,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":67,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":275,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":201,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":279,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":199,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":238,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":251,"com.graphhopper.GraphHopperAPITest.testLoad":133,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":112,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":257,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":284,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":82,"com.graphhopper.reader.OSMReaderTest.testBarriers":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":241,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":180,"com.graphhopper.routing.PathTest.testFound":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":305,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.util.GHUtilityTest.testCopy":130,"com.graphhopper.routing.PathTest.testFindInstruction":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":253,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":235,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":225,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":168,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":255,"com.graphhopper.reader.PrinctonReaderTest.testRead":83,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":11,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":53,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":312,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":181,"com.graphhopper.util.InstructionListTest.testWayList2":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":214,"com.graphhopper.reader.OSMReaderTest.testFoot":87,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":191,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":173,"com.graphhopper.reader.OSMReaderTest.testOneWay":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":72,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":10,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":230,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":146,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":91,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":3,"com.graphhopper.routing.PathBidirRefTest.testExtract":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":202,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":107,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":285,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":276,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":220,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":103,"com.graphhopper.util.GHUtilityTest.testSort2":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.reader.OSMReaderTest.testMain":88,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":281,"com.graphhopper.routing.PathBidirRefTest.testExtract2":70,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":223,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":306,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":264,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":175,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphHopperStorageTest.testClone":142,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":187,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":311,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":152,"com.graphhopper.GraphHopperTest.testFootAndCar":111,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":286,"com.graphhopper.routing.PathTest.testTime":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.util.GHUtilityTest.testSortDirected":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":310,"com.graphhopper.GraphHopperTest.testPrepareOnly":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":300,"com.graphhopper.GraphHopperTest.testVia":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":228,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":207,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":282,"com.graphhopper.GraphHopperTest.testFootOnly":116,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":213,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":94,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":215,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":47,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":299,"com.graphhopper.util.InstructionListTest.testFind":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":290},"transformations":[{"failures":[],"tindex":"accdb403-791e-11e5-afd5-a1fd263f8945","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:305","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int).putInt(int, int)"},"variableMap":{"index":"bufferIndex","bufferIndex":"bufferIndex","value":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:346","type":"CtAssignmentImpl","sourcecode":"java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1))"},"status":0},{"failures":[],"tindex":"accdb404-791e-11e5-afd5-952232293deb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.get(0)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"tindex":"accddb15-791e-11e5-afd5-a70dd392c12b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"accddb16-791e-11e5-afd5-6f8398830c8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"minNetworkSize","tmp":"minNetworkSize","segmentSizeInBytes":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"acce0227-791e-11e5-afd5-45e9d6b9213b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:200","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"acce0228-791e-11e5-afd5-59ca70f37384","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders().get(0)"},"variableMap":{"encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:222","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.getEncoder(java.lang.String, true)"},"status":-2},{"failures":[],"tindex":"acce0229-791e-11e5-afd5-db736b5044b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:102","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long)"},"status":-2},{"failures":[],"tindex":"acce022a-791e-11e5-afd5-e729a8612c14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"variableMap":{"closed":"chEnabled"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:571","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.GraphHopper.setCHWeighting(java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"acce022b-791e-11e5-afd5-9dade80a0138","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"bwFaster"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:239","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-2},{"failures":[],"tindex":"acce022c-791e-11e5-afd5-771687cdb4b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"variableMap":{"b":"b","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:121","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 7"},"status":-2},{"failures":[],"tindex":"acce022d-791e-11e5-afd5-4fad97e6b06f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"variableMap":{"longTripsSpeed":"longTripsSpeed","shortTripsSpeed":"durationInHours","this":"this","durationInHours":"unknownSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:547","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"acce293e-791e-11e5-afd5-610ed886cada","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"variableMap":{"r":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","com.graphhopper.util.AngleCalc.PI_4":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","x":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","angle":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","absY":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","com.graphhopper.util.AngleCalc.PI3_4":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:207","type":"CtIfImpl","sourcecode":"if ((int) > (int)) {\n    com.graphhopper.coll.IntDoubleBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntDoubleBinHeap.double))));\n} "},"status":-2},{"failures":[],"tindex":"acce293f-791e-11e5-afd5-3b39883c427e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:560","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)"},"status":-2},{"failures":[],"tindex":"acce2940-791e-11e5-afd5-2f548efe366b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:315","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-2},{"failures":[],"tindex":"acce2941-791e-11e5-afd5-c1a1f9da1b74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"status":-2},{"failures":[],"tindex":"acce2942-791e-11e5-afd5-cdd0da75830e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"acce2943-791e-11e5-afd5-39e4d4b5eafd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"b_lat","delta_lon":"a_lat","a_lon":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:231","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"acce5054-791e-11e5-afd5-a5f31b6c1d44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:248","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"acce5055-791e-11e5-afd5-97030ce30123","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"acce5056-791e-11e5-afd5-5349d3911aab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:616","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"variableMap":{"virtEdgeIter":"closestEdge","baseRevEdge":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}