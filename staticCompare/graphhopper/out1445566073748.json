{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":73,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":318,"com.graphhopper.reader.OSMReaderTest.testFerry":94,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":324,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":325,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":11,"com.graphhopper.routing.QueryGraphTest.testOneWay":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":249,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":301,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":340,"com.graphhopper.reader.OSMReaderTest.testWithBounds":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":188,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":82,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":40,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":277,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":298,"com.graphhopper.GraphHopperTest.testPrepare":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":72,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":36,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":153,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":4,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":168,"com.graphhopper.util.InstructionListTest.testWayList":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":64,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":267,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":333,"com.graphhopper.GraphHopperAPITest.testDisconnected179":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":216,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":299,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":61,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":302,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":35,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":92,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":85,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":213,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":233,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":123,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":206,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":205,"com.graphhopper.GraphHopperTest.testLoadOSM":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":280,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":159,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":303,"com.graphhopper.reader.OSMReaderTest.testSort":97,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":84,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":245,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":176,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":77,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":134,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":130,"com.graphhopper.routing.PathTest.testWayList":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":259,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":54,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":62,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":300,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":242,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":220,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":266,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":69,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":343,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":34,"com.graphhopper.util.GHUtilityTest.testSort":338,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":263,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":5,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":24,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":214,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":219,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":89,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":173,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":225,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":228,"com.graphhopper.GraphHopperAPITest.testLoad":111,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":195,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":223,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":87,"com.graphhopper.reader.OSMReaderTest.testBarriers":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.routing.PathTest.testFound":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":323,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":60,"com.graphhopper.util.GHUtilityTest.testCopy":337,"com.graphhopper.routing.PathTest.testFindInstruction":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":180,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":191,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":322,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":144,"com.graphhopper.util.InstructionListTest.testEmptyList":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":63,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":317,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":166,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":68,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":207,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":193,"com.graphhopper.reader.PrinctonReaderTest.testRead":91,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":222,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":47,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":254,"com.graphhopper.util.InstructionListTest.testWayList2":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":283,"com.graphhopper.reader.OSMReaderTest.testFoot":95,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":308,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":171,"com.graphhopper.reader.OSMReaderTest.testOneWay":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":88,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":243,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":46,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":268,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":136,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":143,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":255,"com.graphhopper.routing.PathBidirRefTest.testExtract":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":296,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":119,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":334,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":224,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":215,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":289,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":115,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":315,"com.graphhopper.util.GHUtilityTest.testSort2":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":70,"com.graphhopper.reader.OSMReaderTest.testMain":96,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":0,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":262,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":109,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":257,"com.graphhopper.routing.PathBidirRefTest.testExtract2":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":312,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":292,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":247,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":7,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":202,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":44,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":1,"com.graphhopper.storage.GraphHopperStorageTest.testClone":139,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":304,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":252,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":149,"com.graphhopper.GraphHopperTest.testFootAndCar":124,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":156,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":342,"com.graphhopper.routing.PathTest.testTime":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":66,"com.graphhopper.reader.OSMReaderTest.testRelation":103,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":251,"com.graphhopper.util.GHUtilityTest.testSortDirected":339,"com.graphhopper.GraphHopperTest.testPrepareOnly":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":241,"com.graphhopper.GraphHopperTest.testVia":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":320,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":65,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":6,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":105,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":276,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":221,"com.graphhopper.GraphHopperTest.testFootOnly":129,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":160,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":282,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":284,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":30,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":240,"com.graphhopper.util.InstructionListTest.testFind":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":314},"transformations":[{"failures":[],"tindex":"dec52f3e-792a-11e5-b912-dd594b8252fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:271","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeAndEdgeEntrySize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:362","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"dec5564f-792a-11e5-b912-895468f13db0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-1},{"failures":[],"tindex":"dec57d60-792a-11e5-b912-b1f8eb30d4fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"status":0},{"failures":[],"tindex":"dec57d61-792a-11e5-b912-0b689559bee4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"a_lat_deg","fullDist2D":"a_lat_deg","decDist2DSum":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:218","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-2},{"failures":[8,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"dec57d62-792a-11e5-b912-7b8c0f433925","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"variableMap":{"heights":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[340,113,126,341],"tindex":"dec5a473-792a-11e5-b912-adb92bd870ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\")"},"variableMap":{"output":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())"},"status":-1},{"failures":[],"tindex":"dec5cb84-792a-11e5-b912-979c01345dcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"status":0},{"failures":[342,343,344],"tindex":"dec5cb85-792a-11e5-b912-9557d7449214","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"dec5cb86-792a-11e5-b912-ff8eb916765c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:381","type":"CtIfImpl","sourcecode":"if (int == (-(java.lang.Integer.int)))\n    return -(java.lang.Double.double);\n"},"status":-2},{"failures":[],"tindex":"dec5cb87-792a-11e5-b912-a56ffa07ba92","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:919","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : com.graphhopper.reader.OSMRelation.getMembers()) {\n    if ((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) {\n        if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n            long = com.graphhopper.reader.OSMRelation.Member.ref();\n        } else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n            long = com.graphhopper.reader.OSMRelation.Member.ref();\n        } \n    } else if (((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) && (\"via\".equals(com.graphhopper.reader.OSMRelation.Member.role()))) {\n        long = com.graphhopper.reader.OSMRelation.Member.ref();\n    } \n}"},"status":-2},{"failures":[],"tindex":"dec5cb88-792a-11e5-b912-b3619d6f81f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:202","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.storage.DAType com.graphhopper.storage.DAType = ((com.graphhopper.storage.DAType)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"dec5f299-792a-11e5-b912-8d766eb7e8a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:760","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.PointList.getSize()) - 2) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-2},{"failures":[],"tindex":"dec5f29a-792a-11e5-b912-dd31dc103be3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:323","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return super.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"dec5f29b-792a-11e5-b912-7f7fc08f84d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"angleXY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"dec5f29c-792a-11e5-b912-6ffe16ec54e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:334","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"noNumberValue":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:91","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"dec5f29d-792a-11e5-b912-b9528ad94337","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"variableMap":{"com.graphhopper.storage.DAType.MMAP":"daType","type":"daType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:173","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"dec619ae-792a-11e5-b912-315745baf105","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:612","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(load(java.lang.String))) {\n    com.graphhopper.GraphHopper.printInfo();\n    com.graphhopper.GraphHopper.process(java.lang.String);\n} else {\n    com.graphhopper.GraphHopper.printInfo();\n}"},"status":-2},{"failures":[],"tindex":"dec619af-792a-11e5-b912-d1a6c5990372","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:59","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","edgeId":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:143","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        byte[][] = new byte[int][];\n        for (int int = 0 ; int < int ; int++) {\n            byte[] byte[] = new byte[int];\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            byte[][][int] = byte[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"dec619b0-792a-11e5-b912-05fcb549c709","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:115","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"variableMap":{"newSegs":"segments","i":"bufferIndex","segmentSizePower":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:271","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[][][(int + 1)]"},"status":-2},{"failures":[],"tindex":"dec640c1-792a-11e5-b912-61e28d021470","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"costs","logMessagesPercentage":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:670","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || (java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}