{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":12,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":63,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":32,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":51,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":48,"com.graphhopper.reader.OSMReaderTest.testFerry":53,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":6,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":75,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":16,"com.graphhopper.routing.QueryGraphTest.testOneWay":19,"com.graphhopper.util.HelperTest.testCountBitValue":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":47,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":70,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":28,"com.graphhopper.reader.OSMReaderTest.testWithBounds":64,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":60,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":14,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":30,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":65,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":8,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":3,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":31,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":33,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":4,"com.graphhopper.GraphHopperTest.testFootAndCar":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":17,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":18,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":21,"com.graphhopper.reader.OSMReaderTest.testOneWay":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":76,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":7,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":45,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":62,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":59,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":74,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":13,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":49,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":61,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":52,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":34,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":37,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":36,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":35},"transformations":[{"failures":[0,1,2],"tindex":"80b09c34-8284-11e5-9566-1d1e1d915625","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:66","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.remove(int)"},"variableMap":{"map":"map","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:81","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.put(int, (gnu.trove.set.hash.TIntHashSet = new gnu.trove.set.hash.TIntHashSet(int)))"},"status":-1},{"failures":[],"tindex":"80b0c345-8284-11e5-9566-fb0c67ff9a26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":0},{"failures":[3,4,5,6,7],"tindex":"80b0c346-8284-11e5-9566-cf0c7e8afe8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:316","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"80b0c347-8284-11e5-9566-ad3e259e695a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"mSize":"wayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:339","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"80b0c348-8284-11e5-9566-0932f4ab7c94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"status":-1},{"failures":[46],"tindex":"80b0c349-8284-11e5-9566-7b4da7da4315","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"intVal","len":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:89","type":"CtIfImpl","sourcecode":"if (double == int)\n    return int;\n"},"status":-1},{"failures":[47,48,3,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,39,40,41,42,43,44,71,45,72],"tindex":"80b0c34a-8284-11e5-9566-5d2d874736bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:163","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"80b0ea5b-8284-11e5-9566-dddcc7d7898c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:280","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    com.graphhopper.coll.LongIntMap com.graphhopper.coll.LongIntMap = com.graphhopper.reader.OSMReader.getNodeMap();\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        switch (com.graphhopper.reader.OSMElement.getType()) {\n            case com.graphhopper.reader.OSMElement.int :\n                if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                    com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n                } \n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n                break;\n        }\n        if (((++long) % 100000000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((((\"Couldn\\'t process file \" + java.io.File) + \", error: \") + (java.lang.Exception.getMessage())) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[],"tindex":"80b0ea5c-8284-11e5-9566-5fef26a1d4c8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"80b0ea5d-8284-11e5-9566-01e1a22579ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"status":-2},{"failures":[39,72],"tindex":"80b0ea5e-8284-11e5-9566-65b710bc74eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:584","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(new com.graphhopper.routing.util.EncodingManager(java.lang.String , int))"},"status":-1},{"failures":[73,74,75],"tindex":"80b1116f-8284-11e5-9566-43158e3982ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"unpavedBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[60],"tindex":"80b11170-8284-11e5-9566-6f263adff217","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"edgeId","edgeFrom":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-1},{"failures":[],"tindex":"80b11171-8284-11e5-9566-f1ce7422913d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"80b11172-8284-11e5-9566-196605e3cadd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:315","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"80b11173-8284-11e5-9566-a1aec631a1ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:166","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"80b11174-8284-11e5-9566-01e9b6898868","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.ViaInstruction:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setDistance(com.graphhopper.util.Instruction.getDistance())"},"variableMap":{"instr":"this","this":"instr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setTime(com.graphhopper.util.Instruction.getTime())"},"status":0},{"failures":[],"tindex":"80b11175-8284-11e5-9566-6da83aecb79d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"80b13886-8284-11e5-9566-c3e75ae635e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:240","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(\"tmp.lock\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"status":-2},{"failures":[76,77,78,79],"tindex":"80b13887-8284-11e5-9566-abbf5f91b97e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"costs","speed":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:684","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"80b11173-8284-11e5-9566-a1aec631a1ec","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.PriorityCode.getValue","java.util.TreeMap<java.lang.Double, java.lang.Integer>.put"]},"type":"staticDiff"}]}]}