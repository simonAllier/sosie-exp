{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":157,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testFerry":43,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":10,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":61,"com.graphhopper.reader.OSMReaderTest.testWithBounds":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":108,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":159,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":172,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":142,"com.graphhopper.GraphHopperTest.testPrepare":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":102,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":169,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":174,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":91,"com.graphhopper.util.InstructionListTest.testWayList":74,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":123,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":92,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":166,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":88,"com.graphhopper.GraphHopperTest.testLoadOSM":40,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":127,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":177,"com.graphhopper.reader.OSMReaderTest.testSort":45,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":3,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":132,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":105,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":95,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":185,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":120,"com.graphhopper.util.GHUtilityTest.testSort":70,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":139,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":41,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":188,"com.graphhopper.GraphHopperAPITest.testLoad":122,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":104,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":21,"com.graphhopper.reader.OSMReaderTest.testBarriers":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":65,"com.graphhopper.util.GHUtilityTest.testCopy":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":29,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":156,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":180,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":98,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":82,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":85,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":136,"com.graphhopper.util.InstructionListTest.testWayList2":75,"com.graphhopper.reader.OSMReaderTest.testFoot":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":163,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":161,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":182,"com.graphhopper.reader.OSMReaderTest.testOneWay":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":130,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":170,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":71,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":58,"com.graphhopper.util.GHUtilityTest.testSort2":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":100,"com.graphhopper.reader.OSMReaderTest.testMain":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":12,"com.graphhopper.routing.PathBidirRefTest.testExtract2":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":152,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":133,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":193,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":141,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":135,"com.graphhopper.GraphHopperTest.testFootAndCar":63,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":6,"com.graphhopper.GraphHopperTest.testPrepareOnly":57,"com.graphhopper.GraphHopperTest.testVia":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":13,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":124,"com.graphhopper.GraphHopperTest.testFootOnly":42,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":50,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":119,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":183},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"97c78bc8-7911-11e5-8e9e-93deaccc2fe3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"mSize","size":"mSize","lonSize":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"97c7b2d9-7911-11e5-8e9e-d5c2e517f2ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"variableMap":{"size":"rowSizeInBytes","i":"rowSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:92","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[56,57,58,59,60,61,62,37,38,63,39,40,64,41,42,65,66,43,67,44,45,46,47,48,49,50,51,52,53,55,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,1,108,2,109,3,4,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,5,130,131,6,7,8,132,133,9,10,134,135,136,137,11,12,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,13,155,156,14,15,16,157,158,17,18,159,160,161,162,19,20,163,164,165,166,167,168,169,170,21,171,172,22,23,24,173,174,25,26,175,176,177,178,27,28,179,180,181,182,183,184,185,186,29,187,188,30,31,32,189,190,33,34,191,192,193,194,35,36,195,196,197,198],"tindex":"97c7d9ea-7911-11e5-8e9e-5d4046dc1498","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"fromNodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:145","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int);\n"},"status":-1},{"failures":[],"tindex":"97c7d9eb-7911-11e5-8e9e-ff95809a456a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:243","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.TIntLongMap) == null)\n    com.graphhopper.reader.TIntLongMap = new TIntLongHashMap(com.graphhopper.reader.OSMReader.getOsmWayIdSet().size() , 0.5F , -1 , -1);\n"},"status":-2},{"failures":[],"tindex":"97c800fc-7911-11e5-8e9e-2341c05108ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:207","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"status":-2},{"failures":[],"tindex":"97c800fd-7911-11e5-8e9e-e173af05083c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:145","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIteratorState.getAdjNode())) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(0);\n    if ((com.graphhopper.util.PointList.size()) > 1)\n        boolean = (com.graphhopper.util.PointList.getLatitude(0)) > (com.graphhopper.util.PointList.getLatitude(((com.graphhopper.util.PointList.size()) - 1)));\n    \n} "},"status":-2},{"failures":[],"tindex":"97c800fe-7911-11e5-8e9e-cfadc1581410","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:677","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"97c800ff-7911-11e5-8e9e-1d41b73ad09f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:213","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trk><name>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\")"},"status":-2},{"failures":[],"tindex":"97c82810-7911-11e5-8e9e-e17dd5677997","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:434","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))))"},"status":-2},{"failures":[],"tindex":"97c82811-7911-11e5-8e9e-79da2794baa3","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getDebugInfo\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getPoints\")"},"status":-2},{"failures":[],"tindex":"97c82812-7911-11e5-8e9e-131c62849735","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList).setRouteWeight(double).setDistance(double).setTime(long)"},"status":-2},{"failures":[],"tindex":"97c82813-7911-11e5-8e9e-771786d2b6ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:296","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"97c84f24-7911-11e5-8e9e-2316828a0bf9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"97c84f25-7911-11e5-8e9e-812a8571290f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1023","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.getAlgorithm()"},"status":-2},{"failures":[],"tindex":"97c84f26-7911-11e5-8e9e-395abb2a959b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:72","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"variableMap":{"param":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"97c84f27-7911-11e5-8e9e-63ad06c3fdf5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:76","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"97c84f28-7911-11e5-8e9e-19f9db48adf6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"97c84f29-7911-11e5-8e9e-d9b88d410b25","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"status":-2},{"failures":[],"tindex":"97c8763a-7911-11e5-8e9e-717415a49ad9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"offset":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:170","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4))"},"status":-2},{"failures":[],"tindex":"97c8763b-7911-11e5-8e9e-3bfbfc1a44f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:884","type":"CtIfImpl","sourcecode":"if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}