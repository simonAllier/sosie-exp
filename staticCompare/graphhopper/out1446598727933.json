{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":170,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":178,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":101,"com.graphhopper.reader.OSMReaderTest.testFerry":192,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":206,"com.graphhopper.routing.QueryGraphTest.testOneWay":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":96,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":152,"com.graphhopper.storage.VLongStorageTest.testWrite":212,"com.graphhopper.reader.OSMReaderTest.testWithBounds":203,"com.graphhopper.storage.MMapDataAccessTest.testSegments":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":38,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":181,"com.graphhopper.coll.CompressedArrayTest.testCompress":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":66,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":27,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":48,"com.graphhopper.GraphHopperTest.testPrepare":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":132,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.util.InstructionListTest.testWayList":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":20,"com.graphhopper.GraphHopperAPITest.testDisconnected179":191,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":127,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":42,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":120,"com.graphhopper.GraphHopperTest.testLoadOSM":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":85,"com.graphhopper.reader.OSMReaderTest.testSort":195,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":207,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":13,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":183,"com.graphhopper.storage.MMapDataAccessTest.testHeader":220,"com.graphhopper.routing.PathTest.testWayList":164,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":78,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":22,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":80,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":33,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":10,"com.graphhopper.util.GHUtilityTest.testSort":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":89,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":113,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":226,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":182,"com.graphhopper.coll.CompressedArrayTest.testCompress2":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":163,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":99,"com.graphhopper.GraphHopperAPITest.testLoad":190,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":156,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":125,"com.graphhopper.reader.OSMReaderTest.testBarriers":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":45,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":63,"com.graphhopper.util.GHUtilityTest.testCopy":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":103,"com.graphhopper.routing.PathTest.testFindInstruction":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":9,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":133,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":114,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":117,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":71,"com.graphhopper.reader.OSMReaderTest.testFoot":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":93,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":91,"com.graphhopper.reader.OSMReaderTest.testOneWay":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":23,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":162,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":138,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":227,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":123,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":213,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":98,"com.graphhopper.util.GHUtilityTest.testSort2":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":39,"com.graphhopper.reader.OSMReaderTest.testMain":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":32,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":81,"com.graphhopper.GHResponseTest.testToString":209,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":64,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":49,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":86,"com.graphhopper.storage.GraphHopperStorageTest.testClone":126,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":140,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":130,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":109,"com.graphhopper.util.GHUtilityTest.testSortDirected":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":21,"com.graphhopper.GraphHopperTest.testPrepareOnly":148,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":104,"com.graphhopper.GraphHopperTest.testVia":153,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":34,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":65,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":180,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":135,"com.graphhopper.GraphHopperTest.testFootOnly":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":70,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":72,"com.graphhopper.util.InstructionListTest.testFind":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":106},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"34a01a64-828f-11e5-9e5b-ff27c6552036","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"ee","cl":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:76","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,0,150,1,2,151,152,153,154,155,3,156,157,158,159,160,161,162,163,164,165,166,5,6,167,8,168,9,10,169,12,170,171,172,13,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"34a04175-828f-11e5-9e5b-c9d500f3f259","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"34a04176-828f-11e5-9e5b-6526b1b1afca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"status":-2},{"failures":[],"tindex":"34a04177-828f-11e5-9e5b-0582e0059154","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"34a06888-828f-11e5-9e5b-2b7439234a1d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[],"tindex":"34a06889-828f-11e5-9e5b-89d011f99120","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"fromOsmWayId","highKey":"fromOsmWayId","key":"fromOsmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:63","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"34a0688a-828f-11e5-9e5b-850885f56eb7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((4 * 4)))"},"status":-2},{"failures":[206,207,208],"tindex":"34a0688b-828f-11e5-9e5b-e9c718e8b541","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:447","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Configured dimension (\" + (com.graphhopper.storage.NodeAccess.getDimension())) + \") is not equal \") + \"to dimension of loaded graph (\") + java.lang.String) + \")\"))"},"status":-1},{"failures":[],"tindex":"34a0688c-828f-11e5-9e5b-213ecab57c37","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:39","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.Type com.graphhopper.reader.OSMTurnRelation.Type = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:912","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.Type com.graphhopper.reader.OSMTurnRelation.Type = com.graphhopper.reader.OSMTurnRelation.Type.getRestrictionType(com.graphhopper.reader.OSMRelation.getTag(\"restriction\"))"},"status":-2},{"failures":[209],"tindex":"34a0688d-828f-11e5-9e5b-a326c7713b8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:91","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty())\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n"},"status":-1},{"failures":[210,211,212,213],"tindex":"34a0688e-828f-11e5-9e5b-498b8345aaba","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"i","nodeFlags":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:133","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 21"},"status":-1},{"failures":[64,214,215,149,0,150,1,2,160,165,9,12,180,182,184,189],"tindex":"34a08f9f-828f-11e5-9e5b-0f928603e3f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"b_lat","incDist2DSum":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:235","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[],"tindex":"34a08fa0-828f-11e5-9e5b-913633040be3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CmdArgs.merge(com.graphhopper.util.CmdArgs)"},"variableMap":{"args":"properties","tmp":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:66","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[],"tindex":"34a08fa1-828f-11e5-9e5b-85dc7cfcf903","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"status":0},{"failures":[216,17,217,218,219,220,221,222,223,106,224,124,225],"tindex":"34a08fa2-828f-11e5-9e5b-dbe799328f4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:836","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"maxTurnCosts":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:239","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile);\n    if (long < 0)\n        return false;\n    \n    com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, (long - (com.graphhopper.storage.AbstractDataAccess.int)), false);\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-1},{"failures":[226,227],"tindex":"34a08fa3-828f-11e5-9e5b-f97851a9c14a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:280","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.Set<java.lang.String>))))\n    return 0;\n"},"variableMap":{"acceptedRailways":"restrictedValues","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:250","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[4,168],"tindex":"34a0b6b4-828f-11e5-9e5b-4b8af1b28186","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"34a0b6b5-828f-11e5-9e5b-a95ac077f43d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"34a0b6b6-828f-11e5-9e5b-a1e187d037aa","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"edge","dLat":"edge","tmpErr":"edge","x1":"edge","sLon":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:108","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n        continue;\n    \n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n    float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n    if (java.lang.Double.isInfinite(float))\n        continue;\n    \n    com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n    if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n        double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n        double = float + double;\n        if (com.graphhopper.routing.AStar.AStarEdge == null) {\n            com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n            gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n        } else {\n            assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.routing.AStar.AStarEdge.double = double;\n            com.graphhopper.routing.AStar.AStarEdge.double = float;\n        }\n        com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"34a0b6b7-828f-11e5-9e5b-8fa04840f457","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:427","type":"CtInvocationImpl","sourcecode":"java.lang.Object.getClass().getMethod(\"clean\").invoke(java.lang.Object)"},"variableMap":{"cleaner":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:88","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}