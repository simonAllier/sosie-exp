{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":2,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":18,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":6,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":8},"transformations":[{"failures":[],"tindex":"58e55464-7910-11e5-9ff9-49e9d35c3142","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"edgeFrom","tmpErr":"edgeIdFrom","y1":"edgeFrom","dLon":"edgeIdFrom","sLat":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:115","type":"CtIfImpl","sourcecode":"if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n    final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n    java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n        break;\n    \n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"58e57b75-7910-11e5-9ff9-13c0408f6aee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:743","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"58e57b76-7910-11e5-9ff9-7f90f5d53f7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:182","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"closed":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:258","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.setEdgeEntry(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n    com.graphhopper.routing.PathBidirRef.setEdgeEntryTo(com.graphhopper.storage.EdgeEntry);\n} "},"status":-2},{"failures":[],"tindex":"58e57b77-7910-11e5-9ff9-633ae5d35899","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n        return 0;\n    \n} "},"status":-2},{"failures":[],"tindex":"58e5a288-7910-11e5-9ff9-f3a2f11fe64e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"58e5a289-7910-11e5-9ff9-3f3f9fa61504","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:147","type":"CtIfImpl","sourcecode":"if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"variableMap":{"slice":"lon","azimuth":"lon","cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:204","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"E\";\nelse\n    java.lang.String += \"W\";\n"},"status":-2},{"failures":[],"tindex":"58e5a28a-7910-11e5-9ff9-ab178f582441","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n"},"status":-2},{"failures":[],"tindex":"58e5a28b-7910-11e5-9ff9-698975bb856c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:164","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"58e5a28c-7910-11e5-9ff9-fbb299880932","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"variableMap":{"distance":"dist","maxSpeed":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:421","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"58e5a28d-7910-11e5-9ff9-85fa48def9ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(double, double)"},"status":-2},{"failures":[],"tindex":"58e5a28e-7910-11e5-9ff9-1ff99eadfd16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:143","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('\\n')"},"status":-2},{"failures":[],"tindex":"58e5a28f-7910-11e5-9ff9-733a494fdcd6","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:527","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.dataaccess\", \"RAM_STORE\")"},"variableMap":{"args":"args"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:539","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.provider\", \"noop\").toLowerCase()"},"status":-2},{"failures":[],"tindex":"58e5c9a0-7910-11e5-9ff9-2f20d1fd1c55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:254","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-2},{"failures":[],"tindex":"58e5c9a1-7910-11e5-9ff9-41276a9b8f9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:163","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 56"},"variableMap":{"b":"b","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:145","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 35"},"status":-2},{"failures":[],"tindex":"58e5c9a2-7910-11e5-9ff9-c19fcae6abc1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:337","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIterator.getAdjNode()"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:250","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"58e5c9a3-7910-11e5-9ff9-016e94568467","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:250","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"58e5c9a4-7910-11e5-9ff9-b309a1a46136","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:43","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"variableMap":{"fromNode":"node","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:99","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"58e5c9a5-7910-11e5-9ff9-1de3bd59c3cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"variableMap":{"maxTurnCosts":"virtNodeIDintern","costs":"favoredHeading","restricted":"incoming"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"58e5f0b6-7910-11e5-9ff9-05de1343058b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"variableMap":{"closestEdge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setName(java.lang.String)"},"status":-2},{"failures":[],"tindex":"58e5f0b7-7910-11e5-9ff9-d57d6199ca3d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"counter","S_SKIP_EDGE2":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}