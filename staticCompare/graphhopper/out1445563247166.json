{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":252,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.reader.OSMReaderTest.testFerry":165,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":154,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":155,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":218,"com.graphhopper.routing.QueryGraphTest.testOneWay":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":140,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":61,"com.graphhopper.reader.OSMReaderTest.testWithBounds":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":207,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":262,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":139,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":26,"com.graphhopper.GraphHopperTest.testPrepare":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":77,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":258,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":234,"com.graphhopper.util.InstructionListTest.testWayList":151,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":243,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":12,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":240,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":62,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":164,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":204,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":130,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":28,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":273,"com.graphhopper.GraphHopperTest.testLoadOSM":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":63,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":91,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":126,"com.graphhopper.reader.OSMReaderTest.testSort":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":246,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":210,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":99,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":256,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":197,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":277,"com.graphhopper.routing.PathTest.testWayList":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":257,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":233,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":248,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":203,"com.graphhopper.util.GHUtilityTest.testSort":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":66,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":122,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":216,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":279,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":90,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":32,"com.graphhopper.GraphHopperAPITest.testLoad":5,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":255,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":206,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.reader.OSMReaderTest.testBarriers":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":10,"com.graphhopper.util.GHUtilityTest.testCopy":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":239,"com.graphhopper.routing.PathTest.testFindInstruction":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":109,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":247,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":264,"com.graphhopper.reader.PrinctonReaderTest.testRead":163,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":124,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":76,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":141,"com.graphhopper.util.InstructionListTest.testWayList2":152,"com.graphhopper.reader.OSMReaderTest.testFoot":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":70,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":67,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":68,"com.graphhopper.reader.OSMReaderTest.testOneWay":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":215,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":131,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":17,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":78,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":170,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":261,"com.graphhopper.routing.PathBidirRefTest.testExtract":274,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":148,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":185,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":281,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":182,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":74,"com.graphhopper.util.GHUtilityTest.testSort2":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":249,"com.graphhopper.reader.OSMReaderTest.testMain":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":144,"com.graphhopper.routing.PathBidirRefTest.testExtract2":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":59,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":44,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":64,"com.graphhopper.storage.GraphHopperStorageTest.testClone":80,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":147,"com.graphhopper.GraphHopperTest.testFootAndCar":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":103,"com.graphhopper.util.GHUtilityTest.testSortDirected":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":135,"com.graphhopper.GraphHopperTest.testPrepareOnly":179,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":36,"com.graphhopper.GraphHopperTest.testVia":187,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":244,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":45,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":222,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":153,"com.graphhopper.GraphHopperTest.testFootOnly":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":50,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":199,"com.graphhopper.util.InstructionListTest.testFind":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":129},"transformations":[{"failures":[0],"tindex":"49fda04c-7924-11e5-822d-8d5a71b13ca8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[1,2,3,4],"tindex":"49fdc75d-7924-11e5-822d-8b687a296994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"49fdc75e-7924-11e5-822d-578c54d0209d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:770","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.BaseGraph.getAllEdges()"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"49fdc75f-7924-11e5-822d-75f1f230f3e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"E_DIST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[8,276,14,15,16,18,19,23,24,277,79,278,85,86,87,89,90,93,94,279,102,280,108,109,110,112,113,116,117,281,129,282,135,136,137,139,140,143,144,166,167,168,170,171,172,173,175,176,177,178,179,186,187,188,189,190,191,192,193,194,195,196,205,206,208,210,211,212,213],"tindex":"49fe1580-7924-11e5-822d-3b2dff24303f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.BaseGraph.getNodes())"},"status":-1},{"failures":[],"tindex":"49fe1581-7924-11e5-822d-41c803b2ee8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"49fe1582-7924-11e5-822d-bdacfe07e2e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()))"},"variableMap":{"ghStorage":"ghStorage","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:643","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()))"},"status":-2},{"failures":[],"tindex":"49fe1583-7924-11e5-822d-1b14212f7973","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"variableMap":{"sacScale":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:115","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.parseBoolean(java.lang.String)"},"status":-2},{"failures":[],"tindex":"49fe1584-7924-11e5-822d-1b86dc633cf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((4 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"49fe1585-7924-11e5-822d-75cf088a9100","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return ((\"totalMB:\" + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getTotalMB())) + \", usedMB:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getUsedMB())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:286","type":"CtReturnImpl","sourcecode":"return ((((com.graphhopper.storage.CHGraphImpl.(toString()) + \", shortcuts:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \", nodesCH:(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB)\""},"status":-2},{"failures":[],"tindex":"49fe3c96-7924-11e5-822d-c1d414122f24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"val","dy":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"49fe3c97-7924-11e5-822d-7937e348c581","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"variableMap":{"value":"a_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:151","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"49fe3c98-7924-11e5-822d-65c7cc7c7f6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:42","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"49fe3c99-7924-11e5-822d-e5061be059c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.getTime()"},"variableMap":{"path":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:227","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, com.graphhopper.util.EdgeIteratorState.getFlags(), false)"},"status":-2},{"failures":[],"tindex":"49fe3c9a-7924-11e5-822d-2571271ea408","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"defaultType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"49fe3c9b-7924-11e5-822d-6315eb5bb2e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"encoded","nodeFlags":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:257","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"49fe3c9c-7924-11e5-822d-bd83a81b7e48","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"variableMap":{"freeIndex":"lonSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:101","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"status":-2},{"failures":[],"tindex":"49fe63ad-7924-11e5-822d-fffaaffc5e39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:85","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.PillarInfo.is3D())\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.eleToInt(double));\n"},"status":-2},{"failures":[],"tindex":"49fe63ae-7924-11e5-822d-5dbc190551f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"variableMap":{"i":"allBits","allBits":"i","hash":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"49fe63af-7924-11e5-822d-ed47fff188f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:343","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int);\n}"},"variableMap":{"max":"i","fullPL":"res","prevWayIndex":"i","basePoints":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}