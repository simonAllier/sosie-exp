{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":2,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":25,"com.graphhopper.reader.OSMReaderTest.testMain":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":21,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":9,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":27,"com.graphhopper.GraphHopperTest.testVia":34,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":16,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":10,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":3,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":18,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":11,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":31,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":33,"com.graphhopper.GraphHopperTest.testPrepare":35,"com.graphhopper.GraphHopperTest.testFootAndCar":37,"com.graphhopper.reader.OSMReaderTest.testSort":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":24},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"c0292050-790b-11e5-bbca-0396ed6a676b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"r_lon_deg","weight":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:167","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, (double / double), double, double)"},"status":-1},{"failures":[43],"tindex":"c0294761-790b-11e5-bbca-0bc9f5de9f4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:72","type":"CtReturnImpl","sourcecode":"return double * double"},"status":-1},{"failures":[],"tindex":"c0294762-790b-11e5-bbca-19b6b27fec03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":0},{"failures":[],"tindex":"c0294763-790b-11e5-bbca-c1a69e51e4b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double, java.lang.Double.double)"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.NaN","this":"points","lon":"java.lang.Double.NaN","lat":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:94","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.getSize()) ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        if (int < 0)\n            int = int;\n        \n        continue;\n    } else if (int < 0) {\n        continue;\n    } \n    com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int));\n    com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int int = int;\n    int int = int + 1;\n    int = int;\n    for ( ; int < int ; int++) {\n        if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n            int = int;\n            break;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"c0296e74-790b-11e5-bbca-8570708e95cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"maxSpeed":"defaultUTurnCost","fwdSpeed":"defaultUTurnCost"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:60","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[],"tindex":"c0296e75-790b-11e5-bbca-c119eca8565b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:259","type":"CtIfImpl","sourcecode":"if ((((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>)))) && (!(com.graphhopper.reader.OSMNode.hasTag(\"ford\", \"no\")))) {\n    return long;\n} "},"status":-2},{"failures":[],"tindex":"c0296e76-790b-11e5-bbca-71502cb88a97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"queryLon","dMinLat":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:111","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"c0296e77-790b-11e5-bbca-b754918dce1e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"originalEdges":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"c0296e78-790b-11e5-bbca-27430d667f7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:550","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"variableMap":{"this":"this","unknownSpeed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:352","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"c0296e79-790b-11e5-bbca-cdd655da2ef1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double), double, double)"},"status":-2},{"failures":[],"tindex":"c0296e7a-790b-11e5-bbca-479b1a898d10","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:186","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"c029958b-790b-11e5-bbca-5d7bbba91609","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1076","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.Path>"},"status":-2},{"failures":[],"tindex":"c029958c-790b-11e5-bbca-518f0c069129","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"deltaLon","incDist2DSum":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:732","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[],"tindex":"c029958d-790b-11e5-bbca-4f04ffd4efae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:337","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIterator.getAdjNode()"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:251","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean)"},"status":-2},{"failures":[],"tindex":"c029958e-790b-11e5-bbca-f912358ecaf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:809","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null)"},"variableMap":{"algoFactories":"algoFactories","weighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:830","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies)"},"status":-2},{"failures":[],"tindex":"c029958f-790b-11e5-bbca-5b4a77e6103c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:392","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getBaseNode()"},"variableMap":{"allIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:114","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false)"},"status":-2},{"failures":[],"tindex":"c0299590-790b-11e5-bbca-8f5ef6724aba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"tmpWeight","x1":"tmpWeight","y2":"tmpWeight","x2":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:204","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"c0299591-790b-11e5-bbca-65214a92fb0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"segmentCount","bLen":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:164","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n    int[] int[] = new int[int];\n    for (int int = 0 ; int < int ; int++) {\n        int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n    }\n    int[][][int] = int[];\n}"},"status":-2},{"failures":[],"tindex":"c029bca2-790b-11e5-bbca-5bfc9fea7005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:110","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"c029bca3-790b-11e5-bbca-e3210af99adb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:83","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}