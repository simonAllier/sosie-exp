{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":65,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":290,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":199,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":51,"com.graphhopper.reader.OSMReaderTest.testFerry":323,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":311,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":312,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":242,"com.graphhopper.routing.QueryGraphTest.testOneWay":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":195,"com.graphhopper.reader.OSMReaderTest.testWithBounds":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":234,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":71,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":70,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":177,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":340,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":80,"com.graphhopper.GraphHopperTest.testPrepare":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":289,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":14,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":257,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":251,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":272,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":45,"com.graphhopper.util.InstructionListTest.testWayList":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":281,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":314,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":310,"com.graphhopper.GraphHopperAPITest.testDisconnected179":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":58,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":193,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":196,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":307,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":238,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":84,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":350,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":224,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":268,"com.graphhopper.GraphHopperTest.testLoadOSM":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":180,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":37,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":197,"com.graphhopper.reader.OSMReaderTest.testSort":326,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":237,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":42,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":90,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":294,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":337,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":298,"com.graphhopper.routing.PathTest.testWayList":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":166,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":271,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":194,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":130,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":173,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":286,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":306,"com.graphhopper.util.GHUtilityTest.testSort":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":201,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":275,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":125,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":167,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":249,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":88,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":101,"com.graphhopper.GraphHopperAPITest.testLoad":227,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":134,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":240,"com.graphhopper.reader.OSMReaderTest.testBarriers":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":154,"com.graphhopper.routing.PathTest.testFound":300,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":357,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":277,"com.graphhopper.util.GHUtilityTest.testCopy":320,"com.graphhopper.routing.PathTest.testFindInstruction":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":269,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":60,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":43,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":285,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":118,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":263,"com.graphhopper.reader.PrinctonReaderTest.testRead":338,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":8,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":141,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":161,"com.graphhopper.util.InstructionListTest.testWayList2":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":183,"com.graphhopper.reader.OSMReaderTest.testFoot":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":205,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":202,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":203,"com.graphhopper.reader.OSMReaderTest.testOneWay":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":123,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":229,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":7,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":222,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":67,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":328,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":260,"com.graphhopper.routing.PathBidirRefTest.testExtract":296,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":308,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":347,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":200,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":346,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":344,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":209,"com.graphhopper.util.GHUtilityTest.testSort2":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":63,"com.graphhopper.reader.OSMReaderTest.testMain":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":168,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":131,"com.graphhopper.routing.PathBidirRefTest.testExtract2":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":206,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":192,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":175,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":138,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":6,"com.graphhopper.storage.GraphHopperStorageTest.testClone":18,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":198,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":160,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":27,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":34,"com.graphhopper.GraphHopperTest.testFootAndCar":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":57,"com.graphhopper.routing.PathTest.testTime":301,"com.graphhopper.util.InstructionListTest.testCreateGPX":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":159,"com.graphhopper.util.GHUtilityTest.testSortDirected":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":149,"com.graphhopper.GraphHopperTest.testPrepareOnly":341,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":220,"com.graphhopper.GraphHopperTest.testVia":348,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":4,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":282,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":132,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":247,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":317,"com.graphhopper.GraphHopperTest.testFootOnly":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":182,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":66,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":148,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":302,"com.graphhopper.util.InstructionListTest.testFind":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":208},"transformations":[{"failures":[],"tindex":"638295e6-7913-11e5-b1e6-2934ac33eedb","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:113","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.pow(2, int)) / 360))"},"variableMap":{"allBits":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:699","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int)"},"status":-2},{"failures":[0],"tindex":"6382bcf7-7913-11e5-b1e6-a3a59222c2f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"variableMap":{"bytePos":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:167","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[],"tindex":"6382e408-7913-11e5-b1e6-37738e1f95af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"6382e409-7913-11e5-b1e6-41c871d96096","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"variableMap":{"keys":"keys","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,6,265,7,8,266,267,9,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"6382e40a-7913-11e5-b1e6-07283f6be0e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"63830b1b-7913-11e5-b1e6-2ff42a26d359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:271","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.routing.TIntList.get(int), int);\n    if (com.graphhopper.util.EdgeIteratorState == null)\n        throw new java.lang.IllegalStateException((((((((\"Edge \" + (com.graphhopper.routing.TIntList.get(int))) + \" was empty when requested with node \") + int) + \", array index:\") + int) + \", edges:\") + (com.graphhopper.routing.TIntList.size())));\n    \n    int = com.graphhopper.util.EdgeIteratorState.getBaseNode();\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int);\n    com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int);\n}"},"status":-2},{"failures":[],"tindex":"63830b1c-7913-11e5-b1e6-81e1bb7fbc85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"factor","angle":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:71","type":"CtAssignmentImpl","sourcecode":"double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize())"},"status":-2},{"failures":[],"tindex":"6383322d-7913-11e5-b1e6-3bfcf3a8052f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:609","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"shift":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6383322e-7913-11e5-b1e6-53b3d9a98e35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"variableMap":{"iterState":"iterState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[],"tindex":"6383322f-7913-11e5-b1e6-710e11479210","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"newSegments","maxGeoRef":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:147","type":"CtAssignmentImpl","sourcecode":"int = int - (java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"63833230-7913-11e5-b1e6-63dcf8cb7bb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:656","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.init(com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, false)"},"status":-2},{"failures":[],"tindex":"63835941-7913-11e5-b1e6-79ad6d2e3e0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"lonSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:107","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n} "},"status":-2},{"failures":[],"tindex":"63835942-7913-11e5-b1e6-f1464b177406","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:145","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"63835943-7913-11e5-b1e6-75903291c731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinNetworkSize(int)"},"status":-2},{"failures":[],"tindex":"63835944-7913-11e5-b1e6-f500baea11a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:354","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"63838055-7913-11e5-b1e6-43ccfd01a7ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"b","adjNode":"b","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double).setFlags(com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-2},{"failures":[],"tindex":"63838056-7913-11e5-b1e6-974fde6cf294","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"63838057-7913-11e5-b1e6-e51d9e0d854f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:296","type":"CtReturnImpl","sourcecode":"return int - int"},"variableMap":{"tmp":"allBits","initializedCounter":"allBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"63838058-7913-11e5-b1e6-8781396b3bd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:899","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D()) {\n    com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)));\n    int += 4;\n} else {\n    com.graphhopper.util.PointList.add(double, double);\n}"},"status":-2},{"failures":[],"tindex":"63838059-7913-11e5-b1e6-fbdbf0748bc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:62","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}