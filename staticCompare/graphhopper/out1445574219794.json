{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":155,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":65,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":31,"com.graphhopper.reader.OSMReaderTest.testFerry":134,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":152,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":145,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":68,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":61,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":157,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":45,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":80,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":72,"com.graphhopper.GraphHopperTest.testPrepare":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":186,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":167,"com.graphhopper.util.BitUtilLittleTest.testToBitString":131,"com.graphhopper.util.InstructionListTest.testWayList":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":3,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":127,"com.graphhopper.GraphHopperAPITest.testDisconnected179":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":94,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":28,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":79,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":77,"com.graphhopper.GraphHopperTest.testLoadOSM":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":29,"com.graphhopper.reader.OSMReaderTest.testSort":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":177,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":144,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":82,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":54,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":185,"com.graphhopper.routing.PathTest.testWayList":148,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":58,"com.graphhopper.coll.OSMIDMapTest.testGet2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":26,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":59,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":179,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":33,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":170,"com.graphhopper.coll.OSMIDMapTest.testGetLong":191,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":163,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":96,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":150,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":123,"com.graphhopper.GraphHopperAPITest.testLoad":193,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":120,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":100,"com.graphhopper.reader.OSMReaderTest.testBarriers":138,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":42,"com.graphhopper.util.GHUtilityTest.testCopy":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":172,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":12,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":92,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":15,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":151,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":23,"com.graphhopper.util.InstructionListTest.testWayList2":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":51,"com.graphhopper.reader.OSMReaderTest.testFoot":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":37,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":106,"com.graphhopper.reader.OSMReaderTest.testOneWay":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":149,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":91,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":83,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":14,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":139,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":184,"com.graphhopper.coll.OSMIDMapTest.testGet":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":9,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":84,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":190,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":114,"com.graphhopper.storage.RAMDataAccessTest.testCopy":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":111,"com.graphhopper.storage.RAMDataAccessTest.testSegments":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":180,"com.graphhopper.reader.OSMReaderTest.testMain":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":43,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":141,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":19,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":90,"com.graphhopper.GraphHopperTest.testFootAndCar":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":101,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":64,"com.graphhopper.util.BitUtilLittleTest.testToFloat":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":108,"com.graphhopper.GraphHopperTest.testVia":116,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":176,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":56,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":99,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":156,"com.graphhopper.GraphHopperTest.testFootOnly":124,"com.graphhopper.util.BitUtilLittleTest.testToInt":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":50,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":52,"com.graphhopper.util.InstructionListTest.testFind":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":74},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"d6308cc6-793d-11e5-9dbe-2d8de0e9b220","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"level"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,1,95,96,97,98,99,2,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,3,176,4,177,178,179,180,181,182,183,184,5,185,6,186,7,8,9,10,11,12,13,187,16,17,18,188,189,190,191,192,193,194],"tindex":"d630b3d7-793d-11e5-9dbe-d71b552d5109","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"value","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"d630b3d8-793d-11e5-9dbe-ef4318bbafd5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:52","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flagsSizeIsLong":"enforcementOccured"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:416","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"d630dae9-793d-11e5-9dbe-c7a4962d025f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:166","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d630daea-793d-11e5-9dbe-175c4419d9ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName()"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\")"},"status":-2},{"failures":[],"tindex":"d630daeb-793d-11e5-9dbe-d5d95eed260a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(long, byte[], 8)"},"status":-2},{"failures":[],"tindex":"d630daec-793d-11e5-9dbe-2fa97e66adde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-2},{"failures":[],"tindex":"d630daed-793d-11e5-9dbe-c32fda0d21b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:264","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())))"},"status":-2},{"failures":[],"tindex":"d630daee-793d-11e5-9dbe-2186728e5a38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:803","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeExplorer.setBaseNode(((int) - 1)).toString()"},"status":-2},{"failures":[],"tindex":"d630daef-793d-11e5-9dbe-c52cbb75faf9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"status":-2},{"failures":[],"tindex":"d6310200-793d-11e5-9dbe-af20b5c5f475","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"d6310201-793d-11e5-9dbe-35f1293a28fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:327","type":"CtAssignmentImpl","sourcecode":"long[][int] = -1"},"variableMap":{"values":"bitmasks","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:208","type":"CtAssignmentImpl","sourcecode":"long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int])"},"status":-2},{"failures":[],"tindex":"d6310202-793d-11e5-9dbe-1be71e760011","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"edge","edgeId":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:108","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n        continue;\n    \n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n    float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n    if (java.lang.Double.isInfinite(float))\n        continue;\n    \n    com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n    if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n        double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n        double = float + double;\n        if (com.graphhopper.routing.AStar.AStarEdge == null) {\n            com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n            com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n        } else {\n            assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.routing.AStar.AStarEdge.double = double;\n            com.graphhopper.routing.AStar.AStarEdge.double = float;\n        }\n        com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d6310203-793d-11e5-9dbe-6746b16239a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:86","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true);\n"},"status":-2},{"failures":[],"tindex":"d6312914-793d-11e5-9dbe-7d2d49917c19","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:207","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"d6312915-793d-11e5-9dbe-35f16dbce3ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"variableMap":{"output":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:123","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-2},{"failures":[],"tindex":"d6312916-793d-11e5-9dbe-1b7f86703d03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"status":-2},{"failures":[],"tindex":"d6312917-793d-11e5-9dbe-d5c598b16091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:74","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"d6312918-793d-11e5-9dbe-57faa8a7114c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:341","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"d6312919-793d-11e5-9dbe-09e2f96cf177","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:180","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}