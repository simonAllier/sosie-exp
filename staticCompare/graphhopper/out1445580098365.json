{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":6,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":24,"com.graphhopper.routing.PathTest.testFindInstruction":39,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":11,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":37,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":22,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":16,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":23,"com.graphhopper.util.InstructionListTest.testFind":2,"com.graphhopper.GraphHopperTest.testLoadOSM":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":25,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":5,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.GraphHopperTest.testPrepare":32,"com.graphhopper.reader.OSMReaderTest.testSort":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30,"com.graphhopper.GraphHopperTest.testFootAndCar":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":28},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"8616b020-794b-11e5-a5b3-5b243d327f26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"shrinkFactor","toHeight":"shrinkFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:137","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[],"tindex":"8616b021-794b-11e5-a5b3-8b41b4e88036","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"minLat","dy":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"8616b022-794b-11e5-a5b3-bdceda3ae527","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"variableMap":{"bytes":"bytes","tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:100","type":"CtAssignmentImpl","sourcecode":"byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"8616d733-794b-11e5-a5b3-23c6333c5c79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"tmp","orientation":"tmp","java.lang.Math.PI":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"status":-2},{"failures":[],"tindex":"8616d734-794b-11e5-a5b3-83ce40308f74","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:206","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"8616d735-794b-11e5-a5b3-13190623e032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"8616d736-794b-11e5-a5b3-51780d4a7363","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation)"},"variableMap":{"this":"this","relation":"item"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:293","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)))"},"status":-2},{"failures":[],"tindex":"8616d737-794b-11e5-a5b3-774582bed989","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:377","type":"CtLocalVariableImpl","sourcecode":"final int int = com.graphhopper.reader.TLongList.size()"},"status":-2},{"failures":[],"tindex":"8616d738-794b-11e5-a5b3-6f64460c849f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[],"tindex":"8616d739-794b-11e5-a5b3-1d4c93049057","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:608","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"variableMap":{"turnRestrictionBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"8616fe4a-794b-11e5-a5b3-a781241cc0f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"viaNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:135","type":"CtIfImpl","sourcecode":"if (int == (int)) {\n    com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int);\n} else {\n    int int = 0;\n    int int = int;\n    while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n        int = int;\n        if ((int++) > 1000) {\n            throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n        } \n    }\n    com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int);\n}"},"status":-2},{"failures":[],"tindex":"8616fe4b-794b-11e5-a5b3-112af05e2204","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:58","type":"CtLocalVariableImpl","sourcecode":"int int = double > 0 ? 1 : -1"},"status":-2},{"failures":[],"tindex":"8616fe4c-794b-11e5-a5b3-ffffc1e4f449","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"status":-2},{"failures":[],"tindex":"8616fe4d-794b-11e5-a5b3-7bedfb6404a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"edgeId","maxGeoRef":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:785","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"8616fe4e-794b-11e5-a5b3-67924a421f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"variableMap":{"i":"i","lastIndex":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:179","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"status":-2},{"failures":[],"tindex":"8616fe4f-794b-11e5-a5b3-a37515057b9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:350","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int]);\n    }\n"},"status":-2},{"failures":[],"tindex":"8616fe50-794b-11e5-a5b3-15308d7c4fa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:291","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"status":-2},{"failures":[],"tindex":"86172561-794b-11e5-a5b3-dbf760271777","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"86172562-794b-11e5-a5b3-5b0f53900e48","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"defaultSegmentSize","to":"defaultSegmentSize","lonSize":"defaultSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:525","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"graph.dataaccess.segmentSize\", int)"},"status":-2},{"failures":[],"tindex":"86172563-794b-11e5-a5b3-c90ca191d71b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"variableMap":{"motorcarTag":"s","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:366","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        int = java.lang.Integer;\n        if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n            if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n                int = java.lang.Integer;\n            else\n                int = java.lang.Integer;\n            \n        } \n    } \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        if (java.lang.Integer != null) {\n            if (!(com.graphhopper.reader.OSMWay.hasTag(\"service\")))\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}