{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":12,"com.graphhopper.reader.OSMReaderTest.testFerry":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":47,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":91,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":56,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":59,"com.graphhopper.reader.OSMReaderTest.testWithBounds":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":45,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":69,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":105,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":75,"com.graphhopper.reader.OSMReaderTest.testFoot":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":78,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":52,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":60,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":71,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":38,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":41,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":95,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":58,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":2,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":4,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":57,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":11,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":13,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":50,"com.graphhopper.util.InstructionListTest.testCreateGPX":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":84,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":33,"com.graphhopper.GraphHopperAPITest.testLoad":26,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":9,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":32,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":80,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":66},"transformations":[{"failures":[],"tindex":"70a9b5fe-8290-11e5-84ca-e95cf75ca5ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"weightApproximation","resultOrientation":"weightApproximation","baseOrientation":"weightApproximation","java.lang.Math.PI":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:37","type":"CtIfImpl","sourcecode":"if (boolean)\n    double *= -1;\n"},"status":0},{"failures":[],"tindex":"70a9dd0f-8290-11e5-84ca-f35499724666","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:62","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"70a9dd10-8290-11e5-84ca-23f7b03efa0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:362","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"variableMap":{"this":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:100","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"70a9dd11-8290-11e5-84ca-9f38a1a4a095","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n"},"status":-1},{"failures":[10],"tindex":"70aa0422-8290-11e5-84ca-43fadc795ed2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"edgeId","entityType":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"status":-1},{"failures":[],"tindex":"70aa0423-8290-11e5-84ca-db0c150f70c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:103","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"70aa0424-8290-11e5-84ca-13438e512997","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.trimToSize(((com.graphhopper.util.PointList.getSize()) - int))"},"variableMap":{"removed":"freeIndex","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:94","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.getSize()) ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        if (int < 0)\n            int = int;\n        \n        continue;\n    } else if (int < 0) {\n        continue;\n    } \n    com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int));\n    com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int int = int;\n    int int = int + 1;\n    int = int;\n    for ( ; int < int ; int++) {\n        if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n            int = int;\n            break;\n        } \n    }\n}"},"status":-1},{"failures":[15,22,34,35],"tindex":"70aa0425-8290-11e5-84ca-8ff9d0da8eb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())"},"status":-1},{"failures":[],"tindex":"70aa5246-8290-11e5-84ca-75eec6bf106f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"status":0},{"failures":[],"tindex":"70aa5247-8290-11e5-84ca-7f3f049a5898","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:369","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:643","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()))"},"status":-2},{"failures":[],"tindex":"70aa5248-8290-11e5-84ca-9309d29955f9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:189","type":"CtIfImpl","sourcecode":"if ((int[].int) < 1) {\n    throw new java.lang.IllegalStateException(\"depth needs to be at least 1\");\n} "},"variableMap":{"entries":"elem","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[36,37],"tindex":"70aa5249-8290-11e5-84ca-9725ccb0b3e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:150","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge) == null)\n    throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n"},"variableMap":{"currEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:103","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) != null) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n} "},"status":-1},{"failures":[38,39,40,41,42,43,17,18,19,20,21,22,24,25,0,44,1,2,3,45,46,47,4,5,48,6,49,50,7,51,52,53,36,54,55,56,57,58,59,8,60,9,61,62,26],"tindex":"70aa524a-8290-11e5-84ca-db1be733b355","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:211","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[63],"tindex":"70aa524b-8290-11e5-84ca-0de1ad71e960","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:170","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.createGPX(\"GraphHopper\", new java.util.Date().getTime())"},"status":-1},{"failures":[64,0,44,1,2,3,45,46,4,5,48,6,7,8,60,9,62],"tindex":"70aa795c-8290-11e5-84ca-f7c96fb4e2a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:51","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[65],"tindex":"70aa795d-8290-11e5-84ca-07ee7fbf3ead","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"fwdSlower","incDist2DSum":"fwdSlower","fwdSlower":"fwdSlower","fullDist2D":"fwdSlower","restDist2D":"fwdSlower","speed":"fwdSlower","decDist2DSum":"fwdSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:230","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,27,29,32,33,98,99],"tindex":"70aa795e-8290-11e5-84ca-d16415409d5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:103","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    java.util.Set<java.lang.Integer>.add(int);\n}"},"status":-1},{"failures":[],"tindex":"70aa795f-8290-11e5-84ca-c55aed7b8214","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:618","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double)"},"status":-2},{"failures":[29,33],"tindex":"70aa7960-8290-11e5-84ca-1363d9db1f6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"variableMap":{"bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:381","type":"CtLocalVariableImpl","sourcecode":"long long = gnu.trove.list.TLongList.get(int)"},"status":-1},{"failures":[100,82,101,102,64,0,103,44,104,1,2,3,45,105,106,46,47,4,5,48,6,53,54,56,57,58,8,9,62],"tindex":"70aaa071-8290-11e5-84ca-bf9780bb4d24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"shortcutCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:193","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"70a9b5fe-8290-11e5-84ca-e95cf75ca5ec","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"70aa5246-8290-11e5-84ca-75eec6bf106f","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"type":"staticDiff"}]}]}