{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":135,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":68,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":162,"com.graphhopper.storage.VLongStorageTest.testWrite":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":149,"com.graphhopper.storage.MMapDataAccessTest.testSegments":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":39,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":38,"com.graphhopper.coll.CompressedArrayTest.testCompress":61,"com.graphhopper.util.BitUtilLittleTest.testToDouble":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":55,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":133,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":47,"com.graphhopper.GraphHopperTest.testPrepare":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":169,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":69,"com.graphhopper.GraphHopperAPITest.testDisconnected179":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":25,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":168,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":132,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":138,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":35,"com.graphhopper.coll.OSMIDMapTest.testGet":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":51,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":9,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":134,"com.graphhopper.GraphHopperTest.testLoadOSM":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":116,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":42,"com.graphhopper.reader.OSMReaderTest.testSort":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":30,"com.graphhopper.reader.OSMReaderTest.testMain":71,"com.graphhopper.util.BitUtilLittleTest.testToLong":155,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":106,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":3,"com.graphhopper.storage.MMapDataAccessTest.testCopy":7,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":112,"com.graphhopper.coll.OSMIDMapTest.testGet2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":153,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":95,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":65,"com.graphhopper.GraphHopperTest.testFootAndCar":83,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":140,"com.graphhopper.coll.OSMIDMapTest.testGetLong":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":4,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":146,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":127,"com.graphhopper.coll.CompressedArrayTest.testCompress2":60,"com.graphhopper.GraphHopperTest.testVia":80,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":19,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":108,"com.graphhopper.GraphHopperAPITest.testLoad":70,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":99,"com.graphhopper.GraphHopperTest.testFootOnly":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":33,"com.graphhopper.reader.OSMReaderTest.testBarriers":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":125},"transformations":[{"failures":[],"tindex":"e2cfcf97-8281-11e5-98f9-092920a433b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.close()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"e2cff6a8-8281-11e5-98f9-6bc017fd4f03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"index","edgeId":"index","nodeA":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:313","type":"CtReturnImpl","sourcecode":"return java.util.List<java.nio.ByteBuffer>.get(int).getInt(int)"},"status":-1},{"failures":[54,55,56,57,58,59,60,61],"tindex":"e2d01db9-8281-11e5-98f9-1faa43999928","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"midLat","fwdSpeed":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"e2d01dba-8281-11e5-98f9-9716ace36bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.round((long * (double))))"},"status":0},{"failures":[],"tindex":"e2d01dbb-8281-11e5-98f9-1104689862a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:480","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"variableMap":{"high":"nodeVia","low":"nodeVia","guess":"edgeFrom","guessedKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:450","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n    com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n    java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n        com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n    }\n} "},"status":-2},{"failures":[62,63,64,65],"tindex":"e2d01dbc-8281-11e5-98f9-0f64dbb58e88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:45","type":"CtAssignmentImpl","sourcecode":"int = ((int)(long))"},"status":-1},{"failures":[],"tindex":"e2d01dbd-8281-11e5-98f9-25bef0fbd9f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"status":-2},{"failures":[66,67],"tindex":"e2d044ce-8281-11e5-98f9-73d5cd314371","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:478","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry)"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,1,2,3,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"e2d044cf-8281-11e5-98f9-1b4138dfc37f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"variableMap":{"edgeKey1":"frontIndex","edgeKey2":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-1},{"failures":[],"tindex":"e2d044d0-8281-11e5-98f9-e979a0bc989f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:84","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"points","com.graphhopper.util.PointList.EMPTY":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[127],"tindex":"e2d044d1-8281-11e5-98f9-2fc74885600c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"value","pointer":"value","maxCapacity":"value","baseCapacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-1},{"failures":[],"tindex":"e2d044d2-8281-11e5-98f9-5dabff8357f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.trimToSize()"},"status":0},{"failures":[],"tindex":"e2d044d3-8281-11e5-98f9-67136aab8f5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:87","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(java.io.File) , 50000)"},"variableMap":{"file":"file","ips":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:281","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.FileInputStream(java.io.File)"},"status":0},{"failures":[],"tindex":"e2d06be4-8281-11e5-98f9-3167255dd18f","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"lazyTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:362","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[70,128,74,75,76,77,78,79,80,81,82,83,87,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,94,95,148,149,96,150,151,152,153],"tindex":"e2d06be5-8281-11e5-98f9-9bcf9992b230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:156","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>"},"status":-1},{"failures":[],"tindex":"e2d06be6-8281-11e5-98f9-e1dd674cadee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:91","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(((double - (com.graphhopper.util.shapes.BBox.double)) / (double)) * (com.graphhopper.geohash.LinearKeyAlgo.double)))"},"status":-2},{"failures":[154,155,127,156,157,158,159],"tindex":"e2d06be7-8281-11e5-98f9-ada348643f86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:82","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:75","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 7)] = ((byte)(long >> 56))"},"status":-1},{"failures":[160,161,162,163,164,165,166,167,168,169],"tindex":"e2d06be8-8281-11e5-98f9-3b0586a913ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:442","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[170,171,172],"tindex":"e2d06be9-8281-11e5-98f9-13ac8d76e6e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:69","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        gnu.trove.list.array.TIntArrayList.trimToSize();\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e2d092fa-8281-11e5-98f9-fd110b4753c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:775","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e2d01dba-8281-11e5-98f9-9716ace36bd3","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.checkValue","java.lang.Math.round"]},"type":"staticDiff"},{"branches":{"com.graphhopper.util.GHUtilityTest.testSort":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.util.InstructionListTest.testWayList":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b"],"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.util.BreadthFirstSearchTest.testBFS":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.GraphHopperAPITest.testDisconnected179":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.PathTest.testWayList":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b"],"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.reader.PrinctonReaderTest.testRead":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.routing.PathBidirRefTest.testExtract":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b"],"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"],"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":["com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e3","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e1","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).b","com.graphhopper.routing.util.EncodedValue_void_checkValue(long).e2"]},"type":"branch"}]}]}