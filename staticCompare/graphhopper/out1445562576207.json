{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":38,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":82,"com.graphhopper.routing.PathTest.testFindInstruction":22,"com.graphhopper.reader.OSMReaderTest.testFerry":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":23,"com.graphhopper.routing.QueryGraphTest.testOneWay":45,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":30,"com.graphhopper.reader.OSMReaderTest.testWithBounds":57,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":40,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":92,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":35,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.util.InstructionListTest.testWayList2":97,"com.graphhopper.reader.OSMReaderTest.testFoot":49,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":86,"com.graphhopper.util.InstructionListTest.testWayList":96,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":84,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":71,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":80,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.reader.OSMReaderTest.testSort":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":90,"com.graphhopper.reader.OSMReaderTest.testMain":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":34,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":42,"com.graphhopper.routing.PathTest.testWayList":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":76,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":62,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":65,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":64,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":41,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":36,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":72,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":63,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":39,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":68,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.reader.OSMReaderTest.testBarriers":52,"com.graphhopper.util.InstructionListTest.testFind":95,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":89},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"ba122b83-7922-11e5-a320-f101c8d821fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"status":-1},{"failures":[],"tindex":"ba125294-7922-11e5-a320-01ac9024390c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[],"tindex":"ba125295-7922-11e5-a320-37c8b0ad024a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:191","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"ba125296-7922-11e5-a320-33d236d2010e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"variableMap":{"tmpNode":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"status":-2},{"failures":[],"tindex":"ba125297-7922-11e5-a320-d521dd15e256","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"viaTurnPenalty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1035","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-2},{"failures":[],"tindex":"ba1279a8-7922-11e5-a320-275a3f4f055a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:66","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ba1279a9-7922-11e5-a320-0759a597bae9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMaxRegionSearch(int)"},"variableMap":{"tmpIndex":"this","maxRegionSearch":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"status":-2},{"failures":[],"tindex":"ba1279aa-7922-11e5-a320-dde0cf82bfe0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:208","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \";\\n \""},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"status":-2},{"failures":[],"tindex":"ba1279ab-7922-11e5-a320-21bf9966a771","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:542","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int"},"status":-2},{"failures":[],"tindex":"ba1279ac-7922-11e5-a320-55bb2b41c88d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap)"},"status":-2},{"failures":[],"tindex":"ba1279ad-7922-11e5-a320-874878d397cb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"status":-2},{"failures":[],"tindex":"ba12a0be-7922-11e5-a320-8dd7891375a9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:76","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 6)] = ((byte)(long >> 48))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-2},{"failures":[],"tindex":"ba12a0bf-7922-11e5-a320-eb5e7b612d75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:629","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    com.graphhopper.routing.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int);\n} "},"status":-2},{"failures":[],"tindex":"ba12a0c0-7922-11e5-a320-131d1e7d9c65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntIntBinHeap.update_(java.lang.Number.intValue(), java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"ba12a0c1-7922-11e5-a320-1fc78784f9e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:37","type":"CtIfImpl","sourcecode":"if (boolean)\n    double *= -1;\n"},"status":-2},{"failures":[],"tindex":"ba12a0c2-7922-11e5-a320-01ab1014df9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-2},{"failures":[],"tindex":"ba12a0c3-7922-11e5-a320-f5dc40147e91","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:392","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if (!(com.graphhopper.reader.OSMWay.hasTag(\"service\")))\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-2},{"failures":[],"tindex":"ba12a0c4-7922-11e5-a320-5d12091cab3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"code","speed":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"ba12c7d5-7922-11e5-a320-8744cef94e2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:207","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"variableMap":{"str":"buildDate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.get(0)"},"status":-2},{"failures":[],"tindex":"ba12c7d6-7922-11e5-a320-6b663fc0c92f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}