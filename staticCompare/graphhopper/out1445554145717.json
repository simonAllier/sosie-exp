{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"191cdb46-790f-11e5-afe2-f937a15e462b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:76","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"191d0257-790f-11e5-afe2-053c262bb236","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:251","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"191d0258-790f-11e5-afe2-b1f39422c894","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:424","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"191d2969-790f-11e5-afe2-b14ecb3d3200","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:77","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"calcMean":"initialized","eleCalcMean":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:566","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"191d296a-790f-11e5-afe2-adabb2377d32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:68","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : com.graphhopper.util.TranslationMap.java.util.List<java.lang.String>) {\n    com.graphhopper.util.TranslationMap.TranslationHashMap com.graphhopper.util.TranslationMap.TranslationHashMap = new com.graphhopper.util.TranslationMap.TranslationHashMap(com.graphhopper.util.Helper.getLocale(java.lang.String));\n    com.graphhopper.util.TranslationMap.TranslationHashMap.doImport(com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.getResourceAsStream((java.lang.String + \".txt\")));\n    com.graphhopper.util.TranslationMap.add(com.graphhopper.util.TranslationMap.TranslationHashMap);\n}"},"status":-2},{"failures":[],"tindex":"191d296b-790f-11e5-afe2-9fbd09edca3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:151","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n}"},"status":-2},{"failures":[],"tindex":"191d296c-790f-11e5-afe2-cb4d50f388fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"weight","eleDelta":"weight","incDist2DSum":"weight","decEleSum":"weight","fullDist2D":"weight","decDist2DSum":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:655","type":"CtForEachImpl","sourcecode":"NEXT_SC : for (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut : java.util.Map<com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut>.keySet()) {\n    boolean boolean = false;\n    com.graphhopper.util.CHEdgeIterator com.graphhopper.util.CHEdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    while (com.graphhopper.util.CHEdgeIterator.next()) {\n        if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n            if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n                continue NEXT_SC;\n            \n            if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n                throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n            } \n            com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n            com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            boolean = true;\n            break;\n        } \n    }\n    if (!boolean) {\n        com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n        com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"191d778d-790f-11e5-afe2-cb9c715b95a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:902","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long)"},"status":-2},{"failures":[],"tindex":"191d778e-790f-11e5-afe2-93c235b5a710","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false)"},"status":-2},{"failures":[],"tindex":"191d778f-790f-11e5-afe2-1928e6fbf7dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"191d7790-790f-11e5-afe2-d3a20428fa69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:707","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int))\n    throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n"},"variableMap":{"oldI":"len","removedNodes":"indicesCopy","nodeId":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:255","type":"CtIfImpl","sourcecode":"if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n    int = int;\n    int = int + (int);\n} "},"status":-2},{"failures":[],"tindex":"191d9ea1-790f-11e5-afe2-333b5523eaea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:170","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.createGPX(\"GraphHopper\", new java.util.Date().getTime())"},"status":-2},{"failures":[],"tindex":"191d9ea2-790f-11e5-afe2-ab952c8eac84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"variableMap":{"res":"flags","value":"flags","maxBits":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[],"tindex":"191d9ea3-790f-11e5-afe2-2122410f67e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:695","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"variableMap":{"acceptBit":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","internalFlags":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"191d9ea4-790f-11e5-afe2-adfdee51057f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"tmpNode","child":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:694","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true)"},"status":-2},{"failures":[],"tindex":"191dc5b5-790f-11e5-afe2-f72af8ab9543","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"variableMap":{"str":"fileDetails"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:230","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"191dc5b6-790f-11e5-afe2-f7652f9c000b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:267","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-2},{"failures":[],"tindex":"191dc5b7-790f-11e5-afe2-23a3028330e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat()))"},"variableMap":{"output":"output","instruction":"instruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLon())).append(\"\\\">\")"},"status":-2},{"failures":[],"tindex":"191dc5b8-790f-11e5-afe2-f3bdbb331c8c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"191decc9-790f-11e5-afe2-55c285051ef6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:483","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.valueCollection()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}