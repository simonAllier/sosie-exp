{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"4b8628b7-790c-11e5-be80-6f9bb73cd012","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:212","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"4b864fc8-790c-11e5-be80-f5ec50129e9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"mainNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:697","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.VirtualEdgeIterator.next()) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.storage.index.QueryResult>.get(((com.graphhopper.routing.VirtualEdgeIterator.getAdjNode()) - (int))).getClosestEdge();\n    com.graphhopper.routing.TIntArrayList.add(com.graphhopper.util.EdgeIteratorState.getEdge());\n}"},"status":-2},{"failures":[],"tindex":"4b864fc9-790c-11e5-be80-b144b9447134","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"lastLon","fullDist2D":"lastLat","decDist2DSum":"lastLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"4b8676da-790c-11e5-be80-bbc073a90b69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"variableMap":{"bytes":"bytes","tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:166","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = byte[]"},"status":-2},{"failures":[],"tindex":"4b8676db-790c-11e5-be80-055c31200e81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:576","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.updates.neighbor\", int)"},"status":-2},{"failures":[],"tindex":"4b8676dc-790c-11e5-be80-0fcdb2e5d61a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"indexDivisor","length":"indexDivisor","index":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:360","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"4b8676dd-790c-11e5-be80-23b269f192d6","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"variableMap":{"prevLon":"dMinLat","prevEle":"lat","prevLat":"lon","distCalc3D":"distCalc","lon":"minLat","lat":"dMinLat","ele":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:666","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"4b8676de-790c-11e5-be80-9b4d662ef1c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"shortcuts.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_SHORTCUT":"com.graphhopper.util.Constants.VERSION_GEOMETRY","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"4b8676df-790c-11e5-be80-dd892561600f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"status":-2},{"failures":[],"tindex":"4b869df0-790c-11e5-be80-c53e005e6a55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-2},{"failures":[],"tindex":"4b869df1-790c-11e5-be80-c1428bd01c43","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:608","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"4b869df2-790c-11e5-be80-9523e5c79669","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint)"},"status":-2},{"failures":[],"tindex":"4b869df3-790c-11e5-be80-010fb50c9b44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"4b869df4-790c-11e5-be80-fd7fe35a6b4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:1002","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:168","type":"CtReturnImpl","sourcecode":"return ((int) + \"->\") + (int)"},"status":-2},{"failures":[],"tindex":"4b869df5-790c-11e5-be80-cb7483ca7f92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"pointsIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:76","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>();\n    java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>);\n    com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation();\n    java.lang.String java.lang.String = com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation);\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = com.graphhopper.util.InstructionAnnotation.getMessage();\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"text\", com.graphhopper.util.Helper.firstBig(java.lang.String));\n    if (!(com.graphhopper.util.InstructionAnnotation.isEmpty())) {\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_text\", com.graphhopper.util.InstructionAnnotation.getMessage());\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_importance\", com.graphhopper.util.InstructionAnnotation.getImportance());\n    } \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime());\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3));\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign());\n    java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON());\n    int int = int + (com.graphhopper.util.Instruction.getPoints().size());\n    if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n        int--;\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int));\n    int = int;\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"4b86c506-790c-11e5-be80-a91cd933fcd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"tmpWeight","shortTripsSpeed":"tmpWeight","durationInHours":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"4b86c507-790c-11e5-be80-f36cbf1b87f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"counter","key":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:309","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"4b86c508-790c-11e5-be80-0d47bbfed816","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:838","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"4b86c509-790c-11e5-be80-2f4615ff8c63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"status":-2},{"failures":[],"tindex":"4b86c50a-790c-11e5-be80-1dfce1a49e69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:594","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}