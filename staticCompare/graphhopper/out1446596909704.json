{"failureDictionary":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":120,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":28,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":63,"com.graphhopper.routing.PathTest.testFindInstruction":37,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":19,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":6,"com.graphhopper.routing.QueryGraphTest.testOneWay":16,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":26,"com.graphhopper.reader.OSMReaderTest.testWithBounds":84,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":11,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":116,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":5,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":40,"com.graphhopper.GraphHopperTest.testPrepare":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.util.InstructionListTest.testWayList2":90,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":117,"com.graphhopper.reader.OSMReaderTest.testFoot":76,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":14,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":67,"com.graphhopper.util.InstructionListTest.testWayList":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":65,"com.graphhopper.reader.OSMReaderTest.testOneWay":86,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":88,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":124,"com.graphhopper.GraphHopperAPITest.testDisconnected179":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":112,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":39,"com.graphhopper.util.HelperTest.testKeepIn":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":52,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":33,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":103,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":100,"com.graphhopper.GraphHopperTest.testLoadOSM":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":61,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":99,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":98,"com.graphhopper.reader.OSMReaderTest.testSort":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":71,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":83,"com.graphhopper.reader.OSMReaderTest.testMain":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":51,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":32,"com.graphhopper.routing.PathTest.testWayList":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":48,"com.graphhopper.util.BitUtilBigTest.testFromBitString":115,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":43,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":80,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":123,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":121,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":46,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.GraphHopperTest.testFootAndCar":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":38,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":64,"com.graphhopper.util.InstructionListTest.testCreateGPX":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":45,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":12,"com.graphhopper.GraphHopperTest.testPrepareOnly":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.GraphHopperTest.testVia":101,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":108,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":2,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":53,"com.graphhopper.GraphHopperAPITest.testLoad":91,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":44,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.GraphHopperTest.testFootOnly":109,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":49,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":50,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":34,"com.graphhopper.reader.OSMReaderTest.testBarriers":79,"com.graphhopper.util.InstructionListTest.testFind":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":113,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":70},"transformations":[{"failures":[],"tindex":"f8e08722-828a-11e5-96cb-c37ad4532e7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"weight","dMinLat":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:203","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double)"},"status":-2},{"failures":[0,1],"tindex":"f8e08723-828a-11e5-96cb-eb120cec698f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:473","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(double, java.lang.Math.min(double, double))"},"status":-1},{"failures":[2,3,4],"tindex":"f8e0ae34-828a-11e5-96cb-67e003dc36d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:213","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trk><name>\").append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"f8e0ae35-828a-11e5-96cb-f772b5093ff8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:178","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph"},"variableMap":{"baseGraph":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:573","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.copyTo(this, com.graphhopper.storage.Graph)"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,4,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"f8e0ae36-828a-11e5-96cb-5dfc8f9f5168","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"status":-1},{"failures":[],"tindex":"f8e0ae37-828a-11e5-96cb-2794b9e70605","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-2},{"failures":[],"tindex":"f8e0ae38-828a-11e5-96cb-25216fc57bbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"f8e0d549-828a-11e5-96cb-5fa7a2f80deb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:229","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], -1)"},"status":0},{"failures":[],"tindex":"f8e0d54a-828a-11e5-96cb-175e2a3f3750","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:292","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[111,112,113],"tindex":"f8e0d54b-828a-11e5-96cb-8d60beef57c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f8e0d54c-828a-11e5-96cb-6d9b4955db9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"classBicycle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"status":-2},{"failures":[],"tindex":"f8e0d54d-828a-11e5-96cb-a394fb9c092c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:135","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[114],"tindex":"f8e0d54e-828a-11e5-96cb-93064f194607","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"capacity","key":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:275","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[],"tindex":"f8e0fc5f-828a-11e5-96cb-d38c5c158ed8","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:902","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long)"},"status":-2},{"failures":[115],"tindex":"f8e0fc60-828a-11e5-96cb-6357e0e83fd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[5,8,9,11,13,14,15,18,30,36,116,40,117,41,118,119,120,121,122,123,124,125,126,73,127,74,128,102,109],"tindex":"f8e0fc61-828a-11e5-96cb-e366b180d890","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"i","y2":"i","x1":"i","x2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double)"},"status":-1},{"failures":[106,108],"tindex":"f8e0fc62-828a-11e5-96cb-9d130b8dcda4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:304","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"b":"fullyLoaded","updateBestPath":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:774","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[32,33,34,35,38,39,89],"tindex":"f8e0fc63-828a-11e5-96cb-3122bcfddd7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"variableMap":{"p":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"f8e0fc64-828a-11e5-96cb-cd8e16b8da29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"neighborNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:122","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n    double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-1},{"failures":[],"tindex":"f8e12375-828a-11e5-96cb-33c8ebadf7c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:201","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((com.graphhopper.util.InstructionList.(size()) - 1))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f8e0d549-828a-11e5-96cb-5fa7a2f80deb","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":["com.graphhopper.storage.index.Location2IDQuadtree_int_fillEmptyIndices(com.graphhopper.coll.GHBitSet).e8"]},"type":"branch"},{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]}]}