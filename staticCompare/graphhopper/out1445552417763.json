{"failureDictionary":{"com.graphhopper.util.InstructionListTest.testFind":0,"com.graphhopper.routing.PathTest.testFindInstruction":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":2},"transformations":[{"failures":[0,1],"tindex":"132aeeaf-790b-11e5-b000-7981336ab1d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) > 1) {\n    for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n        com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n        for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n            double double = com.graphhopper.util.PointList.getLatitude(int);\n            double double = com.graphhopper.util.PointList.getLongitude(int);\n            if (!((int == 0) && (int == 0))) {\n                double double;\n                int int = int;\n                if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                } else {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                }\n                if (double < double) {\n                    double = double;\n                    int = int;\n                } \n            } \n            double = double;\n            double = double;\n        }\n    }\n} "},"status":-1},{"failures":[2,3],"tindex":"132b15c0-790b-11e5-b000-8d0a8749388c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"variableMap":{"val":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:57","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"132b15c1-790b-11e5-b000-eb371a9b7044","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"status":0},{"failures":[],"tindex":"132b15c2-790b-11e5-b000-4d0ba531b84f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:132","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int)))"},"status":-2},{"failures":[],"tindex":"132b15c3-790b-11e5-b000-b3be9585cca7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:140","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"132b3cd4-790b-11e5-b000-d521769bf82b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:80","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) / 4"},"variableMap":{"index":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:164","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"132b3cd5-790b-11e5-b000-ffb00c6287b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:160","type":"CtConstructorCallImpl","sourcecode":"new com.graphhopper.routing.Path(com.graphhopper.storage.Graph , com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"132b3cd6-790b-11e5-b000-5d759485bb0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime()))))"},"status":-2},{"failures":[],"tindex":"132b3cd7-790b-11e5-b000-2da460b48009","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"variableMap":{"prevLon":"prevEle","prevEle":"prevLat","prevLat":"prevLat","distCalc3D":"com.graphhopper.util.PointList.distCalc3D","lon":"prevLon","lat":"prevLat","ele":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:411","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int])"},"status":-2},{"failures":[],"tindex":"132b3cd8-790b-11e5-b000-53c9b74222b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap)"},"status":-2},{"failures":[],"tindex":"132b63e9-790b-11e5-b000-cf2349b47eaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"deltaX":"shortTripsSpeed","maxX":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:540","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"132b63ea-790b-11e5-b000-ff8d75a62765","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:78","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 4)] = ((byte)(long >> 32))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 48))"},"status":-2},{"failures":[],"tindex":"132b63eb-790b-11e5-b000-f5fd33b36817","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:348","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"132b63ec-790b-11e5-b000-074a2984d9d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:380","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"variableMap":{"java.lang.Double.MAX_VALUE":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:57","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"132b63ed-790b-11e5-b000-4f0590e7f6b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"de"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:49","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"132b63ee-790b-11e5-b000-19555edc4701","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:183","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"tMode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:966","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String)"},"status":-2},{"failures":[],"tindex":"132b63ef-790b-11e5-b000-d324bbb74d02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"nEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"132b8b00-790b-11e5-b000-5967d47ebf19","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:102","type":"CtIfImpl","sourcecode":"if ((byte[].int) > 255) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n    com.graphhopper.search.NameIndex.com.graphhopper.search.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n    java.lang.String = java.lang.String;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"132b8b01-790b-11e5-b000-499873a61946","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[])"},"status":-2},{"failures":[],"tindex":"132b8b02-790b-11e5-b000-8d884227ebb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:659","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", java.util.Set<java.lang.String>))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\"))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}