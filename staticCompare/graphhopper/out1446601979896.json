{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":56,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":66,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.reader.OSMReaderTest.testFerry":92,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":83,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":63,"com.graphhopper.routing.QueryGraphTest.testOneWay":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":229,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":190,"com.graphhopper.reader.OSMReaderTest.testWithBounds":102,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":137,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":230,"com.graphhopper.GraphHopperTest.testPrepare":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":55,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":19,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":254,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":38,"com.graphhopper.util.InstructionListTest.testWayList":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":47,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":85,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":81,"com.graphhopper.GraphHopperAPITest.testDisconnected179":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":128,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":191,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":5,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":13,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":218,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":144,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":113,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":167,"com.graphhopper.GraphHopperTest.testLoadOSM":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":192,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":213,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":258,"com.graphhopper.reader.OSMReaderTest.testSort":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":12,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":28,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":60,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":45,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":223,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":148,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":238,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":52,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":275,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":269,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":4,"com.graphhopper.util.GHUtilityTest.testSort":78,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":171,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":209,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":118,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":256,"com.graphhopper.GraphHopperAPITest.testLoad":75,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":115,"com.graphhopper.util.BitUtilBigTest.testToShort":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":274,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":15,"com.graphhopper.reader.OSMReaderTest.testBarriers":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":226,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":126,"com.graphhopper.util.GHUtilityTest.testCopy":273,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":35,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":262,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":51,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":255,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":158,"com.graphhopper.reader.PrinctonReaderTest.testRead":90,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":30,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":217,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":231,"com.graphhopper.util.InstructionListTest.testWayList2":87,"com.graphhopper.reader.OSMReaderTest.testFoot":93,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":198,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":264,"com.graphhopper.reader.OSMReaderTest.testOneWay":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":6,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":261,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":134,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":248,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":232,"com.graphhopper.routing.PathBidirRefTest.testExtract":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":22,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":110,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":141,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":172,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":185,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":140,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":106,"com.graphhopper.util.GHUtilityTest.testSort2":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":53,"com.graphhopper.reader.OSMReaderTest.testMain":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":210,"com.graphhopper.routing.PathBidirRefTest.testExtract2":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":188,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":227,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":165,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":193,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":237,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":277,"com.graphhopper.GraphHopperTest.testFootAndCar":114,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":136,"com.graphhopper.util.GHUtilityTest.testSortDirected":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":152,"com.graphhopper.GraphHopperTest.testPrepareOnly":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":222,"com.graphhopper.GraphHopperTest.testVia":111,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":48,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":175,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":67,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":88,"com.graphhopper.GraphHopperTest.testFootOnly":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":180,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":181,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":133,"com.graphhopper.util.InstructionListTest.testFind":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":216},"transformations":[{"failures":[],"tindex":"c6f24778-8296-11e5-9a25-7914a9d1e914","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":0},{"failures":[0],"tindex":"c6f26e89-8296-11e5-9a25-f57b5aee81a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:275","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"c6f2959a-8296-11e5-9a25-754dbba5fbdd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"variableMap":{"latSize":"nextEdge","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[],"tindex":"c6f2959b-8296-11e5-9a25-b991ef150ef9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"status":-2},{"failures":[],"tindex":"c6f2959c-8296-11e5-9a25-c7e5c0aa0507","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:184","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.init(int, int)"},"status":-2},{"failures":[],"tindex":"c6f2959d-8296-11e5-9a25-2b1518bf0f9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"shortcutCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((0 * 4), int)"},"status":-2},{"failures":[],"tindex":"c6f2bcae-8296-11e5-9a25-fff732695c55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:564","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[92,93,94,95,96,97,98,99,100,266,101,102,267,103,104,105,268,111,112,113,114,115,116,269,117,118,119,120,270],"tindex":"c6f2bcaf-8296-11e5-9a25-9158cb6e6eac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:182","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"closed":"removeZipped"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:717","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-1},{"failures":[271],"tindex":"c6f2bcb0-8296-11e5-9a25-1909c968b714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:48","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(short))"},"status":-1},{"failures":[],"tindex":"c6f2bcb1-8296-11e5-9a25-f3985708f0dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"variableMap":{"values":"header","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:107","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int[][int])"},"status":-2},{"failures":[19,28,33,36,272,273,89,207,208,211,274],"tindex":"c6f2bcb2-8296-11e5-9a25-f76c5ec306ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"variableMap":{"i":"edgeId","lastIndex":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:214","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.init(int, int)"},"status":-1},{"failures":[],"tindex":"c6f2e3c3-8296-11e5-9a25-13fff48102e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:272","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\")"},"status":-2},{"failures":[],"tindex":"c6f2e3c4-8296-11e5-9a25-f9806bf33527","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:145","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"c6f2e3c5-8296-11e5-9a25-7f054f3a748f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"status":0},{"failures":[275,276],"tindex":"c6f2e3c6-8296-11e5-9a25-bd12855cb26a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:112","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"c6f2e3c7-8296-11e5-9a25-09c40c7d4db7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:93","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.closeEntry()"},"status":0},{"failures":[],"tindex":"c6f2e3c8-8296-11e5-9a25-7d9ba1cd25cc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:235","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"c6f2e3c9-8296-11e5-9a25-3d56ec7e6459","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:255","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"status":0},{"failures":[275,276,277,113],"tindex":"c6f30ada-8296-11e5-9a25-3be933f9d40e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"indexWithMaxDist","bytes":"indexWithMaxDist","segmentSizeInBytes":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:147","type":"CtIfImpl","sourcecode":"if (double < double) {\n    int = int;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"c6f30adb-8296-11e5-9a25-895937ee1d90","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"s":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c6f2e3c5-8296-11e5-9a25-7f054f3a748f","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"c6f2e3c7-8296-11e5-9a25-09c40c7d4db7","diffs":[{"methodsDiff":{"delete":["java.util.zip.ZipInputStream.closeEntry"]},"type":"staticDiff"}]}]}