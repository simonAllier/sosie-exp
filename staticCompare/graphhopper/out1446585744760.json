{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":117,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":210,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.reader.OSMReaderTest.testFerry":25,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":59,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":11,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":207,"com.graphhopper.routing.QueryGraphTest.testOneWay":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":165,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":14,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":267,"com.graphhopper.reader.OSMReaderTest.testWithBounds":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":199,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":200,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":50,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":246,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":1,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":249,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":239,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":129,"com.graphhopper.search.NameIndexTest.testFlush":4,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":140,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":214,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":46,"com.graphhopper.util.InstructionListTest.testWayList":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":262,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":235,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":204,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":224,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":260,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":155,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":128,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":105,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":250,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":144,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":143,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":162,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":242,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":258,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":134,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":175,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":180,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":7,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":236,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":49,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":223,"com.graphhopper.util.GHUtilityTest.testSort":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":80,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":188,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":172,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":71,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":3,"com.graphhopper.GraphHopperAPITest.testLoad":257,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":131,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":123,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":24,"com.graphhopper.util.GHUtilityTest.testCopy":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":231,"com.graphhopper.util.AngleCalcTest.testAtan2":52,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":182,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":0,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":265,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":149,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":139,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":248,"com.graphhopper.reader.PrinctonReaderTest.testRead":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":40,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":167,"com.graphhopper.util.InstructionListTest.testWayList2":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":55,"com.graphhopper.reader.OSMReaderTest.testFoot":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":122,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":81,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":150,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":53,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":6,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":156,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":146,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":118,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":244,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":74,"com.graphhopper.routing.PathBidirRefTest.testExtract":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":245,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":256,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":125,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":253,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":252,"com.graphhopper.util.GHUtilityTest.testSort2":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":115,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":9,"com.graphhopper.routing.PathBidirRefTest.testExtract2":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":103,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":163,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":264,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":8,"com.graphhopper.storage.GraphHopperStorageTest.testClone":132,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":166,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":137,"com.graphhopper.GraphHopperTest.testFootAndCar":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":178,"com.graphhopper.GraphHopperTest.testPrepareOnly":13,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":45,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":109,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":93,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":211,"com.graphhopper.GraphHopperTest.testFootOnly":23,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":95,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":96,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":221,"com.graphhopper.util.InstructionListTest.testFind":61,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":174},"transformations":[{"failures":[],"tindex":"fa16bc5a-8270-11e5-86af-318682d482ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"edgeTo","cl":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:87","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":0},{"failures":[0,1,2,3,4],"tindex":"fa16e36b-8270-11e5-86af-e71045ed6bd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"intHigh","edgeFrom":"intHigh"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[],"tindex":"fa16e36c-8270-11e5-86af-49f5ef675a77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"fa170a7d-8270-11e5-86af-4b17bbc8c985","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:719","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"variableMap":{"graphHopperFolder":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"fa170a7e-8270-11e5-86af-959516a848e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"fa170a7f-8270-11e5-86af-9b5dc620867a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:378","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"fa170a80-8270-11e5-86af-cd2083affba7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:237","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension)) {\n    throw new java.lang.IllegalStateException(\"the extended storage to clone must be the same\");\n} "},"variableMap":{"clonedStorage":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46],"tindex":"fa1758a1-8270-11e5-86af-d5812aa10964","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,47,32,33,34,35,36,37],"tindex":"fa1758a2-8270-11e5-86af-3b04462b1be3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:230","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(org.apache.xmlgraphics.image.codec.util.SeekableStream)"},"variableMap":{"ss":"bis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"fa177fb3-8270-11e5-86af-13be058b9fdc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"i","end":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:281","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int)"},"status":0},{"failures":[31,48,49,50],"tindex":"fa177fb4-8270-11e5-86af-3b5b5ba5bc73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"intVal","edgeId":"intVal","nodeA":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[51],"tindex":"fa177fb5-8270-11e5-86af-d768cb29de3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[52],"tindex":"fa17a6c6-8270-11e5-86af-d57836d448f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"angle","speed":"r"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"fa17a6c7-8270-11e5-86af-2f6eb470868e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"this":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":0},{"failures":[53,54,55,56,57,58],"tindex":"fa17a6c8-8270-11e5-86af-1bd46132ffad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:477","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,5,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,10,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,38,39,40,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"fa17a6c9-8270-11e5-86af-3d353f284875","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"b","b":"a","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:409","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int, double, boolean)"},"status":-1},{"failures":[261,262,263,264,265,266,267,268,269,270],"tindex":"fa17cdda-8270-11e5-86af-e7bb2d924df3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"fa17cddb-8270-11e5-86af-232c09f5f68f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"optimize to remove subnetworks (\" + (int)) + \"), \") + \"unvisited-dead-end-nodes (\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"fa17cddb-8270-11e5-86af-232c09f5f68f","diffs":[{"methodsDiff":{"delete":["java.util.concurrent.atomic.AtomicInteger.get","org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"fa17a6c7-8270-11e5-86af-2f6eb470868e","diffs":[{"branches":{"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":["com.graphhopper.reader.dem.SRTMProvider_java.lang.String_getFileString(double,double).t5","com.graphhopper.reader.dem.SRTMProvider_java.lang.String_getFileString(double,double).t1"]},"type":"branch"}]}]}