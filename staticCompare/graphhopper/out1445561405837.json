{"failureDictionary":{"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":3,"com.graphhopper.util.InstructionListTest.testCreateGPX":8,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":7,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":9,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":4},"transformations":[{"failures":[0,1],"tindex":"007aa502-7920-11e5-8035-a5701af085dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:78","type":"CtTryImpl","sourcecode":"try {\n    if ((com.graphhopper.storage.VLongStorage) == null)\n        com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)));\n    \n    long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(new com.graphhopper.util.shapes.GHPoint(double , double));\n    com.graphhopper.storage.VLongStorage.writeVLong(long);\n    (int)++;\n    if ((int) >= (int)) {\n        com.graphhopper.coll.CompressedArray.flush();\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"007acc13-7920-11e5-8035-0f3cab2a45c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:614","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"variableMap":{"existingDirectWeight":"decDist2DSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"007acc14-7920-11e5-8035-c51c92dc900f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"penalizeEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:74","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += double;\n"},"status":-1},{"failures":[],"tindex":"007acc15-7920-11e5-8035-d76be3640b44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"status":-2},{"failures":[],"tindex":"007acc16-7920-11e5-8035-8141ed41e921","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:149","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"RAM\";\nelse\n    java.lang.String = \"UNSAFE\";\n"},"status":-2},{"failures":[0,1],"tindex":"007af327-7920-11e5-8035-ad0ff66c104e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:78","type":"CtTryImpl","sourcecode":"try {\n    if ((com.graphhopper.storage.VLongStorage) == null)\n        com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)));\n    \n    long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(new com.graphhopper.util.shapes.GHPoint(double , double));\n    com.graphhopper.storage.VLongStorage.writeVLong(long);\n    (int)++;\n    if ((int) >= (int)) {\n        com.graphhopper.coll.CompressedArray.flush();\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[8,9],"tindex":"007af328-7920-11e5-8035-599ee3115932","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:254","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/extensions>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1)).append(\"<\/gh:distance>\")"},"status":-1},{"failures":[],"tindex":"007af329-7920-11e5-8035-493632f24fc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"parent","ase":"parent","currEdge":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"007af32a-7920-11e5-8035-9735874daea1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][]"},"status":-2},{"failures":[],"tindex":"007b1a3b-7920-11e5-8035-d1172e553954","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge2","b":"skippedEdge2","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"007b1a3c-7920-11e5-8035-05b3008b7f27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.freeMemory(long)"},"status":-2},{"failures":[],"tindex":"007b1a3d-7920-11e5-8035-958668334d3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:105","type":"CtIfImpl","sourcecode":"if (!(java.io.File.mkdirs()))\n    throw new java.lang.RuntimeException((((\"Directory \" + (java.io.File)) + \" does not exist and cannot created to place lock file there: \") + (java.io.File)));\n"},"variableMap":{"lockFile":"file","lockDir":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:85","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream = new java.io.BufferedInputStream(new java.io.FileInputStream(java.io.File) , 50000);\n} catch (java.io.FileNotFoundException e) {\n    throw new java.lang.RuntimeException(java.io.FileNotFoundException);\n}"},"status":-2},{"failures":[],"tindex":"007b1a3e-7920-11e5-8035-c76ebdbd7d3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:87","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min(java.lang.Math.max(double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.shapes.BBox.double)"},"variableMap":{"maxLat":"maxEle","minLat":"maxEle","bounds":"bounds","lat":"maxEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:185","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)))"},"status":-2},{"failures":[],"tindex":"007b414f-7920-11e5-8035-052933e72161","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:131","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initBuffer()"},"status":-2},{"failures":[],"tindex":"007b4150-7920-11e5-8035-5db15a6e05d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String, boolean).release()"},"status":-2},{"failures":[],"tindex":"007b4151-7920-11e5-8035-298668ca1f85","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"status":-2},{"failures":[],"tindex":"007b4152-7920-11e5-8035-c761d8358823","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"priorityFromRelation","backwardBit":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.MotorcycleFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, long))"},"status":-2},{"failures":[],"tindex":"007b6863-7920-11e5-8035-95fe985cb8c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:283","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n"},"variableMap":{"sortedNodes":"sortedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:265","type":"CtWhileImpl","sourcecode":"while (!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) {\n    if ((boolean && ((long) > 0)) && (((long) % long) == 0)) {\n        com.graphhopper.util.StopWatch.start();\n        com.graphhopper.coll.GHTreeMapComposed.clear();\n        int int = com.graphhopper.storage.CHGraphImpl.getNodes();\n        for (int int = 0 ; int < int ; int++) {\n            if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n                continue;\n            \n            int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n            com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        }\n        com.graphhopper.util.StopWatch.stop();\n        int++;\n        if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n            throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n        \n    } \n    if (((long) % long) == 0) {\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        double += com.graphhopper.util.StopWatch.getSeconds();\n        com.graphhopper.routing.util.Logger.info((((((((((((((((((com.graphhopper.util.Helper.nf(long)) + \", updates:\") + int) + \", nodes: \") + (com.graphhopper.util.Helper.nf(com.graphhopper.coll.GHTreeMapComposed.getSize()))) + \", shortcuts:\") + (com.graphhopper.util.Helper.nf(int))) + \", dijkstras:\") + (com.graphhopper.util.Helper.nf(long))) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", algo:\") + (com.graphhopper.routing.DijkstraOneToMany.getMemoryUsageAsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())));\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n        com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    } \n    (long)++;\n    int int = com.graphhopper.coll.GHTreeMapComposed.pollKey();\n    if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n        com.graphhopper.util.StopWatch.start();\n        int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n        if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n            com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n            com.graphhopper.util.StopWatch.stop();\n            continue;\n        } \n        com.graphhopper.util.StopWatch.stop();\n    } \n    int += com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int);\n    com.graphhopper.storage.CHGraphImpl.setLevel(int, int);\n    int++;\n    if ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)\n        break;\n    \n    com.graphhopper.util.CHEdgeIterator com.graphhopper.util.CHEdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.CHEdgeIterator.next()) {\n        int int = com.graphhopper.util.CHEdgeIterator.getAdjNode();\n        if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n            continue;\n        \n        if (boolean && ((java.util.Random.nextInt(100)) < (int))) {\n            com.graphhopper.util.StopWatch.start();\n            int int = int[][int];\n            int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n            if (int != int)\n                com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n            \n            com.graphhopper.util.StopWatch.stop();\n        } \n        com.graphhopper.storage.CHGraphImpl.disconnect(com.graphhopper.util.CHEdgeExplorer, com.graphhopper.util.CHEdgeIterator);\n    }\n}"},"status":-2},{"failures":[],"tindex":"007b8f74-7920-11e5-8035-8795edae1a0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:299","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getFlags\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:49","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n        com.graphhopper.util.TIntArrayStack.push(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"007b8f75-7920-11e5-8035-d3936a206e08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}