{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":36,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":79,"com.graphhopper.routing.PathTest.testFindInstruction":48,"com.graphhopper.reader.OSMReaderTest.testFerry":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":149,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":17,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":117,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":154,"com.graphhopper.coll.CompressedArrayTest.testCompress":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":6,"com.graphhopper.GraphHopperTest.testPrepare":62,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.util.InstructionListTest.testWayList2":30,"com.graphhopper.search.NameIndexTest.testFlush":34,"com.graphhopper.reader.OSMReaderTest.testFoot":53,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":82,"com.graphhopper.util.InstructionListTest.testWayList":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":38,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":144,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":100,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":50,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":94,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":54,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":123,"com.graphhopper.GraphHopperTest.testLoadOSM":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":96,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":58,"com.graphhopper.reader.OSMReaderTest.testSort":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":141,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":155,"com.graphhopper.reader.OSMReaderTest.testMain":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":8,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":10,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":70,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":44,"com.graphhopper.routing.PathTest.testWayList":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":99,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":147,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":87,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":98,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":18,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":72,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":74,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":3,"com.graphhopper.GraphHopperTest.testFootAndCar":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":43,"com.graphhopper.search.NameIndexTest.testPut":33,"com.graphhopper.util.InstructionListTest.testCreateGPX":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":145,"com.graphhopper.coll.CompressedArrayTest.testCompress2":157,"com.graphhopper.GraphHopperTest.testVia":32,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":9,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":134,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":95,"com.graphhopper.GraphHopperAPITest.testLoad":26,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":88,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":31,"com.graphhopper.GraphHopperTest.testFootOnly":68,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":93,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":46,"com.graphhopper.util.InstructionListTest.testFind":28,"com.graphhopper.reader.OSMReaderTest.testBarriers":108,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":143},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"e826afe5-8297-11e5-ab5f-e1a8e061e5f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:885","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[],"tindex":"e826afe6-8297-11e5-ab5f-2f72bffdbb4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[28,29,0,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,25,48,49,50,51],"tindex":"e826d6f7-8297-11e5-ab5f-df6f9fb33c9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 1)"},"status":-1},{"failures":[],"tindex":"e826d6f8-8297-11e5-ab5f-75b4e96b68f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"x1","lastIndex":"x1","fromIndex":"x2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.bresenham(int, int, int, int, com.graphhopper.storage.index.PointEmitter)"},"status":0},{"failures":[],"tindex":"e826d6f9-8297-11e5-ab5f-ed1578c24a5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:133","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"e826d6fa-8297-11e5-ab5f-05c72ea7edd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:141","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntIntHashMap.clear()"},"status":0},{"failures":[52,53],"tindex":"e826d6fb-8297-11e5-ab5f-bf5350a92ff4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"e826d6fc-8297-11e5-ab5f-37b0f90d4fc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.loadProperties(java.util.Map<java.lang.String, java.lang.String>, new java.io.StringReader(new java.lang.String(byte[] , com.graphhopper.util.Helper.java.nio.charset.Charset)))"},"status":-2},{"failures":[0],"tindex":"e826fe0d-8297-11e5-ab5f-21fe847735e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:264","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.List<java.util.List<java.lang.Double>>.add(java.util.Arrays.asList(com.graphhopper.util.Instruction.getFirstLat(), com.graphhopper.util.Instruction.getFirstLon()));\n}"},"status":-1},{"failures":[54,55],"tindex":"e826fe0e-8297-11e5-ab5f-c5e19d90c499","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"variableMap":{"bytes":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:677","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"e826fe0f-8297-11e5-ab5f-3f40d9d6478a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:136","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[56,57,58,59,60,61,32,62,63,64,65,66,67,68,69,26],"tindex":"e826fe10-8297-11e5-ab5f-51c015331070","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:141","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"status":-1},{"failures":[70,71,72,73,74,56,57,58,59,60,61,32,62,63,64,65,66,67,68,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,17,18,20,26,51,107,108],"tindex":"e826fe11-8297-11e5-ab5f-bdb10787f702","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"fromLon","fullDist2D":"fromLon","decDist2DSum":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:65","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-1},{"failures":[0,109,31,25],"tindex":"e8272422-8297-11e5-ab5f-317bed16c27f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[110,111],"tindex":"e8272423-8297-11e5-ab5f-43e6a7a4c190","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e8272424-8297-11e5-ab5f-79d32f69938a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:306","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((long[][int]) == long) {\n        return int;\n    } \n}"},"variableMap":{"mSize":"high","value":"key","mValues":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:415","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((long[][int]) == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[112,113,114,115],"tindex":"e8272425-8297-11e5-ab5f-2dfc93ab3b9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"allowed","len":"allowed","start":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:324","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"e8272426-8297-11e5-ab5f-cda98ffb1729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"e8272427-8297-11e5-ab5f-47667f64b9ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:158","type":"CtWhileImpl","sourcecode":"while ((int * 2) <= (int)) {\n    int int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n        int = int;\n    } else {\n        break;\n    }\n}"},"variableMap":{"elem":"oldPriorities","size":"polledNode","keys":"oldPriorities","i":"polledNode","key":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:311","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        continue;\n    } \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":-2},{"failures":[157,158],"tindex":"e8274b38-8297-11e5-ab5f-3f423ad42cd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:156","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e826d6fa-8297-11e5-ab5f-05c72ea7edd9","diffs":[{"methodsDiff":{"delete":["gnu.trove.map.hash.TIntIntHashMap.clear"]},"type":"staticDiff"}]},{"transformation":"e826d6f8-8297-11e5-ab5f-75b4e96b68f2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.BresenhamLine.bresenham"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":["com.graphhopper.util.PointList_void_add(double,double).b","com.graphhopper.util.PointList_int_getSize().b","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).b","com.graphhopper.util.PointList_boolean_is3D().b","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).l4","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).t2","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).e1","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).e3","com.graphhopper.util.PointList_void_add(double,double).e1","com.graphhopper.util.NumHelper_boolean_equalsEps(double,double,double).b","com.graphhopper.util.NumHelper_boolean_equalsEps(double,double).b","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e3","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e4","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e5","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e6","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).t2","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).t1","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).l7","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e2","com.graphhopper.storage.index.BresenhamLine_void_bresenham(int,int,int,int,com.graphhopper.storage.index.PointEmitter).t3"]},"type":"branch"}]}]}