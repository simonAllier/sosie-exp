{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":54,"com.graphhopper.search.NameIndexTest.testCreate":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":37,"com.graphhopper.routing.PathTest.testFindInstruction":134,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":138,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":53,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":19,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":50,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":136,"com.graphhopper.reader.OSMReaderTest.testWithBounds":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":9,"com.graphhopper.coll.CompressedArrayTest.testCompress":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":137,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":121,"com.graphhopper.GraphHopperTest.testPrepare":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":31,"com.graphhopper.util.InstructionListTest.testWayList2":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":148,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":47,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.search.NameIndexTest.testFlush":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":97,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":145,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":51,"com.graphhopper.util.InstructionListTest.testWayList":85,"com.graphhopper.reader.OSMReaderTest.testOneWay":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":146,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":61,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":143,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":55,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":116,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":109,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":65,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":33,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":95,"com.graphhopper.GraphHopperTest.testLoadOSM":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":144,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.reader.OSMReaderTest.testSort":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":103,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":63,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":12,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":150,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":13,"com.graphhopper.routing.PathTest.testWayList":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":40,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":48,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":64,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":101,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":44,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":105,"com.graphhopper.GraphHopperTest.testFootAndCar":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":127,"com.graphhopper.search.NameIndexTest.testPut":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":67,"com.graphhopper.storage.NativeFSLockFactoryTest.testForceDelete":135,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.coll.CompressedArrayTest.testCompress2":152,"com.graphhopper.GraphHopperTest.testVia":77,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":82,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":30,"com.graphhopper.GraphHopperAPITest.testLoad":88,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":147,"com.graphhopper.GraphHopperTest.testFootOnly":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":110,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":39,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":15,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":62,"com.graphhopper.reader.OSMReaderTest.testBarriers":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":93,"com.graphhopper.util.InstructionListTest.testFind":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":100,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":28},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"98b99987-829b-11e5-9b80-4d15d7cecb32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:167","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-1},{"failures":[],"tindex":"98b9c098-829b-11e5-9b80-2d8567f4a9bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:944","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"variableMap":{"equalNormedDelta":"minDistance","tmpNormedDist":"rMin"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:747","type":"CtIfImpl","sourcecode":"if (double < double)\n    return true;\n"},"status":0},{"failures":[12,13,14,15,16,17,18],"tindex":"98b9e7a9-829b-11e5-9b80-454fe2fe6a3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"roundaboutBit","blockByDefault":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"98b9e7aa-829b-11e5-9b80-bfb074fb5557","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:370","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:152","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"98ba0ebb-829b-11e5-9b80-eba4ee318756","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:371","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:356","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[19,20,21],"tindex":"98ba0ebc-829b-11e5-9b80-ad0980e0b4c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:66","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.remove(int)"},"variableMap":{"map":"map","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:81","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.put(int, (gnu.trove.set.hash.TIntHashSet = new gnu.trove.set.hash.TIntHashSet(int)))"},"status":-1},{"failures":[],"tindex":"98ba0ebd-829b-11e5-9b80-19c8065504f1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:474","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[22,23,24,25,26,27],"tindex":"98ba35ce-829b-11e5-9b80-5de69996705a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,24,61,62,63,64,65,66,67,68,69,0,1,70,2,3,4,71,5,6,7,72,73,74,75,76,77,78,79,80,81,26,82,83,84,85,86,87,88,8,89,90,9,91,10,11,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,13,123],"tindex":"98ba35cf-829b-11e5-9b80-29ee3f283bbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"98ba35d0-829b-11e5-9b80-6158a521d97a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:137","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{"sw":"dijkstraSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":0},{"failures":[28,124,43,125,126,24,127,0,128,129,130,131,77,132,84,85,86,133,13,14,15,16,123,134,17,18],"tindex":"98ba5ce1-829b-11e5-9b80-efeb98ea4423","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 1)"},"status":-1},{"failures":[135],"tindex":"98ba5ce2-829b-11e5-9b80-4f7d2e7fb367","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"variableMap":{"fromStr":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:68","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-1},{"failures":[],"tindex":"98ba5ce3-829b-11e5-9b80-296e30978f76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:121","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"variableMap":{"ret":"i","retBucket":"i","i":"i","storedKey":"bufferStart","bucketSize":"i","key":"bufferStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:151","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long));\n    long += long;\n}"},"status":-2},{"failures":[],"tindex":"98ba5ce4-829b-11e5-9b80-c1982eed2220","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"i","retBucket":"i","i":"i","bucketSize":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:113","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"98ba83f5-829b-11e5-9b80-e5f3b3408aa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"98ba83f6-829b-11e5-9b80-651cfd059e4c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"midLat","shortTripsSpeed":"midLat","durationInHours":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"98ba83f7-829b-11e5-9b80-ad17b5a2d316","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1149","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"98ba83f8-829b-11e5-9b80-9774df4f6060","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:170","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.createGPX(\"GraphHopper\", new java.util.Date().getTime())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:176","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.createGPX(java.lang.String, long, boolean)"},"status":-2},{"failures":[],"tindex":"98ba83f9-829b-11e5-9b80-b3dfe00a8a2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge2","b":"to","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"98baab0a-829b-11e5-9b80-b9bfc82ae492","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"98b9c098-829b-11e5-9b80-2d8567f4a9bd","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"]},"type":"branch"},{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"98ba0ebb-829b-11e5-9b80-eba4ee318756","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":["com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).e2","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).e1","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).b"]},"type":"branch"}]}]}