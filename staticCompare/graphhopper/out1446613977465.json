{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":6,"com.graphhopper.GraphHopperAPITest.testNoLoad":129,"com.graphhopper.routing.PathTest.testFindInstruction":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":28,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":116,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":51,"com.graphhopper.util.InstructionListTest.testEmptyList":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.util.shapes.CircleTest.testContainsCircle":0,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":142,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":145,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":47,"com.graphhopper.GraphHopperTest.testPrepare":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.util.InstructionListTest.testWayList2":91,"com.graphhopper.reader.OSMReaderTest.testFoot":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":44,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":38,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":56,"com.graphhopper.util.InstructionListTest.testWayList":88,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":27,"com.graphhopper.reader.OSMReaderTest.testOneWay":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":58,"com.graphhopper.coll.IntIntBinHeapTest.testClear":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":100,"com.graphhopper.GraphHopperAPITest.testDisconnected179":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":57,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":53,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":122,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":49,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":80,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":133,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":75,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":77,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":148,"com.graphhopper.GraphHopperTest.testLoadOSM":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":112,"com.graphhopper.reader.OSMReaderTest.testSort":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":111,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":137,"com.graphhopper.reader.OSMReaderTest.testMain":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":40,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":95,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":76,"com.graphhopper.routing.PathTest.testWayList":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":23,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":50,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":69,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":18,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":43,"com.graphhopper.routing.PathTest.testTime":105,"com.graphhopper.coll.IntIntBinHeapTest.testSize":152,"com.graphhopper.util.InstructionListTest.testCreateGPX":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":59,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":86,"com.graphhopper.GraphHopperTest.testPrepareOnly":109,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":8,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":123,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":89,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":136,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":4,"com.graphhopper.GraphHopperAPITest.testLoad":127,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":119,"com.graphhopper.util.TranslationMapTest.testToString":83,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":92,"com.graphhopper.GraphHopperTest.testFootOnly":124,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.util.InstructionListTest.testFind":81,"com.graphhopper.reader.OSMReaderTest.testBarriers":132,"com.graphhopper.routing.PathTest.testFound":104,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.util.GHUtilityTest.testCopy":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":140},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"b60fb3cc-82b2-11e5-93a7-672ae5e5f25f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"fromLon","minLatTmp":"fromLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:54","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-1},{"failures":[31],"tindex":"b60fdadd-82b2-11e5-93a7-3d45e670b4ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"longTripsSpeed","speed":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"b61001ee-82b2-11e5-93a7-97e05be427d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:146","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.EdgeEntry.double"},"status":-2},{"failures":[],"tindex":"b61001ef-82b2-11e5-93a7-2fec11fcf171","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:103","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    java.util.Set<java.lang.Integer>.add(int);\n}"},"status":-2},{"failures":[],"tindex":"b61001f0-82b2-11e5-93a7-81ad2fdc621b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currEdge","cl":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:64","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, 0)"},"status":0},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"b6102901-82b2-11e5-93a7-716002c34b85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"status":-2},{"failures":[81,82],"tindex":"b6102902-82b2-11e5-93a7-dbf9dd09165b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"foundMinDistance","shortTripsSpeed":"distance","durationInHours":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:322","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"b6102903-82b2-11e5-93a7-1b6351b62422","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:193","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"b6102904-82b2-11e5-93a7-23f99a083c4b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:843","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n    int += 4;\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n    int += 4;\n    if (boolean) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n        int += 4;\n    } \n}"},"status":0},{"failures":[],"tindex":"b6105015-82b2-11e5-93a7-89e76798e70e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtIfImpl","sourcecode":"if (((int) <= 0) && ((int) <= 0))\n    return ;\n"},"variableMap":{"minNetworkSize":"length","minOneWayNetworkSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"b6105016-82b2-11e5-93a7-f9ccbf3ef8d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"roundaboutBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:185","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-2},{"failures":[83,84,81,85,86,87,88,89,90,1,91,92,93,94,95,96,97,98,99,100,101,102,103,76,77,104,105,78,106,107,82,79,80,108,109,110,111,112,113,114,115,116,24,117,118,25,119,120,121,122,123,124,125,126,127,128,129,31,130,32,131,132,133,134,135,33,136,137,34,138,139],"tindex":"b6105017-82b2-11e5-93a7-dbe4a64e9629","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:151","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[140,141,142,143,144,145,146,147,148],"tindex":"b6107728-82b2-11e5-93a7-3f0b048616c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:586","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-1},{"failures":[149,150,151,152,153],"tindex":"b6107729-82b2-11e5-93a7-75ee8796a65d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b610772a-82b2-11e5-93a7-c75dbf8c5f58","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"b610772b-82b2-11e5-93a7-bd482edad0ab","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"shift","key":"tmpValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"b6109e3c-82b2-11e5-93a7-5d73f9587fa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:222","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"))"},"status":0},{"failures":[],"tindex":"b6109e3d-82b2-11e5-93a7-55fdd4fced55","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"variableMap":{"directionBitMask":"edgePointer","flags":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:753","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.getFlags_(long, false)"},"status":-2},{"failures":[],"tindex":"b6109e3e-82b2-11e5-93a7-35eb13fa4e0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((\"optimize to remove subnetworks (\" + (int)) + \"), \") + \"unvisited-dead-end-nodes (\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b6109e3c-82b2-11e5-93a7-5d73f9587fa8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.AbstractDataAccess.getFullName"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b"]},"type":"branch"}]}]}