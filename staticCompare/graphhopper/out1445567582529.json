{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"62124928-792e-11e5-a3cd-3bb4ef8dc1af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:110","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"62124929-792e-11e5-a3cd-71553b620b06","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:703","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"6212703a-792e-11e5-a3cd-6ff96aff28a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-2},{"failures":[],"tindex":"6212974b-792e-11e5-a3cd-b12dec0200fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1179","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GraphHopper.getGraphHopperLocation().isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot clean GraphHopper without specified graphHopperLocation\");\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"status":-2},{"failures":[],"tindex":"6212974c-792e-11e5-a3cd-d7d72c9485a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"6212974d-792e-11e5-a3cd-9fbdc8fb4b19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-2},{"failures":[],"tindex":"6212974e-792e-11e5-a3cd-1b351c80c176","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-2},{"failures":[],"tindex":"6212974f-792e-11e5-a3cd-2bbd55a06a6e","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:681","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"6212be60-792e-11e5-a3cd-79b345c1b8ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:467","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"6212be61-792e-11e5-a3cd-119e2429931f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"base"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:249","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.TIntList.get(int)"},"status":-2},{"failures":[],"tindex":"6212be62-792e-11e5-a3cd-f52c53a42457","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:533","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CmdArgs.get(\"graph.locktype\", \"native\").equals(\"simple\"))\n    com.graphhopper.storage.LockFactory = new com.graphhopper.storage.SimpleFSLockFactory();\nelse\n    com.graphhopper.storage.LockFactory = new com.graphhopper.storage.NativeFSLockFactory();\n"},"status":-2},{"failures":[],"tindex":"6212be63-792e-11e5-a3cd-6575b7ca28b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:275","type":"CtReturnImpl","sourcecode":"return ((short)((int[][][int][int]) >> 16))"},"variableMap":{"index":"bufferIndex","bufferIndex":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:272","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    return ((short)(int[][][int][int]));\nelse\n    return ((short)((int[][][int][int]) >> 16));\n"},"status":-2},{"failures":[],"tindex":"6212be64-792e-11e5-a3cd-299ec0ad95d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:571","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[],"tindex":"6212e575-792e-11e5-a3cd-415a0b2a8bd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:353","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int])"},"variableMap":{"longitudes":"longitudes","i":"i","clonePL":"clonePL","latitudes":"latitudes","elevations":"longitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:358","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int])"},"status":-2},{"failures":[],"tindex":"6212e576-792e-11e5-a3cd-e78111aae18e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"i","edge2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:101","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"status":-2},{"failures":[],"tindex":"6212e577-792e-11e5-a3cd-8f7164b29c32","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:277","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"6212e578-792e-11e5-a3cd-2d5f07ba3972","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:660","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n        if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n            continue NEXT_SC;\n        \n        if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n            throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n        } \n        com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n        com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        boolean = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6212e579-792e-11e5-a3cd-d3079a1191d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"toStr","destination":"toStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Unzipper.unzip(new java.io.FileInputStream(java.io.File), new java.io.File(java.lang.String), null)"},"status":-2},{"failures":[],"tindex":"62130c8a-792e-11e5-a3cd-319c824ae1f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"variableMap":{"size":"value","keys":"mKeys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[],"tindex":"62130c8b-792e-11e5-a3cd-edcb1970d4dd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:427","type":"CtInvocationImpl","sourcecode":"java.lang.Object.getClass().getMethod(\"clean\").invoke(java.lang.Object)"},"variableMap":{"cleaner":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}