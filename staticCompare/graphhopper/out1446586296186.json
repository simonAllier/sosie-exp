{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":31,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":54,"com.graphhopper.reader.OSMReaderTest.testMain":48,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":11,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":19,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.reader.OSMReaderTest.testWithBounds":55,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":22,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":20,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":3,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":65,"com.graphhopper.GraphHopperTest.testFootAndCar":60,"com.graphhopper.util.InstructionListTest.testWayList2":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":35,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":68,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.reader.OSMReaderTest.testOneWay":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":14,"com.graphhopper.coll.CompressedArrayTest.testCompress2":1,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":44,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":36,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":37,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.GraphHopperTest.testFootOnly":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":16,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":59,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":33,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":45,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":61,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":27,"com.graphhopper.reader.OSMReaderTest.testSort":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":10},"transformations":[{"failures":[0],"tindex":"42bbe252-8272-11e5-a1eb-c5bf476f869c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"variableMap":{"baseUrl":"dir","fileDetails":"dir","zippedURL":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:281","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\")"},"status":-1},{"failures":[],"tindex":"42bc3073-8272-11e5-a1eb-13ebc6bc36ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.lookup(java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":-2},{"failures":[],"tindex":"42bc3074-8272-11e5-a1eb-1b1dd7273e46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:208","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"42bc3075-8272-11e5-a1eb-f94dd638db5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[1],"tindex":"42bc3076-8272-11e5-a1eb-6b867324201f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[2,3],"tindex":"42bc5787-8272-11e5-a1eb-bb392b56cc9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:556","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[4,5],"tindex":"42bc5788-8272-11e5-a1eb-1f428566e9b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[6,7,8,9,10,11,12,13],"tindex":"42bc5789-8272-11e5-a1eb-cd161f0491ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((4 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[],"tindex":"42bc578a-8272-11e5-a1eb-31f8897ebf61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:213","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"42bc578b-8272-11e5-a1eb-4b38bb63e37c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:201","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[36,37],"tindex":"42bc7e9c-8272-11e5-a1eb-77d761dd2886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"ELE","edgeId":"ELE","nextEdgeId":"ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-1},{"failures":[],"tindex":"42bc7e9d-8272-11e5-a1eb-05fac59db8a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.insert(int, int)"},"status":-2},{"failures":[6,38,39,40,41,7,8,42],"tindex":"42bc7e9e-8272-11e5-a1eb-1fb0b25e9605","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:311","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"variableMap":{"initialized":"chEnabled"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:853","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.GraphHopper.createCHPreparations();\n"},"status":-1},{"failures":[2,43,44,45],"tindex":"42bc7e9f-8272-11e5-a1eb-b7ea33dd3f0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[],"tindex":"42bca5b0-8272-11e5-a1eb-f507c33532e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:221","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:238","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int))"},"status":-2},{"failures":[46,47,48,49,50,36,37,51,52,53,54,55,56,57,58,6,38,39,40,59,60,41,7,8,9,42,61],"tindex":"42bca5b1-8272-11e5-a1eb-f34b298709ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:674","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.TLongList.size()) ; int++) {\n    long long = gnu.trove.list.TLongList.get(int);\n    int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n    if (int == (com.graphhopper.reader.OSMReader.int))\n        continue;\n    \n    if (int == (com.graphhopper.reader.OSMReader.int))\n        continue;\n    \n    if (int == (com.graphhopper.reader.OSMReader.int)) {\n        if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n            int = int;\n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n            int = (-int) - 3;\n            if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n            int = -1;\n        } \n        continue;\n    } \n    if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n        throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n    \n    if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n        boolean boolean = (int == 0) || (int == int);\n        if (!boolean) {\n            int = int;\n        } \n        int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n    } \n    if (int < (com.graphhopper.reader.OSMReader.int)) {\n        int = (-int) - 3;\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n        if (int >= 0) {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n            com.graphhopper.util.PointList.clear();\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n        } \n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"42bcccc2-8272-11e5-a1eb-85e7bcaa3863","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:219","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[10,62,63,64,65,66,67,11,13,68],"tindex":"42bcccc3-8272-11e5-a1eb-ff2e237ae7ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-1},{"failures":[69],"tindex":"42bcccc4-8272-11e5-a1eb-6544d6c3be8f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:271","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"42bcccc5-8272-11e5-a1eb-1d1c75d9f102","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.routing.AStar.AStarEdge.int, int), com.graphhopper.routing.AStar.AStarEdge, int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}