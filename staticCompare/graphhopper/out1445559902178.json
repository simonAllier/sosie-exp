{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"803992cc-791c-11e5-83dc-a5edfe56e6e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:48","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"8039b9dd-791c-11e5-83dc-4f4f0e9558c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:672","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (com.graphhopper.reader.TLongList.size()) ; int++) {\n        long long = com.graphhopper.reader.TLongList.get(int);\n        int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int)) {\n            if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n                int = int;\n                int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n                int = (-int) - 3;\n                if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                    com.graphhopper.util.PointList.clear();\n                    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n                } \n                int = int;\n                int = -1;\n            } \n            continue;\n        } \n        if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n            throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n        \n        if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n            boolean boolean = (int == 0) || (int == int);\n            if (!boolean) {\n                int = int;\n            } \n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n        } \n        if (int < (com.graphhopper.reader.OSMReader.int)) {\n            int = (-int) - 3;\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            if (int >= 0) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n        } \n    }\n} catch (java.lang.RuntimeException ex) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.error((\"Couldn\\'t properly add edge with osm ids:\" + com.graphhopper.reader.TLongList), java.lang.RuntimeException);\n    if (boolean)\n        throw java.lang.RuntimeException;\n    \n}"},"status":-2},{"failures":[],"tindex":"8039b9de-791c-11e5-83dc-09d20d47aa08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:108","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"status":-2},{"failures":[],"tindex":"8039b9df-791c-11e5-83dc-b37c88e80afb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"8039e0f0-791c-11e5-83dc-1117b4086e31","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"maxLat","java.lang.Math.PI":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"8039e0f1-791c-11e5-83dc-ed752862f461","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:81","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"8039e0f2-791c-11e5-83dc-3f72863325ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"E_ADDITIONAL","speed":"E_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"8039e0f3-791c-11e5-83dc-cdb5c9c1d905","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"depth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:611","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    com.graphhopper.storage.index.LocationIndexTree.fillIDs((long >>> (byte[][int])), int, com.graphhopper.storage.index.TIntHashSet, (int + 1));\n} "},"status":-2},{"failures":[],"tindex":"8039e0f4-791c-11e5-83dc-09cd5c994a5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:299","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getFlags\")"},"variableMap":{"this":"mainEdgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.CHEdgeIteratorState.getEdge())"},"status":-2},{"failures":[],"tindex":"8039e0f5-791c-11e5-83dc-4d4a473b97e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"tmpOffset","index":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:843","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n    int += 4;\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n    int += 4;\n    if (boolean) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n        int += 4;\n    } \n}"},"status":-2},{"failures":[],"tindex":"803a0806-791c-11e5-83dc-2d66b05f9056","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:43","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-2},{"failures":[],"tindex":"803a0807-791c-11e5-83dc-b181d4d1dfad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n} else {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n}"},"status":-2},{"failures":[],"tindex":"803a0808-791c-11e5-83dc-998b457f62d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"803a0809-791c-11e5-83dc-cf735aa1d904","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap()"},"status":-2},{"failures":[],"tindex":"803a080a-791c-11e5-83dc-65597371a992","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:286","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":-2},{"failures":[],"tindex":"803a080b-791c-11e5-83dc-27da79c0fb93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"nodeEntryIndex","indexDivisor":"nodeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:241","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"803a2f1c-791c-11e5-83dc-fba23ae4c083","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:191","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.BBox.contains(com.graphhopper.util.shapes.Circle.getBounds())"},"status":-2},{"failures":[],"tindex":"803a2f1d-791c-11e5-83dc-63e558443f1f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:102","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:633","type":"CtReturnImpl","sourcecode":"return ((\"distance:\" + com.graphhopper.routing.Path.(getDistance())) + \", edges:\") + (com.graphhopper.routing.TIntList.size())"},"status":-2},{"failures":[],"tindex":"803a2f1e-791c-11e5-83dc-89368f135685","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:135","type":"CtIfImpl","sourcecode":"if (int == (int)) {\n    com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int);\n} else {\n    int int = 0;\n    int int = int;\n    while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n        int = int;\n        if ((int++) > 1000) {\n            throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n        } \n    }\n    com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int);\n}"},"variableMap":{"turnCosts":"wayGeometry","nodeAccess":"nodeAccess","newEntryIndex":"E_GEO","previousEntryIndex":"length","viaNode":"E_GEO","turnCostsEntryBytes":"E_GEO","NO_TURN_ENTRY":"E_GEO","TC_NEXT":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2},{"failures":[],"tindex":"803a2f1f-791c-11e5-83dc-ef70ee055388","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName()"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:64","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}