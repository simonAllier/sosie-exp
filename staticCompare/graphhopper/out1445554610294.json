{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":93,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":102,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":27,"com.graphhopper.routing.PathTest.testFindInstruction":105,"com.graphhopper.reader.OSMReaderTest.testFerry":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":75,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":90,"com.graphhopper.routing.QueryGraphTest.testOneWay":101,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":23,"com.graphhopper.reader.OSMReaderTest.testWithBounds":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":83,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":40,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":89,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":56,"com.graphhopper.GraphHopperTest.testPrepare":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":84,"com.graphhopper.util.InstructionListTest.testWayList2":116,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":36,"com.graphhopper.reader.OSMReaderTest.testFoot":43,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":76,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":103,"com.graphhopper.util.InstructionListTest.testWayList":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":29,"com.graphhopper.reader.OSMReaderTest.testOneWay":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":80,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":118,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.util.PointListTest.testAddPL":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":37,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":86,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":39,"com.graphhopper.GraphHopperTest.testLoadOSM":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":41,"com.graphhopper.reader.OSMReaderTest.testSort":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":52,"com.graphhopper.reader.OSMReaderTest.testMain":44,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":14,"com.graphhopper.util.PointListTest.testReverse":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":87,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":4,"com.graphhopper.routing.PathTest.testWayList":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":6,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":49,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":9,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":82,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":107,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":110,"com.graphhopper.GraphHopperTest.testFootAndCar":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":28,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":100,"com.graphhopper.util.InstructionListTest.testCreateGPX":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":8,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":97,"com.graphhopper.GraphHopperTest.testPrepareOnly":57,"com.graphhopper.GraphHopperTest.testVia":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":106,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":72,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":91,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":51,"com.graphhopper.util.DouglasPeuckerTest.testParse":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":16,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":7,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":95,"com.graphhopper.GraphHopperTest.testFootOnly":73,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":12,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":13,"com.graphhopper.reader.OSMReaderTest.testBarriers":46,"com.graphhopper.util.InstructionListTest.testFind":113,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":5,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":34},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"2e05af23-7910-11e5-b3d2-03597876bc18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:134","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"2e05d634-7910-11e5-b3d2-0f46b6bf8d47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT_STORE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"2e05d635-7910-11e5-b3d2-230c0aafe3da","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getDistance\")"},"variableMap":{"this":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:986","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) ; int++) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = java.util.List<com.graphhopper.util.shapes.GHPoint>.get(int);\n    com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = com.graphhopper.storage.index.LocationIndex.findClosest(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.routing.util.EdgeFilter);\n    if (!(com.graphhopper.storage.index.QueryResult.isValid()))\n        com.graphhopper.GHResponse.addError(new java.lang.IllegalArgumentException((((\"Cannot find point \" + int) + \": \") + com.graphhopper.util.shapes.GHPoint)));\n    \n    java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult);\n}"},"status":-2},{"failures":[],"tindex":"2e05fd46-7910-11e5-b3d2-d3782828d193","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.TIntHashSet.iterator().next()"},"status":-2},{"failures":[],"tindex":"2e05fd47-7910-11e5-b3d2-eb9b42b9c659","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:110","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"2e05fd48-7910-11e5-b3d2-2595ac7c6221","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:313","type":"CtReturnImpl","sourcecode":"return java.util.List<java.nio.ByteBuffer>.get(int).getInt(int)"},"status":-2},{"failures":[],"tindex":"2e062459-7910-11e5-b3d2-c30bcf14906a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 40))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:75","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long >> 56))"},"status":-2},{"failures":[],"tindex":"2e06245a-7910-11e5-b3d2-37fb00955a47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"variableMap":{"speedEncoder":"priorityWayEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:643","type":"CtReturnImpl","sourcecode":"return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"2e06245b-7910-11e5-b3d2-d31866fe8a89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"status":-2},{"failures":[],"tindex":"2e06245c-7910-11e5-b3d2-0dd17e2f4b09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:53","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"variableMap":{"toLat":"dLon","fromLat":"fromLat","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"status":-2},{"failures":[],"tindex":"2e064b6d-7910-11e5-b3d2-e3e10af3a408","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"2e064b6e-7910-11e5-b3d2-11f2d89841c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:591","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.maxRegionSearch\", int)"},"status":-2},{"failures":[],"tindex":"2e064b6f-7910-11e5-b3d2-b7c9876c3ec2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"status":-2},{"failures":[],"tindex":"2e064b70-7910-11e5-b3d2-39eb4a1cfa35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:266","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.List<java.lang.Double>>.add(java.util.Arrays.asList(com.graphhopper.util.Instruction.getFirstLat(), com.graphhopper.util.Instruction.getFirstLon()))"},"status":-2},{"failures":[],"tindex":"2e064b71-7910-11e5-b3d2-0b80d03c0da9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lat=\")"},"variableMap":{"txt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":-2},{"failures":[],"tindex":"2e067182-7910-11e5-b3d2-d527d3a83214","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:244","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[],"tindex":"2e067183-7910-11e5-b3d2-4d348ad711b3","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"deltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:184","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / long"},"status":-2},{"failures":[],"tindex":"2e067184-7910-11e5-b3d2-b9abe1822042","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:380","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\":\")"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"status":-2},{"failures":[],"tindex":"2e067185-7910-11e5-b3d2-651933f9a6e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:117","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-2},{"failures":[],"tindex":"2e067186-7910-11e5-b3d2-ef32867fddd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"variableMap":{"name":"buildDate","refName":"buildDate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:109","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"builddate\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}