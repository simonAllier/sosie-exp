{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":18,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":20,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":12,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":40,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":47,"com.graphhopper.routing.QueryGraphTest.testOneWay":50,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":58,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":14,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":7,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":10,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.GraphHopperTest.testPrepare":34,"com.graphhopper.GraphHopperTest.testFootAndCar":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":5,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":48,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":17,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":52,"com.graphhopper.reader.OSMReaderTest.testOneWay":62,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":46,"com.graphhopper.coll.CompressedArrayTest.testCompress2":31,"com.graphhopper.GraphHopperTest.testVia":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":9,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":61,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":6,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":35,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":11,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1},"transformations":[{"failures":[],"tindex":"88e5a973-7913-11e5-a5aa-5ffda7fb161a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:207","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Instruction = com.graphhopper.util.Instruction"},"variableMap":{"nextInstr":"this","currInstr":"instr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setTime(com.graphhopper.util.Instruction.getTime())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"88e5d084-7913-11e5-a5aa-dd27cec4996b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"88e5d085-7913-11e5-a5aa-eb4138e5ce55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"distance":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[26,27,28,29],"tindex":"88e5d086-7913-11e5-a5aa-57985cd4c911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:429","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.close()"},"status":-1},{"failures":[30,31],"tindex":"88e5d087-7913-11e5-a5aa-95701708ecdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:196","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[int]"},"variableMap":{"depth":"cap","shifts":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:70","type":"CtAssignmentImpl","sourcecode":"byte[] = java.util.Arrays.copyOf(byte[], int)"},"status":-1},{"failures":[32,0,1,2,3,4,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,19,22,25],"tindex":"88e5d088-7913-11e5-a5aa-19127fb8478d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"variableMap":{"bitsForEdgeFlags":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:78","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[56,57,58,59,60,61,62],"tindex":"88e5d089-7913-11e5-a5aa-8bafa6ee350b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"updatedB","mSize":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:747","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"88e5f79a-7913-11e5-a5aa-d15d7d8cd801","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(4, com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.getIntHigh(long))"},"status":-2},{"failures":[],"tindex":"88e5f79b-7913-11e5-a5aa-4ba79afffbcb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:948","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"88e5f79c-7913-11e5-a5aa-27dffdfe0081","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:819","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"This graph does not support an additional edge field.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"))"},"status":-2},{"failures":[],"tindex":"88e5f79d-7913-11e5-a5aa-e32f34c93d33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.abs((double - double))) < double"},"variableMap":{"epsilon":"weight","d1":"weight","d2":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:184","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) >= (com.graphhopper.routing.PathBidirRef.getWeight())"},"status":-2},{"failures":[],"tindex":"88e5f79e-7913-11e5-a5aa-2f422922ef3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:211","type":"CtIfImpl","sourcecode":"if (int < 100)\n    java.lang.String += \"0\";\n"},"status":-2},{"failures":[],"tindex":"88e5f79f-7913-11e5-a5aa-4fc15c43029f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:210","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-2},{"failures":[],"tindex":"88e5f7a0-7913-11e5-a5aa-876318cdb534","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:213","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"88e5f7a1-7913-11e5-a5aa-c70468d55909","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"88e61eb2-7913-11e5-a5aa-c74c15e8882f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:259","type":"CtIfImpl","sourcecode":"if ((((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>)))) && (!(com.graphhopper.reader.OSMNode.hasTag(\"ford\", \"no\")))) {\n    return long;\n} "},"status":-2},{"failures":[],"tindex":"88e61eb3-7913-11e5-a5aa-73656bae06a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:406","type":"CtIfImpl","sourcecode":"if ((long[][int]) < long) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"88e61eb4-7913-11e5-a5aa-7387b1d5d151","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-2},{"failures":[],"tindex":"88e61eb5-7913-11e5-a5aa-69938ada7280","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}