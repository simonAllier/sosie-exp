{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":12,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":45,"com.graphhopper.search.NameIndexTest.testCreate":91,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":62,"com.graphhopper.reader.OSMReaderTest.testMain":37,"com.graphhopper.routing.PathTest.testFindInstruction":73,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":80,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":66,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":90,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":68,"com.graphhopper.routing.PathTest.testWayList":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":67,"com.graphhopper.reader.OSMReaderTest.testWithBounds":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":63,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":42,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":6,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":51,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":9,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":1,"com.graphhopper.GraphHopperTest.testPrepare":27,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":64,"com.graphhopper.util.InstructionListTest.testWayList2":86,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":78,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":48,"com.graphhopper.search.NameIndexTest.testFlush":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":79,"com.graphhopper.util.InstructionListTest.testWayList":85,"com.graphhopper.search.NameIndexTest.testPut":88,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":77,"com.graphhopper.GraphHopperAPITest.testDisconnected179":36,"com.graphhopper.coll.BigLongIntMapTest.testPut":0,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":31,"com.graphhopper.GraphHopperTest.testPrepareOnly":18,"com.graphhopper.GraphHopperTest.testVia":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":5,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":54,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":44,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":75,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":71,"com.graphhopper.GraphHopperAPITest.testLoad":35,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":41,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":69,"com.graphhopper.GraphHopperTest.testFootOnly":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":65,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":87,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":49,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":70,"com.graphhopper.reader.OSMReaderTest.testBarriers":39,"com.graphhopper.util.InstructionListTest.testFind":83,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":52,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":19,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":21,"com.graphhopper.reader.OSMReaderTest.testSort":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":76},"transformations":[{"failures":[0],"tindex":"6b094797-8276-11e5-b2fd-2db21b50c861","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:107","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TLongIntHashMap[][int].clear()"},"status":-1},{"failures":[1,2],"tindex":"6b0995b8-8276-11e5-b2fd-75da9387921c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"currentIndex","com.graphhopper.storage.EdgeAccess.NO_NODE":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:96","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    if (int < 0)\n        int = int;\n    \n    continue;\n} else if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"6b0995b9-8276-11e5-b2fd-ff1d15dd3af3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:158","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,13,29,30,31,32,33,34,35,36,14,15,37,38,39,40,41,42,43,44,45,46,47,16],"tindex":"6b0995ba-8276-11e5-b2fd-5bafe3803bfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:281","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"6b09bccb-8276-11e5-b2fd-5f86dbab0753","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:283","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs((int - double))) < ((double) / (int)))\n    int--;\n"},"variableMap":{"latInt":"nodeId","degree":"key","invPrecision":"lat","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"6b09bccc-8276-11e5-b2fd-b185add2f0f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:735","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[17,18,25,26,27,28,13,29,30,31,32,33,34,14,15,37,38,39,40,41,42,43,44,45,46,47,16],"tindex":"6b09bccd-8276-11e5-b2fd-9fdda7f7eb05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"-1\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:180","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"6b09e3de-8276-11e5-b2fd-8fadb635a778","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"prepareLazyUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:575","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.updates.lazy\", int)"},"status":0},{"failures":[],"tindex":"6b09e3df-8276-11e5-b2fd-7311ec81cde2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"6b09e3e0-8276-11e5-b2fd-f1fa31d3ddcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:96","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"6b09e3e1-8276-11e5-b2fd-ddac342928b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"queryLat","tmp":"deltaLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:733","type":"CtLocalVariableImpl","sourcecode":"double double = double - (int * (double))"},"status":0},{"failures":[],"tindex":"6b0a0af2-8276-11e5-b2fd-73de4c367a18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:104","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"variableMap":{"val":"mpInteger","java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Integer.MAX_VALUE":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[26,27,28,13,29,30,32,33,37,38,39],"tindex":"6b0a0af3-8276-11e5-b2fd-0f3348e2a779","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"status":-1},{"failures":[48,49,50,5,51,52,53,6,7,54,55,56,57,58,59,8,60,61,62,63,64,65,66,67,26,27,29,30,33],"tindex":"6b0a0af4-8276-11e5-b2fd-333e60b87fde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,26,37,83,84,85,86,87,88,89,90,91],"tindex":"6b0a0af5-8276-11e5-b2fd-779afa8334c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:133","type":"CtReturnImpl","sourcecode":"return new java.lang.String(byte[] , com.graphhopper.util.Helper.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"6b0a3206-8276-11e5-b2fd-37d99204671d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"variableMap":{"key":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:405","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"6b0a3207-8276-11e5-b2fd-5bc065de4f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"edges","da":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:861","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), 0)"},"status":-2},{"failures":[],"tindex":"6b0a3208-8276-11e5-b2fd-e5c67bc76947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return super.isBool(long, int);\n}"},"status":-2},{"failures":[92],"tindex":"6b0a3209-8276-11e5-b2fd-4bbe8b70a839","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"y2","orientation":"y2","java.lang.Math.PI":"y2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:46","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-1},{"failures":[],"tindex":"6b0a591a-8276-11e5-b2fd-e5d6561c669e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"wayBitMask","bufferStart":"wayBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:563","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6b09e3de-8276-11e5-b2fd-8fadb635a778","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}