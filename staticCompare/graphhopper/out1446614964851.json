{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":60,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":6,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":65,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.routing.PathTest.testFindInstruction":47,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":70,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":12,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":69,"com.graphhopper.routing.PathTest.testWayList":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":11,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":51,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":61,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":80,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":73,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":82,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":55,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":58,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":9,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":84,"com.graphhopper.GraphHopperTest.testFootAndCar":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":10,"com.graphhopper.util.InstructionListTest.testWayList2":93,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":78,"com.graphhopper.reader.OSMReaderTest.testFoot":32,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":63,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":64,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":50,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":18,"com.graphhopper.coll.IntIntBinHeapTest.testSize":44,"com.graphhopper.util.InstructionListTest.testWayList":92,"com.graphhopper.reader.OSMReaderTest.testOneWay":43,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":71,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":72,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":79,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":53,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.GraphHopperTest.testVia":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":56,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":52,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":13,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":88,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":24,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.util.InstructionListTest.testFind":54,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":87,"com.graphhopper.GraphHopperTest.testLoadOSM":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":7,"com.graphhopper.util.GHUtilityTest.testCopy":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":83,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21},"transformations":[{"failures":[0,1],"tindex":"0296b295-82b5-11e5-a4ef-b51f4761b8f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"tmpPrevEdge","speed":"tmpPrevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:466","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CHEdgeIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"029700b6-82b5-11e5-a4ef-cfb5d0deeaed","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:76","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphExtension = new com.graphhopper.routing.QueryGraph.QueryGraphTurnExt(this)"},"variableMap":{"wrappedExtension":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:396","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.create(long)"},"status":-2},{"failures":[2,3,4,5],"tindex":"029700b7-82b5-11e5-a4ef-fd75c9530ce9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:396","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"index":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), com.graphhopper.storage.index.LocationIndexTree.calcChecksum())"},"status":-1},{"failures":[],"tindex":"029700b8-82b5-11e5-a4ef-4b481761d8db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfDecoder:64","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Condition.await()"},"variableMap":{"dataWaitCondition":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:175","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isRegistered())\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[6],"tindex":"029727c9-82b5-11e5-a4ef-71d468ad4695","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:85","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"variableMap":{"tagTxt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[7,8,9,10,11,12,13,14],"tindex":"029727ca-82b5-11e5-a4ef-ebb4b633b1ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:631","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(int)"},"status":-1},{"failures":[15,16,17,18],"tindex":"029727cb-82b5-11e5-a4ef-25fab87a6701","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"segmentSizeInBytes","edge2":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:189","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int)"},"status":-1},{"failures":[19,2,20,21,22,23,14,24,25,26,27,28,3,4,5,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"02974edc-82b5-11e5-a4ef-419a015ccb49","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1068","type":"CtAssertImpl","sourcecode":"assert boolean"},"variableMap":{"ret":"sortGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:841","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((com.graphhopper.storage.GraphHopperStorage.isCHPossible()) && com.graphhopper.GraphHopper.(isPrepared()))\n        throw new java.lang.IllegalArgumentException(\"Sorting a prepared CHGraph is not possible yet. See #12\");\n    \n    com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.storage.GraphHopperStorage, com.graphhopper.storage.GraphHopperStorage);\n    org.slf4j.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n    com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage;\n} "},"status":-1},{"failures":[29,33,35,36],"tindex":"02974edd-82b5-11e5-a4ef-d9ae06db01ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:760","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.PointList.getSize()) - 2) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-1},{"failures":[],"tindex":"02974ede-82b5-11e5-a4ef-5be46beb80b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:167","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":0},{"failures":[],"tindex":"029775ef-82b5-11e5-a4ef-23e26fe4d60e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:369","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.done\", boolean)"},"status":-2},{"failures":[],"tindex":"029775f0-82b5-11e5-a4ef-f1bc9cab6de4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"status":0},{"failures":[],"tindex":"029775f1-82b5-11e5-a4ef-e3d094f3f750","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:39","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.SimpleIntDeque.pop()"},"status":-2},{"failures":[],"tindex":"029775f2-82b5-11e5-a4ef-01ff33a3ceda","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","size":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","lonSize":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:247","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"));\n    if (boolean || boolean) {\n        boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n        if (boolean)\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"02979d03-82b5-11e5-a4ef-2b88d1a30e1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:497","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer)"},"status":0},{"failures":[44,45],"tindex":"02979d04-82b5-11e5-a4ef-bb5a66b0e4c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"variableMap":{"elem":"keys","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:121","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"02979d05-82b5-11e5-a4ef-a919403c116e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"_default","speed":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:135","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[7,46,8,9,10,11,47,48,13,49,50,20,21,22,23,14,24,29,51,52,53,54,55],"tindex":"02979d06-82b5-11e5-a4ef-6bd53ea10bc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"r_lat","dy":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:235","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[56,57,58,12,59,60,13,61,49,62,63,64,65,66,50,19,2,25,26,67,27,28,3,4,5,29,30,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,54,91,92,93,31,32,33,94,34,37,38,39,40,41,42,43],"tindex":"0297c417-82b5-11e5-a4ef-b983bdd2c744","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"02974ede-82b5-11e5-a4ef-5be46beb80b4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.OSMElement.getTag"]},"type":"staticDiff"}]},{"transformation":"029775f0-82b5-11e5-a4ef-f1bc9cab6de4","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"type":"staticDiff"}]},{"transformation":"02979d03-82b5-11e5-a4ef-2b88d1a30e1d","diffs":[{"methodsDiff":{"delete":["java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":["com.graphhopper.reader.OSMReader_java.util.Collection_analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder,com.graphhopper.reader.OSMTurnRelation).e2"]},"type":"branch"}]}]}