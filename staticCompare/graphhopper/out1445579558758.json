{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":160,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":49,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":227,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.reader.OSMReaderTest.testFerry":317,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":88,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":89,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":13,"com.graphhopper.routing.QueryGraphTest.testOneWay":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":128,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":223,"com.graphhopper.reader.OSMReaderTest.testWithBounds":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":310,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":99,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":165,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":241,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":175,"com.graphhopper.GraphHopperTest.testPrepare":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":176,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":55,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":202,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":31,"com.graphhopper.util.InstructionListTest.testWayList":94,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":40,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":91,"com.graphhopper.GraphHopperAPITest.testDisconnected179":316,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":153,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":80,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":312,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":179,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":345,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":304,"com.graphhopper.GraphHopperTest.testLoadOSM":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":244,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":108,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":225,"com.graphhopper.reader.OSMReaderTest.testSort":320,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":124,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":64,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":278,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":53,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":331,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":71,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":181,"com.graphhopper.routing.PathTest.testWayList":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":275,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":38,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":284,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":101,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":255,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":144,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":79,"com.graphhopper.util.GHUtilityTest.testSort":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":154,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":141,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":26,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":100,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":276,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":277,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":204,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":289,"com.graphhopper.GraphHopperAPITest.testLoad":315,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":295,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":105,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.reader.OSMReaderTest.testBarriers":321,"com.graphhopper.routing.PathTest.testFound":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":169,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":36,"com.graphhopper.util.GHUtilityTest.testCopy":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":150,"com.graphhopper.routing.PathTest.testFindInstruction":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":28,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":291,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":155,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":258,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":214,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":83,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":293,"com.graphhopper.reader.PrinctonReaderTest.testRead":332,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":104,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":151,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":132,"com.graphhopper.util.InstructionListTest.testWayList2":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":247,"com.graphhopper.reader.OSMReaderTest.testFoot":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":172,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":230,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":231,"com.graphhopper.reader.OSMReaderTest.testOneWay":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":122,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":65,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":290,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":162,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":186,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":193,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":322,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":58,"com.graphhopper.routing.PathBidirRefTest.testExtract":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":271,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":228,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":314,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":253,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":170,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":338,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":337,"com.graphhopper.util.GHUtilityTest.testSort2":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":158,"com.graphhopper.reader.OSMReaderTest.testMain":319,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":102,"com.graphhopper.routing.PathBidirRefTest.testExtract2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":256,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":239,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":302,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.storage.GraphHopperStorageTest.testClone":189,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":173,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":131,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":198,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":205,"com.graphhopper.GraphHopperTest.testFootAndCar":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":152,"com.graphhopper.routing.PathTest.testTime":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":164,"com.graphhopper.util.GHUtilityTest.testSortDirected":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":120,"com.graphhopper.GraphHopperTest.testPrepareOnly":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":261,"com.graphhopper.GraphHopperTest.testVia":343,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":41,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":326,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":240,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":103,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":96,"com.graphhopper.GraphHopperTest.testFootOnly":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":246,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":248,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":161,"com.graphhopper.util.InstructionListTest.testFind":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":274},"transformations":[{"failures":[],"tindex":"4475f560-794a-11e5-ac01-7bf2a8df7c0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:91","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:138","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode.valueOf(java.lang.String.toUpperCase())"},"status":-2},{"failures":[],"tindex":"4475f561-794a-11e5-ac01-b10685df2655","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:81","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"variableMap":{"instruction":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"44761c72-794a-11e5-ac01-8f38929868ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"E_LINKB","retBucket":"E_LINKB","i":"E_LINKB","bucketSize":"E_LINKB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:49","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,75,76,79,80,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,104,107,108,109,110,111,112,113,114,115,117,120,121,123,124,125,126,127,128,129,132,133,134,135,138,139,143,144,145,146,147,148,149,150,151,153,156,157,159,160,161,162,163,164,165,168,169,170,171,174,175,179,180,182,184,185,186,187,188,189,190,191,193,196,197,199,200,201,202,203,204,205,208,209,210,211,214,215,219,220,221,223,224,225,226,227,229,231,232,233,234,235,236,237,238,239,240,242,243,244,245,246,248,250,251,252,253,254,255,256,263,265,266,267,274,278,279,280,281,282,283,284,285,287,290,291,293,294,295,296,297,298,299,302,303,304,305,308,309,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,330,332,333,334,335,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352],"tindex":"44764383-794a-11e5-ac01-bdb7bfc21b5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[77],"tindex":"44764384-794a-11e5-ac01-e7280f4c8a94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:190","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"allRemoved":"pointsIndex","removedEdges":"pointsIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:103","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"44766a95-794a-11e5-ac01-e7af0e1a7d9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"current","tmpSize":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:43","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.util.TIntArrayStack.size()) > 0) {\n    int = com.graphhopper.util.TIntArrayStack.pop();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n            if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n                com.graphhopper.util.TIntArrayStack.push(int);\n            } \n        }\n        com.graphhopper.coll.GHBitSet.add(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"44766a96-794a-11e5-ac01-0deb3ab79109","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:155","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.clear()"},"status":-2},{"failures":[],"tindex":"44766a97-794a-11e5-ac01-75c98a994934","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"44766a98-794a-11e5-ac01-bd49363b8b67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:189","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"status":-2},{"failures":[],"tindex":"44766a99-794a-11e5-ac01-83ada774a574","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"chWeightingStr","fileStr":"chWeightingStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:806","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n}"},"status":-2},{"failures":[],"tindex":"447691aa-794a-11e5-ac01-43afac7cada0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"variableMap":{"from":"edge","to":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:246","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-2},{"failures":[],"tindex":"447691ab-794a-11e5-ac01-e536444c074a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"status":-2},{"failures":[],"tindex":"447691ac-794a-11e5-ac01-89fdd636d0f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"E_LINKA","guess":"E_LINKA","low":"E_LINKA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:48","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"447691ad-794a-11e5-ac01-d9c4164a9163","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:597","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setEdgesHeader()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:415","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setNodesHeader()"},"status":-2},{"failures":[],"tindex":"447691ae-794a-11e5-ac01-6b98da2aaf2c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:480","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"447691af-794a-11e5-ac01-47480a980da0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:227","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-2},{"failures":[],"tindex":"447691b0-794a-11e5-ac01-2f6a416d5d36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:61","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.signum((double - double))))"},"status":-2},{"failures":[],"tindex":"4476b8c1-794a-11e5-ac01-21aa3bad6564","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"status":-2},{"failures":[],"tindex":"4476b8c2-794a-11e5-ac01-33588bbc5701","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:648","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.cleanUp()"},"status":-2},{"failures":[],"tindex":"4476b8c3-794a-11e5-ac01-b199c36461e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n    return true;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}