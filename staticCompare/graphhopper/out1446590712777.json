{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":137,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":3,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":172,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.reader.OSMReaderTest.testFerry":251,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":221,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":222,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":238,"com.graphhopper.routing.QueryGraphTest.testOneWay":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":243,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":263,"com.graphhopper.reader.OSMReaderTest.testWithBounds":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":141,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":27,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":261,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":28,"com.graphhopper.GraphHopperTest.testPrepare":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":18,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":150,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":270,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":269,"com.graphhopper.util.InstructionListTest.testWayList":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":15,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":218,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":220,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":237,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":105,"com.graphhopper.util.HelperTest.testUnzip":227,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":239,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":148,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":123,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":175,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":164,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":195,"com.graphhopper.reader.OSMReaderTest.testSort":47,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":163,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":205,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":80,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":217,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":100,"com.graphhopper.routing.PathTest.testWayList":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":249,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":20,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":268,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":111,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":234,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":104,"com.graphhopper.util.GHUtilityTest.testSort":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":133,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":119,"com.graphhopper.storage.SimpleFSLockFactoryTest.testForceDelete":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":233,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":21,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":189,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":65,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":229,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.reader.OSMReaderTest.testBarriers":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":143,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":228,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":131,"com.graphhopper.util.GHUtilityTest.testCopy":224,"com.graphhopper.routing.PathTest.testFindInstruction":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":109,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":113,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":180,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":169,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":115,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":128,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":89,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":117,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":210,"com.graphhopper.util.InstructionListTest.testWayList2":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":236,"com.graphhopper.reader.OSMReaderTest.testFoot":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":146,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":173,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":174,"com.graphhopper.reader.OSMReaderTest.testOneWay":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":199,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":138,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":211,"com.graphhopper.routing.PathBidirRefTest.testExtract":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":192,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":226,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":145,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":144,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":55,"com.graphhopper.util.GHUtilityTest.testSort2":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":135,"com.graphhopper.reader.OSMReaderTest.testMain":46,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":213,"com.graphhopper.routing.PathBidirRefTest.testExtract2":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":92,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":36,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":232,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":87,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":209,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":157,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":30,"com.graphhopper.GraphHopperTest.testFootAndCar":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":200,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":140,"com.graphhopper.storage.NativeFSLockFactoryTest.testForceDelete":250,"com.graphhopper.GraphHopperTest.testPrepareOnly":262,"com.graphhopper.GraphHopperTest.testVia":59,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":130,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":183,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":5,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":53,"com.graphhopper.GraphHopperTest.testFootOnly":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":184,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":102,"com.graphhopper.util.InstructionListTest.testFind":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":198},"transformations":[{"failures":[],"tindex":"8b385b86-827c-11e5-9924-494ee239bbae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"))"},"status":0},{"failures":[],"tindex":"8b388297-827c-11e5-9924-3d81ef7499ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"event","indexDivisor":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[],"tindex":"8b388298-827c-11e5-9924-b1a3ede98dba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"oldPointer","highKey":"oldPointer","key":"oldPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:92","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[0],"tindex":"8b388299-827c-11e5-9924-875af11de624","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:453","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"8b38829a-827c-11e5-9924-cd01ff8e7747","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"adjNode","dLat":"adjNode","tmpErr":"adjNode","x1":"adjNode","sLon":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:917","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[67,68,1,69,2,70,3,5,6,7,8,9,10,71,11,12,72,73,74,13,75,76,14,15,17,77,78,18,19,79,80,20,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,24,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,29,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,32,172,33,173,174,175,176,34,35,177,178,179,180,181,182,36,183,37,184,38,185,186,187,188,39,40,189,190,191,192,193,194,42,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,45,217,50,218,51,52,53,219,220,221,222,223,224,225,54,55,56,57,58,226],"tindex":"8b38a9ab-827c-11e5-9924-6fe6dc1f7926","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"b","b":"a","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"status":-1},{"failures":[],"tindex":"8b38f7cc-827c-11e5-9924-c9502a508802","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:342","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"8b38f7cd-827c-11e5-9924-ed7345197f57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[227],"tindex":"8b38f7ce-827c-11e5-9924-6f20c7893595","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:214","type":"CtInvocationImpl","sourcecode":"java.io.File.delete()"},"variableMap":{"lockFile":"toFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:66","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir()"},"status":-1},{"failures":[],"tindex":"8b391edf-827c-11e5-9924-3fce0aec298d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:527","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:356","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[4,25,27,30,43,49],"tindex":"8b391ee0-827c-11e5-9924-0ddae07bc87c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"maxSpeed":"tmp","fwdSpeed":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:250","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"8b391ee1-827c-11e5-9924-ef0ed48ab77c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"speed","frontIndex":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"8b391ee2-827c-11e5-9924-077a36c5b1b2","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"i","entityType":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"8b391ee3-827c-11e5-9924-2db2c37ffa43","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:136","type":"CtIfImpl","sourcecode":"if (int != int) {\n    int[][int] = int[][int];\n    int[][int] = int;\n} "},"variableMap":{"val":"start","keys":"nodeLowLink","values":"nodeLowLink","i":"index","o":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n}"},"status":0},{"failures":[2,70,3,13,14,16,17,18,20,54,55,56,57,58,59,60,61,62,63,64,244,65],"tindex":"8b3945f4-827c-11e5-9924-c3d4a21ca747","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"mainEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:351","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + (java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size())"},"status":-1},{"failures":[],"tindex":"8b3945f5-827c-11e5-9924-d527eda5f061","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"start","tmpErr":"start","y1":"start","dLon":"start","sLat":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[],"tindex":"8b3945f6-827c-11e5-9924-a1d153bf05a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"variableMap":{"com.graphhopper.storage.DAType.MMAP":"defaultType","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[245,246,247,130,248,249,134,136,139,140,144,145,250,251,252,46,47,253,48,49,254,255,256,257,258,259,260,261,262,263,59,60,61,62,63,64,244,264,65,66,265],"tindex":"8b3945f7-827c-11e5-9924-3f181acdfeed","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1068","type":"CtAssertImpl","sourcecode":"assert boolean"},"variableMap":{"ret":"com.graphhopper.util.Constants.SNAPSHOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:93","type":"CtIfImpl","sourcecode":"if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-1},{"failures":[],"tindex":"8b3945f8-827c-11e5-9924-b5b0ba2923fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:681","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double)"},"status":0},{"failures":[68,266,267,268,269,12,72,73,74,13,75,14,15,16,17,77,78,18,19,79,80,20,270,82,87,271,88,91,45,54,55,56,57,58,226,59,60,61,62,63,64,65],"tindex":"8b396d09-827c-11e5-9924-39a0d696c99b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currEdge","currEdge":"currEdge","nEdge":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:87","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8b385b86-827c-11e5-9924-494ee239bbae","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags","java.util.Map<java.lang.String, java.lang.Integer>.get"]},"type":"staticDiff"}]},{"transformation":"8b3945f8-827c-11e5-9924-b5b0ba2923fa","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.setDistance"]},"type":"staticDiff"}]},{"transformation":"8b391edf-827c-11e5-9924-3fce0aec298d","diffs":[{"branches":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":["com.graphhopper.routing.util.AbstractFlagEncoder_double_parseSpeed(java.lang.String).b","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).e2","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).e1","com.graphhopper.routing.util.AbstractFlagEncoder_int_parseDuration(java.lang.String).t1","com.graphhopper.routing.util.AbstractFlagEncoder_int_parseDuration(java.lang.String).b","com.graphhopper.routing.util.AbstractFlagEncoder_double_getMaxSpeed(com.graphhopper.reader.OSMWay).b","com.graphhopper.routing.util.AbstractFlagEncoder_double_parseSpeed(java.lang.String).t1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed"]},"type":"staticDiff"}]}]}