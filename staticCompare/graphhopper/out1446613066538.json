{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":320,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":337,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":84,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":76,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":196,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":355,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":289,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":112,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":156,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":32,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":220,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":319,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":326,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":311,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":133,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":303,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":118,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":59,"com.graphhopper.GraphHopperTest.testLoadOSM":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":119,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":198,"com.graphhopper.reader.OSMReaderTest.testSort":23,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":175,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":140,"com.graphhopper.storage.RAMDataAccessTest.testHeader":285,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":342,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":378,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":14,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":301,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":113,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":235,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":306,"com.graphhopper.coll.OSMIDMapTest.testGetLong":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":256,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":262,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":253,"com.graphhopper.GraphHopperAPITest.testLoad":67,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":157,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":147,"com.graphhopper.reader.OSMReaderTest.testBarriers":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":216,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":307,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":287,"com.graphhopper.routing.PathTest.testFindInstruction":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":83,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":176,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":161,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":56,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":224,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":127,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":248,"com.graphhopper.coll.IntIntBinHeapTest.testClear":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":276,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":349,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":50,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":134,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":25,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":322,"com.graphhopper.coll.OSMIDMapTest.testGet":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":225,"com.graphhopper.routing.PathBidirRefTest.testExtract":361,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":384,"com.graphhopper.storage.RAMDataAccessTest.testCopy":281,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":122,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":278,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":382,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":381,"com.graphhopper.storage.RAMDataAccessTest.testSegments":286,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":380,"com.graphhopper.util.GHUtilityTest.testSort2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":317,"com.graphhopper.reader.OSMReaderTest.testMain":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":240,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":266,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":199,"com.graphhopper.storage.StorablePropertiesTest.testStore":279,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":49,"com.graphhopper.storage.GraphHopperStorageTest.testClone":149,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":222,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":159,"com.graphhopper.routing.PathTest.testTime":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":206,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":129,"com.graphhopper.reader.OSMReaderTest.testRelation":373,"com.graphhopper.util.GHUtilityTest.testSortDirected":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":211,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":296,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":339,"com.graphhopper.GraphHopperTest.testFootOnly":43,"com.graphhopper.util.BitUtilLittleTest.testToInt":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":135,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":298,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":201,"com.graphhopper.search.NameIndexTest.testCreate":370,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":121,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":334,"com.graphhopper.routing.QueryGraphTest.testOneWay":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":117,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":275,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":340,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":265,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":258,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":145,"com.graphhopper.search.NameIndexTest.testFlush":368,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":302,"com.graphhopper.util.InstructionListTest.testWayList":11,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":178,"com.graphhopper.GraphHopperAPITest.testDisconnected179":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":209,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":356,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":203,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":151,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":332,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":169,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":324,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":139,"com.graphhopper.routing.PathTest.testWayList":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":208,"com.graphhopper.coll.OSMIDMapTest.testGet2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":325,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":294,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":309,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":185,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":189,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":249,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":282,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":297,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":19,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":48,"com.graphhopper.util.GHUtilityTest.testSort":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":123,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":233,"com.graphhopper.search.NameIndexTest.testPut":367,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":138,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":188,"com.graphhopper.util.BitUtilBigTest.testToInt":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":230,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":350,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":239,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":376,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":323,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":183,"com.graphhopper.routing.PathTest.testFound":363,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":299,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":255,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":47,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":369,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":182,"com.graphhopper.util.InstructionListTest.testEmptyList":74,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":154,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":315,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":228,"com.graphhopper.reader.PrinctonReaderTest.testRead":371,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":250,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":202,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":260,"com.graphhopper.reader.OSMReaderTest.testFoot":21,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":348,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":124,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":125,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":158,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":204,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":272,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":55,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":167,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":327,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":78,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":231,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":338,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":61,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":143,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":190,"com.graphhopper.routing.PathBidirRefTest.testExtract2":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":300,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":114,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":366,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":217,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":120,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":234,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":195,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":246,"com.graphhopper.GraphHopperTest.testPrepareOnly":33,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":86,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":312,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":191,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":75,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":170,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":105,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":210,"com.graphhopper.util.InstructionListTest.testFind":73,"com.graphhopper.storage.EdgeTest.testCloneFull":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":236},"transformations":[{"failures":[],"tindex":"971b463a-82b0-11e5-b2f5-15b40e907b5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:207","type":"CtReturnImpl","sourcecode":"return 10"},"status":0},{"failures":[0,1,2,3],"tindex":"971b6d4b-82b0-11e5-b2f5-6f4be868e836","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:191","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[4,5,6,7,8],"tindex":"971b945c-82b0-11e5-b2f5-5d1c2dc5f9cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"variableMap":{"closestEdge":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName())"},"status":-1},{"failures":[],"tindex":"971b945d-82b0-11e5-b2f5-53215438f7a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()))"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"971b945e-82b0-11e5-b2f5-77ad317c14e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:465","type":"CtReturnImpl","sourcecode":"return (java.lang.Character.toUpperCase(java.lang.String.charAt(0))) + (java.lang.String.substring(1))"},"status":-1},{"failures":[],"tindex":"971b945f-82b0-11e5-b2f5-c90bc9a91890","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"this":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:421","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"971bbb70-82b0-11e5-b2f5-c7b1bda2b090","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"fileLockName","name":"fileLockName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1164","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.storage.LockFactory.forceRemove(java.lang.String, true);\n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[1,21,22,23,24,25,26,27,28,29,30,31,2,3,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"971bbb71-82b0-11e5-b2f5-3f6321636552","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:720","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"variableMap":{"nodeEntryBytes":"i","newI":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:676","type":"CtLocalVariableImpl","sourcecode":"long long = gnu.trove.list.TLongList.get(int)"},"status":-1},{"failures":[45,46,47,48,49,50],"tindex":"971bbb72-82b0-11e5-b2f5-bdcdba724bd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[], 0)"},"status":-1},{"failures":[],"tindex":"971bbb73-82b0-11e5-b2f5-211be997ace6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:555","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":0},{"failures":[51,52,53,54,55,56,57,58,59],"tindex":"971be284-82b0-11e5-b2f5-85b16791e60e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:587","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"971be285-82b0-11e5-b2f5-6fe3af1d24b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1106","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (boolean) && (boolean)"},"status":-2},{"failures":[60],"tindex":"971be286-82b0-11e5-b2f5-7d01db07ab4e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"size","tmp":"size","segmentSizeInBytes":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-1},{"failures":[],"tindex":"971be287-82b0-11e5-b2f5-23f40ada2956","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"osmReaderWayPointMaxDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:581","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"osmreader.wayPointMaxDistance\", double)"},"status":0},{"failures":[1,21,22,23,24,25,26,27,28,29,30,31,2,3,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"971c0998-82b0-11e5-b2f5-9de614fc19dd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[],"tindex":"971c0999-82b0-11e5-b2f5-6bd39b76cc5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"971c099a-82b0-11e5-b2f5-33e6956f868d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > (java.lang.Math.double))\n    double -= 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"absY","angleXY":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[1,61],"tindex":"971c30ab-82b0-11e5-b2f5-ff668977143f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:363","type":"CtIfImpl","sourcecode":"if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n} "},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,4,71,72,73,74,10,11,13,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,5,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,7,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,8,277,278,279,280,49,281,282,283,284,285,286,287,288,289,50,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,51,52,327,53,328,329,330,54,331,57,332,58,59,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,347,348,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,14,15,363,364,16,17,18,365,19,20,366,367,368,369,370,371,372,1,21,22,23,24,25,26,27,28,373,374,29,30,31,2,61,3,375,376,377,378,32,33,379,380,381,382,383,384,34,35,36,37,38,39,40,41,42,43,44],"tindex":"971c30ac-82b0-11e5-b2f5-61e87da6ba4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"E_ADDITIONAL":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:108","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[385],"tindex":"971c57bd-82b0-11e5-b2f5-5f2c3fb94c87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"tmpPrev","edgeEntry":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"971b945d-82b0-11e5-b2f5-53215438f7a0","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.OSMIDSegmentedMap.getNoEntryValue"]},"type":"staticDiff"}]},{"transformation":"971be287-82b0-11e5-b2f5-23f40ada2956","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getDouble"]},"type":"staticDiff"}]}]}