{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":28,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":11,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":35,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":24,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.GraphHopperTest.testFootOnly":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":36,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":39,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":41},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"9c9e981d-794d-11e5-badb-85fab7dbbfa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"9c9ebf2e-794d-11e5-badb-77748b1a5546","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"relationCodeEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"status":0},{"failures":[],"tindex":"9c9ebf2f-794d-11e5-badb-5d6d470e3638","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:38","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[6,7,8,9,10],"tindex":"9c9ee640-794d-11e5-badb-07ad9771ffb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:194","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,3,4,39,40,41,42,43,44,45,46,47,48,49,50,9,10,51,52],"tindex":"9c9ee641-794d-11e5-badb-bf65793d71cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtWhileImpl","sourcecode":"while ((!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) && (!com.graphhopper.routing.AbstractRoutingAlgorithm.(isWeightLimitExceeded()))) {\n    if ((!(boolean)) && (!(boolean))) {\n        if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n        else\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n        \n    } else if (!(boolean)) {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    } else {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    }\n}"},"status":-1},{"failures":[],"tindex":"9c9ee642-794d-11e5-badb-913cd43d1dac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":0},{"failures":[],"tindex":"9c9f0d53-794d-11e5-badb-1d10d4e7c030","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","index":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:54","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>.add(new com.graphhopper.reader.OSMRelation.Member(javax.xml.stream.XMLStreamReader));\n} "},"status":-2},{"failures":[],"tindex":"9c9f0d54-794d-11e5-badb-9d588b35af25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:170","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"9c9f0d55-794d-11e5-badb-31ce38629989","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"N_ELE","child":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:264","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[],"tindex":"9c9f0d56-794d-11e5-badb-2741f921068c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"variableMap":{"prepareAlgo":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"9c9f3467-794d-11e5-badb-c3db877e0ebb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"variableMap":{"name":"ghLocation","refName":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:764","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String))"},"status":-2},{"failures":[],"tindex":"9c9f3468-794d-11e5-badb-df755a0f7017","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:193","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.abs(com.graphhopper.reader.dem.SRTMProvider.down(double))"},"status":-2},{"failures":[],"tindex":"9c9f3469-794d-11e5-badb-b1aaecf25ad4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfStreamSplitter:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:666","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"))"},"status":-2},{"failures":[],"tindex":"9c9f346a-794d-11e5-badb-33f4b88bf17c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"length","start":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"9c9f5b7b-794d-11e5-badb-8718f7aad3d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:102","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:159","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"9c9f5b7c-794d-11e5-badb-8b1bd91e50a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:203","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9c9f5b7d-794d-11e5-badb-c792e67e6118","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:302","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} "},"variableMap":{"elem":"a","i":"len","value":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:411","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"9c9f5b7e-794d-11e5-badb-75a76d913ad6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"9c9f5b7f-794d-11e5-badb-5bae76713cf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.flush()"},"variableMap":{"this":"locationIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1162","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndex.close()"},"status":-2},{"failures":[],"tindex":"9c9f8290-794d-11e5-badb-4ba121704718","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"value","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}