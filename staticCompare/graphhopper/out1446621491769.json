{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":227,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":160,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.reader.OSMReaderTest.testFerry":191,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":188,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":189,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":224,"com.graphhopper.routing.QueryGraphTest.testOneWay":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":146,"com.graphhopper.reader.OSMReaderTest.testWithBounds":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":213,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":230,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":71,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":80,"com.graphhopper.GraphHopperTest.testPrepare":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":108,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":118,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":45,"com.graphhopper.util.InstructionListTest.testWayList":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":49,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":63,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":253,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":81,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":248,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":173,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":123,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":158,"com.graphhopper.reader.OSMReaderTest.testSort":194,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":257,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":216,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":128,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":56,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":232,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":190,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":262,"com.graphhopper.routing.PathTest.testWayList":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":154,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":24,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":87,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":111,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":5,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":268,"com.graphhopper.util.GHUtilityTest.testSort":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":161,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":106,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":155,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":222,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":3,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":90,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":212,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":110,"com.graphhopper.reader.OSMReaderTest.testBarriers":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":61,"com.graphhopper.util.GHUtilityTest.testCopy":186,"com.graphhopper.routing.PathTest.testFindInstruction":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":85,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":91,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":65,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":165,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":243,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":58,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":107,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":22,"com.graphhopper.util.InstructionListTest.testWayList2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":36,"com.graphhopper.reader.OSMReaderTest.testFoot":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":162,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":26,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":27,"com.graphhopper.reader.OSMReaderTest.testOneWay":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":135,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":221,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":113,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":195,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":240,"com.graphhopper.routing.PathBidirRefTest.testExtract":260,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":178,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":30,"com.graphhopper.util.GHUtilityTest.testSort2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":258,"com.graphhopper.reader.OSMReaderTest.testMain":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":156,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.routing.PathBidirRefTest.testExtract2":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":151,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":41,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":172,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":244,"com.graphhopper.storage.StorablePropertiesTest.testStore":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":6,"com.graphhopper.storage.GraphHopperStorageTest.testClone":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":78,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":148,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":121,"com.graphhopper.GraphHopperTest.testFootAndCar":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":17,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":255,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":34,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":229,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":20,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":184,"com.graphhopper.GraphHopperTest.testFootOnly":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":175,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":176,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":141,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":264,"com.graphhopper.util.InstructionListTest.testFind":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":136},"transformations":[{"failures":[0,1],"tindex":"34edd1e4-82c4-11e5-ac66-f377bd1a15ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList)"},"variableMap":{"fullPoints":"fullPoints","rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList).setRouteWeight(double).setDistance(double).setTime(long)"},"status":-1},{"failures":[],"tindex":"34edf8f5-82c4-11e5-ac66-7302de4ab796","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:417","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"setName\")"},"variableMap":{"this":"inEdgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:234","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.fillEdges(com.graphhopper.routing.AStar.AStarEdge, java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>, gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>, com.graphhopper.util.EdgeExplorer, true)"},"status":-2},{"failures":[],"tindex":"34edf8f6-82c4-11e5-ac66-bb96221991f2","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:121","type":"CtReturnImpl","sourcecode":"return java.util.zip.ZipInputStream"},"variableMap":{"zip":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:122","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"34edf8f7-82c4-11e5-ac66-f56b4a537ef3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"variableMap":{"nodeCount":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:62","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":0},{"failures":[],"tindex":"34edf8f8-82c4-11e5-ac66-cbc6b02a57e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:208","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Long.parseLong(java.lang.String)"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"34ee2009-82c4-11e5-ac66-379ba43d31e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:142","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"status":-1},{"failures":[],"tindex":"34ee200a-82c4-11e5-ac66-3d1ec3c9415e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[15,16,2,17,18,4,19,20,8,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,10,12,13,14],"tindex":"34ee200b-82c4-11e5-ac66-1743bb8568b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"lat","incDist2DSum":"maxLat","fwdSlower":"lat","fullDist2D":"maxLat","restDist2D":"lat","speed":"maxLat","decDist2DSum":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[2,4,8,10,12,14],"tindex":"34ee200c-82c4-11e5-ac66-c33aa0a2644d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"edgeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:212","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":-1},{"failures":[],"tindex":"34ee200d-82c4-11e5-ac66-fb681e6d03d9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:482","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * double))) / double"},"variableMap":{"factor":"java.lang.Double.NaN","value":"radian"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:97","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(int)) != 1)\n    return java.lang.Double.double;\nelse\n    return ((java.lang.Math.double) * (int)) - (double);\n"},"status":-2},{"failures":[42,43],"tindex":"34ee471e-82c4-11e5-ac66-a5a0d607e1dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:386","type":"CtIfImpl","sourcecode":"if ((long & long) > 0) {\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n    long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n    if (int > 0) {\n        if (int < 0)\n            int = 0;\n        \n        long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n        long[][((long[].int) - 1)] = long;\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    } else {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        gnu.trove.list.TLongList.set(0, long);\n    }\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"34ee471f-82c4-11e5-ac66-4f0f8f2c0b3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[1,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"34ee4720-82c4-11e5-ac66-e3760417befc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"dist","logMessagesPercentage":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:406","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0) {\n        if (boolean)\n            double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n        else\n            double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n        \n    } \n    double = double[][int];\n    double = double[][int];\n    if (boolean)\n        double = double[][int];\n    \n}"},"status":-1},{"failures":[],"tindex":"34ee4721-82c4-11e5-ac66-19c2731a5350","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:99","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"34ee4722-82c4-11e5-ac66-338783460f2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:383","type":"CtReturnImpl","sourcecode":"return ((double)(int)) / (com.graphhopper.util.Helper.float)"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,4,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,8,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,23,158,159,160,161,26,27,28,162,163,29,30,164,31,32,165,166,167,168,169,170,171,172,34,173,174,175,176,37,38,39,177,178,40,41,0,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,42,195,196,197,198,43,199,200,201,202,203,204,205,206,207,1,208,209,210,11,12,14,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,44,249,45,46,250,251,252,47,253,254,48,49,255,256,257,50,51,258,52,53,55,259,56,57,260,261,262,263,264,265,266,267,268,269],"tindex":"34ee6e33-82c4-11e5-ac66-d3633194a46f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-1},{"failures":[196],"tindex":"34ee6e34-82c4-11e5-ac66-ad007a956080","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(false)"},"status":-1},{"failures":[],"tindex":"34ee6e35-82c4-11e5-ac66-efc5769f69ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"status":-2},{"failures":[],"tindex":"34ee6e36-82c4-11e5-ac66-f3a07a14b9b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    int int = int[].int;\n    byte[] byte[] = new byte[int * 4];\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n    }\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-2},{"failures":[],"tindex":"34ee9547-82c4-11e5-ac66-35b469426a88","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:96","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"variableMap":{"charI":"base","strLen":"base","str":"this","bytes":"this","bLen":"base"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:794","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n} catch (java.lang.Exception ex) {\n    org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"base:\" + int));\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"34edf8f8-82c4-11e5-ac66-cbc6b02a57e9","diffs":[{"methodsDiff":{"delete":["java.lang.Long.parseLong"]},"type":"staticDiff"}]}]}