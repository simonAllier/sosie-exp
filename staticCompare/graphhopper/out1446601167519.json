{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":44,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":11,"com.graphhopper.reader.OSMReaderTest.testMain":3,"com.graphhopper.GraphHopperAPITest.testNoLoad":68,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":56,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":63,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":59,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":17,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":57,"com.graphhopper.reader.OSMReaderTest.testWithBounds":12,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":29,"com.graphhopper.coll.CompressedArrayTest.testCompress":47,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":13,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":58,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":35,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":15,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.GraphHopperTest.testFootAndCar":21,"com.graphhopper.util.BitUtilBigTest.testToFloat":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":54,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":28,"com.graphhopper.util.BitUtilBigTest.testToBitString":37,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":33,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":50,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":61,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.BitUtilBigTest.testToInt":39,"com.graphhopper.GraphHopperAPITest.testDisconnected179":67,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":34,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":48,"com.graphhopper.GraphHopperTest.testPrepareOnly":16,"com.graphhopper.coll.CompressedArrayTest.testCompress2":46,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":43,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":7,"com.graphhopper.GraphHopperAPITest.testLoad":66,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":22,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":53,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":62,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":74,"com.graphhopper.reader.OSMReaderTest.testBarriers":5,"com.graphhopper.GraphHopperTest.testLoadOSM":23,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":72,"com.graphhopper.reader.OSMReaderTest.testSort":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":70},"transformations":[{"failures":[0],"tindex":"e2bb89fa-8294-11e5-997c-a3e2d1ff628e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"e2bbb10b-8294-11e5-997c-59a507cd0fb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:119","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"variableMap":{"numTiles":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:729","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n    com.graphhopper.util.PointList.clear();\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n} "},"status":-1},{"failures":[28,29,30,31],"tindex":"e2bbb10c-8294-11e5-997c-ed0dfe603c27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"e2bbb10d-8294-11e5-997c-5b868e24e263","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"e2bbb10e-8294-11e5-997c-9786172c1d30","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:928","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"instructions\", boolean)"},"status":-2},{"failures":[32],"tindex":"e2bbb10f-8294-11e5-997c-05d6b618a9e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:695","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"variableMap":{"acceptBit":"flags1","internalFlags":"flags1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-1},{"failures":[],"tindex":"e2bbd820-8294-11e5-997c-25e7bd0aba74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"shift","guess":"shift","low":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:70","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"e2bbd821-8294-11e5-997c-a1cb2a645c3e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"tmpNode","id":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,25,26],"tindex":"e2bbd822-8294-11e5-997c-6dc3ccc4bb77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:39","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lon\"))"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:38","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lat\"))"},"status":-1},{"failures":[33,34,35,36,37,38,39],"tindex":"e2bbd823-8294-11e5-997c-ff360f1b869b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"status":-1},{"failures":[40,41,42,43,44,45],"tindex":"e2bbd824-8294-11e5-997c-b588b2750991","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:56","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"e2bbd825-8294-11e5-997c-2d11d527f25f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"e2bbff36-8294-11e5-997c-6fe1897457a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"e2bbff37-8294-11e5-997c-6717c591e5e7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:328","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[64,45],"tindex":"e2bbff38-8294-11e5-997c-c39671feb62d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"current","frontIndex":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:78","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getBaseNode()"},"status":-1},{"failures":[],"tindex":"e2bbff39-8294-11e5-997c-572690423e74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:137","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{"sw":"lazySW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:322","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[],"tindex":"e2bbff3a-8294-11e5-997c-25d8efc21e04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:221","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:238","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int))"},"status":-2},{"failures":[65],"tindex":"e2bbff3b-8294-11e5-997c-85da654110b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"sacScale","destination":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-1},{"failures":[],"tindex":"e2bc264c-8294-11e5-997c-a5e463680112","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"com.graphhopper.reader.OSMElement.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:175","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n        boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n        if (boolean) {\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n            int int = gnu.trove.list.TLongList.size();\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n            }\n            if (((++long) % 5000000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    } \n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n        if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n            com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n        \n        if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n            com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n        \n        if (((++long) % 50000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n}"},"status":-2},{"failures":[66,67,68,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,69,70,71,72,73,74,20,21,22,25],"tindex":"e2bc264d-8294-11e5-997c-f71af6528829","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:328","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e2bbb10d-8294-11e5-997c-5b868e24e263","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Translation.tr"]},"type":"staticDiff"}]},{"transformation":"e2bbff39-8294-11e5-997c-572690423e74","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]},{"transformation":"e2bbd820-8294-11e5-997c-25e7bd0aba74","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.getBits"]},"type":"staticDiff"}]}]}