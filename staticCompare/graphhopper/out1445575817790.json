{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":52,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":49,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":60,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":44,"com.graphhopper.routing.PathBidirRefTest.testExtract2":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":10,"com.graphhopper.reader.PrinctonReaderTest.testRead":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":21,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":57,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":61,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":14,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":43,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":66,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":62,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":25,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":27,"com.graphhopper.routing.PathBidirRefTest.testExtract":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":38,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":71},"transformations":[{"failures":[],"tindex":"8eabd89b-7941-11e5-b15c-476dc61db9e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"pointer","newSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:173","type":"CtIfImpl","sourcecode":"if ((byte[].int) > (int)) {\n    byte[] byte[] = new byte[int];\n    java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    byte[] = byte[];\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"8eabffac-7941-11e5-b15c-f90b75b3ad47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"nodeB","lastIndex":"nodeB","fromIndex":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"8eac26bd-7941-11e5-b15c-6dd894792894","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:171","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"8eac26be-7941-11e5-b15c-efc996baa8fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:193","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.FlagEncoder) == null)\n    throw new java.lang.IllegalStateException(\"No vehicle encoder set.\");\n"},"variableMap":{"prepareFlagEncoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.TIntList.size()) < int)\n    for (int int = 0 ; int < (com.graphhopper.util.TIntList.size()) ; int++) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(com.graphhopper.util.TIntList.get(int));\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false));\n            int++;\n        }\n    }\n"},"status":-2},{"failures":[],"tindex":"8eac26bf-7941-11e5-b15c-2bc27aacaeaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"distance":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:327","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"8eac4dd0-7941-11e5-b15c-a393ee8030ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"hash":"visitedNodesSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":-2},{"failures":[],"tindex":"8eac4dd1-7941-11e5-b15c-212ef2ee6e67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"status":-2},{"failures":[],"tindex":"8eac4dd2-7941-11e5-b15c-6380cc8f3c9b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_GEOMETRY":"com.graphhopper.util.Constants.VERSION_EDGE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"8eac4dd3-7941-11e5-b15c-6dbeb01efe21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"removedEdges","child":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:181","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.TIntList, int)"},"status":-2},{"failures":[],"tindex":"8eac74e4-7941-11e5-b15c-53da0d0ee83a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"variableMap":{"dLat":"i","dLon":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"status":-2},{"failures":[],"tindex":"8eac74e5-7941-11e5-b15c-4b181faeb2c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"8eac74e6-7941-11e5-b15c-a9e3b2ec7b4a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:251","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double))"},"status":-2},{"failures":[],"tindex":"8eac74e7-7941-11e5-b15c-07dde1ce2c20","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"8eac74e8-7941-11e5-b15c-294136ac88ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:80","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"8eac9bf9-7941-11e5-b15c-93d5d0789aec","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:542","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int"},"status":-2},{"failures":[],"tindex":"8eac9bfa-7941-11e5-b15c-97870e76ff11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"lon","resultOrientation":"lon","baseOrientation":"lat","java.lang.Math.PI":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:347","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.shapes.GHPoint3D.double, com.graphhopper.util.shapes.GHPoint3D.double, com.graphhopper.util.shapes.GHPoint3D.double)"},"status":-2},{"failures":[],"tindex":"8eac9bfb-7941-11e5-b15c-1f6c12c1bcfc","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"variableMap":{"elem":"arr","i":"endIndexPlusOne","element":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:97","type":"CtIfImpl","sourcecode":"if ((int) >= (int[].int)) {\n    int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))));\n} "},"status":-2},{"failures":[],"tindex":"8eac9bfc-7941-11e5-b15c-29ea48f8242f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"found"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:123","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"8eacc30d-7941-11e5-b15c-c1f382f116b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:521","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"8eacc30e-7941-11e5-b15c-63ab9ecb850f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"variableMap":{"entry":"algo","entryVal":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}