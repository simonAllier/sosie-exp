{"failureDictionary":{"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":35,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":39,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":51,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":54,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":5,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":45,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":52,"com.graphhopper.GraphHopperTest.testPrepare":41,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":36,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":44,"com.graphhopper.GraphHopperTest.testPrepareOnly":38,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":4,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":26,"com.graphhopper.GraphHopperTest.testFootOnly":21,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":29,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":31,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":1,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":22,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":49},"transformations":[{"failures":[],"tindex":"ea8dfc81-827b-11e5-b9e5-e16488275ab1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:248","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"ea8dfc82-827b-11e5-b9e5-ab8eb2c990d5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"eleDelta":"baseOrientation","decEleSum":"orientation","fullDist2D":"java.lang.Math.PI","decDist2DSum":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"ea8e2393-827b-11e5-b9e5-9b57bd939def","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"bytePointer","backwardBit":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:89","type":"CtOperatorAssignmentImpl","sourcecode":"long += byte[].int"},"status":0},{"failures":[],"tindex":"ea8e2394-827b-11e5-b9e5-61fe2b5c3488","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:80","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int);\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"ea8e2395-827b-11e5-b9e5-ddce34a5599c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:149","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"variableMap":{"cp":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-1},{"failures":[],"tindex":"ea8e2396-827b-11e5-b9e5-41a9b4e39624","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"usedBits","tmp":"usedBits","segmentSizeInBytes":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,17,18],"tindex":"ea8e2397-827b-11e5-b9e5-cb372fa3f500","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"ea8e4aa8-827b-11e5-b9e5-19c85b178808","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"status":0},{"failures":[19,20,21,22,23,24,25],"tindex":"ea8e4aa9-827b-11e5-b9e5-df1972375916","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[26,27,28,29],"tindex":"ea8e4aaa-827b-11e5-b9e5-4b4bc4d6068e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"ea8e4aab-827b-11e5-b9e5-bbb61ffb9dae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"variableMap":{"graph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:181","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":0},{"failures":[],"tindex":"ea8e4aac-827b-11e5-b9e5-1db1ae8bf3d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"status":0},{"failures":[30,31,32,33,34,35,36,37],"tindex":"ea8e4aad-827b-11e5-b9e5-31a9aba5fe6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"ea8e71be-827b-11e5-b9e5-a1c70476e31b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:194","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException((\"too many shortcuts. new shortcut id would be negative. \" + com.graphhopper.storage.CHGraphImpl.(toString())));\n"},"variableMap":{"shortcutCount":"maxLevel","this":"prepareGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:268","type":"CtIfImpl","sourcecode":"if ((boolean && ((long) > 0)) && (((long) % long) == 0)) {\n    com.graphhopper.util.StopWatch.start();\n    com.graphhopper.coll.GHTreeMapComposed.clear();\n    int int = com.graphhopper.storage.CHGraphImpl.getNodes();\n    for (int int = 0 ; int < int ; int++) {\n        if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n            continue;\n        \n        int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n    }\n    com.graphhopper.util.StopWatch.stop();\n    int++;\n    if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n        throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n    \n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,21,45,46,47,48],"tindex":"ea8e71bf-827b-11e5-b9e5-bfe212600d31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"shortcutEntryBytes","nextTurnCostIndex":"shortcutEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:623","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-1},{"failures":[49,50,51,52,53,54,55],"tindex":"ea8e71c0-827b-11e5-b9e5-939a7bfb5aac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.lookup(java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":-1},{"failures":[],"tindex":"ea8e98d1-827b-11e5-b9e5-db9497cb374a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"s":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"status":0},{"failures":[],"tindex":"ea8e98d2-827b-11e5-b9e5-198ef837df84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:257","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"status":0},{"failures":[],"tindex":"ea8e98d3-827b-11e5-b9e5-4d084af7d75d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:81","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-2},{"failures":[],"tindex":"ea8e98d4-827b-11e5-b9e5-8fb181fcf5ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:189","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ea8e4aa8-827b-11e5-b9e5-19c85b178808","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.prepare"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.GraphHopper_boolean_isPrepared().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.GraphHopper_boolean_isPrepared().b"]},"type":"branch"}]},{"transformation":"ea8e98d2-827b-11e5-b9e5-198ef837df84","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"ea8e4aab-827b-11e5-b9e5-bbb61ffb9dae","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Graph.getNodes"]},"type":"staticDiff"}]},{"transformation":"ea8e4aac-827b-11e5-b9e5-1db1ae8bf3d3","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.setDistance","com.graphhopper.storage.BaseGraph.edge"]},"type":"staticDiff"}]}]}