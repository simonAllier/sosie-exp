{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":97,"com.graphhopper.reader.OSMReaderTest.testFerry":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":106,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":65,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":93,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":8,"com.graphhopper.reader.OSMReaderTest.testWithBounds":40,"com.graphhopper.storage.MMapDataAccessTest.testSegments":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":59,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":74,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":1,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":43,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":70,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":80,"com.graphhopper.reader.OSMReaderTest.testFoot":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":103,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":6,"com.graphhopper.util.BitUtilLittleTest.testToBitString":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":100,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":101,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":21,"com.graphhopper.GraphHopperAPITest.testDisconnected179":64,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":94,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":15,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":120,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":119,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.reader.OSMReaderTest.testSort":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":28,"com.graphhopper.reader.OSMReaderTest.testMain":32,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":83,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":90,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":11,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":76,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":23,"com.graphhopper.storage.GraphHopperStorageTest.testClone":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":96,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":117,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":85,"com.graphhopper.GraphHopperAPITest.testLoad":63,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":73,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":79,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":81,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.storage.EdgeTest.testCloneFull":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":71,"com.graphhopper.util.GHUtilityTest.testCopy":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":107},"transformations":[{"failures":[0],"tindex":"aa96459a-828e-11e5-b7ba-c768d8472900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtIfImpl","sourcecode":"if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-1},{"failures":[],"tindex":"aa9693bb-828e-11e5-b7ba-f9e8dad1843d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:260","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[1,2,3,4,5],"tindex":"aa9693bc-828e-11e5-b7ba-4de58730ddb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"edgePos","green":"virtNodeIDintern"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:408","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(double)) > 1.74) {\n    com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n    java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n    com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n    java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"aa9693bd-828e-11e5-b7ba-c92fbda48cbe","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:138","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[],"tindex":"aa9693be-828e-11e5-b7ba-212204aae5ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[6],"tindex":"aa96bacf-828e-11e5-b7ba-539ec8df3c67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:674","type":"CtIfImpl","sourcecode":"if (boolean)\n    long |= long;\nelse\n    long |= long;\n"},"variableMap":{"forwardBit":"address","isBackward":"clearNewMem","encoded":"address","backwardBit":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)));\n"},"status":-1},{"failures":[],"tindex":"aa96bad0-828e-11e5-b7ba-a5f3e911d82e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"oldLat","minLatTmp":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:203","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double)"},"status":0},{"failures":[],"tindex":"aa96bad1-828e-11e5-b7ba-076ab88da58c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:81","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[7],"tindex":"aa96e1e2-828e-11e5-b7ba-99e27f6d23f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:141","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.Weighting>"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"aa96e1e3-828e-11e5-b7ba-e17e132ad527","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"node","nodeCount":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-1},{"failures":[],"tindex":"aa96e1e4-828e-11e5-b7ba-d37088c38a99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"length","y2":"compressionLevel","x1":"offset","x2":"compressionLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:173","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.Deflater.setLevel(int);\n    java.util.zip.Deflater.setInput(byte[], int, int);\n    java.util.zip.Deflater.finish();\n    final byte[] byte[] = new byte[1024];\n    while (!(java.util.zip.Deflater.finished())) {\n        int int = java.util.zip.Deflater.deflate(byte[]);\n        java.io.ByteArrayOutputStream.write(byte[], 0, int);\n    }\n} finally {\n    java.util.zip.Deflater.end();\n}"},"status":-2},{"failures":[],"tindex":"aa96e1e5-828e-11e5-b7ba-df08a6b239be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"length","factor":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:577","type":"CtReturnImpl","sourcecode":"return double[].int"},"status":-2},{"failures":[18,19],"tindex":"aa9708f6-828e-11e5-b7ba-4b23262da14a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:130","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,0,37,38,39,40,41,42,43,44,45,46,47,48,49,7,50,51,52,53,54],"tindex":"aa9708f7-828e-11e5-b7ba-5b0f86dbe01b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:402","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[55,56,57,58,59,36,60,61],"tindex":"aa9708f8-828e-11e5-b7ba-2bc638d62594","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"lastKey":"longSegmentSize","key":"longSegmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"status":-1},{"failures":[62],"tindex":"aa9708f9-828e-11e5-b7ba-470e1b1b7171","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"status":-1},{"failures":[],"tindex":"aa97300a-828e-11e5-b7ba-a770a2580b51","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"variableMap":{"bufferIndex":"i","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:407","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.set(int, null)"},"status":0},{"failures":[],"tindex":"aa97300b-828e-11e5-b7ba-b104a52b9144","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"from","b":"skippedEdge2","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,56,57,110,58,111,112,113,114,115,116,117,118,30,31,32,33,34,0,37,38,39,40,41,42,43,44,2,3,4,119,5,120,45,46,47,48,49,7,50,51,52,53,54],"tindex":"aa97300c-828e-11e5-b7ba-eba8542dd1c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:331","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"variableMap":{"speedVal":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double)"},"status":-1},{"failures":[],"tindex":"aa97571d-828e-11e5-b7ba-31f0bf892e50","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:394","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\nelse\n    java.lang.String += \", \" + java.lang.String;\n"},"variableMap":{"name":"value","refName":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:165","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String.format(java.lang.String, java.lang.Object[]);\n} catch (java.lang.Exception ex) {\n    java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n}"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"aa96bad0-828e-11e5-b7ba-a5f3e911d82e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalc.calcNormalizedDist"]},"type":"staticDiff"}]}]}