{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":9,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":116,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":79,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":101,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":24,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":76,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":122,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":93,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":97,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":114,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":74,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":86,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":22,"com.graphhopper.GraphHopperAPITest.testDisconnected179":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":133,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":112,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":136,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":77,"com.graphhopper.coll.OSMIDMapTest.testGet":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":98,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":129,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":128,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":69,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":132,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":99,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":82,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":58,"com.graphhopper.coll.OSMIDMapTest.testGet2":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":95,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":21,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":1,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":12,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":121,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":28,"com.graphhopper.GraphHopperTest.testFootAndCar":130,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":94,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":84,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":11,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":110,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":53,"com.graphhopper.GraphHopperAPITest.testLoad":33,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":119,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":4,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":66,"com.graphhopper.GraphHopperTest.testFootOnly":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":49,"com.graphhopper.reader.OSMReaderTest.testBarriers":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":89,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":38,"com.graphhopper.util.GHUtilityTest.testCopy":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":75},"transformations":[{"failures":[],"tindex":"7ffce6d5-82b5-11e5-8002-954d0afda00a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:237","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"7ffd0de6-82b5-11e5-8002-cb90cfcbafad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:147","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"MMAP\";\nelse if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"RAM\";\nelse\n    java.lang.String = \"UNSAFE\";\n"},"status":-2},{"failures":[0,1],"tindex":"7ffd34f7-82b5-11e5-8002-7dac5722087f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"storedKey","mask":"storedKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.storage.VLongStorage.readVLong()"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"7ffd34f8-82b5-11e5-8002-1db8b1df33e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"variableMap":{"sacScale":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:758","type":"CtTryImpl","sourcecode":"try {\n    if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n        return false;\n    \n    com.graphhopper.GraphHopper.postProcessing();\n    boolean = true;\n    return true;\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-1},{"failures":[8,9,10,11],"tindex":"7ffd34f9-82b5-11e5-8002-6541c54fa07c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:524","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,2,3,27,4,5,28,29,7,30],"tindex":"7ffd5c0a-82b5-11e5-8002-8bc4b9297f89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:227","type":"CtReturnImpl","sourcecode":"return java.io.File.delete()"},"status":-1},{"failures":[],"tindex":"7ffd5c0b-82b5-11e5-8002-0f0d779af0ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"minOneWayNetworkSize","i":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:228","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter, java.util.List<gnu.trove.list.array.TIntArrayList>, int)"},"status":-2},{"failures":[31,32],"tindex":"7ffd5c0c-82b5-11e5-8002-7da6ce3fc8aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:396","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,3,27,129,130,4,5,28,29,6,131,30],"tindex":"7ffd831d-82b5-11e5-8002-5502c6e4c2b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"7ffd831e-82b5-11e5-8002-2577c060b261","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"weightOfVisitedPath","azimuth":"weightOfVisitedPath","java.lang.Math.PI":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:292","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)"},"status":-2},{"failures":[0,1],"tindex":"7ffd831f-82b5-11e5-8002-2bbf68b4c198","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:91","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-1},{"failures":[],"tindex":"7ffd8320-82b5-11e5-8002-797e2efa4e39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:996","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors())\n    return java.util.Collections.emptyList();\n"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:964","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String);\n} catch (java.lang.Exception ex) {\n    com.graphhopper.GHResponse.addError(java.lang.Exception);\n    return java.util.Collections.emptyList();\n}"},"status":-2},{"failures":[],"tindex":"7ffdaa31-82b5-11e5-8002-c9f1d34ad631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:74","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[132,133,134,135,136],"tindex":"7ffdaa32-82b5-11e5-8002-018df9b6c0d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"encoded","nodeFlags":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:656","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[131],"tindex":"7ffdaa33-82b5-11e5-8002-fb7acb93ed25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:265","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)) > 0"},"status":-1},{"failures":[],"tindex":"7ffdaa34-82b5-11e5-8002-3518b1040da2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:305","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage.getDirectory()) instanceof com.graphhopper.storage.MMapDirectory) {\n    throw new java.lang.IllegalStateException(\"not supported yet: mmap will overwrite existing storage at the same location\");\n} else {\n    boolean boolean = ((com.graphhopper.storage.GHDirectory)(com.graphhopper.storage.GraphStorage.getDirectory())).isStoring();\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n}"},"status":-2},{"failures":[137,138,8,132,133,9,139,134,10,140,136,11],"tindex":"7ffdd145-82b5-11e5-8002-77d99574b92f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    if (java.lang.Integer != null) {\n        if (!(com.graphhopper.reader.OSMWay.hasTag(\"service\")))\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n}"},"status":-1},{"failures":[],"tindex":"7ffdd146-82b5-11e5-8002-0d910d11644e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:372","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"base graph already frozen\");\n"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-2},{"failures":[],"tindex":"7ffdd147-82b5-11e5-8002-c3fe66cef173","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:880","type":"CtLocalVariableImpl","sourcecode":"final long long = com.graphhopper.reader.OSMNode.getId()"},"status":-2},{"failures":[141,142],"tindex":"7ffdd148-82b5-11e5-8002-ad4486a84df2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"len","flags":"high","dir":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}