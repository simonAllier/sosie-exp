{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":11,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":53,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":2,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":19,"com.graphhopper.reader.OSMReaderTest.testMain":45,"com.graphhopper.reader.OSMReaderTest.testFerry":43,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":8,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":15,"com.graphhopper.routing.QueryGraphTest.testOneWay":18,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":26,"com.graphhopper.reader.OSMReaderTest.testWithBounds":54,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":50,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":13,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":27,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":42,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":40,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":1,"com.graphhopper.GraphHopperTest.testPrepare":34,"com.graphhopper.GraphHopperTest.testFootAndCar":36,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":60,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":25,"com.graphhopper.reader.OSMReaderTest.testFoot":44,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":16,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":17,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":20,"com.graphhopper.reader.OSMReaderTest.testOneWay":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":7,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":14,"com.graphhopper.GraphHopperTest.testPrepareOnly":58,"com.graphhopper.GraphHopperTest.testVia":33,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":9,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":3,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":52,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":49,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":37,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":12,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":63,"com.graphhopper.GraphHopperTest.testFootOnly":41,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":35,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":47,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.coll.GHTBitSetTest.testCopy":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":28,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30,"com.graphhopper.reader.OSMReaderTest.testSort":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":29},"transformations":[{"failures":[],"tindex":"36bbd1e5-82b8-11e5-8e09-2159fbf7297d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SynchedDAWrapper:153","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[0],"tindex":"36bbf8f6-82b8-11e5-8e09-45fe091796c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:81","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet instanceof com.graphhopper.coll.GHTBitSet) {\n    ((com.graphhopper.coll.GHTBitSet)(com.graphhopper.coll.GHBitSet)).gnu.trove.set.hash.TIntHashSet.addAll(this.gnu.trove.set.hash.TIntHashSet);\n} else {\n    gnu.trove.iterator.TIntIterator gnu.trove.iterator.TIntIterator = gnu.trove.set.hash.TIntHashSet.iterator();\n    while (gnu.trove.iterator.TIntIterator.hasNext()) {\n        com.graphhopper.coll.GHBitSet.add(gnu.trove.iterator.TIntIterator.next());\n    }\n}"},"status":-1},{"failures":[1,2],"tindex":"36bbf8f7-82b8-11e5-8e09-3dbc4358ce06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:107","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int))"},"status":-1},{"failures":[],"tindex":"36bc2008-82b8-11e5-8e09-57325a86d01f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"TC_FROM","dLat":"TC_FROM","tmpErr":"from","x1":"TC_FROM","sLon":"TC_FROM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"36bc2009-82b8-11e5-8e09-05a90ec82131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:253","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"36bc200a-82b8-11e5-8e09-c9ae61a2ef3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 5))), com.graphhopper.util.PMap.getDouble(\"speedFactor\", 5), (com.graphhopper.util.PMap.getBool(\"turnCosts\", false) ? 1 : 0))"},"status":0},{"failures":[],"tindex":"36bc200b-82b8-11e5-8e09-e1bc42f08b92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"variableMap":{"factor":"deltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:730","type":"CtForImpl","sourcecode":"for (int int = (-int) + 1 ; int <= (int - 1) ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n}"},"status":0},{"failures":[],"tindex":"36bc200c-82b8-11e5-8e09-a7e793888d1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:39","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lon\"))"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"36bc200d-82b8-11e5-8e09-1d4f2c05c2a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:354","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = new com.graphhopper.routing.VirtualEdgeIteratorState(int , int , int , int , double , com.graphhopper.util.EdgeIteratorState.getFlags() , com.graphhopper.util.EdgeIteratorState.getName() , com.graphhopper.util.PointList)"},"variableMap":{"closestEdge":"closestEdge","baseDistance":"baseDistance","prevNodeId":"nodeId","virtEdgeId":"prevNodeId","origTraversalKey":"origRevTraversalKey","nodeId":"virtEdgeId","basePoints":"baseReversePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:356","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = new com.graphhopper.routing.VirtualEdgeIteratorState(int , int , int , int , double , long , com.graphhopper.util.EdgeIteratorState.getName() , com.graphhopper.util.PointList)"},"status":-1},{"failures":[40,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41],"tindex":"36bc471e-82b8-11e5-8e09-8fc24541d4cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:174","type":"CtAssignmentImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(5)"},"status":-1},{"failures":[],"tindex":"36bc471f-82b8-11e5-8e09-f18614677d27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:387","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"36bc4720-82b8-11e5-8e09-47df34dfd4b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:299","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getFlags\")"},"variableMap":{"this":"explorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:37","type":"CtWhileImpl","sourcecode":"while (!(com.graphhopper.util.SimpleIntDeque.isEmpty())) {\n    int = com.graphhopper.util.SimpleIntDeque.pop();\n    if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n        continue;\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n            com.graphhopper.coll.GHBitSet.add(int);\n            com.graphhopper.util.SimpleIntDeque.push(int);\n        } \n    }\n}"},"status":-2},{"failures":[42],"tindex":"36bc4721-82b8-11e5-8e09-fdf89f1005ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:186","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[],"tindex":"36bc4722-82b8-11e5-8e09-61b3d224a5e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:87","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"status":-2},{"failures":[],"tindex":"36bc4723-82b8-11e5-8e09-4f45ff4abd0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:146","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,33,34,35,36,37,38,60,61,39,41,62,63],"tindex":"36bc6e34-82b8-11e5-8e09-97150f753a45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:288","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"36bc6e35-82b8-11e5-8e09-95a845a0a9fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"variableMap":{"y1":"i","y2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"status":-2},{"failures":[64,65],"tindex":"36bc6e36-82b8-11e5-8e09-c348a1f4d849","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"36bc6e37-82b8-11e5-8e09-df27629a7e44","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:218","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-2},{"failures":[],"tindex":"36bc6e38-82b8-11e5-8e09-6384a18c8da9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:282","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n    throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n"},"variableMap":{"cg":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"36bc200b-82b8-11e5-8e09-e1bc42f08b92","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]}]}