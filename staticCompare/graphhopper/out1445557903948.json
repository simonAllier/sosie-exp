{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":66,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":309,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":169,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.reader.OSMReaderTest.testFerry":318,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":2,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":3,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":248,"com.graphhopper.routing.QueryGraphTest.testOneWay":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":149,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":165,"com.graphhopper.reader.OSMReaderTest.testWithBounds":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":237,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":238,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":276,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":195,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":79,"com.graphhopper.GraphHopperTest.testPrepare":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":308,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":18,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":272,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":291,"com.graphhopper.util.InstructionListTest.testWayList":6,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":300,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.GraphHopperAPITest.testDisconnected179":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":59,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":163,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":297,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":166,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":271,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":241,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":134,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":82,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":227,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":287,"com.graphhopper.GraphHopperTest.testLoadOSM":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":198,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":39,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":167,"com.graphhopper.reader.OSMReaderTest.testSort":321,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":240,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":145,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":44,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":281,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":87,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":313,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":317,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":262,"com.graphhopper.routing.PathTest.testWayList":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":156,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":290,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":164,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":142,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":162,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":305,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":270,"com.graphhopper.util.GHUtilityTest.testSort":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":171,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":294,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":119,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":260,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":157,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":232,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":98,"com.graphhopper.GraphHopperAPITest.testLoad":334,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":312,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":243,"com.graphhopper.reader.OSMReaderTest.testBarriers":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":146,"com.graphhopper.routing.PathTest.testFound":264,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":192,"com.graphhopper.util.GHUtilityTest.testCopy":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":296,"com.graphhopper.routing.PathTest.testFindInstruction":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":288,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":100,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":61,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":299,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":181,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":45,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":304,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":9,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":278,"com.graphhopper.reader.PrinctonReaderTest.testRead":332,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":125,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":133,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":151,"com.graphhopper.util.InstructionListTest.testWayList2":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":201,"com.graphhopper.reader.OSMReaderTest.testFoot":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":175,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":172,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":173,"com.graphhopper.reader.OSMReaderTest.testOneWay":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":117,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":135,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":282,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":68,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":323,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":286,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":275,"com.graphhopper.routing.PathBidirRefTest.testExtract":315,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":170,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":207,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":220,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":219,"com.graphhopper.util.GHUtilityTest.testSort2":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":64,"com.graphhopper.reader.OSMReaderTest.testMain":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":154,"com.graphhopper.routing.PathBidirRefTest.testExtract2":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":340,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":176,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":210,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":193,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":109,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":130,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":280,"com.graphhopper.storage.GraphHopperStorageTest.testClone":22,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":168,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":150,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":31,"com.graphhopper.GraphHopperTest.testFootAndCar":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":58,"com.graphhopper.routing.PathTest.testTime":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":302,"com.graphhopper.util.GHUtilityTest.testSortDirected":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":141,"com.graphhopper.GraphHopperTest.testPrepareOnly":217,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":184,"com.graphhopper.GraphHopperTest.testVia":225,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":301,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":124,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":252,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":8,"com.graphhopper.GraphHopperTest.testFootOnly":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":200,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":67,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":266,"com.graphhopper.util.InstructionListTest.testFind":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":178},"transformations":[{"failures":[],"tindex":"d92f9132-7917-11e5-8e4a-a7508c851381","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"variableMap":{"this":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"d92f9133-7917-11e5-8e4a-1166c58ef1a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (com.graphhopper.storage.index.Location2IDQuadtree.int))\n    throw new java.lang.IllegalStateException(\"incorrect loc2id index version\");\n"},"variableMap":{"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT":"E_FLAGS","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-1},{"failures":[20,336,29,30,32,36,37,41,42,53,337,62,63,65,69,70,74,75,90,338,99,100,102,106,107,111,112,132,339,141,142,144,148,149,153,154,235,236,238,240,241,331],"tindex":"d92fb844-7917-11e5-8e4a-11d700fc82ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"variableMap":{"mKeys":"mValues","nkeys":"mValues"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[340,341,342],"tindex":"d92fb845-7917-11e5-8e4a-5741c54b826e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"tt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"d92fb846-7917-11e5-8e4a-e7994461e358","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"loadExisting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:243","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.storage.DataAccess.loadExisting()"},"status":-2},{"failures":[],"tindex":"d92fdf57-7917-11e5-8e4a-03c3b82d87b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"d92fdf58-7917-11e5-8e4a-9fdfedc32e25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:112","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.Instruction>.isEmpty()"},"status":-2},{"failures":[],"tindex":"d92fdf59-7917-11e5-8e4a-2fbdbc9ad61a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:144","type":"CtIfImpl","sourcecode":"if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"variableMap":{"slice":"java.lang.Double.NaN","azimuth":"java.lang.Double.NaN","cp":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:437","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(java.lang.Double.parseDouble(java.lang.String), java.lang.Double.parseDouble(java.lang.String[][0].trim()), java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"d92fdf5a-7917-11e5-8e4a-bf5f133711ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"variableMap":{"longTripsSpeed":"unknownSpeed","shortTripsSpeed":"longTripsSpeed","this":"this","durationInHours":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:547","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"d92fdf5b-7917-11e5-8e4a-3f61c84dc23d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage[] = java.util.Arrays.copyOf(com.graphhopper.storage.VLongStorage[], int)"},"status":-2},{"failures":[],"tindex":"d92fdf5c-7917-11e5-8e4a-f9aa8f4502a0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"norm","tmp":"a_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:154","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"status":-2},{"failures":[],"tindex":"d92fdf5d-7917-11e5-8e4a-33744d7eeb68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:925","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.search.NameIndex.put(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"d930066e-7917-11e5-8e4a-7512fc779f49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:729","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long);\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long);\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"d930066f-7917-11e5-8e4a-33aa5de1c23d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:369","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:643","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()))"},"status":-2},{"failures":[],"tindex":"d9300670-7917-11e5-8e4a-41551398da36","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"removed","factor":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:85","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"d9300671-7917-11e5-8e4a-0d3454fcc124","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"origPoints","S_SKIP_EDGE2":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:96","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"d9300672-7917-11e5-8e4a-e13e95c0e0f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"speed","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"status":-2},{"failures":[],"tindex":"d9300673-7917-11e5-8e4a-3bba52140157","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"exitNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"status":-2},{"failures":[],"tindex":"d9300674-7917-11e5-8e4a-6f02e57ac281","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:259","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false))"},"status":-2},{"failures":[],"tindex":"d9300675-7917-11e5-8e4a-1f55141393ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"newEdges","newNodeId":"flags","wayOsmId":"flags","wayFlags":"wayOsmId","this":"this","nodeFlags":"wayOsmId","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:699","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}